From viperal at mail.berlios.de  Tue Sep 12 16:55:33 2006
From: viperal at mail.berlios.de (viperal at BerliOS)
Date: Tue, 12 Sep 2006 16:55:33 +0200
Subject: [Viperals-svncheckins] r187 - in cms/trunk: . admin includes
	includes/auth includes/forums includes/forums/admin
	includes/forums/mcp includes/templates/admin/modules
	includes/templates/modules/control_panel
	includes/templates/modules/forums
	includes/templates/modules/forums/admin install
	javascript/forums modules/control_panel
	modules/control_panel/modules modules/forums
	modules/forums/admin modules/forums/images
	modules/forums/images/admin modules/forums/images/en
	modules/forums/language modules/members_list
Message-ID: <200609121455.k8CEtXw4027882@sheep.berlios.de>

Author: viperal
Date: 2006-09-12 16:55:25 +0200 (Tue, 12 Sep 2006)
New Revision: 187

Added:
   cms/trunk/includes/forums/admin/auth.php
   cms/trunk/includes/templates/modules/forums/admin/acp_permissions.html
   cms/trunk/includes/templates/modules/forums/admin/overall_footer.html
   cms/trunk/includes/templates/modules/forums/admin/overall_header.html
   cms/trunk/includes/templates/modules/forums/admin/permission_mask.html
   cms/trunk/javascript/forums/tooltip.js
   cms/trunk/modules/forums/images/Thumbs.db
   cms/trunk/modules/forums/images/admin/Thumbs.db
   cms/trunk/modules/forums/images/en/Thumbs.db
   cms/trunk/modules/forums/language/admin.php
   cms/trunk/modules/forums/language/admin_common.php
   cms/trunk/modules/forums/language/admin_forums.php
   cms/trunk/modules/forums/language/admin_permissions.php
   cms/trunk/modules/forums/language/admin_permissions_phpbb.php
   cms/trunk/modules/forums/language/help_bbcode.php
   cms/trunk/modules/forums/language/help_faq.php
   cms/trunk/modules/forums/language/index.htm
   cms/trunk/modules/forums/language/mcp.php
   cms/trunk/modules/forums/language/posting.php
   cms/trunk/modules/forums/language/search.php
   cms/trunk/modules/forums/language/viewforum.php
   cms/trunk/modules/forums/language/viewtopic.php
Removed:
   cms/trunk/modules/forums/language/en/
Modified:
   cms/trunk/admin/blocks.php
   cms/trunk/admin/eaccelerator.php
   cms/trunk/admin/messages.php
   cms/trunk/admin/modules.php
   cms/trunk/core.php
   cms/trunk/includes/auth/auth.php
   cms/trunk/includes/forums/admin/admin_forums.php
   cms/trunk/includes/forums/admin/admin_permissions.php
   cms/trunk/includes/forums/admin/links.php
   cms/trunk/includes/forums/admin/main.php
   cms/trunk/includes/forums/auth.php
   cms/trunk/includes/forums/functions_admin.php
   cms/trunk/includes/forums/functions_posting.php
   cms/trunk/includes/forums/functions_privmsgs.php
   cms/trunk/includes/forums/functions_upload.php
   cms/trunk/includes/forums/mcp/mcp_forum.php
   cms/trunk/includes/functions.php
   cms/trunk/includes/session.php
   cms/trunk/includes/templates/admin/modules/edit.html
   cms/trunk/includes/templates/modules/control_panel/ucp_pm_viewfolder.html
   cms/trunk/includes/templates/modules/control_panel/ucp_pm_viewmessage.html
   cms/trunk/includes/templates/modules/forums/admin/acp_forums.html
   cms/trunk/includes/templates/modules/forums/admin/acp_main.html
   cms/trunk/includes/templates/modules/forums/mcp_viewlogs.html
   cms/trunk/includes/user.php
   cms/trunk/install/build_data.php
   cms/trunk/installer.php
   cms/trunk/modules/control_panel/index.php
   cms/trunk/modules/control_panel/modules/ucp_pm.php
   cms/trunk/modules/control_panel/modules/ucp_pm_compose.php
   cms/trunk/modules/control_panel/modules/ucp_pm_viewfolder.php
   cms/trunk/modules/control_panel/modules/ucp_pm_viewmessage.php
   cms/trunk/modules/forums/admin/index.php
   cms/trunk/modules/forums/download.php
   cms/trunk/modules/forums/main.php
   cms/trunk/modules/forums/mcp.php
   cms/trunk/modules/forums/posting.php
   cms/trunk/modules/forums/viewforum.php
   cms/trunk/modules/forums/viewtopic.php
   cms/trunk/modules/members_list/index.php
Log:


Modified: cms/trunk/admin/blocks.php
===================================================================
--- cms/trunk/admin/blocks.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/admin/blocks.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -175,10 +175,8 @@
 	'N_BLOCK_HTML'		=> generate_link('blocks&amp;mode=add&amp;type='.BLOCKTYPE_HTML, array('admin' => true))
 ));
 
-$_CLASS['core_template']->display('admin/blocks/index.html');
+$_CLASS['core_display']->display(false, 'admin/blocks/index.html');
 	
-script_close(false);
-
 function blocks_change_position($position, $id)
 {
 	global $_CLASS;

Modified: cms/trunk/admin/eaccelerator.php
===================================================================
--- cms/trunk/admin/eaccelerator.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/admin/eaccelerator.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -4,7 +4,7 @@
 ||  Viperal CMS ?? :												||
 ||**************************************************************||
 ||																||
-||	Copyright (C) 2004, 2005, 2006								||
+||	Copyright (C) 2004, 2005									||
 ||  By Ryan Marshall ( Viperal )								||
 ||																||
 ||  Email: viperal1 at gmail.com									||

Modified: cms/trunk/admin/messages.php
===================================================================
--- cms/trunk/admin/messages.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/admin/messages.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -113,7 +113,7 @@
 
 	$_CLASS['core_template']->assign_vars_array($block_position[$row['block_position']].'_admin_messages', array(
 		'ACTIVE'		=> $active,
-		'CHANGE'		=> ($active) ? $_CLASS['core_user']->lang['DEACTIVATE'] : $_CLASS['core_user']->lang['ACTIVATE'],
+		'CHANGE'		=> ($active) ? $_CLASS['core_user']->get_lang('DEACTIVATE') : $_CLASS['core_user']->get_lang('ACTIVATE'),
 
 		'AUTH_LINK'		=> generate_link('messages&amp;mode=auth&amp;id='.$row['block_id'], array('admin' => true)),
 		'ACTIVE_LINK'	=> generate_link('messages&amp;mode=change&amp;id='.$row['block_id'], array('admin' => true)),

Modified: cms/trunk/admin/modules.php
===================================================================
--- cms/trunk/admin/modules.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/admin/modules.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -34,7 +34,7 @@
 
 function check_type(&$type, $redirect = true)
 {
-	$appoved_type = array(0);
+	$appoved_type = array(PAGE_MODULE);
 	$type = (int) $type;
 	
 	if (!in_array($type, $appoved_type, true))
@@ -51,7 +51,8 @@
 		
 if (isset($_REQUEST['mode']))
 {
-	if ($_REQUEST['mode'] === 'search') {
+	if ($_REQUEST['mode'] === 'search')
+	{
 		if (isset($_REQUEST['option']) && isset($_REQUEST['name']) && display_confirmation())
 		{
 			$name = urldecode($_REQUEST['name']);
@@ -62,12 +63,14 @@
 					{
 						break;
 					}
-					$sql = 'INSERT INTO '.CORE_PAGES_TABLE.' ' . $_CLASS['core_db']->sql_build_array('INSERT', array(
+
+					$insert_array = array(
 						'page_name'		=> (string) $name,
 						'page_type'		=> PAGE_MODULE,
 						'page_status'	=> STATUS_PENDING,
-					));
-					$_CLASS['core_db']->query($sql);
+					);
+					$_CLASS['core_db']->sql_query_build('INSERT', $insert_array, CORE_PAGES_TABLE);
+					unset($insert_array, $name);
 				break;
 			}
 		}
@@ -113,6 +116,64 @@
 				page_change($id);
 			break;
 
+			case 'edit':
+				$result = $_CLASS['core_db']->query('SELECT * FROM '. CORE_PAGES_TABLE ." WHERE page_id = $id AND page_type = ". PAGE_MODULE);
+				$module = $_CLASS['core_db']->fetch_row_assoc($result);
+				$_CLASS['core_db']->free_result($result);
+
+				if (!$module)
+				{
+					trigger_error('MODULE_NOT_FOUND');
+				}
+				
+				check_type($module['page_type']);
+				settype($module['page_status'], 'int');
+
+				$page_blocks_array = array(
+					array(
+						'value' => BLOCK_RIGHT,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_RIGHT'),
+						'checked' => ($module['page_blocks'] & (1 << BLOCK_RIGHT))
+					),
+					array(
+						'value' => BLOCK_TOP,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_TOP'),
+						'checked' => ($module['page_blocks'] & (1 << BLOCK_TOP))
+					),
+					array(
+						'value' => BLOCK_BOTTOM,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_BOTTOM'),
+						'checked' => ($module['page_blocks'] & (1 << BLOCK_BOTTOM))
+					),
+					array(
+						'value' => BLOCK_LEFT,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_LEFT'),
+						'checked' => ($module['page_blocks'] & (1 << BLOCK_LEFT))
+					),
+					array(
+						'value' => BLOCK_MESSAGE_TOP,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_MESSAGE_TOP'),
+						'checked' => ($module['page_blocks'] & (1 << BLOCK_MESSAGE_TOP))
+					),
+					array(
+						'value' => BLOCK_MESSAGE_BOTTOM,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_MESSAGE_BOTTOM'),
+						'checked' => ($module['page_blocks'] & (1 << BLOCK_MESSAGE_BOTTOM))
+					)
+				);
+				
+				$_CLASS['core_template']->assign_array(array(
+					'ADMIN_PAGE_ACTION'			=> generate_link('modules&amp;mode=edit', array('admin' => true)),
+					'ADMIN_PAGE_TITLE'			=> $module['page_title'],
+					'ADMIN_PAGE_NAME'			=> mb_convert_case(preg_replace('/_/', ' ', $module['page_name']), MB_CASE_TITLE),
+					'ADMIN_PAGE_BLOCKS_ARRAY'	=> $page_blocks_array,
+					'ADMIN_PAGE_STATUS'			=> $module['page_status'],
+					'ADMIN_PAGE_ERROR'			=> '',
+				));
+			
+				$_CLASS['core_display']->display(false, 'admin/modules/edit.html');
+			break;
+
 			case 'install':
 				$result = $_CLASS['core_db']->query('SELECT page_status, page_name, page_type FROM '.CORE_PAGES_TABLE." WHERE page_id = $id AND page_type = ". PAGE_MODULE);
 				$module = $_CLASS['core_db']->fetch_row_assoc($result);
@@ -123,6 +184,8 @@
 					trigger_error($module ? 'MODULE_ALREADY_INSTALLED' : 'MODULE_NOT_FOUND');
 				}
 
+				check_type($module['page_type']);
+
 				if (display_confirmation())
 				{
 					$status = true;
@@ -259,7 +322,7 @@
 
 	$_CLASS['core_template']->assign_vars_array('normal_modules', array(
 			'ACTIVE'		=> ($active),
-			'CHANGE'		=> ($active) ? $_CLASS['core_user']->lang['DEACTIVATE'] : $_CLASS['core_user']->lang['ACTIVATE'],
+			'CHANGE'		=> ($active) ? $_CLASS['core_user']->get_lang('DEACTIVATE') : $_CLASS['core_user']->get_lang('ACTIVATE'),
 			'ERROR'			=> '',
 			'INSTALLED'		=> $installed,
 			'TITLE'			=> ($module['page_title']) ? $module['page_title'] : mb_convert_case(preg_replace('/_/', ' ', $module['page_name']), MB_CASE_TITLE),

Modified: cms/trunk/core.php
===================================================================
--- cms/trunk/core.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/core.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -159,7 +159,10 @@
 	
 	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 	{
-		settype($row['config_value'], $row['config_type']);
+		if ($row['config_type'])
+		{
+			settype($row['config_value'], $row['config_type']);
+		}
 
 		if ($row['config_cache'])
 		{
@@ -190,7 +193,10 @@
 
 	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 	{
-		settype($row['config_value'], $row['config_type']);
+		if ($row['config_type'])
+		{
+			settype($row['config_value'], $row['config_type']);
+		}
 
 		$_CORE_CONFIG[$row['config_section']][$row['config_name']] = $row['config_value'];
 	}

Modified: cms/trunk/includes/auth/auth.php
===================================================================
--- cms/trunk/includes/auth/auth.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/auth/auth.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -130,7 +130,7 @@
 		return $this->_admin_permission[$section]['core']['status'];
 	}
 
-	function do_login($login_options, $template)
+	function auth_login($login_options = array(), $template = false)
 	{
 		global $_CLASS, $_CORE_CONFIG;
 

Modified: cms/trunk/includes/forums/admin/admin_forums.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_forums.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/admin/admin_forums.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -15,6 +15,11 @@
 	die; 
 }
 
+if (!$_CLASS['forums_auth']->acl_get('a_forum'))
+{
+	trigger_error('NO_ADMIN');
+}
+
 // Get general vars
 $update		= isset($_POST['update']);
 $mode		= request_var('mode', '');
@@ -25,10 +30,7 @@
 $l_title	= '';
 $forum_data = $errors = array();
 
-if (!$_CLASS['forums_auth']->acl_get('a_forum'))
-{
-	trigger_error('NO_ADMIN');
-}
+$_CLASS['core_user']->add_lang('admin_forums', 'forums');
 
 switch ($action)
 {
@@ -850,7 +852,7 @@
 				return array($_CLASS['core_user']->lang['NO_FORUM_ACTION']);
 			}
 
-			$forum_data_sql['forum_posts'] = $forum_data_sql['forum_topics'] = $forum_data_sql['forum_topics_real'] = 0;
+			$forum_data_sql['forum_posts'] = $forum_data_sql['forum_topics'] = $forum_data_sql['forum_topics_real'] = $forum_data_sql['forum_last_post_id'] = $forum_data_sql['forum_last_poster_id'] = $forum_data_sql['forum_last_post_time'] = 0;
 		}
 
 		if (sizeof($errors))
@@ -983,8 +985,8 @@
 {
 	global $_CLASS;
 
-	$table_ary = array(ACL_GROUPS_TABLE, ACL_USERS_TABLE, LOG_TABLE, POSTS_TABLE, TOPICS_TABLE, DRAFTS_TABLE, TOPICS_TRACK_TABLE);
-
+	$table_ary = array(FORUMS_LOG_TABLE, FORUMS_POSTS_TABLE, FORUMS_TOPICS_TABLE, FORUMS_DRAFTS_TABLE, FORUMS_TRACK_TABLE);
+	
 	foreach ($table_ary as $table)
 	{
 		$sql = "UPDATE $table
@@ -994,7 +996,7 @@
 	}
 	unset($table_ary);
 
-	$table_ary = array(FORUMS_ACCESS_TABLE, FORUMS_TRACK_TABLE, FORUMS_WATCH_TABLE, MODERATOR_CACHE_TABLE);
+	$table_ary = array(FORUMS_ACCESS_TABLE, FORUMS_WATCH_TABLE, FORUMS_MODERATOR_CACHE_TABLE);
 
 	foreach ($table_ary as $table)
 	{
@@ -1065,7 +1067,7 @@
 		return $errors;
 	}
 
-	if ($action_subforums == 'delete')
+	if ($action_subforums === 'delete')
 	{
 		$log_action_forums = 'FORUMS';
 		$rows = get_forum_branch($forum_id, 'children', 'descending', false);
@@ -1085,9 +1087,13 @@
 
 		$sql = 'DELETE FROM ' . FORUMS_FORUMS_TABLE . '
 			WHERE forum_id IN (' . implode(', ', $forum_ids) . ')';
+		$_CLASS['core_db']->query($sql);
+		
+		$sql = 'DELETE FROM ' . FORUMS_ACL_TABLE . '
+			WHERE  forum_id IN (' . implode(', ', $forum_ids) . ')';
 		$_CLASS['core_db']->query($sql);
 	}
-	else if ($action_subforums == 'move')
+	else if ($action_subforums === 'move')
 	{
 		if (!$subforums_to_id)
 		{
@@ -1131,6 +1137,10 @@
 				$diff = 2;
 				$sql = 'DELETE FROM ' . FORUMS_FORUMS_TABLE . "
 					WHERE forum_id = $forum_id";
+				$_CLASS['core_db']->query($sql);
+				
+				$sql = 'DELETE FROM ' . FORUMS_ACL_TABLE . '
+					WHERE forum_id = '.$forum_id;
 				$_CLASS['core_db']->query($sql);
 			}
 		}
@@ -1145,6 +1155,10 @@
 		$diff = 2;
 		$sql = 'DELETE FROM ' . FORUMS_FORUMS_TABLE . "
 			WHERE forum_id = $forum_id";
+		$_CLASS['core_db']->query($sql);
+
+		$sql = 'DELETE FROM ' . FORUMS_ACL_TABLE . '
+			WHERE forum_id = '.$forum_id;
 		$_CLASS['core_db']->query($sql);
 	}
 
@@ -1254,7 +1268,21 @@
 	$_CLASS['core_db']->free_result($result);
 
 	delete_attachments('topic', $topic_ids, false);
+
+	// Before we remove anything we make sure we are able to adjust the post counts later. ;)
+	$sql = 'SELECT poster_id
+		FROM ' . FORUMS_POSTS_TABLE . '
+		WHERE forum_id = ' . $forum_id . '
+			AND post_postcount = 1';
+	$result = $_CLASS['core_db']->query($sql);
 
+	$post_counts = array();
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$post_counts[$row['poster_id']] = (!empty($post_counts[$row['poster_id']])) ? $post_counts[$row['poster_id']] + 1 : 1;
+	}
+	$_CLASS['core_db']->free_result($result);
+
 	switch ($_CLASS['core_db']->db_layer)
 	{
 		case 'mysql4':
@@ -1330,24 +1358,36 @@
 
 						foreach ($tables as $table)
 						{
-							$_CLASS['core_db']->query("DELETE FROM $table WHERE $field IN (" . implode(', ', $id_list) . ')');
+							$_CLASS['core_db']->query("DELETE FROM $table WHERE $field IN (" . implode(', ', $ids) . ')');
 						}
 					}
 				}
 				while ($row);
 			}
-			unset($ids, $id_list);
+			unset($ids);
 
 		break;
 	}
 
-	$table_ary = array(FORUMS_ACL_TABLE, FORUMS_TRACK_TABLE, FORUMS_WATCH_TABLE, FORUMS_LOG_TABLE, FORUMS_MODERATOR_CACHE_TABLE, FORUMS_POSTS_TABLE, FORUMS_TOPICS_TABLE);//, TOPICS_TRACK_TABLE
-
+	$table_ary = array(FORUMS_TRACK_TABLE, FORUMS_WATCH_TABLE, FORUMS_LOG_TABLE, FORUMS_MODERATOR_CACHE_TABLE, FORUMS_POSTS_TABLE, FORUMS_TOPICS_TABLE);//, TOPICS_TRACK_TABLE
+
 	foreach ($table_ary as $table)
 	{
 		$_CLASS['core_db']->query("DELETE FROM $table WHERE forum_id = $forum_id");
-	}
+	}
 
+	// Adjust users post counts
+	if (sizeof($post_counts))
+	{
+		foreach ($post_counts as $poster_id => $substract)
+		{
+			$sql = 'UPDATE ' . CORE_USERS_TABLE . '
+				SET user_posts = user_posts - ' . $substract . '
+				WHERE user_id = ' . $poster_id;
+			$_CLASS['core_db']->query($sql);
+		}
+	}
+
 	// Set forum ids to 0
 	$table_ary = array(FORUMS_DRAFTS_TABLE);
 

Modified: cms/trunk/includes/forums/admin/admin_permissions.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_permissions.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/admin/admin_permissions.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -15,1289 +15,1134 @@
 	die; 
 }
 
-// values need checks
+$u_action = '';
+$permission_dropdown = '';
+$mode = request_var('mode', 'view_forum_local');
+
+load_class(SITE_FILE_ROOT.'includes/forums/admin/auth.php', 'forums_auth_admin');
+
+$_CLASS['core_user']->add_lang('admin_permissions', 'forums');
+$_CLASS['core_user']->add_lang('admin_permissions_phpbb', 'forums');
+
+
+// Trace has other vars
+if ($mode === 'trace')
+{
+	$user_id = request_var('u', 0);
+	$forum_id = request_var('f', 0);
+	$permission = request_var('auth', '');
+
+	if ($user_id && isset($_CLASS['forums_auth_admin']->option_ids[$permission]) && $_CLASS['forums_auth']->acl_get('a_viewauth'))
+	{
+		$page_title = sprintf($_CLASS['core_user']->lang['TRACE_PERMISSION'], $_CLASS['core_user']->lang['acl_' . $permission]['lang']);
+		permission_trace($user_id, $forum_id, $permission);
 
-
-// Grab and set some basic parameters
-//
-// 'mode' determines what we're altering; administrators, users, deps, etc.
-// 'submit' is used to determine what we're doing ... special format
-$mode		= (isset($_REQUEST['mode'])) ? htmlspecialchars($_REQUEST['mode']) : '';
-
-// What mode are we running? So we can output the correct title, explanation
-// and set the sql_option_mode/acl check
-switch ($mode)
-{
-	case 'forum':
-		$l_title = $_CLASS['core_user']->lang['PERMISSIONS'];
-		$l_title_explain = $_CLASS['core_user']->lang['PERMISSIONS_EXPLAIN'];
-		$which_acl = 'a_auth';
-		$sql_option_mode = 'f';
-		break;
-
-	case 'mod':
-		$l_title = $_CLASS['core_user']->lang['MODERATORS'];
-		$l_title_explain = $_CLASS['core_user']->lang['MODERATORS_EXPLAIN'];
-		$which_acl = 'a_authmods';
-		$sql_option_mode = 'm';
-		break;
-
-	case 'supermod':
-		$l_title = $_CLASS['core_user']->lang['SUPER_MODERATORS'];
-		$l_title_explain = $_CLASS['core_user']->lang['SUPER_MODERATORS_EXPLAIN'];
-		$which_acl = 'a_authmods';
-		$sql_option_mode = 'm';
-		break;
-
-	case 'admin':
-		$l_title = $_CLASS['core_user']->lang['ADMINISTRATORS'];
-		$l_title_explain = $_CLASS['core_user']->lang['ADMINISTRATORS_EXPLAIN'];
-		$which_acl = 'a_authadmins';
-		$sql_option_mode = 'a';
-		break;
-
-	case 'user':
-		$l_title = $_CLASS['core_user']->lang['USER_PERMISSIONS'];
-		$l_title_explain = $_CLASS['core_user']->lang['USER_PERMISSIONS_EXPLAIN'];
-		$which_acl = 'a_authusers';
-		$sql_option_mode = 'u';
-		break;
-
-	case 'group':
-		$l_title = $_CLASS['core_user']->lang['GROUP_PERMISSIONS'];
-		$l_title_explain = $_CLASS['core_user']->lang['GROUP_PERMISSIONS_EXPLAIN'];
-		$which_acl = 'a_authgroups';
-		$sql_option_mode = 'u';
-		break;
-
-	case 'deps':
-		$l_title = $_CLASS['core_user']->lang['DEPENDENCIES'];
-		$l_title_explain = $_CLASS['core_user']->lang['DEPENDENCIES_EXPLAIN'];
-		$which_acl = 'a_authdeps';
-		break;
+		$_CLASS['core_display']->display($page_title, 'modules/forums/admin/permission_trace.html');
+	}
+
+	trigger_error('NO_MODE');
 }
+
+// Set some vars
+$action = get_variable('action', 'REQUEST', false, 'array');
 
-// Permission check
-if (!$_CLASS['auth']->acl_get($which_acl))
+if ($action)
 {
-	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
+	$action = key($action);
 }
+
+$action = isset($_POST['psubmit']) ? 'apply_permissions' : $action;
+
+$all_forums = request_var('all_forums', 0);
+$subforum_id = request_var('subforum_id', 0);
+$forum_id = request_var('forum_id', array(0));
+
+$username = request_var('username', array(''));
+$usernames = request_var('usernames', '');
+$user_id = request_var('user_id', array(0));
+
+$group_id = request_var('group_id', array(0));
+$select_all_groups = request_var('select_all_groups', 0);
+
+// If select all groups is set, we pre-build the group id array (this option is used for other screens to link to the permission settings screen)
+if ($select_all_groups)
+{
+	// Add default groups to selection
+	$sql_and = (!$config['coppa_enable']) ? " AND group_name NOT IN ('INACTIVE_COPPA', 'REGISTERED_COPPA')" : '';
+
+	$sql = 'SELECT group_id
+		FROM ' . CORE_GROUPS_TABLE . '
+		WHERE group_type = ' . GROUP_SPECIAL . "
+		$sql_and";
+	$result = $_CLASS['core_db']->query($sql);
+
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$group_id[] = $row['group_id'];
+	}
+	$_CLASS['core_db']->free_result($result);
+}
+
+// Map usernames to ids and vice versa
+if ($usernames)
+{
+	$username = explode("\n", $usernames);
+}
+unset($usernames);
+
+if (sizeof($username) && !sizeof($user_id))
+{
+	user_get_id_name($user_id, $username);
+
+	if (!sizeof($user_id))
+	{
+		trigger_error($_CLASS['core_user']->lang['SELECTED_USER_NOT_EXIST'] . adm_back_link($u_action));
+	}
+}
+unset($username);
+
+// Build forum ids (of all forums are checked or subforum listing used)
+if ($all_forums)
+{
+	$sql = 'SELECT forum_id
+		FROM ' . FORUMS_FORUMS_FORUMS_TABLE . '
+		ORDER BY left_id';
+	$result = $_CLASS['core_db']->query($sql);
+
+	$forum_id = array();
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$forum_id[] = $row['forum_id'];
+	}
+	$_CLASS['core_db']->free_result($result);
+}
+else if ($subforum_id)
+{
+	$forum_id = array();
+	foreach (get_forum_branch($subforum_id, 'children') as $row)
+	{
+		$forum_id[] = $row['forum_id'];
+	}
+}
+
+// Define some common variables for every mode
+$error = array();
+
+$permission_scope = (strpos($mode, '_global') !== false) ? 'global' : 'local';
 
-$submode	= (isset($_REQUEST['submode'])) ? htmlspecialchars($_REQUEST['submode']) : '';
-$which_mode = (!empty($submode) && $submode != $mode) ? $submode : $mode;
-$submit		= array_values(preg_grep('#^submit_(.*)$#i', array_keys($_REQUEST)));
-$submit		= (count($submit)) ? substr($submit[0], strpos($submit[0], '_') + 1) : '';
+$_CLASS['core_template']->assign_array(array(
+	'S_SELECT_USERGROUP'		=> false,
+	'S_SELECT_USERGROUP_VIEW'	=> false,
+	'S_SETTING_PERMISSIONS'		=> false,
+	'S_VIEWING_PERMISSIONS'		=> false,
+	'S_SELECT_FORUM'			=> false,
+	'S_SELECT_GROUP'			=> false,
+	'S_SELECT_USER'				=> false,
+));
+			
+// Showing introductionary page?
+if ($mode === 'intro')
+{
+	$page_title = 'ACP_PERMISSIONS';
+
+	$_CLASS['core_template']->assign('S_INTRO', true);
 
-// Submitted setting data
-//
-// 'auth_settings' contains the submitted option settings assigned to options, should be an 
-//   associative array with integer values
-$auth_settings = (isset($_POST['settings'])) ? $_POST['settings'] : '';
-
-
-// Forum, User or Group information
-//
-// 'ug_type' is either user or groups used mainly for forum/admin/mod permissions
-// 'ug_data' contains the list of usernames, user_id's or group_ids for the 'ug_type'
-// 'forum_id' contains the list of forums, 0 is used for "All forums", can be array or scalar
-$ug_type = (isset($_REQUEST['ug_type'])) ? htmlspecialchars($_REQUEST['ug_type']) : '';
-$ug_data = (isset($_POST['ug_data'])) ? $_POST['ug_data'] : '';
-
-if (isset($_REQUEST['f']))
-{
-	$forum_id = (is_array($_REQUEST['f'])) ? $_REQUEST['f'] : intval($_REQUEST['f']);
+	$_CLASS['core_display']->display($page_title, 'modules/forums/admin/acp_permissions.html');
+
+	return;
 }
-
-if (!isset($forum_id[$which_mode]))
+else
 {
-	$forum_id[$which_mode][] = 0;
-}
-
-$sql_forum_id = implode(', ', array_map('intval', $forum_id[$which_mode]));
-
-// Generate list of forum id's
-$s_forum_id = '';
-
-foreach ($forum_id as $forum_submode => $forum_submode_ids)
-{
-	foreach ($forum_submode_ids as $submode_forum_id)
-	{
-		$s_forum_id .= '<input type="hidden" name="f[' . $forum_submode . '][]" value="' . $submode_forum_id . '" />';
+	$_CLASS['core_template']->assign('S_INTRO', false);
+}
+
+switch ($mode)
+{
+	case 'setting_user_global':
+	case 'setting_group_global':
+		$permission_dropdown = array('u_', 'm_', 'a_');
+		$permission_victim = ($mode === 'setting_user_global') ? array('user') : array('group');
+		$page_title = ($mode === 'setting_user_global') ? 'ACP_USERS_PERMISSIONS' : 'ACP_GROUPS_PERMISSIONS';
+	break;
+
+	case 'setting_user_local':
+	case 'setting_group_local':
+		$permission_dropdown = array('f_', 'm_');
+		$permission_victim = ($mode === 'setting_user_local') ? array('user', 'forums') : array('group', 'forums');
+		$page_title = ($mode === 'setting_user_local') ? 'ACP_USERS_FORUM_PERMISSIONS' : 'ACP_GROUPS_FORUM_PERMISSIONS';
+	break;
+
+	case 'setting_admin_global':
+	case 'setting_mod_global':
+		$permission_dropdown = (strpos($mode, '_admin_') !== false) ? array('a_') : array('m_');
+		$permission_victim = array('usergroup');
+		$page_title = ($mode === 'setting_admin_global') ? 'ACP_ADMINISTRATORS' : 'ACP_GLOBAL_MODERATORS';
+	break;
+
+	case 'setting_mod_local':
+	case 'setting_forum_local':
+		$permission_dropdown = ($mode === 'setting_mod_local') ? array('m_') : array('f_');
+		$permission_victim = array('forums', 'usergroup');
+		$page_title = ($mode === 'setting_mod_local') ? 'ACP_FORUM_MODERATORS' : 'ACP_FORUM_PERMISSIONS';
+	break;
+
+	case 'view_admin_global':
+	case 'view_user_global':
+	case 'view_mod_global':
+		$permission_dropdown = ($mode === 'view_admin_global') ? array('a_') : (($mode === 'view_user_global') ? array('u_') : array('m_'));
+		$permission_victim = array('usergroup_view');
+		$page_title = ($mode === 'view_admin_global') ? 'ACP_VIEW_ADMIN_PERMISSIONS' : (($mode === 'view_user_global') ? 'ACP_VIEW_USER_PERMISSIONS' : 'ACP_VIEW_GLOBAL_MOD_PERMISSIONS');
+	break;
+
+	case 'view_mod_local':
+	case 'view_forum_local':
+		$permission_dropdown = ($mode === 'view_mod_local') ? array('m_') : array('f_');
+		$permission_victim = array('forums', 'usergroup_view');
+		$page_title = ($mode === 'view_mod_local') ? 'ACP_VIEW_FORUM_MOD_PERMISSIONS' : 'ACP_VIEW_FORUM_PERMISSIONS';
+	break;
+
+	default:
+		trigger_error('INVALID_MODE');
+	break;
+}
+
+$_CLASS['core_template']->assign_array(array(
+	'L_TITLE'		=> $_CLASS['core_user']->get_lang($page_title),
+	'L_EXPLAIN'		=> $_CLASS['core_user']->get_lang($page_title . '_EXPLAIN')
+));
+
+// Get permission type
+$permission_type = request_var('type', $permission_dropdown[0]);
+
+if (!in_array($permission_type, $permission_dropdown))
+{
+	trigger_error($_CLASS['core_user']->lang['WRONG_PERMISSION_TYPE'] . adm_back_link($u_action));
+}
+
+
+// Handle actions
+if (strpos($mode, 'setting_') === 0 && $action)
+{
+	switch ($action)
+	{
+		case 'delete':
+			// All users/groups selected?
+			$all_users = (isset($_POST['all_users'])) ? true : false;
+			$all_groups = (isset($_POST['all_groups'])) ? true : false;
+
+			if ($all_users || $all_groups)
+			{
+				$items = retrieve_defined_user_groups($permission_scope, $forum_id, $permission_type);
+
+				if ($all_users && sizeof($items['user_ids']))
+				{
+					$user_id = $items['user_ids'];
+				}
+				else if ($all_groups && sizeof($items['group_ids']))
+				{
+					$group_id = $items['group_ids'];
+				}
+			}
+
+			if (sizeof($user_id) || sizeof($group_id))
+			{
+				remove_permissions($mode, $permission_type, $_CLASS['forums_auth_admin'], $user_id, $group_id, $forum_id);
+			}
+			else
+			{
+				trigger_error($_CLASS['core_user']->lang['NO_USER_GROUP_SELECTED'] . adm_back_link($u_action));
+			}
+		break;
+
+		case 'apply_permissions':
+			if (!isset($_POST['setting']))
+			{
+				trigger_error($_CLASS['core_user']->lang['NO_AUTH_SETTING_FOUND'] . adm_back_link($u_action));
+			}
+
+			set_permissions($mode, $permission_type, $_CLASS['forums_auth_admin'], $user_id, $group_id);
+		break;
+
+		case 'apply_all_permissions':
+			if (!isset($_POST['setting']))
+			{
+				trigger_error($_CLASS['core_user']->lang['NO_AUTH_SETTING_FOUND'] . adm_back_link($u_action));
+			}
+
+			set_all_permissions($mode, $permission_type, $_CLASS['forums_auth_admin'], $user_id, $group_id);
+		break;
+	}
+}
+
+
+// Setting permissions screen
+$s_hidden_fields = generate_hidden_fields(array(
+	'user_id'		=> $user_id,
+	'group_id'		=> $group_id,
+	'forum_id'		=> $forum_id,
+	'type'			=> $permission_type
+));
+
+// Go through the screens/options needed and present them in correct order
+foreach ($permission_victim as $victim)
+{
+	switch ($victim)
+	{
+		case 'forum_dropdown':
+
+			if (sizeof($forum_id))
+			{
+				check_existence('forum', $forum_id);
+				continue 2;
+			}
+
+			$_CLASS['core_template']->assign_array(array(
+				'S_SELECT_FORUM'		=> true,
+				'S_FORUM_OPTIONS'		=> make_forum_select(false, false, true, false, false))
+			);
+
+		break;
+
+		case 'forums':
+
+			if (sizeof($forum_id))
+			{
+				check_existence('forum', $forum_id);
+				continue 2;
+			}
+
+			$forum_list = make_forum_select(false, false, true, false, false, false, true);
+
+			// Build forum options
+			$s_forum_options = '';
+			foreach ($forum_list as $f_id => $f_row)
+			{
+				$s_forum_options .= '<option value="' . $f_id . '"' . $f_row['selected'] . '>' . $f_row['padding'] . $f_row['forum_name'] . '</option>';
+			}
+
+			// Build subforum options
+			$s_subforum_options = build_subforum_options($forum_list);
+
+			$_CLASS['core_template']->assign_array(array(
+				'S_SELECT_FORUM'		=> true,
+				'S_FORUM_OPTIONS'		=> $s_forum_options,
+				'S_SUBFORUM_OPTIONS'	=> $s_subforum_options,
+				'S_FORUM_ALL'			=> true,
+				'S_FORUM_MULTIPLE'		=> true
+			));
+
+		break;
+
+		case 'user':
+
+			if (sizeof($user_id))
+			{
+				check_existence('user', $user_id);
+				continue 2;
+			}
+
+			$_CLASS['core_template']->assign_array(array(
+				'S_SELECT_USER'			=> true,
+				'U_FIND_USERNAME'		=> generate_link('members_list&amp;mode=searchuser&amp;form=select_victim&amp;field=username')
+			));
+
+		break;
+
+		case 'group':
+
+			if (sizeof($group_id))
+			{
+				check_existence('group', $group_id);
+				continue 2;
+			}
+
+			$_CLASS['core_template']->assign_array(array(
+				'S_SELECT_GROUP'		=> true,
+				'S_GROUP_OPTIONS'		=> group_select_options(false)
+			));
+
+		break;
+
+		case 'usergroup':
+		case 'usergroup_view':
+
+			if (sizeof($user_id) || sizeof($group_id))
+			{
+				if (sizeof($user_id))
+				{
+					check_existence('user', $user_id);
+				}
+
+				if (sizeof($group_id))
+				{
+					check_existence('group', $group_id);
+				}
+
+				continue 2;
+			}
+
+			$items = retrieve_defined_user_groups($permission_scope, $forum_id, $permission_type);
+
+			// Now we check the users... because the "all"-selection is different here (all defined users/groups)
+			$all_users = (isset($_POST['all_users'])) ? true : false;
+			$all_groups = (isset($_POST['all_groups'])) ? true : false;
+
+			if ($all_users && sizeof($items['user_ids']))
+			{
+				$user_id = $items['user_ids'];
+				continue 2;
+			}
+
+			if ($all_groups && sizeof($items['group_ids']))
+			{
+				$group_id = $items['group_ids'];
+				continue 2;
+			}
+
+			$_CLASS['core_template']->assign_array(array(
+				'S_SELECT_USERGROUP'		=> ($victim === 'usergroup') ? true : false,
+				'S_SELECT_USERGROUP_VIEW'	=> ($victim == 'usergroup_view') ? true : false,
+				'S_DEFINED_USER_OPTIONS'	=> $items['user_ids_options'],
+				'S_DEFINED_GROUP_OPTIONS'	=> $items['group_ids_options'],
+				'S_ADD_GROUP_OPTIONS'		=> group_select_options(false, $items['group_ids']),
+				'U_FIND_USERNAME'			=> generate_link('members_list&amp;mode=searchuser&amp;form=add_user&amp;field=username')
+			));
+
+		break;
+	}
+
+	$_CLASS['core_template']->assign_array(array(
+		'U_ACTION'				=> $u_action,
+		'ANONYMOUS_USER_ID'		=> ANONYMOUS,
+
+		'S_SELECT_VICTIM'		=> true,
+		'S_CAN_SELECT_USER'		=> ($_CLASS['forums_auth']->acl_get('a_authusers')) ? true : false,
+		'S_CAN_SELECT_GROUP'	=> ($_CLASS['forums_auth']->acl_get('a_authgroups')) ? true : false,
+		'S_HIDDEN_FIELDS'		=> $s_hidden_fields
+	));
+
+	// Let the forum names being displayed
+	if (sizeof($forum_id))
+	{
+		$sql = 'SELECT forum_name
+			FROM ' . FORUMS_FORUMS_TABLE . '
+			WHERE forum_id IN (' . implode(', ', $forum_id) . ')
+			ORDER BY forum_name ASC';
+		$result = $_CLASS['core_db']->query($sql);
+
+		$forum_names = array();
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$forum_names[] = $row['forum_name'];
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		$_CLASS['core_template']->assign_array(array(
+			'S_FORUM_NAMES'		=> (sizeof($forum_names)) ? true : false,
+			'FORUM_NAMES'		=> implode(', ', $forum_names)
+		));
 	}
-}
-unset($forum_submode_ids);
-unset($forum_submode);
-unset($submode_forum_id);
+
+	$_CLASS['core_display']->display($page_title, 'modules/forums/admin/acp_permissions.html');
+
+	return;
+}
+
+// Do not allow forum_ids being set and no other setting defined (will bog down the server too much)
+if (sizeof($forum_id) && !sizeof($user_id) && !sizeof($group_id))
+{
+	trigger_error($_CLASS['core_user']->lang['ONLY_FORUM_DEFINED'] . adm_back_link($u_action));
+}
+
+$_CLASS['core_template']->assign_array(array(
+	'S_PERMISSION_DROPDOWN'		=> (sizeof($permission_dropdown) > 1) ? build_permission_dropdown($permission_dropdown, $permission_type) : false,
+	'L_PERMISSION_TYPE'			=> $_CLASS['core_user']->get_lang('ACL_TYPE_' . strtoupper($permission_type)),
+
+	'U_ACTION'					=> $u_action,
+	'S_HIDDEN_FIELDS'			=> $s_hidden_fields
+));
+
+if (strpos($mode, 'setting_') === 0)
+{
+	$_CLASS['core_template']->assign_array(array(
+		'S_SETTING_PERMISSIONS'		=> true
+	));
+
+	$hold_ary = $_CLASS['forums_auth_admin']->get_mask('set', (sizeof($user_id)) ? $user_id : false, (sizeof($group_id)) ? $group_id : false, (sizeof($forum_id)) ? $forum_id : false, $permission_type, $permission_scope, ACL_NO);
+	$_CLASS['forums_auth_admin']->display_mask('set', $permission_type, $hold_ary, ((sizeof($user_id)) ? 'user' : 'group'), (($permission_scope == 'local') ? true : false));
+}
+else
+{
+	$_CLASS['core_template']->assign_array(array(
+		'S_VIEWING_PERMISSIONS'		=> true
+	));
+
+	$hold_ary = $_CLASS['forums_auth_admin']->get_mask('view', (sizeof($user_id)) ? $user_id : false, (sizeof($group_id)) ? $group_id : false, (sizeof($forum_id)) ? $forum_id : false, $permission_type, $permission_scope, ACL_NEVER);
+	$_CLASS['forums_auth_admin']->display_mask('view', $permission_type, $hold_ary, ((sizeof($user_id)) ? 'user' : 'group'), (($permission_scope == 'local') ? true : false));
+}
 
-
-// Instantiate a new auth admin object in readiness
-$auth_admin = new auth_admin();
-
-// Are we setting deps? If we are we need to re-run the mode match above for the
-// relevant 'new' mode
-if (!empty($submode))
-{
-	switch ($submode)
-	{
-		case 'forum':
-			$l_title_explain = $_CLASS['core_user']->lang['PERMISSIONS_EXPLAIN'];
-			$which_acl = 'a_auth';
-			$sql_option_mode = 'f';
-			break;
-
-		case 'mod':
-			$l_title_explain = $_CLASS['core_user']->lang['MODERATORS_EXPLAIN'];
-			$which_acl = 'a_authmods';
-			$sql_option_mode = 'm';
-			break;
-
-		case 'supermod':
-			$l_title_explain = $_CLASS['core_user']->lang['SUPER_MODERATORS_EXPLAIN'];
-			$which_acl = 'a_authmods';
-			$sql_option_mode = 'm';
-			break;
-	}
-
-	// Permission check
-	if (!$_CLASS['auth']->acl_get($which_acl))
-	{
-		trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
-	}
-}
-
-
-// Does user want to update anything? Check here to find out 
-// and act appropriately
-switch ($submit)
-{
-	case 'update':
-		if (!empty($auth_settings))
-		{
-			// Admin wants subforums to inherit permissions ... so add these
-			// forums to the list ... since inheritance is only available for
-			// forum and moderator primary modes we deal with '$forum_id[$mode]'
-			if (!empty($_POST['inherit']))
-			{
-				$forum_id[$mode] = array_merge($forum_id[$mode], array_map('intval', $_POST['inherit']));
-			}
-
-			// Update the permission set ... we loop through each auth setting array
-			foreach ($auth_settings as $auth_submode => $auth_setting)
-			{
-				// Are any entries * ? If so we need to remove them since they
-				// are options the user wishes to ignore
-
-				if (in_array('*', $auth_setting))
-				{
-					foreach ($auth_setting as $option => $setting)
-					{
-						if ($setting == '*')
-						{
-							unset($auth_setting[$option]);
-						}
-					}
-				}
-
-				if (!empty($auth_setting))
-				{
-					// Loop through all user/group ids
-					foreach ($ug_data as $id)
-					{
-						$auth_admin->acl_set($ug_type, $forum_id[$auth_submode], $id, $auth_setting);
-					}
-				}
-			}
-
-			// Do we need to recache the moderator lists? We do if the mode
-			// was mod or auth_settings['mod'] is a non-zero size array
-			if ($mode == 'mod' || !empty($auth_settings['mod']))
-			{
-				cache_moderators();
-			}
-
-			// Remove users who are now moderators or admins from everyones foes
-			// list
-			if ($mode == 'mod' || !empty($auth_settings['mod']) || $mode == 'admin' || !empty($auth_settings['admin']))
-			{
-				update_foes();
-			}
-
-			// Logging ... first grab user or groupnames ...
-			$sql = ($ug_type == 'group') ? 'SELECT group_name as name, group_type FROM ' . CORE_GROUPS_TABLE . ' WHERE group_id' : 'SELECT username as name FROM ' . CORE_USERS_TABLE . ' WHERE user_id';
-			$sql .=  ' IN (' . implode(', ', array_map('intval', $ug_data)) . ')';
-			$result = $_CLASS['core_db']->query($sql);
-
-			$l_ug_list = '';
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-			{
-				$l_ug_list .= (($l_ug_list != '') ? ', ' : '') . (($row['group_type'] == GROUP_SYSTEM) ? '<span class="blue">' . $_CLASS['core_user']->lang['G_' . $row['name']] . '</span>' : $row['name']);
-			}
-			$_CLASS['core_db']->free_result($result);
-
-			$auth_submode = array_keys($auth_settings);
-			foreach ($auth_submode as $sub_mode)
-			{
-				if (!in_array(0, $forum_id[$sub_mode]))
-				{
-					// Grab the forum details if non-zero forum_id
-					$sql = 'SELECT forum_name  
-						FROM ' . FORUMS_FORUMS_TABLE . "
-						WHERE forum_id IN ($sql_forum_id)";
-					$result = $_CLASS['core_db']->query($sql);
-
-					$l_forum_list = '';
-					while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-					{
-						$l_forum_list .= (($l_forum_list != '') ? ', ' : '') . $row['forum_name'];
-					}
-					$_CLASS['core_db']->free_result($result);
-
-					add_log('admin', 'LOG_ACL_' . strtoupper($sub_mode) . '_ADD', $l_forum_list, $l_ug_list);
-				}
-				else
-				{
-					add_log('admin', 'LOG_ACL_' . strtoupper($sub_mode) . '_ADD', $l_ug_list);
-				}
-			}
-			unset($l_ug_list);
-		}
-		unset($auth_submode);
-		unset($auth_setting);
-
-		trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED']);
-	break;
-
-	case 'delete':
-		$sql = "SELECT auth_option_id
-			FROM " . FORUMS_ACL_OPTIONS_TABLE . "
-			WHERE auth_option LIKE '{$sql_option_mode}_%'";
-		$result = $_CLASS['core_db']->query($sql);
-
-		if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$option_id_ary = array();
-			do
-			{
-				$option_id_ary[] = $row['auth_option_id'];
-			}
-			while($row = $_CLASS['core_db']->fetch_row_assoc($result));
-
-			foreach ($ug_data as $id)
-			{
-				$auth_admin->acl_delete($ug_type, $forum_id[$mode], $id, $option_id_ary);
-			}
-			unset($option_id_ary);
-		}
-		$_CLASS['core_db']->free_result($result);
-
-
-		// Do we need to recache the moderator lists? We do if the mode
-		// was mod or auth_settings['mod'] is a non-zero size array
-		if ($mode == 'mod' || (isset($auth_settings['mod']) && !empty($auth_settings['mod'])))
-		{
-			cache_moderators();
-		}
-
-		// Logging ... first grab user or groupnames ...
-		$sql = ($ug_type == 'group') ? 'SELECT group_name as name, group_type FROM ' . CORE_GROUPS_TABLE . ' WHERE group_id' : 'SELECT username as name FROM ' . CORE_USERS_TABLE . ' WHERE user_id';
-		$sql .=  ' IN (' . implode(', ', array_map('intval', $ug_data)) . ')';
-		$result = $_CLASS['core_db']->query($sql);
-
-		$l_ug_list = '';
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$l_ug_list .= (($l_ug_list != '') ? ', ' : '') . ((isset($row['group_type']) && $row['group_type'] == GROUP_SPECIAL) ? '<span class="blue">' . $_CLASS['core_user']->lang['G_' . $row['name']] . '</span>' : $row['name']);
-		}
-		$_CLASS['core_db']->free_result($result);
-
-
-		// Grab the forum details if non-zero forum_id
-		if (!in_array(0, $forum_id[$which_mode]))
-		{
-			$sql = 'SELECT forum_name  
-				FROM ' . FORUMS_FORUMS_TABLE . "
-				WHERE forum_id IN ($sql_forum_id)";
-			$result = $_CLASS['core_db']->query($sql);
-
-			$l_forum_list = '';
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-			{
-				$l_forum_list .= (($l_forum_list != '') ? ', ' : '') . $row['forum_name'];
-			}
-			$_CLASS['core_db']->free_result($result);
-
-			add_log('admin', 'LOG_ACL_' . strtoupper($which_mode) . '_DEL', $l_forum_list, $l_ug_list);
-		}
-		else
-		{
-			add_log('admin', 'LOG_ACL_' . strtoupper($which_mode) . '_DEL', $l_ug_list);
-		}
-
-		trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED']);
-	break;
-
-	case 'presetsave':
-		$holding_ary = array();
-	
-		$auth_setting = $auth_settings[(!empty($submode) ? $submode : $mode)];
-
-		foreach ($auth_setting as $option => $setting)
-		{
-			switch ($setting)
-			{
-				case ACL_YES:
-					$holding_ary['yes'][] = $option;
-				break;
-
-				case ACL_NO:
-					$holding_ary['no'][] = $option;
-				break;
-
-				case ACL_UNSET:
-					$holding_ary['unset'][] = $option;
-				break;
-			}
-		}
-
-		$sql = array(
-			'preset_user_id'=> (int) $_CLASS['core_user']->data['user_id'],
-			'preset_type'	=> $sql_option_mode,
-			'preset_data'	=> serialize($holding_ary)
-		);
-
-		if (!empty($_POST['presetname']))
-		{	
-			$sql['preset_name'] = htmlspecialchars($_POST['presetname'], ENT_QUOTES);
-		}
-		
-		if (!empty($sql['preset_name']) || $_POST['presetoption'] != -1)
-		{
-			$sql = ($_POST['presetoption'] == -1) ? 'INSERT INTO ' . FORUMS_ACL_PRESETS_TABLE . ' ' . $_CLASS['core_db']->sql_build_array('INSERT', $sql) : 'UPDATE ' . FORUMS_ACL_PRESETS_TABLE . ' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql) . ' WHERE preset_id =' . (int) $_POST['presetoption'];
-			$_CLASS['core_db']->query($sql);
-
-			add_log('admin', 'LOG_ACL_PRESET_ADD', $sql['preset_name']);
-		}
-		unset($sql, $option, $setting, $auth_setting);
-	break;
-
-	case 'presetdel':
-		if (!empty($_POST['presetoption']))
-		{
-			$sql = "SELECT preset_name 
-				FROM " . FORUMS_ACL_PRESETS_TABLE . " 
-				WHERE preset_id = " . (int) $_POST['presetoption'];
-			$result = $_CLASS['core_db']->query($sql);
-
-			$row = $_CLASS['core_db']->fetch_row_assoc($result);
-			$_CLASS['core_db']->free_result($result);
-
-			if ($row)
-			{
-				$sql = "DELETE FROM " . FORUMS_ACL_PRESETS_TABLE . " 
-					WHERE preset_id = " . (int) $_POST['presetoption'];
-				$_CLASS['core_db']->query($sql);
-	
-				add_log('admin', 'LOG_ACL_PRESET_DEL', $row['preset_name']);
-			}
-			unset($row);
-		}
-	break;
-}
-// End update
-
-
-// Output page header
-adm_page_header($l_title);
-
-
-// First potential form ... this is for selecting forums, users
-// or groups. 
-if (in_array($mode, array('user', 'group', 'forum', 'mod')) && empty($submit))
-{
-
-?>
-
-<h1><?php echo $l_title; ?></h1>
-
-<p><?php echo $l_title_explain ?></p>
-
-<form method="post" action="<?php echo generate_link('forums&amp;file=admin_permissions&amp;mode='.$mode, array('admin' => true)); ?>"><table width="100%" class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center">
-<?php
-
-	// Mode specific markup
-	switch ($mode)
-	{
-		case 'forum':
-		case 'mod':
-
-?>
-	<tr>
-		<th align="center"><?php echo $_CLASS['core_user']->lang['LOOK_UP_FORUM']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1" align="center" valign="middle">&nbsp;<select style="width:280px" name="f[<?php echo $mode; ?>][]" multiple="true" size="7"><?php 
-	
-			echo make_forum_select(false, false, false);
-			
-?></select>&nbsp;</td>
-	</tr>
-	<tr>
-		<td class="cat" align="center"><input type="submit" name="submit_usergroups" value="<?php echo $_CLASS['core_user']->lang['LOOK_UP_FORUM']; ?>" class="btnmain" />&nbsp; <input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /><input type="hidden" name="ug_type" value="forum" /><input type="hidden" name="action" value="usergroups" /></td>
-	</tr>
-<?php
-		
-			break;
-
-		case 'user':
-
-?>
-	<tr>
-		<th align="center"><?php echo $_CLASS['core_user']->lang['LOOK_UP_USER']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1" align="center">&nbsp;<textarea cols="40" rows="4" name="ug_data[]"></textarea>&nbsp;</td>
-	</tr>
-	<tr>
-		<td class="cat" align="center"><input type="submit" name="submit_add_options" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp; <input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" />&nbsp; <input type="submit" value="<?php echo $_CLASS['core_user']->lang['FIND_USERNAME']; ?>" class="btnlite" onclick="window.open('<?php echo generate_link('Members_List&mode=searchuser&form=2&field=entries'); ?>', '_phpbbsearch', 'HEIGHT=500,resizable=yes,scrollbars=yes,WIDTH=740');return false;" /><input type="hidden" name="ug_type" value="user" /></td>
-	</tr>
-<?php
-
-			break;
-
-		case 'group':
-			// Generate list of groups
-
-?>
-	<tr>
-		<th align="center"><?php echo $_CLASS['core_user']->lang['LOOK_UP_GROUP']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1" align="center" valign="middle">&nbsp;<select style="width:280px" name="ug_data[]" multiple="true" size="7"><?php 
-
-			$sql = "SELECT group_id, group_name, group_type   
-				FROM " . CORE_GROUPS_TABLE . " 
-				ORDER BY group_type DESC";
-			$result = $_CLASS['core_db']->query($sql);
-
-			$group_options = '';
-			if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-			{
-				do
-				{
-					echo '<option' . (($row['group_type'] == GROUP_SPECIAL) ? ' class="blue"' : '') . ' value="' . $row['group_id'] . '">' . (($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name']) . '</option>';
-				}
-				while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-			}
-			$_CLASS['core_db']->free_result($result);
-			
-?></select>&nbsp;</td>
-	</tr>
-	<tr>
-		<td class="cat" align="center"><input type="submit" name="submit_edit_options" value="<?php echo $_CLASS['core_user']->lang['LOOK_UP_GROUP']; ?>" class="btnmain" />&nbsp; <input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /><input type="hidden" name="ug_type" value="group" /></td>
-	</tr>
-<?php
-
-		break;
-
-	}
-
-?>
-</table></form>
-
-<?php
-
-}
-// End user, group or forum selection
-
-
-// Second possible form, this lists the currently enabled
-// users/groups for the given mode
-if ((in_array($submit, array('usergroups', 'delete', 'cancel'))) || (!strstr($submit, 'options') && empty($submode) && in_array($mode, array('admin', 'supermod'))))
-{
-
-?>
-
-<h1><?php echo $l_title; ?></h1>
-
-<p><?php echo $l_title_explain; ?></p>
-
-<table width="100%" cellspacing="0" cellpadding="0" border="0">
-	<tr>
-		<td><form method="post" action="<?php echo generate_link('forums&amp;file=admin_permissions&amp;mode='.$mode, array('admin' => true)); ?>"><table width="100%" class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th><?php echo $_CLASS['core_user']->lang['MANAGE_USERS']; ?></th>
-			</tr>
-			<tr>
-				<td class="row1" align="center"><select style="width:280px" name="ug_data[]" multiple="multiple" size="5"><?php
-			
-	$sql = "SELECT u.user_id, u.username
-		FROM " . CORE_USERS_TABLE . " u, " . FORUMS_ACL_TABLE . " a, " . FORUMS_ACL_OPTIONS_TABLE . " o
-		WHERE o.auth_option LIKE '" . $sql_option_mode . "_%'
-			AND a.auth_option_id = o.auth_option_id
-			AND a.forum_id IN ($sql_forum_id)
-			AND u.user_id = a.user_id
-		ORDER BY u.username, u.user_reg_date ASC";
-	$result = $_CLASS['core_db']->query($sql);
-
-	$users = '';
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		echo '<option value="' . $row['user_id'] . '">' . $row['username'] . '</option>';
-	}
-	$_CLASS['core_db']->free_result($result);
-		
-?></select></td>
-			</tr>
-			<tr>
-				<td class="cat" align="center"><input class="btnlite" type="submit" name="submit_delete" value="<?php echo $_CLASS['core_user']->lang['DELETE']; ?>" /> &nbsp; <input class="btnlite" type="submit" name="submit_edit_options" value="<?php echo $_CLASS['core_user']->lang['SET_OPTIONS']; ?>" /><input type="hidden" name="ug_type" value="user" /><?php echo $s_forum_id; ?></td>
-			</tr>
-		</table></form></td>
-
-		<td align="center"><form method="post" name="admingroups" action="<?php echo generate_link('forums&amp;file=admin_permissions&amp;mode='.$mode, array('admin' => true)); ?>"><table width="100%" class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center">
-		<tr>
-			<th><?php echo $_CLASS['core_user']->lang['MANAGE_GROUPS']; ?></th>
-		</tr>
-		<tr>
-			<td class="row1" align="center"><select style="width:280px" name="ug_data[]" multiple="multiple" size="5"><?php 
-	
-	$sql = "SELECT DISTINCT g.group_id, g.group_name, g.group_type 
-		FROM " . CORE_GROUPS_TABLE . " g, " . FORUMS_ACL_TABLE . " a, " . FORUMS_ACL_OPTIONS_TABLE . " o
-		WHERE o.auth_option LIKE '" . $sql_option_mode . "_%'
-			AND a.forum_id IN ($sql_forum_id)
-			AND a.auth_option_id = o.auth_option_id
+$_CLASS['core_display']->display($page_title, 'modules/forums/admin/acp_permissions.html');
+
+/**
+* Build +subforum options
+*/
+function build_subforum_options($forum_list)
+{
+	global $_CLASS;
+
+	$s_options = '';
+
+	$forum_list = array_merge($forum_list);
+
+	foreach ($forum_list as $key => $row)
+	{
+		$s_options .= '<option value="' . $row['forum_id'] . '"' . $row['selected'] . '>' . $row['padding'] . $row['forum_name'];
+
+		// We check if a branch is there...
+		$branch_there = false;
+
+		foreach (array_slice($forum_list, $key + 1) as $temp_row)
+		{
+			if ($temp_row['left_id'] > $row['left_id'] && $temp_row['left_id'] < $row['right_id'])
+			{
+				$branch_there = true;
+
+				break;
+			}
+			continue;
+		}
+		
+		if ($branch_there)
+		{
+			$s_options .= ' [' . $_CLASS['core_user']->get_lang('PLUS_SUBFORUMS') . ']';
+		}
+
+		$s_options .= '</option>';
+	}
+
+	return $s_options;
+}
+
+/**
+* Build dropdown field for changing permission types
+*/
+function build_permission_dropdown($options, $default_option)
+{
+	global $_CLASS;
+	
+	$s_dropdown_options = '';
+	foreach ($options as $setting)
+	{
+		if (!$_CLASS['forums_auth']->acl_get('a_' . str_replace('_', '', $setting) . 'auth'))
+		{
+			continue;
+		}
+		$selected = ($setting == $default_option) ? ' selected="selected"' : '';
+		$s_dropdown_options .= '<option value="' . $setting . '"' . $selected . '>' . $_CLASS['core_user']->lang['permission_type'][$setting] . '</option>';
+	}
+
+	return $s_dropdown_options;
+}
+
+/**
+* Check if selected items exist. Remove not found ids and if empty return error.
+*/
+function check_existence($mode, &$ids)
+{
+	global $_CLASS;
+
+	switch ($mode)
+	{
+		case 'user':
+			$table = CORE_USERS_TABLE;
+			$sql_id = 'user_id';
+		break;
+
+		case 'group':
+			$table = CORE_GROUPS_TABLE;
+			$sql_id = 'group_id';
+		break;
+
+		case 'forum':
+			$table = FORUMS_FORUMS_TABLE;
+			$sql_id = 'forum_id';
+		break;
+	}
+
+	$sql = "SELECT $sql_id
+		FROM $table
+		WHERE $sql_id IN (" . implode(', ', $ids) . ')';
+	$result = $_CLASS['core_db']->query($sql);
+
+	$ids = array();
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$ids[] = $row[$sql_id];
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	if (!sizeof($ids))
+	{
+		trigger_error($_CLASS['core_user']->lang['SELECTED_' . strtoupper($mode) . '_NOT_EXIST'] . adm_back_link($u_action));
+	}
+}
+
+/** 
+* Apply permissions
+*/
+function set_permissions($mode, $permission_type, &$forums_auth_admin, &$user_id, &$group_id)
+{
+	global $_CLASS;
+
+	$psubmit = request_var('psubmit', array(0));
+
+	// User or group to be set?
+	$ug_type = (sizeof($user_id)) ? 'user' : 'group';
+
+	// Check the permission setting again
+	if (!$_CLASS['forums_auth']->acl_get('a_' . str_replace('_', '', $permission_type) . 'auth') || !$_CLASS['forums_auth']->acl_get('a_auth' . $ug_type . 's'))
+	{
+		trigger_error($_CLASS['core_user']->lang['NO_ADMIN'] . adm_back_link($u_action));
+	}
+	
+	$ug_id = $forum_id = 0;
+
+	// We loop through the auth settings defined in our submit
+	list($ug_id, ) = each($psubmit);
+	list($forum_id, ) = each($psubmit[$ug_id]);
+
+	$auth_settings = array_map('intval', $_POST['setting'][$ug_id][$forum_id]);
+
+	// Do we have a role we want to set?
+	$assigned_role = (isset($_POST['role'][$ug_id][$forum_id])) ? (int) $_POST['role'][$ug_id][$forum_id] : 0;
+
+	// Do the admin want to set these permissions to other items too?
+	$inherit = request_var('inherit', array(0));
+
+	$ug_id = array($ug_id);
+	$forum_id = array($forum_id);
+
+	if (sizeof($inherit))
+	{
+		foreach ($inherit as $_ug_id => $forum_id_ary)
+		{
+			// Inherit users/groups?
+			if (!in_array($_ug_id, $ug_id))
+			{
+				$ug_id[] = $_ug_id;
+			}
+
+			// Inherit forums?
+			$forum_id = array_merge($forum_id, array_keys($forum_id_ary));
+		}
+	}
+
+	$forum_id = array_unique($forum_id);
+
+	// If the auth settings differ from the assigned role, then do not set a role...
+	if ($assigned_role)
+	{
+		if (!check_assigned_role($assigned_role, $auth_settings))
+		{
+			$assigned_role = 0;
+		}
+	}
+
+	// Update the permission set...
+	$forums_auth_admin->acl_set($ug_type, $forum_id, $ug_id, $auth_settings, $assigned_role);
+
+	// Do we need to recache the moderator lists?
+	if ($permission_type == 'm_')
+	{
+		cache_moderators();
+	}
+
+	// Remove users who are now moderators or admins from everyones foes list
+	if ($permission_type == 'm_' || $permission_type == 'a_')
+	{
+		update_foes();
+	}
+
+	log_action($mode, 'add', $permission_type, $ug_type, $ug_id, $forum_id);
+
+	trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED'] . adm_back_link($u_action));
+}
+
+/** 
+* Apply all permissions
+*/
+function set_all_permissions($mode, $permission_type, &$forums_auth_admin, &$user_id, &$group_id)
+{
+	global $_CLASS;
+
+	// User or group to be set?
+	$ug_type = (sizeof($user_id)) ? 'user' : 'group';
+
+	// Check the permission setting again
+	if (!$_CLASS['forums_auth']->acl_get('a_' . str_replace('_', '', $permission_type) . 'auth') || !$_CLASS['forums_auth']->acl_get('a_auth' . $ug_type . 's'))
+	{
+		trigger_error($_CLASS['core_user']->lang['NO_ADMIN'] . adm_back_link($u_action));
+	}
+
+	$auth_settings = (isset($_POST['setting'])) ? $_POST['setting'] : array();
+	$auth_roles = (isset($_POST['role'])) ? $_POST['role'] : array();
+	$ug_ids = $forum_ids = array();
+
+	// We need to go through the auth settings
+	foreach ($auth_settings as $ug_id => $forum_auth_row)
+	{
+		$ug_id = (int) $ug_id;
+		$ug_ids[] = $ug_id;
+
+		foreach ($forum_auth_row as $forum_id => $auth_options)
+		{
+			$forum_id = (int) $forum_id;
+			$forum_ids[] = $forum_id;
+
+			// Check role...
+			$assigned_role = (isset($auth_roles[$ug_id][$forum_id])) ? (int) $auth_roles[$ug_id][$forum_id] : 0;
+
+			// If the auth settings differ from the assigned role, then do not set a role...
+			if ($assigned_role)
+			{
+				if (!check_assigned_role($assigned_role, $auth_options))
+				{
+					$assigned_role = 0;
+				}
+			}
+
+			// Update the permission set...
+			$forums_auth_admin->acl_set($ug_type, $forum_id, $ug_id, $auth_options, $assigned_role, false);
+		}
+	}
+
+	$forums_auth_admin->acl_clear_prefetch();
+
+	// Do we need to recache the moderator lists?
+	if ($permission_type == 'm_')
+	{
+		cache_moderators();
+	}
+
+	// Remove users who are now moderators or admins from everyones foes list
+	if ($permission_type == 'm_' || $permission_type == 'a_')
+	{
+		update_foes();
+	}
+
+	log_action($mode, 'add', $permission_type, $ug_type, $ug_ids, $forum_ids);
+
+	trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED'] . adm_back_link($u_action));
+}
+
+/**
+* Compare auth settings with auth settings from role
+* returns false if they differ, true if they are equal
+*/
+function check_assigned_role($role_id, &$auth_settings)
+{
+	global $_CLASS;
+
+	$sql = 'SELECT o.auth_option, r.auth_setting
+		FROM ' . FORUMS_ACL_OPTIONS_TABLE . ' o, ' . FORUMS_ACL_ROLES_DATA_TABLE . ' r
+		WHERE o.auth_option_id = r.auth_option_id
+			AND r.role_id = ' . $role_id;
+	$result = $_CLASS['core_db']->query($sql);
+
+	$test_auth_settings = array();
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$test_auth_settings[$row['auth_option']] = $row['auth_setting'];
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	// We need to add any ACL_NO setting from auth_settings to compare correctly
+	foreach ($auth_settings as $option => $setting)
+	{
+		if ($setting == ACL_NO)
+		{
+			$test_auth_settings[$option] = $setting;
+		}
+	}
+
+	if (sizeof(array_diff_assoc($auth_settings, $test_auth_settings)))
+	{
+		return false;
+	}
+
+	return true;
+}
+
+/**
+* Remove permissions
+*/
+function remove_permissions($mode, $permission_type, &$forums_auth_admin, &$user_id, &$group_id, &$forum_id)
+{
+	global $_CLASS;
+		
+	// User or group to be set?
+	$ug_type = (sizeof($user_id)) ? 'user' : 'group';
+
+	// Check the permission setting again
+	if (!$_CLASS['forums_auth']->acl_get('a_' . str_replace('_', '', $permission_type) . 'auth') || !$_CLASS['forums_auth']->acl_get('a_auth' . $ug_type . 's'))
+	{
+		trigger_error($_CLASS['core_user']->lang['NO_ADMIN'] . adm_back_link($u_action));
+	}
+
+	$forums_auth_admin->acl_delete($ug_type, (($ug_type == 'user') ? $user_id : $group_id), (sizeof($forum_id) ? $forum_id : false), $permission_type);
+
+	// Do we need to recache the moderator lists?
+	if ($permission_type == 'm_')
+	{
+		cache_moderators();
+	}
+
+	log_action($mode, 'del', $permission_type, $ug_type, (($ug_type == 'user') ? $user_id : $group_id), (sizeof($forum_id) ? $forum_id : array(0 => 0)));
+
+	trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED'] . adm_back_link($u_action));
+}
+
+/**
+* Log permission changes
+*/
+function log_action($mode, $action, $permission_type, $ug_type, $ug_id, $forum_id)
+{
+	global $_CLASS;
+
+	if (!is_array($ug_id))
+	{
+		$ug_id = array($ug_id);
+	}
+
+	if (!is_array($forum_id))
+	{
+		$forum_id = array($forum_id);
+	}
+
+	// Logging ... first grab user or groupnames ...
+	$sql = ($ug_type == 'group') ? 'SELECT group_name as name, group_type FROM ' . CORE_GROUPS_TABLE . ' WHERE ' : 'SELECT username as name FROM ' . CORE_USERS_TABLE . ' WHERE ';
+	$sql .=   (($ug_type === 'group') ? 'group_id' : 'user_id').' IN (' . implode(', ', array_map('intval', $ug_id)) . ')';
+	$result = $_CLASS['core_db']->query($sql);
+
+	$l_ug_list = '';
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$l_ug_list .= (($l_ug_list != '') ? ', ' : '') . ((isset($row['group_type']) && $row['group_type'] == GROUP_SPECIAL) ? '<span class="blue">' . $_CLASS['core_user']->lang['G_' . $row['name']] . '</span>' : $row['name']);
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	$mode = str_replace('setting_', '', $mode);
+
+	if ($forum_id[0] == 0)
+	{
+		add_log('admin', 'LOG_ACL_' . strtoupper($action) . '_' . strtoupper($mode) . '_' . strtoupper($permission_type), $l_ug_list);
+	}
+	else
+	{
+		// Grab the forum details if non-zero forum_id
+		$sql = 'SELECT forum_name  
+			FROM ' . FORUMS_FORUMS_TABLE . '
+			WHERE forum_id IN (' . implode(', ', $forum_id) . ')';
+		$result = $_CLASS['core_db']->query($sql);
+
+		$l_forum_list = '';
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$l_forum_list .= (($l_forum_list != '') ? ', ' : '') . $row['forum_name'];
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		add_log('admin', 'LOG_ACL_' . strtoupper($action) . '_' . strtoupper($mode) . '_' . strtoupper($permission_type), $l_forum_list, $l_ug_list);
+	}
+}
+
+/**
+* Update foes - remove moderators and administrators from foe lists...
+*/
+function update_foes()
+{
+	global $_CLASS;
+
+	$perms = array();
+	foreach ($_CLASS['forums_auth']->acl_get_list(false, array('a_', 'm_'), false) as $forum_id => $forum_ary)
+	{
+		foreach ($forum_ary as $auth_option => $user_ary)
+		{
+			$perms = array_merge($perms, $user_ary);
+		}
+	}
+
+	if (sizeof($perms))
+	{
+		$sql = 'DELETE FROM ' . ZEBRA_TABLE . ' 
+			WHERE zebra_id IN (' . implode(', ', array_unique($perms)) . ')
+				AND foe = 1';
+		$_CLASS['core_db']->query($sql);
+	}
+	unset($perms);
+}
+
+/**
+* Display a complete trace tree for the selected permission to determine where settings are set/unset
+*/
+function permission_trace($user_id, $forum_id, $permission)
+{
+	global $_CLASS;
+
+	if ($user_id != $_CLASS['core_user']->data['user_id'])
+	{
+		$sql = 'SELECT user_id, username, user_permissions, user_type
+			FROM ' . CORE_USERS_TABLE . '
+			WHERE user_id = ' . $user_id;
+		$result = $_CLASS['core_db']->query($sql);
+		$userdata = $_CLASS['core_db']->fetch_row_assoc($result);
+		$_CLASS['core_db']->free_result($result);
+	}
+	else
+	{
+		$userdata = $_CLASS['core_user']->data;
+	}
+
+	if (!$userdata)
+	{
+		trigger_error('NO_USERS');
+	}
+
+	$forum_name = false;
+
+	if ($forum_id)
+	{
+		$sql = 'SELECT forum_name
+			FROM ' . FORUMS_FORUMS_TABLE . "
+			WHERE forum_id = $forum_id";
+		$result = $_CLASS['core_db']->query($sql, 3600);
+		$forum_name = $db->sql_fetchfield('forum_name');
+		$_CLASS['core_db']->free_result($result);
+	}
+
+	$back = request_var('back', 0);
+
+	$_CLASS['core_template']->assign_array(array(
+		'PERMISSION'			=> $_CLASS['core_user']->lang['acl_' . $permission]['lang'],
+		'PERMISSION_USERNAME'	=> $userdata['username'],
+		'FORUM_NAME'			=> $forum_name,
+		'U_BACK'				=> ($back) ? build_url(array('f', 'back')) . "&amp;f=$back" : '')
+	);
+
+	$template->assign_block_vars('trace', array(
+		'WHO'			=> $_CLASS['core_user']->lang['DEFAULT'],
+		'INFORMATION'	=> $_CLASS['core_user']->lang['TRACE_DEFAULT'],
+
+		'S_SETTING_NO'		=> true,
+		'S_TOTAL_NO'		=> true
+	));
+
+	$sql = 'SELECT DISTINCT g.group_name, g.group_id, g.group_type
+		FROM ' . CORE_GROUPS_TABLE . ' g
+			LEFT JOIN ' . USER_GROUP_TABLE . ' ug ON (ug.group_id = g.group_id)
+		WHERE ug.user_id = ' . $user_id . '
+			AND ug.user_pending = 0
+		ORDER BY g.group_type DESC, g.group_id DESC';
+	$result = $_CLASS['core_db']->query($sql);
+
+	$groups = array();
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$groups[$row['group_id']] = array(
+			'auth_setting'		=> ACL_NO,
+			'group_name'		=> ($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name']
+		);
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	$total = ACL_NO;
+	if (sizeof($groups))
+	{
+		// Get group auth settings
+		$hold_ary = $_CLASS['forums_auth']->acl_group_raw_data(array_keys($groups), $permission, $forum_id);
+
+		foreach ($hold_ary as $group_id => $forum_ary)
+		{
+			$groups[$group_id]['auth_setting'] = $hold_ary[$group_id][$forum_id][$permission];
+		}
+		unset($hold_ary);
+
+		foreach ($groups as $id => $row)
+		{
+			switch ($row['auth_setting'])
+			{
+				case ACL_NO:
+					$information = $_CLASS['core_user']->lang['TRACE_GROUP_NO'];
+				break;
+
+				case ACL_YES:
+					$information = ($total == ACL_YES) ? $_CLASS['core_user']->lang['TRACE_GROUP_YES_TOTAL_YES'] : (($total == ACL_NEVER) ? $_CLASS['core_user']->lang['TRACE_GROUP_YES_TOTAL_NEVER'] : $_CLASS['core_user']->lang['TRACE_GROUP_YES_TOTAL_NO']);
+					$total = ($total == ACL_NO) ? ACL_YES : $total;
+				break;
+
+				case ACL_NEVER:
+					$information = ($total == ACL_YES) ? $_CLASS['core_user']->lang['TRACE_GROUP_NEVER_TOTAL_YES'] : (($total == ACL_NEVER) ? $_CLASS['core_user']->lang['TRACE_GROUP_NEVER_TOTAL_NEVER'] : $_CLASS['core_user']->lang['TRACE_GROUP_NEVER_TOTAL_NO']);
+					$total = ACL_NEVER;
+				break;
+			}
+
+			$template->assign_block_vars('trace', array(
+				'WHO'			=> $row['group_name'],
+				'INFORMATION'	=> $information,
+
+				'S_SETTING_NO'		=> ($row['auth_setting'] == ACL_NO) ? true : false,
+				'S_SETTING_YES'		=> ($row['auth_setting'] == ACL_YES) ? true : false,
+				'S_SETTING_NEVER'	=> ($row['auth_setting'] == ACL_NEVER) ? true : false,
+				'S_TOTAL_NO'		=> ($total == ACL_NO) ? true : false,
+				'S_TOTAL_YES'		=> ($total == ACL_YES) ? true : false,
+				'S_TOTAL_NEVER'		=> ($total == ACL_NEVER) ? true : false)
+			);
+		}
+	}
+
+	// Get user specific permission...
+	$hold_ary = $_CLASS['forums_auth']->acl_user_raw_data($user_id, $permission, $forum_id);
+	$auth_setting = (!sizeof($hold_ary)) ? ACL_NO : $hold_ary[$user_id][$forum_id][$permission];
+
+	switch ($auth_setting)
+	{
+		case ACL_NO:
+			$information = ($total == ACL_NO) ? $_CLASS['core_user']->lang['TRACE_USER_NO_TOTAL_NO'] : $_CLASS['core_user']->lang['TRACE_USER_KEPT'];
+			$total = ($total == ACL_NO) ? ACL_NEVER : $total;
+		break;
+
+		case ACL_YES:
+			$information = ($total == ACL_YES) ? $_CLASS['core_user']->lang['TRACE_USER_YES_TOTAL_YES'] : (($total == ACL_NEVER) ? $_CLASS['core_user']->lang['TRACE_USER_YES_TOTAL_NEVER'] : $_CLASS['core_user']->lang['TRACE_USER_YES_TOTAL_NO']);
+			$total = ($total == ACL_NO) ? ACL_YES : $total;
+		break;
+
+		case ACL_NEVER:
+			$information = ($total == ACL_YES) ? $_CLASS['core_user']->lang['TRACE_USER_NEVER_TOTAL_YES'] : (($total == ACL_NEVER) ? $_CLASS['core_user']->lang['TRACE_USER_NEVER_TOTAL_NEVER'] : $_CLASS['core_user']->lang['TRACE_USER_NEVER_TOTAL_NO']);
+			$total = ACL_NEVER;
+		break;
+	}
+
+	$template->assign_block_vars('trace', array(
+		'WHO'			=> $userdata['username'],
+		'INFORMATION'	=> $information,
+
+		'S_SETTING_NO'		=> ($auth_setting == ACL_NO) ? true : false,
+		'S_SETTING_YES'		=> ($auth_setting == ACL_YES) ? true : false,
+		'S_SETTING_NEVER'	=> ($auth_setting == ACL_NEVER) ? true : false,
+		'S_TOTAL_NO'		=> false,
+		'S_TOTAL_YES'		=> ($total == ACL_YES) ? true : false,
+		'S_TOTAL_NEVER'		=> ($total == ACL_NEVER) ? true : false)
+	);
+
+	// global permission might overwrite local permission
+	if (($forum_id != 0) && isset($_CLASS['forums_auth']->acl_options['global'][$permission]))
+	{
+		if ($user_id != $_CLASS['core_user']->data['user_id'])
+		{
+			$auth2 = new auth();
+			$auth2->acl($userdata);
+			$auth_setting = $auth2->acl_get($permission);
+		}
+		else
+		{
+			$auth_setting = $_CLASS['forums_auth']->acl_get($permission);
+		}
+
+		if ($auth_setting)
+		{
+			$information = ($total == ACL_YES) ? $_CLASS['core_user']->lang['TRACE_USER_GLOBAL_YES_TOTAL_YES'] : $_CLASS['core_user']->lang['TRACE_USER_GLOBAL_YES_TOTAL_NEVER'];
+			$total = ACL_YES;
+		}
+		else
+		{
+			$information = $_CLASS['core_user']->lang['TRACE_USER_GLOBAL_NEVER_TOTAL_KEPT'];
+		}
+
+		$template->assign_block_vars('trace', array(
+			'WHO'			=> sprintf($_CLASS['core_user']->lang['TRACE_GLOBAL_SETTING'], $userdata['username']),
+			'INFORMATION'	=> sprintf($information, '<a href="' . $u_action . "&amp;u=$user_id&amp;f=0&amp;auth=$permission&amp;back=$forum_id\">", '</a>'),
+
+			'S_SETTING_NO'		=> false,
+			'S_SETTING_YES'		=> $auth_setting,
+			'S_SETTING_NEVER'	=> !$auth_setting,
+			'S_TOTAL_NO'		=> false,
+			'S_TOTAL_YES'		=> ($total == ACL_YES) ? true : false,
+			'S_TOTAL_NEVER'		=> ($total == ACL_NEVER) ? true : false)
+		);
+	}
+
+	// Take founder status into account, overwriting the default values
+	if ($userdata['user_type'] == USER_FOUNDER && strpos($permission, 'a_') === 0)
+	{
+		$template->assign_block_vars('trace', array(
+			'WHO'			=> $userdata['username'],
+			'INFORMATION'	=> $_CLASS['core_user']->lang['TRACE_USER_FOUNDER'],
+
+			'S_SETTING_NO'		=> ($auth_setting == ACL_NO) ? true : false,
+			'S_SETTING_YES'		=> ($auth_setting == ACL_YES) ? true : false,
+			'S_SETTING_NEVER'	=> ($auth_setting == ACL_NEVER) ? true : false,
+			'S_TOTAL_NO'		=> false,
+			'S_TOTAL_YES'		=> true,
+			'S_TOTAL_NEVER'		=> false)
+		);
+	}
+}
+
+/**
+* Get already assigned users/groups
+*/
+function retrieve_defined_user_groups($permission_scope, $forum_id, $permission_type)
+{
+	global $_CLASS;
+
+	$sql_forum_id = ($permission_scope === 'global') ? 'AND a.forum_id = 0' : ((sizeof($forum_id)) ? 'AND a.forum_id IN (' . implode(', ', $forum_id) . ')' : 'AND a.forum_id <> 0');
+	$sql_permission_option = "AND o.auth_option LIKE '" . $_CLASS['core_db']->escape($permission_type) . "%'";
+
+	$sql = 'SELECT DISTINCT u.username, u.user_reg_date, u.user_id
+		FROM '. CORE_USERS_TABLE.' u, '. FORUMS_ACL_OPTIONS_TABLE .' o, '. FORUMS_ACL_TABLE .' a
+		LEFT JOIN '. FORUMS_ACL_ROLES_DATA_TABLE." r ON (a.auth_role_id = r.role_id)
+		WHERE (a.auth_option_id = o.auth_option_id OR r.auth_option_id = o.auth_option_id)
+		$sql_permission_option
+		$sql_forum_id
+		AND u.user_id = a.user_id
+		ORDER BY u.username, u.user_reg_date ASC";
+	$result = $_CLASS['core_db']->query($sql);
+
+	$s_defined_user_options = '';
+	$defined_user_ids = array();
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$s_defined_user_options .= '<option value="' . $row['user_id'] . '">' . $row['username'] . '</option>';
+		$defined_user_ids[] = $row['user_id'];
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	$sql = 'SELECT DISTINCT g.group_type, g.group_name, g.group_id
+			FROM '.CORE_GROUPS_TABLE.' g, '. FORUMS_ACL_OPTIONS_TABLE .' o,
+			'. FORUMS_ACL_TABLE .' a
+			LEFT JOIN '. FORUMS_ACL_ROLES_DATA_TABLE ." r ON (a.auth_role_id = r.role_id)
+			WHERE (a.auth_option_id = o.auth_option_id OR r.auth_option_id = o.auth_option_id)
+			$sql_permission_option
+			$sql_forum_id
 			AND g.group_id = a.group_id
-		ORDER BY g.group_type DESC, g.group_name ASC";
-	$result = $_CLASS['core_db']->query($sql);
+			ORDER BY g.group_type DESC, g.group_name ASC";
+	$result = $_CLASS['core_db']->query($sql);
+
+	$s_defined_group_options = '';
+	$defined_group_ids = array();
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$s_defined_group_options .= '<option' . (($row['group_type'] == GROUP_SPECIAL) ? ' class="sep"' : '') . ' value="' . $row['group_id'] . '">' . (($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name']) . '</option>';
+		$defined_group_ids[] = $row['group_id'];
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	return array(
+		'group_ids'			=> $defined_group_ids,
+		'group_ids_options'	=> $s_defined_group_options,
+		'user_ids'			=> $defined_user_ids,
+		'user_ids_options'	=> $s_defined_user_options
+	);
+}
 
-	$groups = '';
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		echo '<option' . (($row['group_type'] == GROUP_SYSTEM) ? ' class="blue"' : '') . ' value="' . $row['group_id'] . '">' . (isset($_CLASS['core_user']->lang['G_' . $row['group_name']]) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name']) . '</option>';
-	}
-	$_CLASS['core_db']->free_result($result);
-
-?></select></td>
-		</tr>
-		<tr>
-			<td class="cat" align="center"><input class="btnlite" type="submit" name="submit_delete" value="<?php echo $_CLASS['core_user']->lang['DELETE']; ?>" /> &nbsp; <input class="btnlite" type="submit" name="submit_edit_options" value="<?php echo $_CLASS['core_user']->lang['SET_OPTIONS']; ?>" /><input type="hidden" name="ug_type" value="group" /><?php echo $s_forum_id; ?></td>
-		</tr>
-	</table></form></td>
-
-	</tr>
-	<tr>
-
-		<td><form method="post" action="<?php echo generate_link('forums&amp;file=admin_permissions&amp;mode='.$mode, array('admin' => true)); ?>"><table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th><?php echo $_CLASS['core_user']->lang['ADD_USERS']; ?></th>
-			</tr>
-			<tr>
-				<td class="row1" align="center"><textarea style="height:60px" cols="40" rows="4" name="ug_data[]"></textarea></td>
-			</tr>
-			<tr>
-				<td class="cat" align="center"> <input type="submit" name="submit_add_options" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp; <input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" />&nbsp; <input type="submit" value="<?php echo $_CLASS['core_user']->lang['FIND_USERNAME']; ?>" class="btnlite" onclick="window.open('<?php echo generate_link('Members_List&mode=searchuser&form=2&amp;field=entries'); ?>', '_phpbbsearch', 'HEIGHT=500,resizable=yes,scrollbars=yes,WIDTH=740');return false;" /><input type="hidden" name="ug_type" value="user" /><?php echo $s_forum_id; ?></td>
-			</tr>
-		</table></form></td>
-
-		<td><form method="post" action="<?php echo generate_link('forums&amp;file=admin_permissions&amp;mode='.$mode, array('admin' => true)); ?>"><table width="100%" class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th><?php echo $_CLASS['core_user']->lang['ADD_GROUPS']; ?></th>
-			</tr>
-			<tr>
-				<td class="row1" style="height: 100%" align="center"><select style="width:280px" name="ug_data[]" multiple="multiple"  size="5"><?php 
-			
-	$sql = "SELECT group_id, group_name, group_type 
-		FROM " . CORE_GROUPS_TABLE . "
-		ORDER BY group_type DESC, group_name";
-	$result = $_CLASS['core_db']->query($sql);
-
-	$group_list = '';
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		echo '<option' . (($row['group_type'] == GROUP_SYSTEM) ? ' style="color: #006699;"' : '') . ' value="' . $row['group_id'] . '">' . (isset($_CLASS['core_user']->lang['G_' . $row['group_name']]) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name']) . '</option>';
-	}
-	$_CLASS['core_db']->free_result($result);
-		
-?></select></td>
-			</tr>
-			<tr>
-				<td class="cat" align="center"> <input type="submit" name="submit_add_options" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp; <input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /><input type="hidden" name="ug_type" value="group" /><?php echo $s_forum_id; ?></td>
-			</tr>
-		</table></form></td>
-	</tr>
-</table>
-
-<?php
-
-}
-// End user and group acl selections
-
-
-
-
-
-
-// Third possible form, this is the major section of this script. It
-// handles the entry of permission options for all situations
-if (in_array($submit, array('add_options', 'edit_options', 'presetsave', 'presetdel', 'update')) || !empty($submode))
-{
-
-	// Did the user specify any users or groups?
-	if (empty($ug_data))
-	{
-		$l_message = ($ug_type == 'user') ? 'NO_USER' : 'NO_GROUP';
-		trigger_error($_CLASS['core_user']->lang[$l_message]);
-	}
-
-
-	$forum_list = '';
-	// Grab the forum details if non-zero forum_id
-	if (!in_array(0, $forum_id[$which_mode]))
-	{
-		$sql = 'SELECT forum_id, forum_name, parent_id  
-			FROM ' . FORUMS_FORUMS_TABLE . "
-			WHERE forum_id IN ($sql_forum_id)";
-		$result = $_CLASS['core_db']->query($sql);
-
-		if (!($row = $_CLASS['core_db']->fetch_row_assoc($result)))
-		{
-			trigger_error($_CLASS['core_user']->lang['NO_FORUM']);
-		}
-
-		// If we have more than one forum we want a list of all their names
-		// so loop through all results. We don't need all the data though 
-		// since cascading/inheritance is only applicable if a single forum
-		// was selected
-		$forum_data = $row;
-
-		do
-		{
-			$forum_list .= (($forum_list != '') ? ', ' : '') . '<b>' . $row['forum_name'] . '</b>';
-		}
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-		$_CLASS['core_db']->free_result($result);
-	}
-
-
-	// Grab relevant user or group information
-	$ug_ids = $l_ug_list = $ug_hidden = $l_no_error = '';
-// need some work ( array_mapping()) blaa blaa
-	switch ($ug_type)
-	{
-		case 'user':
-			$l_no_error = $_CLASS['core_user']->lang['NO_USER'];
-			$sql = 'SELECT user_id AS id, username AS name 
-				FROM ' . CORE_USERS_TABLE . ' 
-				WHERE ';
-			$sql .= ($submit == 'add_options') ? " username IN ('" . implode("', '", $_CLASS['core_db']->escape_array(array_unique(explode("\n", modify_lines($ug_data[0], "\n"))))) . "')" : ' user_id ' . ((is_array($ug_data)) ? 'IN (' . implode(', ', array_map('intval', $ug_data)) . ')' : '= ' . (int) $ug_data);
-		break;
-
-		case 'group':
-			$l_no_error = $_CLASS['core_user']->lang['NO_GROUP'];
-			$sql = 'SELECT group_id AS id, group_name AS name, group_type  
-				FROM ' . CORE_GROUPS_TABLE . '
-				WHERE group_id';
-			$sql .= (is_array($ug_data)) ? ' IN (' . implode(', ', array_map('intval', $ug_data)) . ')' : ' = ' . (int) $ug_data;
-		break;
-	}
-	$result = $_CLASS['core_db']->query($sql);
-
-	if (!$row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		trigger_error($l_no_error);
-	}
-	unset($l_no_error);
-
-	// Store the user_ids and names for later use
-	do 
-	{
-		$l_ug_list .= (($l_ug_list != '') ? ', ' : '') . ((isset($row['group_type']) && $row['group_type'] == GROUP_SPECIAL) ? '<b class="blue">' . $_CLASS['core_user']->lang['G_' . $row['name']] : '<b>' . $row['name']) . '</b>';
-		$ug_ids .= (($ug_ids != '') ? ', ' : '') . $row['id'];
-		$ug_hidden .= '<input type="hidden" name="ug_data[]" value="' . $row['id'] . '" />';
-	}
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-	$_CLASS['core_db']->free_result($result);
-
-
-	// Grab the list of options ... if we're in deps mode we want all options, 
-	// else we skip the master options
-	$sql_limit_option = ($mode == 'deps') ? '' : "AND auth_option <> '" . $sql_option_mode . "_'";
-	$sql = "SELECT auth_option_id, auth_option
-		FROM " . FORUMS_ACL_OPTIONS_TABLE . "
-		WHERE auth_option LIKE '" . $sql_option_mode . "_%' 
-			$sql_limit_option";
-	$result = $_CLASS['core_db']->query($sql);
-
-	$auth_options = array();
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		$auth_presets_compare[] = $row['auth_option'];
-		$auth_options[] = $row;
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	unset($sql_limit_option);
-
-
-	// Now we'll build a list of preset options ...
-	$preset_options = $preset_js = $preset_update_options = '';
-
-	// Do we have a parent forum? If so offer option to inherit from that
-	if ($forum_data['parent_id'] != 0)
-	{
-		$holding['yes'] = $holding['no'] = $holding['unset'] = '';
-
-		 
-		$sql = "SELECT o.auth_option, a.auth_setting
-					FROM " . FORUMS_ACL_TABLE . " a, " . FORUMS_ACL_OPTIONS_TABLE . " o 
-					WHERE o.auth_option LIKE '" . $sql_option_mode . "_%' 
-						AND a.auth_option_id = o.auth_option_id AND a.forum_id = " . $forum_data['parent_id'] . '
-						AND a.'.(($ug_type == 'group') ? 'group_id' : 'user_id')." IN ($ug_ids)";
-
-		$result = $_CLASS['core_db']->query($sql);
-
-		if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			do
-			{
-				switch ($row['auth_setting'])
-				{
-					case ACL_YES:
-						$holding['yes'][] = $row['auth_option'];
-					break;
-
-					case ACL_NO:
-						$holding['no'][] = $row['auth_option'];
-					break;
-				}
-			}
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-
-			$holding['unset'] = array_diff($auth_presets_compare, $holding['yes'], $holding['no']);
-
-			$preset_options .= '<option value="preset_0">' . $_CLASS['core_user']->lang['INHERIT_PARENT'] . '</option>';
-			$preset_js .= "\tpresets['preset_0'] = new Array();" . "\n";
-			$preset_js .= "\tpresets['preset_0'] = new preset_obj('" . implode(', ', $holding['yes']) . "', '" . implode(', ', $holding['no']) . "', '" . implode(', ', $holding['unset']) . "');\n";
-
-		}
-		$_CLASS['core_db']->free_result($result);
-	}
-
-	$holding['yes'] = $holding['no'] = $holding['unset'] = '';
-
-	// Look for custom presets
-	$sql = "SELECT preset_id, preset_name, preset_data  
-		FROM " . FORUMS_ACL_PRESETS_TABLE . " 
-		WHERE preset_type = '" . (($mode == 'deps') ? 'f' : $sql_option_mode) . "' 
-		ORDER BY preset_id ASC";
-	$result = $_CLASS['core_db']->query($sql);
-
-	if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		do
-		{
-			$preset_update_options .= '<option value="' . $row['preset_id'] . '">' . $row['preset_name'] . '</option>';
-			$preset_options .= '<option value="preset_' . $row['preset_id'] . '">' . $row['preset_name'] . '</option>';
-
-			$holding = unserialize($row['preset_data']);
-			$holding['unset'] = array_diff($auth_presets_compare, $holding['yes'], $holding['no']);
-
-			$preset_js .= "\tpresets['preset_" . $row['preset_id'] . "'] = new Array();" . "\n";
-			$preset_js .= "\tpresets['preset_" . $row['preset_id'] . "'] = new preset_obj('" . implode(', ', $holding['yes']) . "', '" . implode(', ', $holding['no']) . "', '" . implode(', ', $holding['unset']) . "');\n";
-		}
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	unset($holding, $auth_presets_compare);
-
-
-	// If we aren't looking @ deps then we try and grab existing sessions for
-	// the given forum and user/group
-	if (!is_array($auth_settings) || empty($auth_settings[$which_mode]))
-	{
-		if ($which_mode == $mode)
-		{
-			$sql = 'SELECT o.auth_option, MIN(a.auth_setting) AS min_auth_setting 
-					FROM '. FORUMS_ACL_TABLE .' a, ' . FORUMS_ACL_OPTIONS_TABLE . " o 
-					WHERE o.auth_option LIKE '" . $sql_option_mode . "_%' 
-						AND a.auth_option_id = o.auth_option_id 
-						AND a.forum_id IN ($sql_forum_id) 
-						AND a.".(($ug_type == 'group') ? 'group_id' : 'user_id')." IN ($ug_ids)
-					GROUP BY o.auth_option";
-			$result = $_CLASS['core_db']->query($sql);
-
-			$auth_settings[$which_mode] = array();
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-			{
-				$auth_settings[$which_mode][$row['auth_option']] = $row['min_auth_setting'];
-			}
-			$_CLASS['core_db']->free_result($result);
-		}
-		else
-		{
-			// We're looking at a view ... so we'll set all options to unset
-			// We could be a little more clever here but the "safe side" looks
-			// better right now
-			$auth_settings[$which_mode] = array();
-			foreach ($auth_options as $option)
-			{
-				$auth_settings[$which_mode][$option['auth_option']] = '*';
-			}
-			unset($option);
-		}
-	}
-
-	$view_options = '';
-	// Should we display a dropdown for views?
-	if (in_array($mode, array('admin', 'supermod', 'mod')))
-	{
-		$view_options .= '<option value="">' . $_CLASS['core_user']->lang['SELECT_VIEW'] . '</option>';
-		$view_ary = array(
-			'admin'		=> array('admin' => 'a_', 'forum' => 'a_auth', 'supermod' => 'a_authmods', 'mod' => 'a_authmods'),
-			'supermod'	=> array('supermod' => 'a_authmods', 'mod' => 'a_authmods', 'forum' => 'a_auth'), 
-			'mod'		=> array('mod' => 'a_authmods', 'forum' => 'a_auth')
-		);
-
-		foreach ($view_ary[$mode] as $which_submode => $which_acl)
-		{
-			if ($_CLASS['auth']->acl_get($which_acl))
-			{
-				$view_options .= '<option value="' . $which_submode . '"' . (($which_submode == $which_mode) ? ' selected="selected"' : '') . '>' . $_CLASS['core_user']->lang['ACL_VIEW_' . strtoupper($which_submode)] . '</option>';
-			}
-
-		}
-		unset($view_ary);
-	}
-
-	$settings_hidden = '';
-	// Output original settings ... needed when we jump views
-	foreach ($auth_settings as $auth_submode => $auth_submode_settings)
-	{
-		if ($auth_submode != $which_mode)
-		{
-			foreach ($auth_submode_settings as $submode_option => $submode_setting)
-			{
-				$settings_hidden .= ($submode_setting != '*') ? '<input type="hidden" name="settings[' . $auth_submode . '][' . $submode_option . ']" value="' . $submode_setting . '" />' : '';
-			}
-		}
-	}
-	unset($auth_submode, $auth_submode_settings, $auth_submode_option, $auth_submode_setting);
-
-?>
-
-<script language="Javascript" type="text/javascript">
-<!--
-
-	var presets = new Array();
-<?php
-
-	echo $preset_js;
-
-?>
-
-	function preset_obj(yes, no, unset)
-	{
-		this.yes = yes;
-		this.no = no;
-		this.unset = unset;
-	}
-
-	function use_preset(option)
-	{
-		if (option)
-		{
-			document.acl.set.selectedIndex = 0;
-			for (i = 0; i < document.acl.length; i++)
-			{
-				var elem = document.acl.elements[i];
-				if (elem.name.indexOf('settings') == 0)
-				{
-					switch (option)
-					{
-						case 'all_yes':
-							if (elem.value == <?php echo ACL_YES; ?>)
-								elem.checked = true;
-							break;
-
-						case 'all_no':
-							if (elem.value == <?php echo ACL_NO; ?>)
-								elem.checked = true;
-							break;
-
-						case 'all_unset':
-							if (elem.value == <?php echo ACL_UNSET; ?>)
-								elem.checked = true;
-							break;
-
-						case 'all_ignore':
-							if (elem.value == '*')
-								elem.checked = true;
-							break;
-
-						default:
-							option_start = elem.name.search(/\[(\w+?)\]$/);
-							option_name = elem.name.substr(option_start + 1, elem.name.length - option_start - 2);
-
-							if (presets[option].yes.indexOf(option_name + ',') != -1 && elem.value == <?php echo ACL_YES; ?>)
-								elem.checked = true;
-							else if (presets[option].no.indexOf(option_name + ',') != -1 && elem.value == <?php echo ACL_NO; ?>)
-								elem.checked = true;
-							else if (presets[option].unset.indexOf(option_name + ',') != -1 && elem.value == <?php echo ACL_UNSET; ?>)
-								elem.checked = true;
-							break;
-					}
-				}
-			}
-		}
-	}
-
-	function marklist(match, status)
-	{
-		for (i = 0; i < document.acl.length; i++)
-		{
-			if (document.acl.elements[i].name.indexOf(match) == 0)
-				document.acl.elements[i].checked = status;
-		}
-	}
-
-	function open_win(url, width, height)
-	{
-		aclwin = window.open(url, '_phpbbacl', 'HEIGHT=' + height + ',resizable=yes, scrollbars=yes,WIDTH=' + width);
-		if (window.focus)
-			aclwin.focus();
-	}
-//-->
-</script>
-
-<p><?php echo $_CLASS['core_user']->lang['ACL_EXPLAIN']; ?></p>
-
-<h1><?php echo $l_title; ?></h1>
-
-<?php
-
-	// Do we have a list of forums? If so, output them ... but only
-	// if we're looking at the primary view or mode ... submodes
-	// output their own list of forums as and where applicable so this
-	// is unnecessary
-	if ($forum_list != '' && $which_mode == $mode)
-	{
-		$l_selected_forums = (count($forum_id[$which_mode]) === 1) ? 'SELECTED_FORUM' : 'SELECTED_FORUMS';
-
-		echo '<p>' . $_CLASS['core_user']->lang[$l_selected_forums] . ': ' . $forum_list . '</p>';
-
-		unset($forum_list);
-		unset($l_selected_forums);
-	}
-
-	// Now output the list of users or groups ... these will always exist
-	$l_selected_users = ($ug_type == 'user') ? ((count($ug_data) === 1) ? 'SELECTED_USER' : 'SELECTED_USERS') : ((count($ug_data) === 1) ? 'SELECTED_GROUP' : 'SELECTED_GROUPS'); 
-
-	echo '<p>' . $_CLASS['core_user']->lang[$l_selected_users] . ': ' . $l_ug_list . '</p>';
-
-	unset($l_selected_users);
-	unset($ug_data);
-
-?>
-
-<p><?php echo $l_title_explain; ?></p>
-
-<?php
-
-	if ($settings_hidden != '')
-	{
-
-?>
-
-<h2 style="color:red"><?php echo $_CLASS['core_user']->lang['WARNING']; ?></h2>
-
-<p><?php echo $_CLASS['core_user']->lang['WARNING_EXPLAIN']; ?></p>
-
-<?php
-
-	}
-
-?>
-
-<form method="post" name="acl" action="<?php echo generate_link('forums&amp;file=admin_permissions&amp;mode='.$mode.'&amp;submode='.$submode, array('admin' => true)); ?>"><table cellspacing="2" cellpadding="0" border="0" align="center">
-<?php
-
-	// This is the main listing of options
-
-	// We output this for both deps and when update is requested where
-	// deps exist
-	if (($mode == 'admin' || $mode == 'supermod') && in_array($submode, array('forum', 'mod')))
-	{
-
-?>
-	<tr>
-		<td colspan="2" align="right"><table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0">
-			<tr>
-				<th colspan="2"><?php echo $_CLASS['core_user']->lang['SELECT_FORUM']; ?></th>
-			</tr>
-			<tr>
-				<td class="row1" colspan="2"><?php echo $_CLASS['core_user']->lang['WILL_SET_OPTIONS']; ?>:</th>
-			</tr>
-			<tr>
-				<td class="row2"><select style="width:100%" name="f[<?php echo $which_mode; ?>][]" multiple="7"><?php 
-		
-		echo make_forum_select($forum_id[$which_mode], false, true); 
-		
-?></select></td>
-			</tr>
-		</table><br /></td>
-	</tr>
-<?php
-
-	}
-	// End deps output
-
-?>
-	<tr>
-		<td align="left"><?php
-	
-	if ($view_options != '')
-	{
-	
-?><select name="submode" onchange="if (this.options[this.selectedIndex].value != '') this.form.submit();"><?php echo $view_options; ?></select><?php
-	
-	}
-	
-?></td>
-		<td align="right"><?php echo $_CLASS['core_user']->lang['PRESETS']; ?>: <select name="set" onchange="use_preset(this.options[this.selectedIndex].value);"><option class="sep"><?php echo $_CLASS['core_user']->lang['SELECT'] . ' -&gt;'; ?></option><option value="all_yes"><?php echo $_CLASS['core_user']->lang['ALL_YES']; ?></option><option value="all_no"><?php echo $_CLASS['core_user']->lang['ALL_NO']; ?></option><option value="all_unset"><?php echo $_CLASS['core_user']->lang['ALL_UNSET']; ?></option><?php 
-
-	$colspan = 4;
-	if ($which_mode != $mode)
-	{
-		$colspan = 5;
-		echo '<option value="all_ignore">' . $_CLASS['core_user']->lang['ALL_IGNORE'] . '</option>';
-	}
-
-	// Output user preset options ... if any
-	echo ($preset_options) ? '<option class="sep">' . $_CLASS['core_user']->lang['USER_PRESETS'] . ' -&gt;' . '</option>' . $preset_options : ''; 
-
-?></select></td>
-	</tr>
-	<tr>
-		<td colspan="2"><table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th>&nbsp;<?php echo $_CLASS['core_user']->lang['OPTION']; ?>&nbsp;</th>
-				<th width="50">&nbsp;<?php echo $_CLASS['core_user']->lang['YES']; ?>&nbsp;</th>
-				<th width="50">&nbsp;<?php echo $_CLASS['core_user']->lang['UNSET']; ?>&nbsp;</th>
-				<th width="50">&nbsp;<?php echo $_CLASS['core_user']->lang['NO']; ?>&nbsp;</th>
-<?php
-
-	if ($which_mode != $mode)
-	{
-
-?>
-				<th width="50">&nbsp;<?php echo $_CLASS['core_user']->lang['IGNORE']; ?>&nbsp;</th>
-<?php
-
-	}
-
-?>
-			</tr>
-<?php
-
-	$row_class = 'row2';
-
-	$count = count($auth_options);
-	for ($i = 0; $i < $count; $i++)
-	{
-		$row_class = ($row_class == 'row1') ? 'row2' : 'row1';
-
-		// Try and output correct language strings, else output prettyfied auth_option
-		$l_auth_option = (!empty($_CLASS['core_user']->lang['acl_' . $auth_options[$i]['auth_option']])) ? $_CLASS['core_user']->lang['acl_' . $auth_options[$i]['auth_option']] : ucfirst(preg_replace('#.*?_#', '', $auth_options[$i]['auth_option']));
-		$s_auth_option = '[' . $which_mode . '][' . $auth_options[$i]['auth_option'] . ']';
-		
-		// Which option should we select?
-		$selected_yes = (isset($auth_settings[$which_mode][$auth_options[$i]['auth_option']]) && $auth_settings[$which_mode][$auth_options[$i]['auth_option']] == ACL_YES) ? ' checked="checked"' : '';
-		$selected_no = (isset($auth_settings[$which_mode][$auth_options[$i]['auth_option']]) && $auth_settings[$which_mode][$auth_options[$i]['auth_option']] == ACL_NO) ? ' checked="checked"' : '';
-		$selected_unset = (!isset($auth_settings[$which_mode][$auth_options[$i]['auth_option']]) || $auth_settings[$which_mode][$auth_options[$i]['auth_option']] == ACL_UNSET) ? ' checked="checked"' : '';
-
-?>
-			<tr>
-				<td class="<?php echo $row_class; ?>" nowrap="nowrap"><?php echo $l_auth_option; ?>&nbsp;</td>
-				<td class="<?php echo $row_class; ?>" align="center"><input type="radio" name="settings<?php echo $s_auth_option ;?>" value="<?php echo ACL_YES; ?>"<?php echo $selected_yes; ?> /></td>
-				<td class="<?php echo $row_class; ?>" align="center"><input type="radio" name="settings<?php echo $s_auth_option ;?>" value="<?php echo ACL_UNSET; ?>"<?php echo $selected_unset; ?> /></td>
-				<td class="<?php echo $row_class; ?>" align="center"><input type="radio" name="settings<?php echo $s_auth_option ;?>" value="<?php echo ACL_NO; ?>"<?php echo $selected_no; ?> /></td>
-<?php
-
-		if ($which_mode != $mode)
-		{
-			$selected_ignore = (isset($auth_settings[$which_mode][$auth_options[$i]['auth_option']]) && $auth_settings[$which_mode][$auth_options[$i]['auth_option']] == '*') ? ' checked="checked"' : '';
-
-?>
-				<td class="<?php echo $row_class; ?>" align="center"><input type="radio" name="settings<?php echo $s_auth_option ;?>" value="*"<?php echo $selected_ignore; ?> /></td>
-<?php
-
-		}
-
-?>
-			</tr>
-<?php
-
-	}
-
-
-	// If we're setting forum or moderator options and a single forum has
-	// been selected then look to see if any subforums exist. If they do
-	// give user the option of cascading permissions to them
-	if (($mode == 'forum' || $mode == 'mod') && empty($submode) && count($forum_id[$which_mode]) === 1)
-	{
-		$children = get_forum_branch($forum_id[$which_mode][0], 'children', 'descending', false);
-
-		if (!empty($children))
-		{
-
-?>
-			<tr>
-				<th colspan="<?php echo $colspan; ?>"><?php echo $_CLASS['core_user']->lang['ACL_SUBFORUMS']; ?></th>
-			</tr>
-			<tr>
-				<td class="row1" colspan="<?php echo $colspan; ?>"><table width="100%" cellspacing="1" cellpadding="0" border="0">
-					<tr>
-						<td class="gensmall" colspan="4" height="16" align="center"><?php echo $_CLASS['core_user']->lang['ACL_SUBFORUMS_EXPLAIN']; ?></td>
-					</tr>
-<?php
-
-			foreach ($children as $row)
-			{
-
-?>
-					<tr>
-						<td><input type="checkbox" name="inherit[]" value="<?php echo $row['forum_id']; ?>" /> <?php echo $row['forum_name']; ?></td>
-					</tr>
-<?php
-
-			}
-
-?>
-					<tr>
-						<td height="16" align="center"><a class="gensmall" href="javascript:marklist('inherit', true);"><?php echo $_CLASS['core_user']->lang['MARK_ALL']; ?></a> :: <a href="javascript:marklist('inherit', false);" class="gensmall"><?php echo $_CLASS['core_user']->lang['UNMARK_ALL']; ?></a></td>
-					</tr>
-				</table></td>
-			</tr>
-<?php
-
-		}
-	}
-
-	// Display event/cron radio buttons
-	if ($_CLASS['auth']->acl_gets('a_events', 'a_cron') && $mode != 'deps' && $submit != 'update')
-	{
-		$row_class = ($row_class == 'row1') ? 'row2' : 'row1';
-
-?>
-			<!-- tr>
-				<th colspan="<?php echo $colspan; ?>"><?php echo $_CLASS['core_user']->lang['RUN_HOW']; ?></th>
-			</tr>
-			<tr>
-				<td class="<?php echo $row_class; ?>" colspan="4" align="center"><input type="radio" name="runas" value="now" checked="checked" /> <?php echo $_CLASS['core_user']->lang['RUN_AS_NOW']; ?><?php 
-	
-			if ($_CLASS['auth']->acl_get('a_events'))
-			{ 
-
-?> &nbsp;<input type="radio" name="runas" value="evt" /> <?php 
-	
-				echo $_CLASS['core_user']->lang['RUN_AS_EVT'];  
-			}
-			
-			if ($_CLASS['auth']->acl_get('a_cron'))
-			{
-
-?> &nbsp;<input type="radio" name="runas" value="crn" /> <?php 
-	
-				echo $_CLASS['core_user']->lang['RUN_AS_CRN']; 
-				
-			}
-
-?></td>
-			</tr -->
-<?php
-
-	}
-
-?>
-			<tr>
-				<td class="cat" colspan="<?php echo $colspan; ?>" align="center"><input class="btnmain" type="submit" name="submit_update" value="<?php echo $_CLASS['core_user']->lang['UPDATE']; ?>" />&nbsp;&nbsp;<input class="btnlite" type="submit" name="submit_cancel" value="<?php echo $_CLASS['core_user']->lang['CANCEL']; ?>" /><input type="hidden" name="ug_type" value="<?php echo $ug_type; ?>" /><?php echo $ug_hidden; ?><?php 
-
-	// Output forum id data
-	echo $s_forum_id;
-
-	// Output settings generated from other views
-	echo $settings_hidden;
-	unset($settings_hidden);
-	
-?></td>
-			</tr>
-		</table>
-
-		<br clear="all" />
-
-		<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th colspan="4"><?php echo $_CLASS['core_user']->lang['PRESETS']; ?></th>
-			</tr>
-			<tr>
-				<td class="row1" colspan="4"><table width="100%" cellspacing="1" cellpadding="0" border="0">
-					<tr>
-						<td colspan="2" height="16"><span class="gensmall"><?php echo $_CLASS['core_user']->lang['PRESETS_EXPLAIN']; ?></span></td>
-					</tr>
-					<tr>
-						<td nowrap="nowrap"><?php echo $_CLASS['core_user']->lang['SELECT_PRESET']; ?>: </td>
-						<td><select name="presetoption"><option class="sep" value="-1"><?php echo $_CLASS['core_user']->lang['SELECT'] . ' -&gt;'; ?></option><?php 
-
-	echo $preset_update_options;
-			
-		?></select></td>
-					</tr>
-					<tr>
-						<td nowrap="nowrap"><?php echo $_CLASS['core_user']->lang['PRESET_NAME']; ?>: </td>
-						<td><input type="text" name="presetname" maxlength="25" /> </td>
-					</tr>
-				</table></td>
-			</tr>
-			<tr>
-				<td class="cat" colspan="4" align="center"><input class="btnlite" type="submit" name="submit_presetsave" value="<?php echo $_CLASS['core_user']->lang['SAVE']; ?>" /> &nbsp;<input class="btnlite" type="submit" name="submit_presetdel" value="<?php echo $_CLASS['core_user']->lang['DELETE']; ?>" /></td>
-			</tr>
-		</table></td>
-	</tr>
-</table></form>
-
-<?php
-
-}
-
-// Output page footer
-adm_page_footer();
-
-// ---------
-// FUNCTIONS
-//
-function update_foes()
-{
-	global $_CLASS;
-
-	$perms = array();
-	foreach ($_CLASS['auth']->acl_get_list(false, array('a_', 'm_'), false) as $forum_id => $forum_ary)
-	{
-		foreach ($forum_ary as $auth_option => $user_ary)
-		{
-			$perms += $user_ary;
-		}
-	}
-
-	if (!empty($perms))
-	{
-		$sql = 'DELETE FROM ' . ZEBRA_TABLE . ' 
-			WHERE zebra_id IN (' . implode(', ', $perms) . ')';
-		$_CLASS['core_db']->query($sql);
-	}
-	unset($perms);
-}
-//
-// FUNCTIONS
-// ---------
-
 ?>
\ No newline at end of file

Added: cms/trunk/includes/forums/admin/auth.php
===================================================================
--- cms/trunk/includes/forums/admin/auth.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/admin/auth.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,1224 @@
+<?php
+/** 
+*
+* @package phpBB3
+* @version $Id: auth.php,v 1.26 2006/08/12 19:06:09 grahamje Exp $ 
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+/**
+*/
+
+/**
+* ACP Permission/Auth class
+* @package phpBB3
+*/
+class forums_auth_admin extends forums_auth
+{
+	var $option_ids = array();
+
+	/**
+	* Init auth settings
+	*/
+	function forums_auth_admin()
+	{
+		global $_CLASS;
+
+		$this->acl_options = $_CLASS['core_cache']->get('acl_options');
+
+		if (is_null($this->acl_options))
+		{
+			$sql = 'SELECT auth_option, auth_option_id, is_global, is_local
+				FROM ' . FORUMS_ACL_OPTIONS_TABLE . '
+				ORDER BY auth_option_id';
+			$result = $_CLASS['core_db']->query($sql);
+
+			$global = $local = 0;
+			$this->acl_options = array();
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				if ($row['is_global'])
+				{
+					$this->acl_options['global'][$row['auth_option']] = $global++;
+				}
+
+				if ($row['is_local'])
+				{
+					$this->acl_options['local'][$row['auth_option']] = $local++;
+				}
+				
+				$this->option_ids[$row['auth_option']] = $row['auth_option_id'];
+			}
+			$_CLASS['core_db']->free_result($result);
+
+			$_CLASS['core_cache']->put('acl_options', $this->acl_options);
+			$_CLASS['core_cache']->put('acl_option_ids', $this->option_ids);
+		}
+		else
+		{
+			$this->option_ids = $_CLASS['core_cache']->get('acl_option_ids');
+
+			if (is_null($this->option_ids))
+			{
+				$sql = 'SELECT auth_option_id, auth_option
+					FROM ' . FORUMS_ACL_OPTIONS_TABLE;
+				$result = $_CLASS['core_db']->query($sql);
+	
+				$this->option_ids = array();
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					$this->option_ids[$row['auth_option']] = $row['auth_option_id'];
+				}
+				$_CLASS['core_db']->free_result($result);
+
+				$_CLASS['core_cache']->put('acl_option_ids', $this->option_ids);
+			}
+		}
+	}
+	
+	/**
+	* Get permission mask
+	* This function only supports getting permissions of one type (for example a_)
+	*
+	* @param set|view $mode defines the permissions we get, view gets effective permissions (checking user AND group permissions), set only gets the user or group permission set alone
+	* @param mixed $user_id user ids to search for (a user_id or a group_id has to be specified at least)
+	* @param mixed $group_id group ids to search for, return group related settings (a user_id or a group_id has to be specified at least)
+	* @param mixed $forum_id forum_ids to search for. Defining a forum id also means getting local settings
+	* @param string $auth_option the auth_option defines the permission setting to look for (a_ for example)
+	* @param local|global $scope the scope defines the permission scope. If local, a forum_id is additionally required
+	* @param ACL_NEVER|ACL_NO|ACL_YES $acl_fill defines the mode those permissions not set are getting filled with
+	*/
+	function get_mask($mode, $user_id = false, $group_id = false, $forum_id = false, $auth_option = false, $scope = false, $acl_fill = ACL_NEVER)
+	{
+		global $_CLASS;
+
+		$hold_ary = array();
+		$view_user_mask = ($mode == 'view' && $group_id === false) ? true : false;
+
+		if ($auth_option === false || $scope === false)
+		{
+			return array();
+		}
+
+		$acl_user_function = ($mode == 'set') ? 'acl_user_raw_data' : 'acl_raw_data';
+
+		if (!$view_user_mask)
+		{
+			if ($forum_id !== false)
+			{
+				$hold_ary = ($group_id !== false) ? $this->acl_group_raw_data($group_id, $auth_option . '%', $forum_id) : $this->$acl_user_function($user_id, $auth_option . '%', $forum_id);
+			}
+			else
+			{
+				$hold_ary = ($group_id !== false) ? $this->acl_group_raw_data($group_id, $auth_option . '%', ($scope == 'global') ? 0 : false) : $this->$acl_user_function($user_id, $auth_option . '%', ($scope == 'global') ? 0 : false);
+			}
+		}
+
+		// Make sure hold_ary is filled with every setting (prevents missing forums/users/groups)
+		$ug_id = ($group_id !== false) ? ((!is_array($group_id)) ? array($group_id) : $group_id) : ((!is_array($user_id)) ? array($user_id) : $user_id);
+		$forum_ids = ($forum_id !== false) ? ((!is_array($forum_id)) ? array($forum_id) : $forum_id) : (($scope == 'global') ? array(0) : array());
+
+		// Only those options we need
+		$compare_options = array_diff(preg_replace('/^((?!' . $auth_option . ').+)|(' . $auth_option . ')$/', '', array_keys($this->acl_options[$scope])), array(''));
+
+		// If forum_ids is false and the scope is local we actually want to have all forums within the array
+		if ($scope == 'local' && !sizeof($forum_ids))
+		{
+			$sql = 'SELECT forum_id 
+				FROM ' . FORUMS_FORUMS_TABLE;
+			$result = $_CLASS['core_db']->query($sql, 120);
+
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				$forum_ids[] = $row['forum_id'];
+			}
+			$_CLASS['core_db']->free_result($result);
+		}
+
+		if ($view_user_mask)
+		{
+			$auth2 = null;
+
+			$sql = 'SELECT user_id, user_permissions, user_type
+				FROM ' . CORE_USERS_TABLE . '
+				WHERE user_id IN ('.implode(', ',$ug_id).')';
+			$result = $_CLASS['core_db']->query($sql);
+
+			while ($userdata = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				if ($_CLASS['core_user']->data['user_id'] != $userdata['user_id'])
+				{
+					$auth2 = new auth();
+					$auth2->acl($userdata);
+				}
+				else
+				{
+					global $auth;
+					$auth2 = &$auth;
+				}
+
+				
+				$hold_ary[$userdata['user_id']] = array();
+				foreach ($forum_ids as $f_id)
+				{
+					$hold_ary[$userdata['user_id']][$f_id] = array();
+					foreach ($compare_options as $option)
+					{
+						$hold_ary[$userdata['user_id']][$f_id][$option] = $auth2->acl_get($option, $f_id);
+					}
+				}
+			}
+			$_CLASS['core_db']->free_result($result);
+
+			unset($userdata);
+			unset($auth2);
+		}
+
+		foreach ($ug_id as $_id)
+		{
+			if (!isset($hold_ary[$_id]))
+			{
+				$hold_ary[$_id] = array();
+			}
+
+			foreach ($forum_ids as $f_id)
+			{
+				if (!isset($hold_ary[$_id][$f_id]))
+				{
+					$hold_ary[$_id][$f_id] = array();
+				}
+			}
+		}
+
+		// Now, we need to fill the gaps with $acl_fill. ;)
+
+		// Now switch back to keys
+		if (sizeof($compare_options))
+		{
+			$compare_options = array_combine($compare_options, array_fill(1, sizeof($compare_options), $acl_fill));
+		}
+
+		// Defining the user-function here to save some memory
+		$return_acl_fill = create_function('$value', 'return ' . $acl_fill . ';');
+
+		// Actually fill the gaps
+		if (sizeof($hold_ary))
+		{
+			foreach ($hold_ary as $ug_id => $row)
+			{
+				foreach ($row as $id => $options)
+				{
+					// Do not include the global auth_option
+					unset($options[$auth_option]);
+
+					// Not a "fine" solution, but at all it's a 1-dimensional 
+					// array_diff_key function filling the resulting array values with zeros
+					// The differences get merged into $hold_ary (all permissions having $acl_fill set)
+					$hold_ary[$ug_id][$id] = array_merge($options, 
+
+						array_map($return_acl_fill,
+							array_flip(
+								array_diff(
+									array_keys($compare_options), array_keys($options)
+								)
+							)
+						)
+					);
+				}
+			}
+		}
+		else
+		{
+			$hold_ary[($group_id !== false) ? $group_id : $user_id][(int) $forum_id] = $compare_options;
+		}
+
+		return $hold_ary;
+	}
+
+	/**
+	* Get permission mask for roles
+	* This function only supports getting masks for one role
+	*/
+	function get_role_mask($role_id)
+	{
+		global $_CLASS;
+
+		$hold_ary = array();
+
+		$sql = 'SELECT group_id, user_id, forum_id
+			FROM ' . FORUMS_ACL_TABLE . '
+			WHERE auth_role_id = ' . $role_id . '
+			ORDER BY forum_id';
+		$result = $_CLASS['core_db']->query($sql);
+
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			if ($row['user_id'])
+			{
+				$hold_ary[$row['forum_id']]['users'][] = $row['user_id'];
+			}
+
+			if ($row['group_id'])
+			{
+				$hold_ary[$row['forum_id']]['groups'][] = $row['group_id'];
+			}
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		return $hold_ary;
+	}
+
+	/**
+	* Display permission mask (assign to template)
+	*/
+	function display_mask($mode, $permission_type, &$hold_ary, $user_mode = 'user', $local = false, $group_display = true)
+	{
+		global $_CLASS;
+
+		// Define names for template loops, might be able to be set
+		$tpl_pmask = 'p_mask';
+		$tpl_fmask = 'f_mask';
+		$tpl_category = 'category';
+		$tpl_mask = 'mask';
+
+		$l_acl_type = (isset($_CLASS['core_user']->lang['ACL_TYPE_' . (($local) ? 'LOCAL' : 'GLOBAL') . '_' . strtoupper($permission_type)])) ? $_CLASS['core_user']->lang['ACL_TYPE_' . (($local) ? 'LOCAL' : 'GLOBAL') . '_' . strtoupper($permission_type)] : 'ACL_TYPE_' . (($local) ? 'LOCAL' : 'GLOBAL') . '_' . strtoupper($permission_type);
+
+		// Allow trace for viewing permissions and in user mode
+		$show_trace = ($mode == 'view' && $user_mode == 'user') ? true : false;
+
+		// Get names
+		if ($user_mode === 'user')
+		{
+			$sql = 'SELECT user_id as ug_id, username as ug_name
+				FROM ' . CORE_USERS_TABLE . '
+				WHERE user_id IN ('.implode(', ', array_keys($hold_ary)) . ')
+				ORDER BY username ASC';
+		}
+		else
+		{
+			$sql = 'SELECT group_id as ug_id, group_name as ug_name, group_type
+				FROM ' . CORE_GROUPS_TABLE . '
+				WHERE group_id IN ('.implode(', ', array_keys($hold_ary)) . ')
+				ORDER BY group_type DESC, group_name ASC';
+		}
+		$result = $_CLASS['core_db']->query($sql);
+
+		$ug_names_ary = array();
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$ug_names_ary[$row['ug_id']] = ($user_mode == 'user') ? $row['ug_name'] : (($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['ug_name']] : $row['ug_name']);
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		// Get used forums
+		$forum_ids = array();
+		foreach ($hold_ary as $ug_id => $row)
+		{
+			$forum_ids = array_merge($forum_ids, array_keys($row));
+		}
+		$forum_ids = array_unique($forum_ids);
+
+		$forum_names_ary = array();
+		if ($local)
+		{
+			$forum_names_ary = make_forum_select(false, false, true, false, false, false, true);
+		}
+		else
+		{
+			$forum_names_ary[0] = $l_acl_type;
+		}
+
+		// Get available roles
+		$sql = 'SELECT *
+			FROM ' . FORUMS_ACL_ROLES_TABLE . "
+			WHERE role_type = '" . $_CLASS['core_db']->escape($permission_type) . "'
+			ORDER BY role_order ASC";
+		$result = $_CLASS['core_db']->query($sql);
+
+		$roles = array();
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$roles[$row['role_id']] = $row;
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		$cur_roles = $this->acl_role_data($user_mode, $permission_type, array_keys($hold_ary));
+
+		// Build js roles array (role data assignments)
+		$s_role_js_array = '';
+		
+		if (sizeof($roles))
+		{
+			$s_role_js_array = array();
+
+			// Make sure every role (even if empty) has its array defined
+			foreach ($roles as $_role_id => $null)
+			{
+				$s_role_js_array[$_role_id] = "\n" . 'role_options[' . $_role_id . '] = new Array();' . "\n";
+			}
+
+			$sql = 'SELECT r.role_id, o.auth_option, r.auth_setting
+				FROM ' . FORUMS_ACL_ROLES_DATA_TABLE . ' r, ' . FORUMS_ACL_OPTIONS_TABLE . ' o
+				WHERE o.auth_option_id = r.auth_option_id
+					AND r.role_id IN ('.implode(', ', array_keys($roles)).')';
+			$result = $_CLASS['core_db']->query($sql);
+
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				$flag = substr($row['auth_option'], 0, strpos($row['auth_option'], '_') + 1);
+				if ($flag == $row['auth_option'])
+				{
+					continue;
+				}
+
+				$s_role_js_array[$row['role_id']] .= 'role_options[' . $row['role_id'] . '][\'' . $row['auth_option'] . '\'] = ' . $row['auth_setting'] . '; ';
+			}
+			$_CLASS['core_db']->free_result($result);
+
+			$s_role_js_array = implode('', $s_role_js_array);
+		}
+
+		$_CLASS['core_template']->assign('S_ROLE_JS_ARRAY', $s_role_js_array);
+
+		// Now obtain memberships
+		$user_groups_default = $user_groups_custom = array();
+		if ($user_mode == 'user' && $group_display)
+		{
+			$sql = 'SELECT group_id, group_name, group_type
+				FROM ' . CORE_GROUPS_TABLE . '
+				ORDER BY group_type DESC, group_name ASC';
+			$result = $_CLASS['core_db']->query($sql);
+
+			$groups = array();
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				$groups[$row['group_id']] = $row;
+			}
+			$_CLASS['core_db']->free_result($result);
+
+			$memberships = group_memberships(false, array_keys($hold_ary), false);
+
+			// User is not a member of any group? Bad admin, bad bad admin...
+			if ($memberships)
+			{
+				foreach ($memberships as $row)
+				{
+					if ($groups[$row['group_id']]['group_type'] == GROUP_SPECIAL)
+					{
+						$user_groups_default[$row['user_id']][] = $_CLASS['core_user']->lang['G_' . $groups[$row['group_id']]['group_name']];
+					}
+					else
+					{
+						$user_groups_custom[$row['user_id']][] = $groups[$row['group_id']]['group_name'];
+					}
+				}
+			}
+			unset($memberships, $groups);
+		}
+
+		// If we only have one forum id to display or being in local mode and more than one user/group to display, 
+		// we switch the complete interface to group by user/usergroup instead of grouping by forum
+		// To achive this, we need to switch the array a bit
+		if (sizeof($forum_ids) == 1 || ($local && sizeof($ug_names_ary) > 1))
+		{
+			$hold_ary_temp = $hold_ary;
+			$hold_ary = array();
+			foreach ($hold_ary_temp as $ug_id => $row)
+			{
+				foreach ($row as $forum_id => $auth_row)
+				{
+					$hold_ary[$forum_id][$ug_id] = $auth_row;
+				}
+			}
+			unset($hold_ary_temp);
+
+			$count_pmask = 0;
+
+			foreach ($hold_ary as $forum_id => $forum_array)
+			{
+				$content_array = $categories = array();
+				$this->build_permission_array($hold_ary[$forum_id], $content_array, $categories, array_keys($ug_names_ary));
+
+				$pmask_array[$count_pmask] = array(
+					'NAME'			=> ($forum_id == 0) ? $forum_names_ary[0] : $forum_names_ary[$forum_id]['forum_name'],
+					'CATEGORIES'	=> implode('</th><th>', $categories),
+
+					'USER_GROUPS_DEFAULT'	=> '',
+					'USER_GROUPS_CUSTOM'	=> '',
+	
+					'L_ACL_TYPE'	=> $l_acl_type,
+
+					'S_LOCAL'		=> ($local) ? true : false,
+					'S_GLOBAL'		=> (!$local) ? true : false,
+					'S_NUM_CATS'	=> sizeof($categories),
+					'S_VIEW'		=> ($mode === 'view') ? true : false,
+					'S_NUM_OBJECTS'	=> sizeof($content_array),
+					'S_USER_MODE'	=> ($user_mode === 'user') ? true : false,
+					'S_GROUP_MODE'	=> ($user_mode === 'group') ? true : false
+				);
+
+				$count_fmask = 0;
+
+				foreach ($content_array as $ug_id => $ug_array)
+				{
+					// Build role dropdown options
+					$current_role_id = (isset($cur_roles[$ug_id][$forum_id])) ? $cur_roles[$ug_id][$forum_id] : 0;
+
+					$s_role_options = '';
+					foreach ($roles as $role_id => $role_row)
+					{
+						$role_description = (!empty($_CLASS['core_user']->lang[$role_row['role_description']])) ? $_CLASS['core_user']->lang[$role_row['role_description']] : nl2br($role_row['role_description']);
+						$title = ($role_description) ? ' title="' . $role_description . '"' : '';
+						$s_role_options .= '<option value="' . $role_id . '"' . (($role_id == $current_role_id) ? ' selected="selected"' : '') . $title . '>' . $role_row['role_name'] . '</option>';
+					}
+
+					if ($s_role_options)
+					{
+						$s_role_options = '<option value="0"' . ((!$current_role_id) ? ' selected="selected"' : '') . ' title="' . htmlspecialchars($_CLASS['core_user']->lang['NO_ROLE_ASSIGNED_EXPLAIN']) . '">' . $_CLASS['core_user']->lang['NO_ROLE_ASSIGNED'] . '</option>' . $s_role_options;
+					}
+
+					$pmask_array[$count_pmask][$tpl_fmask][$count_fmask] = array(
+						'NAME'				=> $ug_names_ary[$ug_id],
+						'FOLDER_IMAGE'		=> false,
+						'PADDING'			=> false,
+						'S_ROLE_OPTIONS'	=> $s_role_options,
+						'UG_ID'				=> $ug_id,
+						'FORUM_ID'			=> $forum_id
+					);
+					
+					$pmask_array[$count_pmask][$tpl_fmask][$count_fmask][$tpl_category] = $this->assign_cat_array($ug_array, $tpl_category, $tpl_mask, $ug_id, $forum_id, $show_trace);
+
+					$count_fmask++;
+				}
+				$count_pmask++;
+			}
+		}
+		else
+		{
+			$count_pmask = 0;
+
+			foreach ($ug_names_ary as $ug_id => $ug_name)
+			{
+				if (!isset($hold_ary[$ug_id]))
+				{
+					continue;
+				}
+
+				$content_array = $categories = array();
+				$this->build_permission_array($hold_ary[$ug_id], $content_array, $categories, array_keys($forum_names_ary));
+
+				$pmask_array[$count_pmask] = array(
+					'NAME'			=> $ug_name,
+					'CATEGORIES'	=> implode('</th><th>', $categories),
+
+					'USER_GROUPS_DEFAULT'	=> ($user_mode === 'user' && isset($user_groups_default[$ug_id]) && sizeof($user_groups_default[$ug_id])) ? implode(', ', $user_groups_default[$ug_id]) : '',
+					'USER_GROUPS_CUSTOM'	=> ($user_mode === 'user' && isset($user_groups_custom[$ug_id]) && sizeof($user_groups_custom[$ug_id])) ? implode(', ', $user_groups_custom[$ug_id]) : '',
+					'L_ACL_TYPE'			=> $l_acl_type,
+
+					'S_LOCAL'		=> ($local) ? true : false,
+					'S_GLOBAL'		=> (!$local) ? true : false,
+					'S_NUM_CATS'	=> sizeof($categories),
+					'S_VIEW'		=> ($mode === 'view') ? true : false,
+					'S_NUM_OBJECTS'	=> sizeof($content_array),
+					'S_USER_MODE'	=> ($user_mode === 'user') ? true : false,
+					'S_GROUP_MODE'	=> ($user_mode === 'group') ? true : false
+				);
+
+				$count_fmask = 0;
+
+				foreach ($content_array as $forum_id => $forum_array)
+				{
+					// Build role dropdown options
+					$current_role_id = isset($cur_roles[$ug_id][$forum_id]) ? $cur_roles[$ug_id][$forum_id] : 0;
+
+					$s_role_options = '';
+					foreach ($roles as $role_id => $role_row)
+					{
+						$role_description = (!empty($_CLASS['core_user']->lang[$role_row['role_description']])) ? $_CLASS['core_user']->lang[$role_row['role_description']] : nl2br($role_row['role_description']);
+						$title = ($role_description) ? ' title="' . $role_description . '"' : '';
+						$s_role_options .= '<option value="' . $role_id . '"' . (($role_id == $current_role_id) ? ' selected="selected"' : '') . $title . '>' . $role_row['role_name'] . '</option>';
+					}
+
+					if ($s_role_options)
+					{
+						$s_role_options = '<option value="0"' . ((!$current_role_id) ? ' selected="selected"' : '') . ' title="' . htmlspecialchars($_CLASS['core_user']->lang['NO_ROLE_ASSIGNED_EXPLAIN']) . '">' . $_CLASS['core_user']->lang['NO_ROLE_ASSIGNED'] . '</option>' . $s_role_options;
+					}
+
+					if (!$forum_id)
+					{
+						$folder_image = '';
+					}
+					else
+					{
+						if ($forum_names_ary[$forum_id]['forum_status'] == ITEM_LOCKED)
+						{
+							$folder_image = '<img src="images/icon_folder_lock_small.gif" width="19" height="18" alt="' . $_CLASS['core_user']->lang['FORUM_LOCKED'] . '" />';
+						}
+						else
+						{
+							switch ($forum_names_ary[$forum_id]['forum_type'])
+							{
+								case FORUM_LINK:
+									$folder_image = '<img src="images/icon_folder_link_small.gif" width="22" height="18" alt="' . $_CLASS['core_user']->lang['FORUM_LINK'] . '" />';
+								break;
+
+								default:
+									$folder_image = ($forum_names_ary[$forum_id]['left_id'] + 1 != $forum_names_ary[$forum_id]['right_id']) ? '<img src="images/icon_folder_sub_small.gif" width="22" height="18" alt="' . $_CLASS['core_user']->lang['SUBFORUM'] . '" />' : '<img src="images/icon_folder_small.gif" width="19" height="18" alt="' . $_CLASS['core_user']->lang['FOLDER'] . '" />';
+								break;
+							}
+						}
+					}
+
+					$pmask_array[$count_pmask][$tpl_fmask][$count_fmask] = array(
+						'NAME'				=> ($forum_id == 0) ? $forum_names_ary[0] : $forum_names_ary[$forum_id]['forum_name'],
+						'PADDING'			=> ($forum_id == 0) ? '' : $forum_names_ary[$forum_id]['padding'],
+						'FOLDER_IMAGE'		=> $folder_image,
+						'S_ROLE_OPTIONS'	=> $s_role_options,
+						'UG_ID'				=> $ug_id,
+						'FORUM_ID'			=> $forum_id
+					);
+
+					$pmask_array[$count_pmask][$tpl_fmask][$count_fmask][$tpl_category] = $this->assign_cat_array($forum_array, $tpl_category, $tpl_mask, $ug_id, $forum_id, $show_trace);
+					$count_fmask++;
+				}
+				$count_pmask++;
+			}
+		}
+
+		$_CLASS['core_template']->assign($tpl_pmask, $pmask_array);
+	}
+
+	/**
+	* Display permission mask for roles
+	*/
+	function display_role_mask(&$hold_ary)
+	{
+		global $_CLASS;
+
+		if (!sizeof($hold_ary))
+		{
+			return;
+		}
+
+		// Get forum names
+		$sql = 'SELECT forum_id, forum_name
+			FROM ' . FORUMS_FORUMS_TABLE . '
+			WHERE forum_id IN ('.implode(', ', array_keys($hold_ary)).')';
+		$result = $_CLASS['core_db']->query($sql);
+
+		$forum_names = array();
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$forum_names[$row['forum_id']] = $row['forum_name'];
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		foreach ($hold_ary as $forum_id => $auth_ary)
+		{
+			$_CLASS['core_template']->assign_vars_array('role_mask', array(
+				'NAME'				=> ($forum_id == 0) ? $_CLASS['core_user']->lang['GLOBAL_MASK'] : $forum_names[$forum_id],
+				'FORUM_ID'			=> $forum_id)
+			);
+
+			if (isset($auth_ary['users']) && sizeof($auth_ary['users']))
+			{
+				$sql = 'SELECT user_id, username
+					FROM ' . CORE_USERS_TABLE . '
+					WHERE user_id IN ('.implode(', ', $auth_ary['users']) . ')
+					ORDER BY username';
+				$result = $_CLASS['core_db']->query($sql);
+
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					$_CLASS['core_template']->assign_vars_array('role_mask.users', array(
+						'USER_ID'		=> $row['user_id'],
+						'USERNAME'		=> $row['username'],
+						'U_PROFILE'		=> append_sid("{$phpbb_root_path}memberlist.$phpEx", "mode=viewprofile&amp;u={$row['user_id']}"))
+					);
+				}
+				$_CLASS['core_db']->free_result($result);
+			}
+
+			if (isset($auth_ary['groups']) && sizeof($auth_ary['groups']))
+			{
+				$sql = 'SELECT group_id, group_name, group_type
+					FROM ' . CORE_GROUPS_TABLE . '
+					WHERE group_id IN ('.implode(', ', $auth_ary['groups']) . ')
+					ORDER BY group_type ASC, group_name';
+				$result = $_CLASS['core_db']->query($sql);
+
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					$_CLASS['core_template']->assign_vars_array('role_mask.groups', array(
+						'GROUP_ID'		=> $row['group_id'],
+						'GROUP_NAME'	=> ($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name'],
+						'U_PROFILE'		=> append_sid("{$phpbb_root_path}memberlist.$phpEx", "mode=group&amp;g={$row['group_id']}"))
+					);
+				}
+				$_CLASS['core_db']->free_result($result);
+			}
+		}
+	}
+
+	/**
+	* NOTE: this function is not in use atm
+	* Add a new option to the list ... $options is a hash of form ->
+	* $options = array(
+	*	'local'		=> array('option1', 'option2', ...),
+	*	'global'	=> array('optionA', 'optionB', ...)
+	* );
+	*/
+	function acl_add_option($options)
+	{
+		global $_CLASS;
+
+		if (!is_array($options))
+		{
+			return false;
+		}
+
+		$cur_options = array();
+
+		$sql = 'SELECT auth_option, is_global, is_local
+			FROM ' . FORUMS_ACL_OPTIONS_TABLE . '
+			ORDER BY auth_option_id';
+		$result = $_CLASS['core_db']->query($sql);
+
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			if ($row['is_global'])
+			{
+				$cur_options['global'][] = $row['auth_option'];
+			}
+
+			if ($row['is_local'])
+			{
+				$cur_options['local'][] = $row['auth_option'];
+			}
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		// Here we need to insert new options ... this requires discovering whether
+		// an options is global, local or both and whether we need to add an permission
+		// set flag (x_)
+		$new_options = array('local' => array(), 'global' => array());
+
+		foreach ($options as $type => $option_ary)
+		{
+			$option_ary = array_unique($option_ary);
+
+			foreach ($option_ary as $option_value)
+			{
+				if (!in_array($option_value, $cur_options[$type]))
+				{
+					$new_options[$type][] = $option_value;
+				}
+
+				$flag = substr($option_value, 0, strpos($option_value, '_') + 1);
+
+				if (!in_array($flag, $cur_options[$type]) && !in_array($flag, $new_options[$type]))
+				{
+					$new_options[$type][] = $flag;
+				}
+			}
+		}
+		unset($options);
+
+		$options = array();
+		$options['local'] = array_diff($new_options['local'], $new_options['global']);
+		$options['global'] = array_diff($new_options['global'], $new_options['local']);
+		$options['local_global'] = array_intersect($new_options['local'], $new_options['global']);
+
+		$sql_ary = array();
+
+		foreach ($options as $type => $option_ary)
+		{
+			foreach ($option_ary as $option)
+			{
+				$sql_ary[] = array(
+					'auth_option'	=> $option,
+					'is_global'		=> ($type == 'global' || $type == 'local_global') ? 1 : 0,
+					'is_local'		=> ($type == 'local' || $type == 'local_global') ? 1 : 0
+				);
+			}
+		}
+
+		if (sizeof($sql_ary))
+		{
+			$_CLASS['core_db']->sql_query_build('MULTI_INSERT', $sql_ary, FORUMS_ACL_OPTIONS_TABLE);
+		}
+
+		$cache->destroy('acl_options');
+		$this->acl_clear_prefetch();
+
+		return true;
+	}
+
+	/**
+	* Set a user or group ACL record
+	*/
+	function acl_set($ug_type, $forum_id, $ug_id, $auth, $role_id = 0, $clear_prefetch = true)
+	{
+		global $_CLASS;
+
+		// One or more forums
+		if (!is_array($forum_id))
+		{
+			$forum_id = array($forum_id);
+		}
+
+		// One or more users
+		if (!is_array($ug_id))
+		{
+			$ug_id = array($ug_id);
+		}
+
+		$ug_id_sql =  $ug_type . '_id IN ('.implode(', ', array_map('intval', $ug_id)).')';
+		$forum_sql =  'forum_id IN ('.implode(', ', array_map('intval', $forum_id)).')';
+
+		// Instead of updating, inserting, removing we just remove all current settings and re-set everything...
+		$id_field = $ug_type . '_id';
+
+		// Get any flags as required
+		reset($auth);
+		$flag = key($auth);
+		$flag = substr($flag, 0, strpos($flag, '_') + 1);
+
+		// This ID (the any-flag) is set if one or more permissions are true...
+		$any_option_id = (int) $this->option_ids[$flag];
+
+		// Remove any-flag from auth ary
+		if (isset($auth[$flag]))
+		{
+			unset($auth[$flag]);
+		}
+
+		// Remove current auth options...
+		$auth_option_ids = array();
+		foreach ($auth as $auth_option => $auth_setting)
+		{
+			$auth_option_ids[] = (int) $this->option_ids[$auth_option];
+		}
+
+		$sql = 'DELETE FROM '.FORUMS_ACL_TABLE."
+			WHERE $forum_sql
+				AND $ug_id_sql
+				AND auth_option_id IN ($any_option_id, " . implode(', ', $auth_option_ids) . ')';
+		$_CLASS['core_db']->query($sql);
+
+		// Remove those having a role assigned... the correct type of course...
+		$sql = 'SELECT role_id
+			FROM ' . FORUMS_ACL_ROLES_TABLE . "
+			WHERE role_type = '" . $_CLASS['core_db']->escape($flag) . "'";
+		$result = $_CLASS['core_db']->query($sql);
+
+		$role_ids = array();
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$role_ids[] = $row['role_id'];
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		if (sizeof($role_ids))
+		{
+			$sql = 'DELETE FROM '.FORUMS_ACL_TABLE."
+				WHERE $forum_sql
+					AND $ug_id_sql
+					AND auth_option_id = 0
+					AND auth_role_id IN (".implode(', ', $role_ids).')';
+			$_CLASS['core_db']->query($sql);
+		}
+
+		// Ok, include the any-flag if one or more auth options are set to yes...
+		foreach ($auth as $auth_option => $setting)
+		{
+			if ($setting == ACL_YES && (!isset($auth[$flag]) || $auth[$flag] == ACL_NEVER))
+			{
+				$auth[$flag] = ACL_YES;
+			}
+		}
+
+		$sql_ary = array();
+		foreach ($forum_id as $forum)
+		{
+			$forum = (int) $forum;
+
+			if ($role_id)
+			{
+				foreach ($ug_id as $id)
+				{
+					$sql_ary[] = array(
+						$id_field			=> (int) $id,
+						'forum_id'			=> (int) $forum,
+						'auth_option_id'	=> 0,
+						'auth_setting'		=> 0,
+						'auth_role_id'		=> $role_id
+					);
+				}
+			}
+			else
+			{
+				foreach ($auth as $auth_option => $setting)
+				{
+					$auth_option_id = (int) $this->option_ids[$auth_option];
+
+					if ($setting != ACL_NO)
+					{
+						foreach ($ug_id as $id)
+						{
+							$sql_ary[] = array(
+								$id_field			=> (int) $id,
+								'forum_id'			=> (int) $forum,
+								'auth_option_id'	=> (int) $auth_option_id,
+								'auth_setting'		=> (int) $setting
+							);
+						}
+					}
+				}
+			}
+		}
+
+		if (sizeof($sql_ary))
+		{
+			$_CLASS['core_db']->sql_query_build('MULTI_INSERT', $sql_ary, FORUMS_ACL_TABLE);
+		}
+
+		if ($clear_prefetch)
+		{
+			$this->acl_clear_prefetch();
+		}
+	}
+
+	/**
+	* Set a role-specific ACL record
+	*/
+	function acl_set_role($role_id, $auth)
+	{
+		global $_CLASS;
+
+		// Get any-flag as required
+		reset($auth);
+		$flag = key($auth);
+		$flag = substr($flag, 0, strpos($flag, '_') + 1);
+		
+		// Remove any-flag from auth ary
+		if (isset($auth[$flag]))
+		{
+			unset($auth[$flag]);
+		}
+
+		// Re-set any flag...
+		foreach ($auth as $auth_option => $setting)
+		{
+			if ($setting == ACL_YES && (!isset($auth[$flag]) || $auth[$flag] == ACL_NEVER))
+			{
+				$auth[$flag] = ACL_YES;
+			}
+		}
+
+		$sql_ary = array();
+		foreach ($auth as $auth_option => $setting)
+		{
+			$auth_option_id = (int) $this->option_ids[$auth_option];
+
+			if ($setting != ACL_NO)
+			{
+				$sql_ary[] = array(
+					'role_id'			=> (int) $role_id,
+					'auth_option_id'	=> (int) $auth_option_id,
+					'auth_setting'		=> (int) $setting
+				);
+			}
+		}
+
+		// If no data is there, we set the any-flag to ACL_NEVER...
+		if (!sizeof($sql_ary))
+		{
+			$sql_ary[] = array(
+				'role_id'			=> (int) $role_id,
+				'auth_option_id'	=> $this->option_ids[$flag],
+				'auth_setting'		=> ACL_NEVER
+			);
+		}
+
+		// Remove current auth options...
+		$sql = 'DELETE FROM ' . FORUMS_ACL_ROLES_DATA_TABLE . '
+			WHERE role_id = ' . $role_id;
+		$_CLASS['core_db']->query($sql);
+
+		$_CLASS['core_db']->sql_query_build('MULTI_INSERT', $sql_ary, FORUMS_ACL_ROLES_DATA_TABLE);
+
+		$this->acl_clear_prefetch();
+	}
+
+	/**
+	* Remove local permission
+	*/
+	function acl_delete($mode, $ug_id = false, $forum_id = false, $permission_type = false)
+	{
+		global $_CLASS;
+
+		if ($ug_id === false && $forum_id === false)
+		{
+			return;
+		}
+
+		$option_id_ary = array();
+		$id_field  = $mode . '_id';
+
+		$where_sql = array();
+
+		if ($forum_id !== false)
+		{
+			$where_sql[] = !is_array($forum_id) ? 'forum_id = ' . (int) $forum_id : 'forum_id IN ('.implode(', ', array_map('intval', $forum_id)).')';
+		}
+
+		if ($ug_id !== false)
+		{
+			$where_sql[] = !is_array($ug_id) ? $id_field . ' = ' . (int) $ug_id : $id_field.' IN ('.implode(', ', array_map('intval', $ug_id)).')';
+		}
+
+		// There seem to be auth options involved, therefore we need to go through the list and make sure we capture roles correctly
+		if ($permission_type !== false)
+		{
+			// Get permission type
+			$sql = 'SELECT auth_option, auth_option_id
+				FROM ' . FORUMS_ACL_OPTIONS_TABLE . "
+				WHERE auth_option LIKE '" . $_CLASS['core_db']->escape($permission_type) . "%'";
+			$result = $_CLASS['core_db']->query($sql);
+
+			$auth_id_ary = array();
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				$option_id_ary[] = $row['auth_option_id'];
+				$auth_id_ary[$row['auth_option']] = ACL_NO;
+			}
+			$_CLASS['core_db']->free_result($result);
+
+			// First of all, lets grab the items having roles with the specified auth options assigned
+			$sql = "SELECT auth_role_id, $id_field, forum_id
+				FROM ".FORUMS_ACL_TABLE.', ' . FORUMS_ACL_ROLES_TABLE . " r
+				WHERE auth_role_id <> 0
+					AND auth_role_id = r.role_id
+					AND r.role_type = '{$permission_type}'
+					AND " . implode(' AND ', $where_sql) . '
+				ORDER BY auth_role_id';
+			$result = $_CLASS['core_db']->query($sql);
+
+			$cur_role_auth = array();
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				$cur_role_auth[$row['auth_role_id']][$row['forum_id']][] = $row[$id_field];
+			}
+			$_CLASS['core_db']->free_result($result);
+
+			// Get role data for resetting data
+			if (sizeof($cur_role_auth))
+			{
+				$sql = 'SELECT ao.auth_option, rd.role_id, rd.auth_setting
+					FROM ' . FORUMS_ACL_OPTIONS_TABLE . ' ao, ' . FORUMS_ACL_ROLES_DATA_TABLE . ' rd
+					WHERE ao.auth_option_id = rd.auth_option_id
+						AND rd.role_id IN ('.implode(', ', array_keys($cur_role_auth)).')';
+				$result = $_CLASS['core_db']->query($sql);
+
+				$auth_settings = array();
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					// We need to fill all auth_options, else setting it will fail...
+					if (!isset($auth_settings[$row['role_id']]))
+					{
+						$auth_settings[$row['role_id']] = $auth_id_ary;
+					}
+					$auth_settings[$row['role_id']][$row['auth_option']] = $row['auth_setting'];
+				}
+				$_CLASS['core_db']->free_result($result);
+
+				// Set the options
+				foreach ($cur_role_auth as $role_id => $auth_row)
+				{
+					foreach ($auth_row as $f_id => $ug_row)
+					{
+						$this->acl_set($mode, $f_id, $ug_row, $auth_settings[$role_id], 0, false);
+					}
+				}
+			}
+		}
+
+		// Now, normally remove permissions...
+		if ($permission_type !== false)
+		{
+			$where_sql[] = 'auth_option_id IN ('.implode(', ', array_map('intval', $option_id_ary)).')';
+		}
+		
+		$sql = 'DELETE FROM '. FORUMS_ACL_TABLE .'
+			WHERE ' . implode(' AND ', $where_sql);
+		$_CLASS['core_db']->query($sql);
+
+		$this->acl_clear_prefetch();
+	}
+
+	/**
+	* Assign category to template
+	* used by display_mask()
+	*/
+	function assign_cat_array(&$category_array, $tpl_category, $tpl_mask, $ug_id, $forum_id, $show_trace = false)
+	{
+		global $_CLASS;
+
+		$count_category = 0;
+
+		foreach ($category_array as $cat => $cat_array)
+		{
+			//$_CLASS['core_template']->assign_vars_array($tpl_cat, array(
+			$return_array[$count_category] = array(
+				'S_YES'		=> ($cat_array['S_YES'] && !$cat_array['S_NEVER'] && !$cat_array['S_NO']) ? true : false,
+				'S_NEVER'	=> ($cat_array['S_NEVER'] && !$cat_array['S_YES'] && !$cat_array['S_NO']) ? true : false,
+				'S_NO'		=> ($cat_array['S_NO'] && !$cat_array['S_NEVER'] && !$cat_array['S_YES']) ? true : false,
+							
+				'CAT_NAME'	=> $_CLASS['core_user']->lang['permission_cat'][$cat]
+			);
+
+			$count_mask = 0;
+
+			foreach ($cat_array['permissions'] as $permission => $allowed)
+			{
+				//$_CLASS['core_template']->assign_vars_array($tpl_cat . '.' . $tpl_mask, array(
+				$return_array[$count_category][$tpl_mask][$count_mask] = array(
+					'S_YES'		=> ($allowed == ACL_YES) ? true : false,
+					'S_NEVER'	=> ($allowed == ACL_NEVER) ? true : false,
+					'S_NO'		=> ($allowed == ACL_NO) ? true : false,
+
+					'UG_ID'			=> $ug_id,
+					'FORUM_ID'		=> $forum_id,
+					'FIELD_NAME'	=> $permission,
+					'S_FIELD_NAME'	=> 'setting[' . $ug_id . '][' . $forum_id . '][' . $permission . ']',
+
+					'U_TRACE'		=> ($show_trace) ? append_sid("{$phpbb_admin_path}index.$phpEx", "i=permissions&amp;mode=trace&amp;u=$ug_id&amp;f=$forum_id&amp;auth=$permission") : '',
+
+					'PERMISSION'	=> $_CLASS['core_user']->lang['acl_' . $permission]['lang']
+				);
+				$count_mask++;
+			}
+			$count_category++;
+		}
+		return $return_array;
+	}
+
+	/**
+	* Building content array from permission rows with explicit key ordering
+	* used by display_mask()
+	*/
+	function build_permission_array(&$permission_row, &$content_array, &$categories, $key_sort_array)
+	{
+		global $_CLASS;
+
+		foreach ($key_sort_array as $forum_id)
+		{
+			if (!isset($permission_row[$forum_id]))
+			{
+				continue;
+			}
+
+			$permissions = $permission_row[$forum_id];
+			ksort($permissions);
+
+			foreach ($permissions as $permission => $auth_setting)
+			{
+				if (!isset($_CLASS['core_user']->lang['acl_' . $permission]))
+				{
+					$_CLASS['core_user']->lang['acl_' . $permission] = array(
+						'cat'	=> 'misc',
+						'lang'	=> '{ acl_' . $permission . ' }'
+					);
+				}
+			
+				$cat = $_CLASS['core_user']->lang['acl_' . $permission]['cat'];
+			
+				// Build our categories array
+				if (!isset($categories[$cat]))
+				{
+					$categories[$cat] = $_CLASS['core_user']->lang['permission_cat'][$cat];
+				}
+
+				// Build our content array
+				if (!isset($content_array[$forum_id]))
+				{
+					$content_array[$forum_id] = array();
+				}
+
+				if (!isset($content_array[$forum_id][$cat]))
+				{
+					$content_array[$forum_id][$cat] = array(
+						'S_YES'			=> false,
+						'S_NEVER'		=> false,
+						'S_NO'			=> false,
+						'permissions'	=> array(),
+					);
+				}
+
+				$content_array[$forum_id][$cat]['S_YES'] |= ($auth_setting == ACL_YES) ? true : false;
+				$content_array[$forum_id][$cat]['S_NEVER'] |= ($auth_setting == ACL_NEVER) ? true : false;
+				$content_array[$forum_id][$cat]['S_NO'] |= ($auth_setting == ACL_NO) ? true : false;
+
+				$content_array[$forum_id][$cat]['permissions'][$permission] = $auth_setting;
+			}
+		}
+	}
+
+	/**
+	* Use permissions from another user. This transferes a permission set from one user to another.
+	* The other user is always able to revert back to his permission set.
+	* This function does not check for lower/higher permissions, it is possible for the user to gain 
+	* "more" permissions by this.
+	* Admin permissions will not be copied.
+	*/
+	function ghost_permissions($from_user_id, $to_user_id)
+	{
+		global $_CLASS;
+
+		if ($to_user_id == ANONYMOUS)
+		{
+			return false;
+		}
+
+		$hold_ary = $this->acl_raw_data($from_user_id, false, false);
+
+		if (isset($hold_ary[$from_user_id]))
+		{
+			$hold_ary = $hold_ary[$from_user_id];
+		}
+		
+		// Key 0 in $hold_ary are global options, all others are forum_ids
+
+		// We disallow copying admin permissions
+		foreach ($this->acl_options['global'] as $opt => $id)
+		{
+			if (strpos($opt, 'a_') === 0)
+			{
+				$hold_ary[0][$opt] = ACL_NEVER;
+			}
+		}
+
+		// Force a_switchperm to be allowed
+		$hold_ary[0]['a_switchperm'] = ACL_YES;
+
+		$user_permissions = $this->build_bitstring($hold_ary);
+
+		if (!$user_permissions)
+		{
+			return false;
+		}
+
+		$sql = 'UPDATE ' . CORE_USERS_TABLE . "
+			SET user_permissions = '" . $_CLASS['core_db']->escape($user_permissions) . "',
+				user_perm_from = $from_user_id
+			WHERE user_id = " . $to_user_id;
+		$_CLASS['core_db']->query($sql);
+
+		return true;
+	}
+}
+
+?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/admin/links.php
===================================================================
--- cms/trunk/includes/forums/admin/links.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/admin/links.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -5,46 +5,46 @@
 }
 
 //Need to be in the admin menu look into making a new one or using this one :-)
-/*if ($_CLASS['auth']->acl_get('a_ban'))
+/*if ($_CLASS['forums_auth']->acl_get('a_ban'))
 {
 	$module['USER']['BAN_USERS'] = generate_link('forums&amp;file=admin_ban'..'&amp;mode=user');
 	$module['USER']['BAN_EMAILS'] = generate_link('forums&amp;file=admin_ban'..'&amp;mode=email');
 	$module['USER']['BAN_IPS'] = generate_link('forums&amp;file=admin_ban'..'&amp;mode=ip');
 }*/
 
-$module['LOG']['ADMIN_LOGS']			 =  ($_CLASS['auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_viewlogs&amp;mode=admin', array('admin' => true)) : false;
-$module['LOG']['MOD_LOGS']				 = ($_CLASS['auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_viewlogs&amp;mode=mod', array('admin' => true)) : false;
-$module['LOG']['CRITICAL_LOGS']			 = ($_CLASS['auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_viewlogs&amp;mode=critical', array('admin' => true)) : false;
+$module['LOG']['ADMIN_LOGS']			 =  ($_CLASS['forums_auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_viewlogs&amp;mode=admin', array('admin' => true)) : false;
+$module['LOG']['MOD_LOGS']				 = ($_CLASS['forums_auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_viewlogs&amp;mode=mod', array('admin' => true)) : false;
+$module['LOG']['CRITICAL_LOGS']			 = ($_CLASS['forums_auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_viewlogs&amp;mode=critical', array('admin' => true)) : false;
 	
-$module['DB']['SEARCH_INDEX'] 				= ($_CLASS['auth']->acl_get('a_search')) ? generate_link('forums&amp;file=admin_search', array('admin' => true)) : false;
+$module['DB']['SEARCH_INDEX'] 				= ($_CLASS['forums_auth']->acl_get('a_search')) ? generate_link('forums&amp;file=admin_search', array('admin' => true)) : false;
 
-$module['USER']['RANKS']					= ($_CLASS['auth']->acl_get('a_ranks')) ? generate_link('forums&amp;file=admin_ranks', array('admin' => true)) : '';
-$module['USER']['DISALLOW']					= ($_CLASS['auth']->acl_get('a_names')) ? generate_link('forums&amp;file=admin_disallow', array('admin' => true)) : '';
+$module['USER']['RANKS']					= ($_CLASS['forums_auth']->acl_get('a_ranks')) ? generate_link('forums&amp;file=admin_ranks', array('admin' => true)) : '';
+$module['USER']['DISALLOW']					= ($_CLASS['forums_auth']->acl_get('a_names')) ? generate_link('forums&amp;file=admin_disallow', array('admin' => true)) : '';
 
-$module['FORUM']['MANAGE']					= ($_CLASS['auth']->acl_gets('a_forum', 'a_forumadd', 'a_forumdel')) ? generate_link('forums&amp;file=admin_forums', array('admin' => true)) : false;
-$module['FORUM']['PRUNE']   				= ($_CLASS['auth']->acl_get('a_prune')) ? generate_link('forums&amp;file=admin_prune&amp;mode=forums', array('admin' => true)) : false;
+$module['FORUM']['MANAGE']					= ($_CLASS['forums_auth']->acl_gets('a_forum', 'a_forumadd', 'a_forumdel')) ? generate_link('forums&amp;file=admin_forums', array('admin' => true)) : false;
+$module['FORUM']['PRUNE']   				= ($_CLASS['forums_auth']->acl_get('a_prune')) ? generate_link('forums&amp;file=admin_prune&amp;mode=forums', array('admin' => true)) : false;
 
-$module['PERM']['PERMISSIONS']				= ($_CLASS['auth']->acl_get('a_auth')) ? generate_link('forums&amp;file=admin_permissions&amp;mode=forum', array('admin' => true)) : '';
-$module['PERM']['MODERATORS'] 				= ($_CLASS['auth']->acl_get('a_authmods')) ? generate_link('forums&amp;file=admin_permissions&amp;mode=mod', array('admin' => true)) : '';
-$module['PERM']['SUPER_MODERATORS']			= ($_CLASS['auth']->acl_get('a_authmods')) ? generate_link('forums&amp;file=admin_permissions&amp;mode=supermod', array('admin' => true)) : '';
-$module['PERM']['ADMINISTRATORS']			= ($_CLASS['auth']->acl_get('a_authadmins')) ? generate_link('forums&amp;file=admin_permissions&amp;mode=admin', array('admin' => true)) : '';
-$module['PERM']['USER_PERMS']				= ($_CLASS['auth']->acl_get('a_authusers')) ? generate_link('forums&amp;file=admin_permissions&amp;mode=user', array('admin' => true)) : '';
-$module['PERM']['GROUP_PERMS']				= ($_CLASS['auth']->acl_get('a_authgroups')) ? generate_link('forums&amp;file=admin_permissions&amp;mode=group', array('admin' => true)) : '';
+$module['PERM']['ACP_FORUM_PERMISSIONS']		= ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups') || $_CLASS['forums_auth']->acl_get('a_viewauth')) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_forum_local', array('admin' => true)) : '';
+$module['PERM']['ACP_FORUM_MODERATORS'] 		= ($_CLASS['forums_auth']->acl_get('a_mauth') && ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_mod_local', array('admin' => true)) : '';
+$module['PERM']['ACP_USERS_FORUM_PERMISSIONS']	= ($_CLASS['forums_auth']->acl_get('a_authusers') && ($_CLASS['forums_auth']->acl_get('a_mauth') || $_CLASS['forums_auth']->acl_get('a_fauth'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_user_local', array('admin' => true)) : '';
+$module['PERM']['ACP_GROUPS_FORUM_PERMISSIONS']	= ($_CLASS['forums_auth']->acl_get('a_authgroups') && ($_CLASS['forums_auth']->acl_get('a_mauth') || $_CLASS['forums_auth']->acl_get('a_fauth'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_group_local', array('admin' => true)) : '';
+$module['PERM']['ACP_ADMINISTRATORS']			= ($_CLASS['forums_auth']->acl_get('a_aauth') && ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_admin_global', array('admin' => true)) : '';
+$module['PERM']['ACP_GLOBAL_MODERATORS']		= ($_CLASS['forums_auth']->acl_get('a_mauth') && ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_mod_global', array('admin' => true)) : '';
 
-$module['GENERAL']['AVATAR_SETTINGS']		= ($_CLASS['auth']->acl_get('a_board')) ? generate_link('forums&amp;file=admin_board&amp;mode=avatar', array('admin' => true)) : '';
-$module['GENERAL']['BOARD_DEFAULTS']		= ($_CLASS['auth']->acl_get('a_defaults')) ? generate_link('forums&amp;file=admin_board&amp;mode=default', array('admin' => true)) : '';
-$module['GENERAL']['BOARD_SETTINGS']		= ($_CLASS['auth']->acl_get('a_board')) ? generate_link('forums&amp;file=admin_board&amp;mode=setting', array('admin' => true)) : '';
-$module['GENERAL']['EMAIL_SETTINGS']		= ($_CLASS['auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=email', array('admin' => true)) : '';
-$module['GENERAL']['LOAD_SETTINGS']			= ($_CLASS['auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=load', array('admin' => true)) : '';
-$module['GENERAL']['SERVER_SETTINGS']		= ($_CLASS['auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=server', array('admin' => true)) : '';
-$module['GENERAL']['MESSAGE_SETTINGS']		= ($_CLASS['auth']->acl_get('a_defaults')) ? generate_link('forums&amp;file=admin_board&amp;mode=message', array('admin' => true)) : '';
-$module['GENERAL']['ATTACHMENT_SETTINGS'] 	= ($_CLASS['auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=attach', array('admin' => true)) : '';
-$module['GENERAL']['IM'] 					= ($_CLASS['auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_jabber', array('admin' => true)) : '';
-$module['GENERAL']['PHP_INFO'] 				= ($_CLASS['auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_phpinfo', array('admin' => true)) : '';
-$module['GENERAL']['MASS_EMAIL']			= ($_CLASS['auth']->acl_get('a_email')) ? generate_link('forums&amp;file=admin_email', array('admin' => true)) : '';
+$module['GENERAL']['AVATAR_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_board')) ? generate_link('forums&amp;file=admin_board&amp;mode=avatar', array('admin' => true)) : '';
+$module['GENERAL']['BOARD_DEFAULTS']		= ($_CLASS['forums_auth']->acl_get('a_defaults')) ? generate_link('forums&amp;file=admin_board&amp;mode=default', array('admin' => true)) : '';
+$module['GENERAL']['BOARD_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_board')) ? generate_link('forums&amp;file=admin_board&amp;mode=setting', array('admin' => true)) : '';
+$module['GENERAL']['EMAIL_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=email', array('admin' => true)) : '';
+$module['GENERAL']['LOAD_SETTINGS']			= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=load', array('admin' => true)) : '';
+$module['GENERAL']['SERVER_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=server', array('admin' => true)) : '';
+$module['GENERAL']['MESSAGE_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_defaults')) ? generate_link('forums&amp;file=admin_board&amp;mode=message', array('admin' => true)) : '';
+$module['GENERAL']['ATTACHMENT_SETTINGS'] 	= ($_CLASS['forums_auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=attach', array('admin' => true)) : '';
+$module['GENERAL']['IM'] 					= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_jabber', array('admin' => true)) : '';
+$module['GENERAL']['PHP_INFO'] 				= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_phpinfo', array('admin' => true)) : '';
+$module['GENERAL']['MASS_EMAIL']			= ($_CLASS['forums_auth']->acl_get('a_email')) ? generate_link('forums&amp;file=admin_email', array('admin' => true)) : '';
 
-$module['POST']['ATTACHMENTS'] 				= ($_CLASS['auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=ext_groups', array('admin' => true)) : '';
-$module['POST']['BBCODES']					= ($_CLASS['auth']->acl_get('a_bbcode')) ? generate_link('forums&amp;file=admin_bbcodes', array('admin' => true)) : '';
-$module['POST']['ICONS']					= ($_CLASS['auth']->acl_get('a_icons')) ? generate_link('forums&amp;file=admin_icons&amp;mode=icons', array('admin' => true)) : '';
+$module['POST']['ATTACHMENTS'] 				= ($_CLASS['forums_auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=ext_groups', array('admin' => true)) : '';
+$module['POST']['BBCODES']					= ($_CLASS['forums_auth']->acl_get('a_bbcode')) ? generate_link('forums&amp;file=admin_bbcodes', array('admin' => true)) : '';
+$module['POST']['ICONS']					= ($_CLASS['forums_auth']->acl_get('a_icons')) ? generate_link('forums&amp;file=admin_icons&amp;mode=icons', array('admin' => true)) : '';
 
 ?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/admin/main.php
===================================================================
--- cms/trunk/includes/forums/admin/main.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/admin/main.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -16,18 +16,49 @@
 }
 
 // Do we have any admin permissions at all?
-if (!$_CLASS['auth']->acl_get('a_'))
+if (!$_CLASS['forums_auth']->acl_get('a_'))
 {
 	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
 }
 
+/*
+// Show restore permissions notice
+if ($user->data['user_perm_from'] && $auth->acl_get('a_switchperm'))
+{
+	$this->tpl_name = 'acp_main';
+	$this->page_title = 'ACP_MAIN';
+
+	$sql = 'SELECT user_id, username, user_colour
+		FROM ' . USERS_TABLE . '
+		WHERE user_id = ' . $user->data['user_perm_from'];
+	$result = $db->sql_query($sql);
+	$user_row = $db->sql_fetchrow($result);
+	$db->sql_freeresult($result);
+
+	$perm_from = '<strong' . (($user_row['user_colour']) ? ' style="color: #' . $user_row['user_colour'] . '">' : '>');
+	$perm_from .= ($user_row['user_id'] != ANONYMOUS) ? '<a href="' . append_sid("{$phpbb_root_path}memberlist.$phpEx", 'mode=viewprofile&amp;u=' . $user_row['user_id']) . '">' : '';
+	$perm_from .= $user_row['username'];
+	$perm_from .= ($user_row['user_id'] != ANONYMOUS) ? '</a>' : '';
+	$perm_from .= '</strong>';
+
+	$template->assign_vars(array(
+		'S_RESTORE_PERMISSIONS'		=> true,
+		'U_RESTORE_PERMISSIONS'		=> append_sid("{$phpbb_root_path}ucp.$phpEx", 'mode=restore_perm'),
+		'PERM_FROM'					=> $perm_from,
+		'L_PERMISSIONS_TRANSFERED_EXPLAIN'	=> sprintf($user->lang['PERMISSIONS_TRANSFERED_EXPLAIN'], $perm_from, append_sid("{$phpbb_root_path}ucp.$phpEx", 'mode=restore_perm')),
+	));
+
+	return;
+}
+*/
+
 // Define some vars
 $action = request_var('action', '');
 
 switch ($action)
 {
 	case 'stats':
-		if (!$_CLASS['auth']->acl_get('a_board'))
+		if (!$_CLASS['forums_auth']->acl_get('a_board'))
 		{
 			trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
 		}
@@ -70,7 +101,7 @@
 	break;
 		
 	case 'user':
-		if (!$_CLASS['auth']->acl_get('a_defaults'))
+		if (!$_CLASS['forums_auth']->acl_get('a_defaults'))
 		{
 			trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
 		}

Modified: cms/trunk/includes/forums/auth.php
===================================================================
--- cms/trunk/includes/forums/auth.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/auth.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -429,8 +429,8 @@
 
 		$sql_id = ($user_type == 'user') ? 'user_id' : 'group_id';
 
-		$sql_ug = ($ug_id !== false) ? ((!is_array($ug_id)) ? "AND a.$sql_id = $ug_id" : 'AND ' . $db->sql_in_set("a.$sql_id", $ug_id)) : '';
-		$sql_forum = ($forum_id !== false) ? ((!is_array($forum_id)) ? "AND a.forum_id = $forum_id" : 'AND ' . $db->sql_in_set('a.forum_id', $forum_id)) : '';
+		$sql_ug = ($ug_id !== false) ? (!is_array($ug_id) ? "AND a.$sql_id = $ug_id" : "AND a.$sql_id IN (" . implode(', ', $ug_id).')') : '';
+		$sql_forum = ($forum_id !== false) ? (!is_array($forum_id) ? "AND a.forum_id = $forum_id" : 'AND a.forum_id IN ('. implode(', ', $forum_id).')') : '';
 
 		// Grab assigned roles...
 		$sql = 'SELECT a.auth_role_id, a.' . $sql_id . ', a.forum_id
@@ -619,8 +619,9 @@
 
 		// Grab group settings ... ACL_NO overrides ACL_YES so act appropriatley
 		$sql = 'SELECT a.group_id, ao.auth_option, a.forum_id, a.auth_setting
-			FROM ' . FORUMS_ACL_OPTIONS_TABLE . ' ao, ' . FORUMS_ACL_GROUPS_TABLE . ' a
+			FROM ' . FORUMS_ACL_OPTIONS_TABLE . ' ao, ' . FORUMS_ACL_TABLE . ' a
 			WHERE ao.auth_option_id = a.auth_option_id
+				AND a.group_id IS NOT NULL AND a.group_id <> 0
 				' . (($sql_group) ? 'AND a.' . $sql_group : '') . "
 				$sql_forum
 				$sql_opts

Modified: cms/trunk/includes/forums/functions_admin.php
===================================================================
--- cms/trunk/includes/forums/functions_admin.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/functions_admin.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -24,11 +24,12 @@
 // -------------------------------------------------------------
 // Fix links "defined('IN_ADMIN')"
 // Simple version of jumpbox, just lists authed forums
-function make_forum_select($select_id = false, $ignore_id = false, $ignore_acl = false, $ignore_nonpost = false, $ignore_emptycat = true, $return_array = false)
+
+function make_forum_select($select_id = false, $ignore_id = false, $ignore_acl = false, $ignore_nonpost = false, $ignore_emptycat = true, $only_acl_post = false, $return_array = false)
 {
 	global $_CLASS;
 
-	$acl = ($ignore_acl) ? '' : array('f_list', 'a_forum', 'a_forumadd', 'a_forumdel');
+	$acl = ($ignore_acl) ? '' : (($only_acl_post) ? 'f_post' : array('f_list', 'a_forum', 'a_forumadd', 'a_forumdel'));
 
 	// This query is identical to the jumpbox one
 	$sql = 'SELECT forum_id, parent_id, forum_name, forum_type, forum_status, left_id, right_id
@@ -1334,7 +1335,7 @@
 				{
 					if ($row['forum_' . $fieldname] != $row[$fieldname])
 					{
-						if (preg_match('#name$#', $fieldname))
+						if (preg_match('#(name|colour)$#', $fieldname))
 						{
 							$sql['forum_' . $fieldname] = (string) $row[$fieldname];
 						}
@@ -1542,7 +1543,7 @@
 
 				foreach ($fieldnames as $fieldname)
 				{
-					if ($row['topic_' . $fieldname] != $row[$fieldname])
+					if (isset($row[$fieldname]) && isset($row['topic_' . $fieldname]) && $row['topic_' . $fieldname] != $row[$fieldname])
 					{
 						$sql['topic_' . $fieldname] = $row[$fieldname];
 					}
@@ -2332,7 +2333,7 @@
 				}
 				else if (strpos($line, '404 Not Found') !== false)
 				{
-					$errstr = $_CLASS['core_user']->lang['FILE_NOT_FOUND'];
+					$errstr = $_CLASS['core_user']->lang['FILE_NOT_FOUND'] . ': ' . $filename;
 					return false;
 				}
 			}

Modified: cms/trunk/includes/forums/functions_posting.php
===================================================================
--- cms/trunk/includes/forums/functions_posting.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/functions_posting.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -303,8 +303,10 @@
 // Calculate the needed size for Thumbnail
 function get_img_size_format($width, $height)
 {
+	global $config;
+
 	// Maximum Width the Image can take
-	$max_width = 400;
+	$max_width = ($config['img_max_thumb_width']) ? $config['img_max_thumb_width'] : 400;
 
 	if ($width > $height)
 	{
@@ -408,7 +410,7 @@
 
 	if (file_exists($destination) && function_exists('passthru'))
 	{
-		passthru(escapeshellcmd($config['img_imagick']) . 'convert' . ((defined('PHP_OS') && preg_match('#^win#i', PHP_OS)) ? '.exe' : '') . ' -quality 85 -antialias -sample ' . $new_width . 'x' . $new_height . ' "' . str_replace('\\', '/', $source) . '" +profile "*" "' . str_replace('\\', '/', $destination) . '"');
+		@passthru(escapeshellcmd($config['img_imagick']) . 'convert' . ((defined('PHP_OS') && preg_match('#^win#i', PHP_OS)) ? '.exe' : '') . ' -quality 85 -antialias -sample ' . $new_width . 'x' . $new_height . ' "' . str_replace('\\', '/', $source) . '" +profile "*" "' . str_replace('\\', '/', $destination) . '"');
 		if (file_exists($new_file))
 		{
 			$used_imagick = true;
@@ -795,6 +797,9 @@
 
 		$post_subject = $row['post_subject'];
 		$message = $row['post_text'];
+		$message = censor_text($message);
+		$message = str_replace("\n", '<br />', $message);
+
 		$decoded_message = false;
 
 		if ($show_quote_button && $_CLASS['forums_auth']->acl_get('f_reply', $forum_id))
@@ -802,7 +807,6 @@
 			$decoded_message = $message;
 			decode_message($decoded_message, $row['bbcode_uid']);
 
-			$decoded_message = censor_text($decoded_message);
 			$decoded_message = str_replace("\n", "<br />", $decoded_message);
 		}
 
@@ -821,7 +825,7 @@
 			'POST_SUBJECT' 	=> $post_subject,
 			'MINI_POST_IMG' => $_CLASS['core_user']->img('icon_post', $_CLASS['core_user']->lang['POST']),
 			'POST_DATE' 	=> $_CLASS['core_user']->format_date($row['post_time']),
-			'MESSAGE' 		=> str_replace("\n", '<br />', $message), 
+			'MESSAGE' 		=> $message, 
 			'DECODED_MESSAGE'	=> $decoded_message,
 
 			'U_POST_ID'		=> $row['post_id'],

Modified: cms/trunk/includes/forums/functions_privmsgs.php
===================================================================
--- cms/trunk/includes/forums/functions_privmsgs.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/functions_privmsgs.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -297,6 +297,9 @@
 
 		case ACTION_MARK_AS_READ:
 		case ACTION_MARK_AS_IMPORTANT:
+			return array('action' => $rule_row['rule_action'], 'pm_unread' => $message_row['pm_unread'], 'pm_marked' => $message_row['pm_marked']);
+		break;
+
 		case ACTION_DELETE_MESSAGE:
 			return array('action' => $rule_row['rule_action'], 'pm_unread' => $message_row['pm_unread'], 'pm_marked' => $message_row['pm_marked']);
 		break;
@@ -510,8 +513,8 @@
 		}
 	}
 
-	$num_new += count(array_unique($delete_ids));
-	$num_unread += count(array_unique($delete_ids));
+//	$num_new += count(array_unique($delete_ids));
+//	$num_unread += count(array_unique($delete_ids));
 	$num_unread += count(array_unique($unread_ids));
 
 	// Do not change the order of processing
@@ -791,8 +794,13 @@
 			SET user_unread_privmsg = user_unread_privmsg '.(($read) ? '+ ' : '- '). " $count
 			WHERE user_id = $user_id";
 		$_CLASS['core_db']->query($sql);
+		
+		if ($_CLASS['core_user']->data['user_id'] == $user_id)
+		{
+			$_CLASS['core_user']->data['user_unread_privmsg'] = $_CLASS['core_user']->data['user_unread_privmsg'] + (($read) ? $count : -$count));
+		}
 	}
-	
+
 	$_CLASS['core_db']->transaction('commit');
 }
 
@@ -995,8 +1003,11 @@
 			$set_sql .= ($set_sql != '') ? ', ' : '';
 			$set_sql .= 'user_new_privmsg = user_new_privmsg - ' . $num_new;
 		}
-		
+
 		$_CLASS['core_db']->query('UPDATE ' . CORE_USERS_TABLE . " SET $set_sql WHERE user_id = $user_id");
+
+		$_CLASS['core_user']->data['user_new_privmsg'] -= $num_new;
+		$_CLASS['core_user']->data['user_unread_privmsg'] -= $num_unread;
 	}
 	
 	// Now we have to check which messages we can delete completely	
@@ -1170,7 +1181,7 @@
 						'IS_USER'	=> ($type === 'user'),
 						'COLOUR'	=> ($row['colour']) ? $row['colour'] : '',
 						'UG_ID'		=> $id,
-						'U_VIEW'	=> ($type === 'user') ? generate_link('members_list&amp;mode=viewprofile&amp;u=' . $id) : generate_link('members_list&amp;mode=group&amp;g=' . $id))
+						'U_VIEW'	=> ($type === 'user') ? (($id != ANONYMOUS) ? generate_link('members_list&amp;mode=viewprofile&amp;u=' . $id) ? '') : generate_link('members_list&amp;mode=group&amp;g=' . $id))
 					);
 				}
 			}
@@ -1251,7 +1262,7 @@
 					$id = (int) $id;
 
 					// Do not rely on the address list being "valid"
-					if (!$id)
+					if (!$id || ($ug_type === 'u' && $id == ANONYMOUS))
 					{
 						continue;
 					}

Modified: cms/trunk/includes/forums/functions_upload.php
===================================================================
--- cms/trunk/includes/forums/functions_upload.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/functions_upload.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -305,7 +305,26 @@
 				{
 					$this->mimetype = $this->image_info['mime'];
 				}
+
+				// Check image type
+				$types = $this->upload->image_types();
+
+				if (!isset($types[$this->image_info[2]]) || !in_array($this->extension, $types[$this->image_info[2]]))
+				{
+					if (!isset($types[$this->image_info[2]]))
+					{
+						$this->error[] = sprintf($user->lang['IMAGE_FILETYPE_INVALID'], $this->image_info[2], $this->mimetype);
+					}
+					else
+					{
+						$this->error[] = sprintf($user->lang['IMAGE_FILETYPE_MISMATCH'], $types[$this->image_info[2]][0], $this->extension);
+					}
+				}
 			}
+			else
+			{
+				$this->error[] = $user->lang['UNABLE_GET_IMAGE_SIZE'];
+			}
 		}
 
 		$this->file_moved = true;
@@ -790,6 +809,31 @@
 	{
 		return (isset($_FILES[$form_name]) && $_FILES[$form_name]['name'] != 'none') ? true : false;
 	}
+
+	/**
+	* Return image type/extension mapping 
+	*/
+	function image_types()
+	{
+		return array(
+			1 => array('gif'),
+			2 => array('jpg', 'jpeg'),
+			3 => array('png'),
+			4 => array('swf'),
+			5 => array('psd'),
+			6 => array('bmp'),
+			7 => array('tif', 'tiff'),
+			8 => array('tif', 'tiff'),
+			9 => array('jpg', 'jpeg'),
+			10 => array('jpg', 'jpeg'),
+			11 => array('jpg', 'jpeg'),
+			12 => array('jpg', 'jpeg'),
+			13 => array('swc'),
+			14 => array('iff'),
+			15 => array('wbmp'),
+			16 => array('xbm'),
+		);
+	}
 }
 
 ?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/mcp/mcp_forum.php
===================================================================
--- cms/trunk/includes/forums/mcp/mcp_forum.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/forums/mcp/mcp_forum.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -220,8 +220,8 @@
 
 	$topic_title = censor_text($row['topic_title']);
 
-	$topic_unapproved = (!$row['topic_approved'] && $_CLASS['forums_auth']->acl_gets('m_approve', $row['forum_id']));
-	$posts_unapproved = ($row['topic_approved'] && $row['topic_replies'] < $row['topic_replies_real'] && $_CLASS['forums_auth']->acl_gets('m_approve', $row['forum_id']));
+	$topic_unapproved = (!$row['topic_approved'] && $_CLASS['forums_auth']->acl_get('m_approve', $row['forum_id']));
+	$posts_unapproved = ($row['topic_approved'] && $row['topic_replies'] < $row['topic_replies_real'] && $_CLASS['forums_auth']->acl_get('m_approve', $row['forum_id']));
 	$u_mcp_queue = ($topic_unapproved || $posts_unapproved) ? generate_link($url . '&amp;i=queue&amp;mode='.(($topic_unapproved) ? 'approve_details' : 'unapproved_posts') .'&amp;t=' . $row['topic_id'], false, false) : false;
 
 	$_CLASS['core_template']->assign_vars_array('topicrow', array(
@@ -232,7 +232,7 @@
 		'U_MCP_QUEUE'		=> $u_mcp_queue,
 		'U_MCP_REPORT'		=> generate_link("forums&amp;file=mcp&amp;i=main&amp;mode=topic_view&amp;t={$row['topic_id']}&amp;action=reports"),
 
-		'ATTACH_ICON_IMG'	=> ($_CLASS['forums_auth']->acl_gets('f_download', 'u_download', $row['forum_id']) && $row['topic_attachment']) ? $_CLASS['core_user']->img('icon_attach', $_CLASS['core_user']->lang['TOTAL_ATTACHMENTS']) : '',
+		'ATTACH_ICON_IMG'	=> ($_CLASS['forums_auth']->acl_get('u_download') && $_CLASS['forums_auth']->acl_get('f_download', $row['forum_id']) && $row['topic_attachment']) ? $_CLASS['core_user']->img('icon_attach', $_CLASS['core_user']->lang['TOTAL_ATTACHMENTS']) : '',
 		'TOPIC_FOLDER_IMG' 	=> $_CLASS['core_user']->img($folder_img, $folder_alt),
 		//'TOPIC_FOLDER_IMG_SRC'	=> $user->img($folder_img, $folder_alt, false, '', 'src'),
 
@@ -248,7 +248,7 @@
 		'TOPIC_ID'			=> $row['topic_id'],
 		'S_TOPIC_CHECKED'	=> ($topic_id_list && in_array($row['topic_id'], $topic_id_list)) ? 'checked="checked" ' : '',
 
-		'S_TOPIC_REPORTED'	=> (!empty($row['topic_reported']) && $_CLASS['forums_auth']->acl_gets('m_report', $row['forum_id'])),
+		'S_TOPIC_REPORTED'	=> (!empty($row['topic_reported']) && $_CLASS['forums_auth']->acl_get('m_report', $row['forum_id'])),
 		'S_TOPIC_UNAPPROVED'=> $topic_unapproved,
 		'S_POSTS_UNAPPROVED'=> $posts_unapproved,
 		'NEWEST_POST_IMG' => false

Modified: cms/trunk/includes/functions.php
===================================================================
--- cms/trunk/includes/functions.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/functions.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -317,8 +317,8 @@
 		{
 			$bots[] = $row;
 		}
+		$_CLASS['core_db']->free_result($result);
 
-		$_CLASS['core_db']->free_result($result);
 		$_CLASS['core_cache']->put('bots', $bots);
 	}
 
@@ -342,7 +342,6 @@
 			$censors['word_match'][] = '#\b(' . str_replace('\*', '\w*?', preg_quote($row['word_match'], '#')) . ')\b#i';
 			$censors['word_replace'][] = $row['word_replacement'];
 		}
-
 		$_CLASS['core_db']->free_result($result);
 
 		$_CLASS['core_cache']->put('word_censors', $censors);
@@ -690,7 +689,7 @@
 {
 	global $_CLASS;
 
-	$_CLASS['core_auth']->do_login($login_options, $template);
+	$_CLASS['core_auth']->auth_login($login_options, $template);
 }
 
 function set_core_config($section, $name, $value, $clear_cache = true, $auto_add = false, $type = 'string', $cache = true)
@@ -1068,6 +1067,30 @@
 	}
 }
 
+function group_select_options($group_id, $exclude_ids = false)
+{
+	global $_CLASS, $CORE_CONFIG;
+
+	$exclude_sql = ($exclude_ids !== false && sizeof($exclude_ids)) ? 'WHERE group_id NOT IN ('. implode(', ', array_map('intval', $exclude_ids)) .')' : '';
+	$sql_and = (!$CORE_CONFIG['user']['coppa_enable']) ? (($exclude_sql) ? ' AND ' : ' WHERE ') . "group_name NOT IN ('INACTIVE_COPPA', 'REGISTERED_COPPA')" : '';
+
+	$sql = 'SELECT group_id, group_name, group_type 
+		FROM ' . CORE_GROUPS_TABLE . "
+		$exclude_sql
+		$sql_and
+		ORDER BY group_type DESC, group_name ASC";
+	$result = $_CLASS['core_db']->query($sql);
+
+	$s_group_options = '';
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$selected = ($row['group_id'] == $group_id) ? ' selected="selected"' : '';
+		$s_group_options .= '<option' . (($row['group_type'] == GROUP_SPECIAL) ? ' class="sep"' : '') . ' value="' . $row['group_id'] . '"' . $selected . '>' . (($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name']) . '</option>';
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	return $s_group_options;
+}
 
 // FROM PHPBB
 

Modified: cms/trunk/includes/session.php
===================================================================
--- cms/trunk/includes/session.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/session.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -313,8 +313,10 @@
 		$sql = 'DELETE FROM ' . CORE_SESSIONS_AUTOLOGIN_TABLE . ' 
 			WHERE user_id = '.(INT) $user_id."
 			AND auto_login_code = '" . $_CLASS['core_db']->escape($code) . "'";
-				
+
 		$_CLASS['core_db']->query($sql);
+
+		$_CLASS['core_db']->optimize_tables(CORE_SESSIONS_AUTOLOGIN_TABLE);
 	}
 
 	function session_destroy($session_id = false, $logout = true)

Modified: cms/trunk/includes/templates/admin/modules/edit.html
===================================================================
--- cms/trunk/includes/templates/admin/modules/edit.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/admin/modules/edit.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -1,103 +1,56 @@
-<style type="text/css">@import url(java/jscalendar/skins/aqua/theme.css);</style>
-<script type="text/javascript" src="java/jscalendar/calendar_stripped.js"></script>
-<script type="text/javascript" src="java/jscalendar/lang/calendar-en.js"></script>
-<script type="text/javascript" src="java/jscalendar/calendar-setup.js"></script>
+<!-- DISPLAY_HEADER -->
 
-{ $THEME_TABLE_OPEN }
+{ $THEME_TABLE_OPEN }
 
 <form action="{ $B_ACTION }" method="post">
 	<table class="tablebg" align="center" border="0" cellpadding="4" cellspacing="1" width="100%">
 		<tbody>
-		{ if $B_ERROR }
+			<!-- IF { $ADMIN_PAGE_ERROR } -->
 			<tr> 
 				<td class="row2" align="center" colspan="3">
-					<font color="#990000">{ $B_ERROR }</font>
+					<font class="error">{ $ADMIN_PAGE_ERROR }</font>
 				</td>
 			</tr>
-		{ /if }
+			<!-- ENDIF -->
 			<tr> 
-				<th colspan="3" height="28" valign="middle">{ $B_HEADER }</th>
+				<th colspan="3" height="28" valign="middle">{ $ADMIN_PAGE_NAME }</th>
 			</tr>
-		
 			<tr> 
 				<td class="row1" width="20%"><b class="genmed">{ $L_TITLE }: </b></td>
-		
-				<td class="row2" colspan="2"><input class="post" name="b_title" size="40" maxlength="100" value="{ $B_TITLE }" type="text"></td>
+				<td class="row2" colspan="2"><input class="post" name="b_title" size="40" maxlength="100" value="{ $ADMIN_PAGE_TITLE }" type="text"></td>
 			</tr>
 			<tr> 
 				<td class="row1"><b class="genmed">{ $L_ACTIVE }: </b></td>
-				<td class="row2" colspan="2"><input type="radio" name="b_active" value="1"{ if $B_ACTIVE } checked="checked" { /if }/><span class="genmed">{$L_YES}</span>&nbsp;&nbsp;<input type="radio" name="b_active" value="0"{ if !$B_ACTIVE } checked="checked" { /if }/><span class="genmed">{$L_NO}</span></td>
-			</tr>
-			<tr> 
-				<td class="row1"><b class="genmed">{ $L_STARTS }: </b></td>
-				<td class="row2" >
-					<input class="post" id="b_time" name="b_time" size="35" maxlength="100" value="{ $B_STARTS }" type="text" />
-					<img src="java/jscalendar/calendar.png" style="cursor: pointer;" id="time_trigger" />
-					{ if $B_STARTS }   Currently Set:  { $B_STARTS }{ /if }
+				<td class="row2" colspan="2"></td>
+			</tr>
+		</tbody>
+	</table>
+<br />
+	<table class="tablebg" align="center" border="0" cellpadding="4" cellspacing="1" width="100%">
+		<tbody>
+			<tr>
+		<!-- LOOP $ADMIN_PAGE_BLOCKS_ARRAY -->
+
+			<!-- IF { $ADMIN_PAGE_BLOCKS_ARRAY:#LOOP_NUMBER } % 2 -->
+			</tr><tr>
+			<!-- ENDIF -->
+				<td class="row1" width="20%"><b class="genmed">{ $ADMIN_PAGE_BLOCKS_ARRAY:name }: </b></td>
+				<td class="row2" colspan="2"><input type="checkbox" class="checkbox" name="blocks_array[]" value="{ $ADMIN_PAGE_BLOCKS_ARRAY:value }"<!-- IF { $ADMIN_PAGE_BLOCKS_ARRAY:checked } --> checked="checked"><!-- ENDIF --></td>
+		<!-- ENDLOOP $ADMIN_PAGE_BLOCKS_ARRAY -->
+			</tr>
+		</tbody>
+	</table>
+	<table class="tablebg" align="center" border="0" cellpadding="4" cellspacing="1" width="100%">
+		<tbody>
+			<tr>
+				<td class="cat" colspan="3" align="center" height="28">
+					<input class="button" name="submit" value="Submit" type="submit" />&nbsp;&nbsp;<input class="button" value="Reset" name="reset" type="reset" />
 				</td>
-				<td class="row1" align="center" rowspan="2"><b class="genmed">Current Server Time:</b><br/>{ $B_CURRENT_TIME } </td>
 			</tr>
-			<tr> 
-				<td class="row1"><b class="genmed">{ $L_EXPIRES }: </b></td>
-				<td class="row2">
-					<input class="post" id="b_expires" name="b_expires" size="35" maxlength="100" value="{ $B_EXPIRES }" type="text" />
-					<img src="java/jscalendar/calendar.png" style="cursor: pointer;"  id="expires_trigger" />
-					{ if $B_EXPIRES }    Currently Set:  { $B_EXPIRES }{ /if }
-				</td>
-			</tr>
-			{ if $B_POSITION }
-			<tr> 
-				<td class="row1"><b class="genmed">{ $L_POSITION }: </b></td>
-				<td class="row2" colspan="2"><select name="b_position">{ $B_POSITION }</select></td>
-			</tr>
-			{ /if }
-			{ if $B_RSS_SHOW }
-				<tr> 
-				<td class="row1"><b class="genmed">{ $L_RSS_URL }: </b></td>
-				<td class="row2" colspan="2"><input class="post" name="b_url" size="35" maxlength="100" value="{ $B_RSS_URL }" type="text"></td>
-			</tr>
-			<tr> 
-				<td class="row1"><b class="genmed">{ $L_RSS_REFRESH }: </b></td>
-				<td class="row2" colspan="2"><input class="post" name="b_refresh" size="35" maxlength="100" value="{ $B_RSS_REFRESH }" type="text">{ if $B_EXPIRES }    Currently Set:  { $B_EXPIRES }{ /if }</td>
-			</tr>
-			{ /if }
-			{ if $B_FILE }
-			<tr> 
-				<td class="row1"><b class="genmed">{ $L_FILE }: </b></td>
-				<td class="row2" colspan="2"><select name="b_file">{ $B_FILE }</select> </td>
-		
-			</tr>
-			{ /if }
-			{ if $B_SHOW_CONTENT }
-			<tr> 
-				<td class="row1" valign="top"><b class="genmed">{ $L_HTML_CONTENT }: </b></td>
-				<td class="row2" colspan="2"><textarea name="b_content" id="b_content" editor_enabled="true" style="width:300px; height:200px" cols="63" rows="15">{ $B_CONTENT }</textarea><br /></td>
-			</tr>
-			{ /if }
-			<tr>
-				<td class="cat" colspan="3" align="center" height="28">
-				<input class="btnmain" name="submit" value="Submit" type="submit">&nbsp;&nbsp;<input class="btnlite" value="Reset" name="reset" type="reset"></td>
-			</tr>
 		</tbody>
 	</table>
 </form>
-{literal}
-<script type="text/javascript">
-  Calendar.setup(
-    {
-      inputField  : "b_time",
-      button      : "time_trigger"
-    }
-  );
-</script>
-<script type="text/javascript">
-  Calendar.setup(
-    {
-      inputField  : "b_expires",
-      button      : "expires_trigger"
-    }
-  );
-</script>
-{/literal}
 
-{ $THEME_TABLE_CLOSE }
\ No newline at end of file
+{ $THEME_TABLE_CLOSE }
+
+<!-- DISPLAY_FOOTER -->
\ No newline at end of file

Modified: cms/trunk/includes/templates/modules/control_panel/ucp_pm_viewfolder.html
===================================================================
--- cms/trunk/includes/templates/modules/control_panel/ucp_pm_viewfolder.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/modules/control_panel/ucp_pm_viewfolder.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -49,14 +49,15 @@
 			<!-- ENDIF -->
 			<p class="topictitle">
 				{ $messagerow:ATTACH_ICON_IMG } 
-				
 				<!-- IF { $messagerow:S_PM_DELETED } -->
 					{ $L_MESSAGE_REMOVED_FROM_OUTBOX }<br />
 					<a href="{ $messagerow:U_REMOVE_PM}" style="float:right;">{ $L_DELETE_MESSAGE }</a>
 				<!-- ELSE -->
 					<a href="{ $messagerow:U_VIEW_PM }">{ $messagerow:SUBJECT }</a>
 				<!-- ENDIF -->
-				
+				<!-- IF messagerow.S_AUTHOR_DELETED -->
+					<br /><em class="gensmall">{ $L_PM_FROM_REMOVED_AUTHOR }</em>
+				<!-- ENDIF -->
 			</p></td>
 		<td class="row1" width="100" align="center"><p class="topicauthor"><!-- IF { $S_SHOW_RECIPIENTS } -->{ $messagerow:RECIPIENTS }<!-- ELSE -->{$messagerow:MESSAGE_AUTHOR}<!-- ENDIF --></p></td>
 		<!-- IF { $S_UNREAD } -->

Modified: cms/trunk/includes/templates/modules/control_panel/ucp_pm_viewmessage.html
===================================================================
--- cms/trunk/includes/templates/modules/control_panel/ucp_pm_viewmessage.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/modules/control_panel/ucp_pm_viewmessage.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -12,7 +12,7 @@
 
 	<tr class="row1">
 		<td class="genmed" nowrap="nowrap" width="150"><b>{ $L_PM_FROM }:</b></td>
-		<td class="gen"><a href="{$U_AUTHOR_PROFILE}">{ $AUTHOR_NAME }</a></td>
+		<td class="gen"><!-- IF { $U_AUTHOR_PROFILE } --><a href="{ $U_AUTHOR_PROFILE }">{ $AUTHOR_NAME }</a><!-- ELSE -->{ $AUTHOR_NAME }<!-- ENDIF --></td>
 	</tr>
 
 	<tr class="row1">
@@ -25,7 +25,11 @@
 		<td class="genmed" nowrap="nowrap" width="150"><b>{ $L_TO }:</b></td>
 		<td class="gen">
 		<!-- LOOP $to_recipient -->
-			<a href="{ $to_recipient:U_VIEW }"><!-- IF { $to_recipient:COLOUR } --><span style="color:#{ $to_recipient:COLOUR }"><!-- ELSE --><span<!-- IF { $to_recipient:IS_GROUP} --> class="blue"<!-- ENDIF -->><!-- ENDIF -->{ $to_recipient:NAME }</span></a>&nbsp;
+			<!-- IF !{ $to_recipient:U_VIEW } -->
+				<span<!-- IF { $to_recipient:COLOUR } --> style="color:#{ $to_recipient:COLOUR }"<!-- ELSEIF { $to_recipient:IS_GROUP } --> class="blue"<!-- ENDIF -->{ $to_recipient:NAME }</span>&nbsp;
+			<!-- ELSE -->
+				<a href="{ $to_recipient:U_VIEW }"><!-- IF { $to_recipient:COLOUR } --><span style="color:#{ $to_recipient:COLOUR }"><!-- ELSE --><span<!-- IF { $to_recipient:IS_GROUP} --> class="blue"<!-- ENDIF -->><!-- ENDIF -->{ $to_recipient:NAME }</span></a>&nbsp;
+			<!-- ENDIF -->
 		<!-- ENDLOOP $to_recipient -->
 		</td>
 	</tr>
@@ -36,7 +40,11 @@
 		<td class="genmed" nowrap="nowrap" width="150"><b>{ $L_BCC }:</b></td>
 		<td class="gen">
 		<!-- LOOP $bcc_recipient -->
-			<a href="{ $bcc_recipient:U_VIEW }"><!-- IF { $bcc_recipient:COLOUR } --><span style="color:#{ $bcc_recipient:COLOUR }"><!-- ELSE --><span<!-- IF { $bcc_recipient:IS_GROUP } --> class="blue"<!-- ENDIF -->><!-- ENDIF -->{ $bcc_recipient:NAME }</span></a>&nbsp;
+			<!-- IF !{ $bcc_recipient:U_VIEW } -->
+				<span<!-- IF { $bcc_recipient:COLOUR } --> style="color:#{ $bcc_recipient:COLOUR }"<!-- ELSEIF { $bcc_recipient:IS_GROUP } --> class="blue"<!-- ENDIF -->{ $bcc_recipient:NAME }</span>&nbsp;
+			<!-- ELSE -->
+				<a href="{ $bcc_recipient:U_VIEW }"><!-- IF { $bcc_recipient:COLOUR } --><span style="color:#{ $bcc_recipient:COLOUR }"><!-- ELSE --><span<!-- IF { $bcc_recipient:IS_GROUP } --> class="blue"<!-- ENDIF -->><!-- ENDIF -->{ $bcc_recipient:NAME }</span></a>&nbsp;
+			<!-- ENDIF -->
 		<!-- ENDLOOP $bcc_recipient -->
 		</td>
 	</tr>

Modified: cms/trunk/includes/templates/modules/forums/admin/acp_forums.html
===================================================================
--- cms/trunk/includes/templates/modules/forums/admin/acp_forums.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/modules/forums/admin/acp_forums.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -67,7 +67,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_TYPE }:
+			<strong>{ $L_FORUM_TYPE }:</strong>
 		</td>
 		<td class="row2">
 			<select id="forum_type" name="forum_type" onchange="display_options(this.options[this.selectedIndex].value);">{ $S_FORUM_TYPE_OPTIONS }</select>
@@ -77,7 +77,7 @@
 	<!-- IF !{ $S_ADD_ACTION } && { $S_FORUM_ORIG_POST } -->
 	<tr id="type_actions"<!-- IF { $S_FORUM_POST } --> style="display: none;"<!-- ENDIF -->>
 		<td  width="40%" class="row1">
-			{ $L_DECIDE_MOVE_DELETE_CONTENT }:
+			<strong>{ $L_DECIDE_MOVE_DELETE_CONTENT }:</strong>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" id="type_action" name="type_action" value="delete" checked="checked" /> { $L_DELETE_ALL_POSTS }
@@ -87,7 +87,7 @@
 	<!-- ENDIF -->
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_PARENT }:
+			<strong>{ $L_FORUM_PARENT }:</strong>
 		</td>
 		<td class="row2">
 			<select id="parent" name="forum_parent_id"><option value="0"<!-- IF !{ $S_FORUM_PARENT_ID } --> selected="selected"<!-- ENDIF -->>{ $L_NO_PARENT }</option>{ $S_PARENT_OPTIONS }</select>
@@ -95,15 +95,15 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_NAME }:
+			<strong>{ $L_FORUM_NAME }:</strong>
 		</td>
 		<td class="row2">
 			<input class="medium" type="text" id="forum_name" name="forum_name" value="{ $FORUM_NAME }" />
 		</td>
 	</tr>
 	<tr>
-		<td  width="40%" class="row1">
-			{ $L_FORUM_DESC }:<br /><span>{ $L_FORUM_DESC_EXPLAIN }</span>
+		<td valign="top" width="40%" class="row1">
+			<strong>{ $L_FORUM_DESC }:</strong><br /><span>{ $L_FORUM_DESC_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<textarea id="forum_desc" name="forum_desc" rows="5" cols="45">{ $FORUM_DESC }</textarea>
@@ -113,7 +113,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_IMAGE }:<br /><span>{ $L_FORUM_IMAGE_EXPLAIN }</span></dt>
+			<strong>{ $L_FORUM_IMAGE }:</strong><br /><span>{ $L_FORUM_IMAGE_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input class="medium" type="text" id="forum_image" name="forum_image" value="{ $FORUM_IMAGE }" />
@@ -124,7 +124,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_STYLE }:</dt>
+			<strong>{ $L_FORUM_STYLE }:</strong>
 		</td>
 		<td class="row2">
 			<select id="forum_style" name="forum_style"><option value="0">{ $L_DEFAULT_STYLE }</option>{ $S_STYLES_OPTIONS }</select>
@@ -132,7 +132,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_COPY_PERMISSIONS }:<br /><span>{ $L_COPY_PERMISSIONS_EXPLAIN }</span>
+			<strong>{ $L_COPY_PERMISSIONS }:</strong><br /><span>{ $L_COPY_PERMISSIONS_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<select id="forum_perm_from" name="forum_perm_from"><option value="0">{ $L_NO_PERMISSIONS }</option>{ $S_FORUM_OPTIONS }</select>
@@ -150,7 +150,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_DISPLAY_ACTIVE_TOPICS }:<br /><span>{ $L_DISPLAY_ACTIVE_TOPICS_EXPLAIN }</span>
+			<strong>{ $L_DISPLAY_ACTIVE_TOPICS }:</strong><br /><span>{ $L_DISPLAY_ACTIVE_TOPICS_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="display_active" value="1"<!-- IF { $S_DISPLAY_ACTIVE_TOPICS } --> id="display_active" checked="checked"<!-- ENDIF --> /> { $L_YES } &nbsp; <input type="radio" class="radio" name="display_active" value="0"<!-- IF !{ $S_DISPLAY_ACTIVE_TOPICS } --> id="display_active" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -165,12 +165,12 @@
 <table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
 	<tr>
 		<th colspan="2">
-			{ $L_GENERAL_FORUM_SETTINGS }</legend>
+			{ $L_GENERAL_FORUM_SETTINGS }
 		</th>
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			<label for="forum_status">{ $L_FORUM_STATUS }:
+			<strong>{ $L_FORUM_STATUS }:</strong>
 		</td>
 		<td class="row2">
 			<select id="forum_status" name="forum_status">{ $S_STATUS_OPTIONS }</select>
@@ -179,7 +179,7 @@
 	<!-- IF { $S_SHOW_DISPLAY_ON_INDEX } -->
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_LIST_INDEX }:<br /><span>{ $L_LIST_INDEX_EXPLAIN }</span>
+			<strong>{ $L_LIST_INDEX }:</strong><br /><span>{ $L_LIST_INDEX_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="display_on_index" value="1"<!-- IF { $S_DISPLAY_ON_INDEX } --> id="display_on_index" checked="checked"<!-- ENDIF --> /> { $L_YES } &nbsp; <input type="radio" class="radio" name="display_on_index" value="0"<!-- IF !{ $S_DISPLAY_ON_INDEX } --> id="display_on_index" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -188,7 +188,7 @@
 	<!-- ENDIF -->
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_ENABLE_POST_REVIEW }:<br /><span>{ $L_ENABLE_POST_REVIEW_EXPLAIN }</span>
+			<strong>{ $L_ENABLE_POST_REVIEW }:</strong><br /><span>{ $L_ENABLE_POST_REVIEW_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="enable_post_review" value="1"<!-- IF { $S_ENABLE_POST_REVIEW } --> id="enable_post_review" checked="checked"<!-- ENDIF --> /> { $L_YES } &nbsp; <input type="radio" class="radio" name="enable_post_review" value="0"<!-- IF !{ $S_ENABLE_POST_REVIEW } --> id="enable_post_review" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -196,7 +196,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_ENABLE_INDEXING }:<br /><span>{ $L_ENABLE_INDEXING_EXPLAIN}</span>
+			<strong>{ $L_ENABLE_INDEXING }:</strong><br /><span>{ $L_ENABLE_INDEXING_EXPLAIN}</span>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="enable_indexing" value="1"<!-- IF { $S_ENABLE_INDEXING } --> id="enable_indexing" checked="checked"<!-- ENDIF --> /> { $L_YES} &nbsp; <input type="radio" class="radio" name="enable_indexing" value="0"<!-- IF !{ $S_ENABLE_INDEXING } --> id="enable_indexing" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -204,7 +204,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_ENABLE_TOPIC_ICONS }:
+			<strong>{ $L_ENABLE_TOPIC_ICONS }:</strong>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="enable_icons" value="1"<!-- IF { $S_TOPIC_ICONS } --> id="enable_icons" checked="checked"<!-- ENDIF --> /> { $L_YES} &nbsp; <input type="radio" class="radio" name="enable_icons" value="0"<!-- IF !{ $S_TOPIC_ICONS } --> id="enable_icons" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -212,7 +212,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_ENABLE_RECENT }:<br /><span>{ $L_ENABLE_RECENT_EXPLAIN}</span>
+			<strong>{ $L_ENABLE_RECENT }:</strong><br /><span>{ $L_ENABLE_RECENT_EXPLAIN}</span>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="display_recent" value="1"<!-- IF { $S_DISPLAY_ACTIVE_TOPICS } --> id="display_recent" checked="checked"<!-- ENDIF --> /> { $L_YES} &nbsp; <input type="radio" class="radio" name="display_recent" value="0"<!-- IF !{ $S_DISPLAY_ACTIVE_TOPICS } --> id="display_recent" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -220,7 +220,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_TOPICS_PAGE }:<br /><span>{ $L_FORUM_TOPICS_PAGE_EXPLAIN}</span>
+			<strong>{ $L_FORUM_TOPICS_PAGE }:</strong><br /><span>{ $L_FORUM_TOPICS_PAGE_EXPLAIN}</span>
 		</td>
 		<td class="row2">
 			<input type="text" id="topics_per_page" name="topics_per_page" value="{ $TOPICS_PER_PAGE }" />
@@ -228,7 +228,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_PASSWORD }:<br /><span>{ $L_FORUM_PASSWORD_EXPLAIN}</span>
+			<strong>{ $L_FORUM_PASSWORD }:</strong><br /><span>{ $L_FORUM_PASSWORD_EXPLAIN}</span>
 		</td>
 		<td class="row2">
 			<input type="password" id="forum_password" name="forum_password" value="{ $FORUM_PASSWORD }" />
@@ -236,7 +236,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_PASSWORD_CONFIRM }:<br /><span>{ $L_FORUM_PASSWORD_CONFIRM_EXPLAIN}</span>
+			<strong>{ $L_FORUM_PASSWORD_CONFIRM }:</strong><br /><span>{ $L_FORUM_PASSWORD_CONFIRM_EXPLAIN}</span>
 		</td>
 		<td class="row2">
 			<input type="password" id="forum_password_confirm" name="forum_password_confirm" value="{ $FORUM_PASSWORD_CONFIRM }" />
@@ -252,7 +252,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_AUTO_PRUNE }:<br /><span>{ $L_FORUM_AUTO_PRUNE_EXPLAIN}</span>
+			<strong>{ $L_FORUM_AUTO_PRUNE }:</strong><br /><span>{ $L_FORUM_AUTO_PRUNE_EXPLAIN}</span>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="enable_prune" value="1"<!-- IF { $S_PRUNE_ENABLE } --> id="enable_prune" checked="checked"<!-- ENDIF --> /> { $L_YES } &nbsp; <input type="radio" class="radio" name="enable_prune" value="0"<!-- IF !{ $S_PRUNE_ENABLE } --> id="enable_prune" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -260,7 +260,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_AUTO_PRUNE_FREQ }:<br /><span>{ $L_AUTO_PRUNE_FREQ_EXPLAIN }</span>
+			<strong>{ $L_AUTO_PRUNE_FREQ }:</strong><br /><span>{ $L_AUTO_PRUNE_FREQ_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input type="text" id="prune_freq" name="prune_freq" value="{ $PRUNE_FREQ }" /> { $L_DAYS }
@@ -268,7 +268,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_AUTO_PRUNE_DAYS }:<br /><span>{ $L_AUTO_PRUNE_DAYS_EXPLAIN }</span>
+			<strong>{ $L_AUTO_PRUNE_DAYS }:</strong><br /><span>{ $L_AUTO_PRUNE_DAYS_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input type="text" id="prune_days" name="prune_days" value="{ $PRUNE_DAYS }" /> { $L_DAYS }
@@ -276,7 +276,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_AUTO_PRUNE_VIEWED }:<br /><span>{ $L_AUTO_PRUNE_VIEWED_EXPLAIN }</span>
+			<strong>{ $L_AUTO_PRUNE_VIEWED }:</strong><br /><span>{ $L_AUTO_PRUNE_VIEWED_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input type="text" id="prune_viewed" name="prune_viewed" value="{ $PRUNE_VIEWED }" /> { $L_DAYS }
@@ -284,7 +284,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_PRUNE_OLD_POLLS }:<br /><span>{ $L_PRUNE_OLD_POLLS_EXPLAIN }</span>
+			<strong>{ $L_PRUNE_OLD_POLLS }:</strong><br /><span>{ $L_PRUNE_OLD_POLLS_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="prune_old_polls" value="1"<!-- IF { $S_PRUNE_OLD_POLLS } --> id="prune_old_polls" checked="checked"<!-- ENDIF --> /> { $L_YES } &nbsp; <input type="radio" class="radio" name="prune_old_polls" value="0"<!-- IF !{ $S_PRUNE_OLD_POLLS } --> id="prune_old_polls" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -292,7 +292,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_PRUNE_ANNOUNCEMENTS}:
+			<strong>{ $L_PRUNE_ANNOUNCEMENTS}:</strong>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="prune_announce" value="1"<!-- IF { $S_PRUNE_ANNOUNCE } --> id="prune_announce" checked="checked"<!-- ENDIF --> /> { $L_YES } &nbsp; <input type="radio" class="radio" name="prune_announce" value="0"<!-- IF !{ $S_PRUNE_ANNOUNCE } --> id="prune_announce" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -300,7 +300,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_PRUNE_STICKY}:
+			<strong>{ $L_PRUNE_STICKY}:</strong>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="prune_sticky" value="1"<!-- IF { $S_PRUNE_STICKY } --> id="prune_sticky" checked="checked"<!-- ENDIF --> /> { $L_YES} &nbsp; <input type="radio" class="radio" name="prune_sticky" value="0"<!-- IF !{ $S_PRUNE_STICKY } --> id="prune_sticky" checked="checked"<!-- ENDIF --> /> { $L_NO}
@@ -320,7 +320,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_LINK }:<br /><span>{ $L_FORUM_LINK_EXPLAIN }</span>
+			<strong>{ $L_FORUM_LINK }:</strong><br /><span>{ $L_FORUM_LINK_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input class="medium" type="text" id="forum_link" name="forum_link" value="{ $FORUM_DATA_LINK }" />
@@ -328,7 +328,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_LINK_TRACK }:<br /><span>{ $L_FORUM_LINK_TRACK_EXPLAIN }</span>
+			<strong>{ $L_FORUM_LINK_TRACK }:</strong><br /><span>{ $L_FORUM_LINK_TRACK_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" name="forum_link_track" value="1"<!-- IF { $S_FORUM_LINK_TRACK } --> id="forum_link_track" checked="checked"<!-- ENDIF --> /> { $L_YES } &nbsp; <input type="radio" class="radio" name="forum_link_track" value="0"<!-- IF !{ $S_FORUM_LINK_TRACK } --> id="forum_link_track" checked="checked"<!-- ENDIF --> /> { $L_NO }
@@ -347,8 +347,8 @@
 		</th>
 	</tr>
 	<tr>
-		<td  width="40%" class="row1">
-			{ $L_FORUM_RULES_LINK }:<br /><span>{ $L_FORUM_RULES_LINK_EXPLAIN }</span>
+		<td width="40%" class="row1">
+			<strong>{ $L_FORUM_RULES_LINK }:</strong><br /><span>{ $L_FORUM_RULES_LINK_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<input class="medium" type="text" id="forum_rules_link" name="forum_rules_link" value="{ $FORUM_RULES_LINK }" />
@@ -357,7 +357,7 @@
 	<!-- IF { $FORUM_RULES_PREVIEW } -->
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_RULES_PREVIEW }:
+			<strong>{ $L_FORUM_RULES_PREVIEW }:</strong>
 		</td>
 		<td class="row2">
 			{ $FORUM_RULES_PREVIEW }
@@ -365,8 +365,8 @@
 	</tr>
 	<!-- ENDIF -->
 	<tr>
-		<td  width="40%" class="row1">
-			{ $L_FORUM_RULES }:<br /><span>{ $L_FORUM_RULES_EXPLAIN }</span>
+		<td valign="top" width="40%" class="row1">
+			<strong>{ $L_FORUM_RULES }:</strong><br /><span>{ $L_FORUM_RULES_EXPLAIN }</span>
 		</td>
 		<td class="row2">
 			<textarea id="forum_rules" name="forum_rules" rows="4" cols="70">{ $FORUM_RULES_PLAIN }</textarea>
@@ -413,7 +413,7 @@
 	</tr>
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_FORUM_NAME }:
+			<strong>{ $L_FORUM_NAME }:</strong>
 		</td>
 		<td class="row2">
 			<b>{ $FORUM_NAME }</b>
@@ -422,7 +422,7 @@
 	<!-- IF { $S_FORUM_POST } -->
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_ACTION }:
+			<strong>{ $L_ACTION }:</strong>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" id="delete_action" name="action_posts" value="delete" checked="checked" /> { $L_DELETE_ALL_POSTS}
@@ -434,7 +434,7 @@
 	<!-- IF { $S_HAS_SUBFORUMS } -->
 	<tr>
 		<td  width="40%" class="row1">
-			{ $L_ACTION }:
+			<strong>{ $L_ACTION }:</strong>
 		</td>
 		<td class="row2">
 			<input type="radio" class="radio" id="sub_delete_action" name="action_subforums" value="delete" checked="checked" /> { $L_DELETE_SUBFORUMS }
@@ -477,40 +477,59 @@
 			<p>{ $L_FORUM_RESYNCED }</p>
 		</div>
 	<!-- ENDIF -->
-	
-	<p><strong>{ $NAVIGATION }<!-- IF { $S_NO_FORUMS } --> [<a href="{ $U_EDIT }">{ $L_EDIT }</a> | <a href="{ $U_DELETE }">{ $L_DELETE }</a><!-- IF !{ $S_LINK } --> | <a href="{ $U_SYNC }">{ $L_RESYNC }</a><!-- ENDIF --->]<!-- ENDIF --></strong></p>
-
-	<!-- IF !empty({ $forums }) -->
-		<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-			<col class="row1" /><col class="row1" /><col class="row2" />
+	<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
 		<tbody>
+			<tr>
+				<td colspan="3" class="cat">
+					<strong>
+					{ $NAVIGATION }
+					<!-- IF { $S_NO_FORUMS } -->
+						[ <a href="{ $U_EDIT }">{ $L_EDIT }</a> | <a href="{ $U_DELETE }">{ $L_DELETE }</a><!-- IF !isset({ $S_LINK }) || !{ $S_LINK } --> | <a href="{ $U_SYNC }">{ $L_RESYNC }</a><!-- ENDIF ---> ]
+					<!-- ENDIF -->
+					</strong>
+				 </td>
+			</tr>
 		<!-- LOOP $forums -->
 			<tr>
-				<td style="width: 5%;">{ $forums:FOLDER_IMAGE }</td>
-				<td>
-					<strong><!-- IF isset({ $forums:S_LINK }) && { $forums:S_LINK } -->{ $forums:FORUM_NAME }<!-- ELSE --><a href="{ $forums:U_FORUM }">{ $forums:FORUM_NAME }</a><!-- ENDIF --></strong>
+				<td class="row1" style="width: 5%;">{ $forums:FOLDER_IMAGE }</td>
+				<td class="row1">
+					<strong><!-- IF { $forums:S_FORUM_LINK } -->{ $forums:FORUM_NAME }<!-- ELSE --><a href="{ $forums:U_FORUM }">{ $forums:FORUM_NAME }</a><!-- ENDIF --></strong>
 					<!-- IF { $forums:FORUM_DESCRIPTION } --><br /><span>{ $forums:FORUM_DESCRIPTION }</span><!-- ENDIF -->
-					<!-- IF { $forums:S_FORUM_POST } --><br /><br /><span>{ $L_TOPICS }: <b>{ $forums:FORUM_TOPICS }</b> / { $L_POSTS }: <b>{ $forums:FORUM_POSTS }</b></span><!-- ENDIF -->
+					<!-- IF { $forums:S_FORUM_POST } --><br /><br /><span>{ $L_TOPICS }:</strong> <b>{ $forums:FORUM_TOPICS }</b> / { $L_POSTS }:</strong> <b>{ $forums:FORUM_POSTS }</b></span><!-- ENDIF -->
 				</td>
-				<td style="width: 15%; text-align: right; white-space: nowrap;">
-					<!-- IF !{ $forums:#LOOP_START } --><a href="{ $forums:U_MOVE_UP }">{ $ICON_MOVE_UP }</a> <!-- ENDIF -->
-					<!-- IF !{ $forums:#LOOP_END } --><a href="{ $forums:U_MOVE_DOWN }">{ $ICON_MOVE_DOWN }</a> <!-- ENDIF -->
+				<td class="row2" style="vertical-align: top; width: 100px; text-align: right; white-space: nowrap;">
+					<!-- IF !{ $forums:#LOOP_START } && !{ $forums:#LOOP_END } -->
+						{ $ICON_MOVE_UP_DISABLED }
+						<a href="{ $forums:U_MOVE_UP }">{ $ICON_MOVE_DOWN }</a>
+					<!-- ELSEIF !{ $forums:#LOOP_START } && !{ $forums:#LOOP_END }-->
+						<a href="{ $forums:U_MOVE_UP }">{ $ICON_MOVE_UP }</a> 
+						<a href="{ $forums:U_MOVE_DOWN }">{ $ICON_MOVE_DOWN }</a> 
+					<!-- ELSEIF  { $forums:#LOOP_END } && !{ $forums:#LOOP_START } -->						
+						<a href="{ $forums:U_MOVE_UP }">{ $ICON_MOVE_UP }</a>	
+						{ $ICON_MOVE_DOWN_DISABLED }
+					<!-- ELSE -->
+						{ $ICON_MOVE_UP_DISABLED }
+						{ $ICON_MOVE_DOWN_DISABLED }			
+					<!-- ENDIF -->					
 					<a href="{ $forums:U_EDIT }">{ $ICON_EDIT }</a> 
-					<!-- IF !isset({ $forums:S_LINK }) || !{ $forums:S_LINK } --><a href="{ $forums:U_SYNC }">{ $ICON_SYNC }</a> <!-- ENDIF -->
+					<!-- IF !{ $forums:S_FORUM_LINK } -->
+						<a href="{ $forums:U_SYNC }">{ $ICON_SYNC }</a> 
+					<!-- ELSE -->
+						{ $ICON_SYNC_DISABLED }
+					<!-- ENDIF -->
 					<a href="{ $forums:U_DELETE }">{ $ICON_DELETE }</a>
 				</td>
 			</tr>
 		<!-- ENDLOOP $forums -->
 		</tbody>
-	</table>
-	<!-- ENDIF -->
+	</table>
 
 	<form id="fselect" method="post" action="{ $U_SEL_ACTION }">
 
 	<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
 		<tr>
 			<td align="right" class="row1">
-				{ $L_SELECT_FORUM }: <select name="parent_id" onchange="if(this.options[this.selectedIndex].value != -1){ this.form.submit(); }">{ $FORUM_BOX }</select> 
+				<strong>{ $L_SELECT_FORUM }:</strong> <select name="parent_id" onchange="if(this.options[this.selectedIndex].value != -1){ this.form.submit(); }">{ $FORUM_BOX }</select> 
 				<input class="button" type="submit" value="{ $L_GO }" />
 			</td>
 		</tr>

Modified: cms/trunk/includes/templates/modules/forums/admin/acp_main.html
===================================================================
--- cms/trunk/includes/templates/modules/forums/admin/acp_main.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/modules/forums/admin/acp_main.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -1,100 +1,107 @@
 <!-- INCLUDE modules/forums/admin/overall_header.html -->
 
-<a name="maincontent"></a><h1>{ $L_WELCOME_PHPBB }</h1>
+<a name="maincontent"></a>
 
-<p>{ $L_ADMIN_INTRO }</p>
-
-<form id="stats" method="post" action="{ $U_ACTION }">
-
-<table class="tablebg" width="100%" cellspacing="1">
-	<caption>{ $L_FORUM_STATS }</caption>
-<thead>
-	<tr>
-		<th>{ $L_STATISTIC }</th>
-		<th>{ $L_VALUE }</th>
-		<th>{ $L_STATISTIC }</th>
-		<th>{ $L_VALUE }</th>
-	</tr>
-</thead>
-<tbody>
-	<tr>
-		<td class="row1">{ $L_NUMBER_POSTS }: </td>
-		<td class="row2"><b>{ $TOTAL_POSTS }</b></td>
-		<td class="row1">{ $L_POSTS_PER_DAY }: </td>
-		<td class="row2"><b>{ $POSTS_PER_DAY }</b></td>
-	</tr>
-	<tr>
-		<td class="row1">{ $L_NUMBER_TOPICS }: </td>
-		<td class="row2"><b>{ $TOTAL_TOPICS }</b></td>
-		<td class="row1">{ $L_TOPICS_PER_DAY }: </td>
-		<td class="row2"><b>{ $TOPICS_PER_DAY }</b></td>
-	</tr>
-	<tr>
-		<td class="row1">{ $L_NUMBER_USERS }: </td>
-		<td class="row2"><b>{ $TOTAL_USERS }</b></td>
-		<td class="row1">{ $L_USERS_PER_DAY }: </td>
-		<td class="row2"><b>{ $USERS_PER_DAY }</b></td>
-	</tr>
-	<tr>
-		<td class="row1">{ $L_NUMBER_FILES }: </td>
-		<td class="row2"><b>{ $TOTAL_FILES }</b></td>
-		<td class="row1">{ $L_FILES_PER_DAY }: </td>
-		<td class="row2"><b>{ $FILES_PER_DAY }</b></td>
-	</tr>
-	<tr>
-		<td class="row1">{ $L_BOARD_STARTED }: </td>
-		<td class="row2"><b>{ $START_DATE }</b></td>
-		<td class="row1">{ $L_AVATAR_DIR_SIZE }: </td>
-		<td class="row2"><b>{ $AVATAR_DIR_SIZE }</b></td>
-	</tr>
-	<tr>
-		<td class="row1">{ $L_UPLOAD_DIR_SIZE }: </td>
-		<td class="row2"><b>{ $UPLOAD_DIR_SIZE }</b></td>
-	</tr>
-<!-- IF { $S_ACTION_OPTIONS } -->
-	<tr>
-		<td class="cat" colspan="4" align="right">
+<!-- IF { $S_RESTORE_PERMISSIONS } -->
+	<h1>{ $L_PERMISSIONS_TRANSFERED }</h1>
+	<p>{ $L_PERMISSIONS_TRANSFERED_EXPLAIN }</p>
+<!-- ELSE -->
+	<h1>{ $L_WELCOME_PHPBB }</h1>
 	
-		<select name="action">{ $S_ACTION_OPTIONS }</select>
-		<input class="button" type="submit" name="submit" value="{ $L_SUBMIT }" />
-	</tr>
-<!-- ENDIF -->
-</tbody>
-</table>
-
-</form>
-
-
-<!-- IF !empty({ $log }) -->
-	<h2>{ $L_ADMIN_LOG }</h2>
-
-	<p>{ $L_ADMIN_LOG_INDEX_EXPLAIN }</p>
-
+	<p>{ $L_ADMIN_INTRO }</p>
+	
+	<form id="stats" method="post" action="{ $U_ACTION }">
+	
 	<table class="tablebg" width="100%" cellspacing="1">
+		<caption>{ $L_FORUM_STATS }</caption>
 	<thead>
-	<tr>
-		<th>{ $L_USERNAME }</th>
-		<th>{ $L_IP }</th>
-		<th>{ $L_TIME }</th>
-		<th>{ $L_ACTION }</th>
-	</tr>
+		<tr>
+			<th>{ $L_STATISTIC }</th>
+			<th>{ $L_VALUE }</th>
+			<th>{ $L_STATISTIC }</th>
+			<th>{ $L_VALUE }</th>
+		</tr>
 	</thead>
 	<tbody>
-	<!-- LOOP $log -->
-		<!-- IF { $log:#LOOP_INDEX } % 2 --><tr class="row1"><!-- ELSE --><tr class="row2"><!-- ENDIF -->
-
-			<td class="row1">{ $log:USERNAME }</td>
-			<td style="text-align: center;">{ $log:IP }</td>
-			<td style="text-align: center;">{ $log:DATE }</td>
-			<td class="row1">{ $log:ACTION }</td>
+		<tr>
+			<td class="row1">{ $L_NUMBER_POSTS }: </td>
+			<td class="row2"><b>{ $TOTAL_POSTS }</b></td>
+			<td class="row1">{ $L_POSTS_PER_DAY }: </td>
+			<td class="row2"><b>{ $POSTS_PER_DAY }</b></td>
 		</tr>
-	<!-- ENDLOOP $log -->
+		<tr>
+			<td class="row1">{ $L_NUMBER_TOPICS }: </td>
+			<td class="row2"><b>{ $TOTAL_TOPICS }</b></td>
+			<td class="row1">{ $L_TOPICS_PER_DAY }: </td>
+			<td class="row2"><b>{ $TOPICS_PER_DAY }</b></td>
+		</tr>
+		<tr>
+			<td class="row1">{ $L_NUMBER_USERS }: </td>
+			<td class="row2"><b>{ $TOTAL_USERS }</b></td>
+			<td class="row1">{ $L_USERS_PER_DAY }: </td>
+			<td class="row2"><b>{ $USERS_PER_DAY }</b></td>
+		</tr>
+		<tr>
+			<td class="row1">{ $L_NUMBER_FILES }: </td>
+			<td class="row2"><b>{ $TOTAL_FILES }</b></td>
+			<td class="row1">{ $L_FILES_PER_DAY }: </td>
+			<td class="row2"><b>{ $FILES_PER_DAY }</b></td>
+		</tr>
+		<tr>
+			<td class="row1">{ $L_BOARD_STARTED }: </td>
+			<td class="row2"><b>{ $START_DATE }</b></td>
+			<td class="row1">{ $L_AVATAR_DIR_SIZE }: </td>
+			<td class="row2"><b>{ $AVATAR_DIR_SIZE }</b></td>
+		</tr>
+		<tr>
+			<td class="row1">{ $L_UPLOAD_DIR_SIZE }: </td>
+			<td class="row2"><b>{ $UPLOAD_DIR_SIZE }</b></td>
+		</tr>
+	<!-- IF { $S_ACTION_OPTIONS } -->
+		<tr>
+			<td class="cat" colspan="4" align="right">
+		
+			<select name="action">{ $S_ACTION_OPTIONS }</select>
+			<input class="button" type="submit" name="submit" value="{ $L_SUBMIT }" />
+		</tr>
+	<!-- ENDIF -->
 	</tbody>
-	</table>
+	</table>
+	
+	</form>
+	
+	
+	<!-- IF !empty({ $log }) -->
+		<h2>{ $L_ADMIN_LOG }</h2>
+	
+		<p>{ $L_ADMIN_LOG_INDEX_EXPLAIN }</p>
+	
+		<table class="tablebg" width="100%" cellspacing="1">
+		<thead>
+		<tr>
+			<th>{ $L_USERNAME }</th>
+			<th>{ $L_IP }</th>
+			<th>{ $L_TIME }</th>
+			<th>{ $L_ACTION }</th>
+		</tr>
+		</thead>
+		<tbody>
+		<!-- LOOP $log -->
+			<!-- IF { $log:#LOOP_INDEX } % 2 --><tr class="row1"><!-- ELSE --><tr class="row2"><!-- ENDIF -->
+	
+				<td class="row1">{ $log:USERNAME }</td>
+				<td style="text-align: center;">{ $log:IP }</td>
+				<td style="text-align: center;">{ $log:DATE }</td>
+				<td class="row1">{ $log:ACTION }</td>
+			</tr>
+		<!-- ENDLOOP $log -->
+		</tbody>
+		</table>
+	
+		<br />
+		<div style="text-align: right;"><a href="{ $U_ADMIN_LOG}">&raquo; { $L_VIEW_ADMIN_LOG }</a></div>
+	
+	<!-- ENDIF -->
+<!-- ENDIF -->
 
-	<br />
-	<div style="text-align: right;"><a href="{ $U_ADMIN_LOG}">&raquo; { $L_VIEW_ADMIN_LOG }</a></div>
-
-<!-- ENDIF -->
-
 <!-- INCLUDE modules/forums/admin/overall_footer.html -->
\ No newline at end of file

Added: cms/trunk/includes/templates/modules/forums/admin/acp_permissions.html
===================================================================
--- cms/trunk/includes/templates/modules/forums/admin/acp_permissions.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/modules/forums/admin/acp_permissions.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,500 @@
+<!-- INCLUDE modules/forums/admin/overall_header.html -->
+
+<a name="maincontent"></a>
+
+<!-- IF { $S_INTRO } -->
+	
+	<h1>{ $L_ACP_PERMISSIONS }</h1>
+
+	{ $L_ACP_PERMISSIONS_EXPLAIN }
+
+<!-- ENDIF -->
+
+<!-- IF { $S_SELECT_VICTIM } -->
+
+	<h1>{ $L_TITLE }</h1>
+
+	<p>{ $L_EXPLAIN }</p>
+	
+	<!-- IF { $S_FORUM_NAMES } -->
+		<p><b>{ $L_FORUMS }:</b> { $FORUM_NAMES }</p>
+	<!-- ENDIF -->
+
+	<!-- IF { $S_SELECT_FORUM } -->
+
+		<form id="select_victim" method="post" action="{ $U_ACTION }">
+
+		<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+			<tr>
+				<th colspan="2">
+					{ $L_LOOK_UP_FORUM }
+				</th>
+			</tr>
+			<!-- IF { $S_FORUM_MULTIPLE } -->
+			<tr>
+				<td  class="row1" colspan="2">
+					{ $L_LOOK_UP_FORUMS_EXPLAIN }
+				</td>
+			</tr>
+			<!-- ENDIF -->
+			<tr>
+				<td width="40%" class="row1">
+					{ $L_LOOK_UP_FORUM }:
+				</td>
+				<td class="row2">
+					<select id="forum" name="forum_id[]"<!-- IF { $S_FORUM_MULTIPLE } --> multiple="multiple"<!-- ENDIF --> size="10">{ $S_FORUM_OPTIONS }</select>
+					<!-- IF { $S_FORUM_ALL } -->
+						<br/><input type="checkbox" class="radio" name="all_forums" value="1" />&nbsp; { $L_ALL_FORUMS }
+					<!-- ENDIF -->
+				</td>
+			</tr>
+			<tr>
+				<td colspan="2" class="row1">
+					{ $S_HIDDEN_FIELDS }
+					<input type="submit" name="submit" value="{ $L_SUBMIT }" class="button" />
+				</td>
+			</tr>
+		</table>
+
+		</form>
+
+		<!-- IF { $S_FORUM_MULTIPLE } -->
+
+			<form id="select_subforum" method="post" action="{ $U_ACTION }">
+	
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th colspan="2">
+						{ $L_LOOK_UP_FORUM }
+					</th>
+				</tr>
+				<tr>
+					<td class="row1" colspan="2">
+						{ $L_SELECT_FORUM_SUBFORUM_EXPLAIN }
+					</td>
+				</tr>
+				<tr>
+					<td width="40%" class="row1">
+						{ $L_LOOK_UP_FORUM }:
+					</td>
+					<td class="row2">
+						<select id="sforum" name="subforum_id">{ $S_SUBFORUM_OPTIONS }</select>
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input type="submit" name="submit" value="{ $L_SUBMIT }" class="button" />
+					</td>
+				</tr>
+			</table>
+	
+			</form>
+				
+			<form id="select_single_forum" method="post" action="{ $U_ACTION }">
+	
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th colspan="2">
+						{ $L_LOOK_UP_FORUM }
+					</th>
+				</tr>
+				<tr>
+					<td width="40%" class="row1">
+						{ $L_LOOK_UP_FORUM }:
+					</td>
+					<td class="row2">
+						<select id="forum" name="forum_id[]">{ $S_FORUM_OPTIONS }</select>
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input type="submit" name="submit" value="{ $L_SUBMIT }" class="button" />
+					</td>
+				</tr>
+			</table>
+	
+			</form>
+
+		<!-- ENDIF -->
+
+	<!-- ELSEIF { $S_SELECT_USER } && { $S_CAN_SELECT_USER } -->
+
+		<form id="select_victim" method="post" action="{ $U_ACTION }">
+
+		<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+			<tr>
+				<th colspan="2">
+					{ $L_LOOK_UP_USER }
+				</th>
+			</tr>
+			<tr>
+				<td width="40%" class="row1">
+					{ $L_FIND_USERNAME }:
+				</td>
+				<td class="row2">
+					<input class="medium" type="text" id="username" name="username[]" />
+					[ <a href="#" onclick="window.open('{ $U_FIND_USERNAME }', '_phpbbsearch', 'height=500, resizable=yes, scrollbars=yes, width=740'); return false;">{ $L_FIND_USERNAME }</a> ]
+					<br/><input type="checkbox" class="radio" id="anonymous" name="user_id[]" value="{ $ANONYMOUS_USER_ID }" /> &nbsp;{ $L_SELECT_ANONYMOUS }
+				</td>
+			</tr>
+			<tr>
+				<td colspan="2" class="row1">
+					{ $S_HIDDEN_FIELDS }
+					<input type="submit" name="submit" value="{ $L_SUBMIT }" class="button" />
+				</td>
+			</tr>
+		</table>
+
+		</form>
+
+	<!-- ELSEIF { $S_SELECT_GROUP } && { $S_CAN_SELECT_GROUP } -->
+
+		<form id="select_victim" method="post" action="{ $U_ACTION }">
+
+		<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+			<tr>
+				<th colspan="2">
+					{ $L_LOOK_UP_GROUP }
+				</th>
+			</tr>
+			<tr>
+				<td width="40%" class="row1">
+					{ $L_LOOK_UP_GROUP}:
+				</td>
+				<td class="row2">
+					<select name="group_id[]" id="group">{ $S_GROUP_OPTIONS }</select>
+				</td>
+			</tr>
+			<tr>
+				<td colspan="2" class="row1">
+					{ $S_HIDDEN_FIELDS }
+					<input type="submit" name="submit" value="{ $L_SUBMIT }" class="button" />
+				</td>
+			</tr>
+		</table>
+
+		</form>
+
+	<!-- ELSEIF { $S_SELECT_USERGROUP } -->
+
+		<div style="float: left; width: 48%;">
+		
+		<!-- IF { $S_CAN_SELECT_USER } -->
+
+			<h1>{ $L_USERS }</h1>
+
+			<form id="users" method="post" action="{ $U_ACTION }">
+
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th colspan="2">
+						{ $L_MANAGE_USERS }
+					</th>
+				</tr>
+				<tr>
+					<td width="40%" class="row1">
+						<select style="width: 100%;" name="user_id[]" multiple="multiple" size="5">{ $S_DEFINED_USER_OPTIONS }</select>
+						<br/><input type="checkbox" class="radio" name="all_users" value="1" />&nbsp; { $L_ALL_USERS }
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input type="submit" class="button" name="action[delete]" value="{ $L_REMOVE_PERMISSIONS }" style="width: 46% !important;" /> &nbsp; <input class="button" type="submit" name="submit_edit_options" value="{ $L_EDIT_PERMISSIONS }" style="width: 46% !important;" />
+					</td>
+				</tr>
+			</table>
+
+			</form>
+
+			<form id="add_user" method="post" action="{ $U_ACTION }">
+			
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th colspan="2">
+						{ $L_ADD_USERS }
+					</th>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						{ $L_USERNAMES_EXPLAIN }
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						<textarea id="username" name="usernames" rows="5" cols="5" style="width: 98%; height: 60px;"></textarea>
+						<div style="float: right;">[ <a href="#" onclick="window.open('{ $U_FIND_USERNAME }', '_phpbbsearch', 'height=500, resizable=yes, scrollbars=yes, width=740'); return false;">{ $L_FIND_USERNAME }</a> ]</div><input type="checkbox" class="radio" id="anonymous" name="user_id[]" value="{ $ANONYMOUS_USER_ID }" /> &nbsp;{ $L_SELECT_ANONYMOUS }
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input class="button" type="submit" name="submit_add_options" value="{ $L_ADD_PERMISSIONS }" />
+					</td>
+				</tr>
+			</table>
+			
+			</form>
+
+		<!-- ENDIF -->
+
+		</div>
+
+		<div style="float: right; width: 48%">
+			
+		<!-- IF { $S_CAN_SELECT_GROUP } -->
+
+			<h1>{ $L_USERGROUPS }</h1>
+
+			<form id="groups" method="post" action="{ $U_ACTION }">
+
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th>
+						{ $L_MANAGE_GROUPS }
+					</th>
+				</tr>
+				<tr>
+					<td class="row1">
+						<select style="width: 100%;" name="group_id[]" multiple="multiple" size="5">{ $S_DEFINED_GROUP_OPTIONS }</select>
+						<input type="checkbox" class="radio" name="all_groups" value="1" />&nbsp; { $L_ALL_GROUPS }
+					</td>
+				</tr>
+				<tr>
+					<td class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input class="button" type="submit" name="action[delete]" value="{ $L_REMOVE_PERMISSIONS }" style="width: 46% !important;" /> &nbsp; <input class="button" type="submit" name="submit_edit_options" value="{ $L_EDIT_PERMISSIONS }" style="width: 46% !important;" />
+					</td>
+				</tr>
+			</table>
+			
+			</form>
+
+			<form id="add_groups" method="post" action="{ $U_ACTION }">
+			
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th>
+						{ $L_ADD_GROUPS }
+					</th>
+				</tr>
+				<tr>
+					<td class="row2">
+						<select name="group_id[]" style="width: 100%; height: 107px;" multiple="multiple">{ $S_ADD_GROUP_OPTIONS }</select>
+					</td>
+				</tr>
+				<tr>
+					<td class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input type="submit" class="button" name="submit_add_options" value="{ $L_ADD_PERMISSIONS }" />
+					</td>
+				</tr>
+			</table>
+
+			</form>
+
+		<!-- ENDIF -->
+
+		</div>
+
+	<!-- ELSEIF { $S_SELECT_USERGROUP_VIEW } -->
+
+		<div style="float: left; width: 48%;">
+
+			<h1>{ $L_USERS }</h1>
+
+			<form id="users" method="post" action="{ $U_ACTION }">
+
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th colspan="2">
+						{ $L_MANAGE_USERS }
+					</th>
+				</tr>
+				<tr>
+					<td width="40%" class="row1">
+						<select style="width: 100%;" name="user_id[]" multiple="multiple" size="5">{ $S_DEFINED_USER_OPTIONS }</select>
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input type="submit" name="submit" value="{ $L_SUBMIT }" class="button" />
+					</td>
+				</tr>
+			</table>
+
+			</form>
+
+			<form id="add_user" method="post" action="{ $U_ACTION }">
+
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th colspan="2">
+						{ $L_LOOK_UP_USER }
+					</th>
+				</tr>
+				<tr>
+					<td width="40%" class="row1">
+						{ $L_FIND_USERNAME }:
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						<input type="text" id="username" name="username[]"/>
+						[ <a href="#" onclick="window.open('{ $U_FIND_USERNAME }', '_phpbbsearch', 'height=500, resizable=yes, scrollbars=yes, width=740'); return false;">{ $L_FIND_USERNAME }</a> ]
+						<input type="checkbox" class="radio" id="anonymous" name="user_id[]" value="{ $ANONYMOUS_USER_ID }" /> &nbsp;{ $L_SELECT_ANONYMOUS }
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input type="submit" name="submit" value="{ $L_SUBMIT }" class="button" />
+					</td>
+				</tr>
+			</table>
+
+			</form>
+
+		</div>
+
+		<div style="float: right; width: 48%">
+			
+			<h1>{ $L_USERGROUPS }</h1>
+
+			<form id="groups" method="post" action="{ $U_ACTION }">
+
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th colspan="2">
+						{ $L_MANAGE_GROUPS }
+					</th>
+				</tr>
+				<tr>
+					<td width="40%" class="row1">
+						<select style="width: 100%;" name="group_id[]" multiple="multiple" size="5">{ $S_DEFINED_GROUP_OPTIONS }</select>
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input type="submit" name="submit" value="{ $L_SUBMIT }" class="button" />
+					</td>
+				</tr>
+			</table>
+
+			</form>
+
+			<form id="group" method="post" action="{ $U_ACTION }">
+
+			<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+				<tr>
+					<th colspan="2">
+						{ $L_LOOK_UP_GROUP }
+					</th>
+				</tr>
+				<tr>
+					<td width="40%" class="row1">
+						{ $L_LOOK_UP_GROUP }:
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						<select name="group_id[]" id="group">{ $S_ADD_GROUP_OPTIONS }</select>
+					</td>
+				</tr>
+				<tr>
+					<td colspan="2" class="row1">
+						{ $S_HIDDEN_FIELDS }
+						<input type="submit" name="submit" value="{ $L_SUBMIT }" class="button" />
+					</td>
+				</tr>
+			</table>
+
+			</form>
+
+		</div>
+
+	<!-- ENDIF -->
+
+<!-- ENDIF -->
+
+<!-- IF { $S_VIEWING_PERMISSIONS } -->
+
+	<h1>{ $L_ACL_VIEW }</h1>
+
+	<p>{ $L_ACL_VIEW_EXPLAIN }</p>
+
+	<fieldset class="quick">
+		<b>&raquo; { $L_PERMISSION_TYPE }</b>
+	</fieldset>
+
+	<!-- INCLUDE modules/forums/admin/permission_mask.html -->
+
+<!-- ENDIF -->
+
+<!-- IF { $S_SETTING_PERMISSIONS } -->
+
+	<h1>{ $L_ACL_SET }</h1>
+
+	<p>{ $L_ACL_SET_EXPLAIN }</p>
+
+	<br />
+
+	<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+		<tr>
+			<td class="row1">
+		<b>&raquo; { $L_PERMISSION_TYPE }</b>
+		</td>
+	</tr>
+</table>
+	<!-- IF { $S_PERMISSION_DROPDOWN } -->
+		<form id="pselect" method="post" action="{ $U_ACTION }">
+	
+		<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+			<tr>
+				<td class="row1">
+2		
+		</form>
+	<!-- ENDIF -->
+
+	<br /><br />
+
+	<!-- include tooltip file -->
+	<script type="text/javascript" src="javascript/forums/tooltip.js"></script>
+	<script type="text/javascript">
+	<!--
+		window.onload = function(){enable_tooltips_select('set_permissions', '{ $LA_ROLE_DESCRIPTION }', 'role')};
+	//-->
+	</script>
+
+	<form id="set_permissions" method="post" action="{ $U_ACTION }">
+
+	{ $S_HIDDEN_FIELDS }
+
+	<!-- INCLUDE modules/forums/admin/permission_mask.html -->
+
+	<br /><br />
+<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+	<tr>
+		<td class="row1">
+		{ $L_PERMISSION_APPLIED_TO_ALL }<br />
+		<a href="javascript:marklist('set_permissions', 'inherit', true);">{ $L_MARK_ALL }</a> &bull; <a href="javascript:marklist('set_permissions', 'inherit', false);">{ $L_UNMARK_ALL }</a>
+		</td>
+	</tr>
+	<tr>
+		<td class="row1">
+			<input class="button" type="submit" name="action[apply_all_permissions]" value="{ $L_APPLY_ALL_PERMISSIONS }" />
+			<input class="button" type="reset" name="cancel" value="{ $L_RESET }" />
+		</td>
+	</tr>
+</table>
+	<br /><br />
+
+	</form>
+
+<!-- ENDIF -->
+
+<!-- INCLUDE modules/forums/admin/overall_footer.html -->
\ No newline at end of file

Added: cms/trunk/includes/templates/modules/forums/admin/overall_footer.html
===================================================================
--- cms/trunk/includes/templates/modules/forums/admin/overall_footer.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/modules/forums/admin/overall_footer.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,18 @@
+<!--
+	We request you retain the full copyright notice below including the link to www.phpbb.com.
+	This not only gives respect to the large amount of time given freely by the developers
+	but also helps build interest, traffic and use of phpBB2. If you (honestly) cannot retain
+	the full copyright we ask you at least leave in place the "Powered by phpBB" line, with
+	"phpBB" linked to www.phpbb.com. If you refuse to include even this then support on our 
+	forums may be affected.
+
+	The phpBB Group : 2003
+-->
+
+<br />
+<div style="text-align: center;" class="copyright">
+Based on <a href="http://www.phpbb.com/" target="phpbb">phpBB</a></div>
+
+{ $THEME_TABLE_CLOSE }
+
+<!-- DISPLAY_FOOTER -->
\ No newline at end of file

Added: cms/trunk/includes/templates/modules/forums/admin/overall_header.html
===================================================================
--- cms/trunk/includes/templates/modules/forums/admin/overall_header.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/modules/forums/admin/overall_header.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,93 @@
+<!-- DISPLAY_HEADER -->
+
+{ $THEME_TABLE_OPEN }
+
+<script type="text/javascript">
+<!--
+var jump_page = '{ $L_JUMP_PAGE }:';
+var on_page = '<!-- IF isset({ $ON_PAGE }) -->{ $ON_PAGE }<!-- ENDIF -->';
+var per_page = '<!-- IF isset({ $PER_PAGE }) -->{ $PER_PAGE }<!-- ENDIF -->';
+var base_url = '<!-- IF isset({ $BASE_URL }) -->{ $BASE_URL }<!-- ENDIF -->';
+
+/**
+* Jump to page
+*/
+function jumpto()
+{
+	var page = prompt(jump_page, on_page);
+
+	if (page !== null && !isNaN(page) && page > 0)	
+	{
+		document.location.href = base_url.replace(/&amp;/g, '&') + '&start=' + ((page - 1) * per_page);
+	}
+}
+
+/**
+* Set display of page element
+* s[-1,0,1] = hide,toggle display,show
+*/
+function dE(n, s, type)
+{
+	if (!type)
+	{
+		type = 'block';
+	}
+
+	var e = document.getElementById(n);
+	if (!s)
+	{
+		s = (e.style.display == '') ? -1 : 1;
+	}
+	e.style.display = (s == 1) ? type : 'none';
+}
+
+/**
+* Mark/unmark checkboxes
+* id = ID of parent container, name = name prefix, state = state [true/false]
+*/
+function marklist(id, name, state)
+{
+	var parent = document.getElementById(id);
+	if (!parent)
+	{
+		eval('parent = document.' + id);
+	}
+
+	if (!parent)
+	{
+		return;
+	}
+
+	var rb = parent.getElementsByTagName('input');
+	
+	for (var r = 0; r < rb.length; r++)
+	{
+		if (rb[r].name.substr(0, name.length) == name)
+		{
+			rb[r].checked = state;
+		}
+	}
+}
+
+/**
+* Open trace popup
+*/
+function trace(link)
+{
+	window.open(link, '_trace', 'height=515, resizable=yes, scrollbars=yes, width=680');
+	return false;
+}
+
+<!-- IF isset({ $S_INCLUDE_SWATCH }) && { $S_INCLUDE_SWATCH } -->
+	/**
+	* Color swatch
+	*/
+	function swatch()
+	{
+		window.open('{ $UA_SWATCH }', '_swatch', 'height=150, resizable=yes, scrollbars=no, width=636');
+		return false;
+	}
+<!-- ENDIF -->
+
+//-->
+</script>
\ No newline at end of file

Added: cms/trunk/includes/templates/modules/forums/admin/permission_mask.html
===================================================================
--- cms/trunk/includes/templates/modules/forums/admin/permission_mask.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/modules/forums/admin/permission_mask.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,249 @@
+
+<script type="text/javascript">
+<!--
+	var active_pmask = '0';
+	var active_fmask = '0';
+	var active_cat = '0';
+
+	var role_options = new Array();
+
+	<!-- IF isset({ $S_ROLE_JS_ARRAY }) -->
+		{ $S_ROLE_JS_ARRAY }
+	<!-- ENDIF -->
+
+	/**
+	* Show/hide option panels
+	* value = suffix for ID to show
+	*/
+	function swap_options(pmask, fmask, cat)
+	{
+		id = pmask + fmask + cat;
+		active_option = active_pmask + active_fmask + active_cat;
+
+		if (id == active_option)
+		{
+			return;
+		}
+		
+		// Hide active options
+		dE('options' + active_option, -1);
+		dE('head' + active_pmask + active_fmask, 1, 'inline');
+		dE('apply' + active_pmask + active_fmask, -1);
+
+		// Display container
+		dE('options' + id, 1);
+		dE('head' + pmask + fmask, -1, 'inline');
+		dE('apply' + pmask + fmask, 1);
+
+		active_pmask = pmask;
+		active_fmask = fmask;
+		active_cat = cat;
+	}
+
+	/**
+	* Mark all radio buttons in one panel
+	* id = table ID container, s = status ['y'/'u'/'n']
+	*/
+	function mark_options(id, s)
+	{
+		var t = document.getElementById(id);
+
+		if (!t)
+		{
+			return;
+		}
+
+		var rb = t.getElementsByTagName('input');
+
+		for (var r = 0; r < rb.length; r++ )
+		{
+			if (rb[r].id.substr(rb[r].id.length-1) == s)
+			{
+				rb[r].checked = true;
+			}
+		}
+	}
+
+	/**
+	* Mark one radio button in one panel
+	* id = table ID container, field_name = the auth option, s = status ['y'/'u'/'n']
+	*/
+	function mark_one_option(id, field_name, s)
+	{
+		var t = document.getElementById(id);
+
+		if (!t)
+		{
+			return;
+		}
+
+		var rb = t.getElementsByTagName('input');
+
+		for (var r = 0; r < rb.length; r++ )
+		{
+			if (rb[r].id.substr(rb[r].id.length-field_name.length-3, field_name.length) == field_name && rb[r].id.substr(rb[r].id.length-1) == s)
+			{
+				rb[r].checked = true;
+			}
+		}
+	}
+
+	/**
+	* Reset role dropdown field to Select role... if an option gets changed
+	*/
+	function reset_role(id)
+	{
+		var t = document.getElementById(id);
+
+		if (!t)
+		{
+			return;
+		}
+
+		t.options[0].selected = true;
+	}
+
+	/**
+	* Load role and set options accordingly
+	*/
+	function set_role_settings(role_id, target_id)
+	{
+		settings = role_options[role_id];
+
+		if (!settings)
+		{
+			return;
+		}
+
+		// Mark all options to no (unset) first...
+		mark_options(target_id, 'u');
+
+		for (var r in settings)
+		{
+			mark_one_option(target_id, r, (settings[r] == 1) ? 'y' : 'n');
+		}
+	}
+
+//-->
+</script>
+
+<!-- LOOP $p_mask -->
+
+<div class="clearfix"></div>
+
+<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
+	<!-- IF { $p_mask:USER_GROUPS_DEFAULT } || { $p_mask:USER_GROUPS_CUSTOM } -->
+	<tr>
+		<td class="row1">
+		<!-- IF { $p_mask:USER_GROUPS_DEFAULT } --><b>{ $p_mask:NAME }</b> { $L_USER_IS_MEMBER_OF_DEFAULT }: <b>{ $p_mask:USER_GROUPS_DEFAULT }</b><br /><!-- ENDIF -->
+		<!-- IF { $p_mask:USER_GROUPS_CUSTOM } --><b>{ $p_mask:NAME }</b> { $L_USER_IS_MEMBER_OF_CUSTOM }: <b>{ $p_mask:USER_GROUPS_CUSTOM }</b><!-- ENDIF -->
+		</td>
+	</tr>
+	<!-- ENDIF -->
+			<tr>
+				<th style="text-align: left; width: 70%">{ $p_mask:NAME }<!-- IF { $p_mask:S_LOCAL } --><span class="small" style="text-transform: none;"> [{ $p_mask:L_ACL_TYPE }]</span><!-- ENDIF --></th>
+				<th>{ $p_mask:CATEGORIES }</th>
+			</tr>
+
+	<!-- LOOP $p_mask:f_mask -->
+		<!-- IF { $p_mask:f_mask:#LOOP_NUMBER } % 2 --><tr class="row1"><!-- ELSE --><tr class="row2"><!-- ENDIF -->
+		<td class="name">
+			<table cellspacing="0" cellpadding="0" class="type2" style="background-color: transparent; border: 0;">
+				<tbody>
+					<tr>
+						<td width="16">
+							<span id="head{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }"<!-- IF { $p_mask:#LOOP_START } && { $p_mask:f_mask:#LOOP_START } --> style="display: none;"<!-- ENDIF -->>
+								<!-- IF !{ $p_mask:S_VIEW } --><input type="checkbox" class="radio" name="inherit[{ $p_mask:f_mask:UG_ID }][{ $p_mask:f_mask:FORUM_ID }]" value="1" /><!-- ELSE -->&nbsp;<!-- ENDIF -->
+							</span>
+						</td>
+						<td>{ $p_mask:f_mask:PADDING }<!-- IF { $p_mask:f_mask:FOLDER_IMAGE } --> { $p_mask:f_mask:FOLDER_IMAGE } <!-- ENDIF --><a href="javascript:swap_options('{ $p_mask:#LOOP_NUMBER }', '{ $p_mask:f_mask:#LOOP_NUMBER }', '0');">{ $p_mask:f_mask:NAME }</a></span></td>
+						<td align="right" style="text-align: right;">
+						<!-- IF { $p_mask:S_VIEW } -->
+							&nbsp;
+						<!-- ELSE -->
+							<!-- IF { $p_mask:f_mask:S_ROLE_OPTIONS } -->
+								<b>{ $L_ROLE }:</b>&nbsp; &nbsp;<select id="role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }" name="role[{ $p_mask:f_mask:UG_ID }][{ $p_mask:f_mask:FORUM_ID }]" onchange="set_role_settings(this.options[selectedIndex].value, 'a_options{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }')">{ $p_mask:f_mask:S_ROLE_OPTIONS }</select>
+							<!-- ELSE -->
+								<b>{ $L_ROLE }:</b> { $L_NO_ROLE_AVAILABLE }
+							<!-- ENDIF -->
+						<!-- ENDIF -->
+						</td>
+					</tr>
+				</tbody>
+			</table>
+		</td>
+		<!-- loop $p_mask:f_mask:category -->
+			<!-- IF { $p_mask:f_mask:category:S_YES } -->
+				<td class="preset preset_yes">
+			<!-- ELSEIF { $p_mask:f_mask:category:S_NEVER }-->
+				<td class="preset preset_never">
+			<!-- ELSEIF { $p_mask:f_mask:category:S_NO } -->
+				<td class="preset preset_no">
+			<!-- ELSE -->
+				<td class="preset preset_custom">
+			<!-- ENDIF -->
+				<a href="javascript:swap_options('{ $p_mask:#LOOP_NUMBER }', '{ $p_mask:f_mask:#LOOP_NUMBER }', '{ $p_mask:f_mask:category:#LOOP_NUMBER }');"><span></span></a></td>
+		<!-- ENDLOOP -->
+	</tr>
+	<tr>
+		<td style="vertical-align: top;">
+			<div id="apply{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }" style="text-align: left; width: 98%; margin: 5px;<!-- IF { $p_mask:#LOOP_START } && { $p_mask:f_mask:#LOOP_START } --><!-- ELSE --> display: none;<!-- ENDIF -->">
+			<!-- IF { $p_mask:S_VIEW } -->
+				<div style="float: left; width: 60%;">
+					<p class="small">{ $L_APPLY_PERMISSIONS_EXPLAIN }</p>
+					<input class="button" type="submit" name="psubmit[{ $p_mask:f_mask:UG_ID }][{ $p_mask:f_mask:FORUM_ID }]" value="{ L_APPLY_PERMISSIONS }" />
+				</div>
+				<div style="float: right; text-align: right; width: 35%;">
+					<p class="small">
+						[<a href="javascript: mark_options('a_options{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }', 'y'); reset_role('role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }');">{ $L_ALL_YES }</a>]<br />
+						[<a href="javascript: mark_options('a_options{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }', 'n'); reset_role('role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }');">{ $L_ALL_NEVER }</a>]<br />
+						[<a href="javascript: mark_options('a_options{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }', 'u'); reset_role('role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }');">{ $L_ALL_NO }</a>]
+					</p>
+				</div>
+			<!-- ELSE -->
+				&nbsp;
+			<!-- ENDIF -->
+			</div>
+		</td>
+		<td colspan="{ $p_mask:S_NUM_CATS }" id="a_options{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }" style="vertical-align: top; text-align: left;">
+			<div style="width: 350px; height: 0; line-height: 0;">&nbsp;</div>
+			<!-- LOOP $p_mask:f_mask:category -->
+				<table cellspacing="1" id="options{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }{ $p_mask:f_mask:category:#LOOP_NUMBER }" class="type3"<!-- IF { $p_mask:#LOOP_START } && { $p_mask:f_mask:#LOOP_START } && { $p_mask:f_mask:category:#LOOP_START } --><!-- ELSE --> style="display: none;"<!-- ENDIF -->>
+				<thead>
+				<tr>
+					<td scope="col" style="text-align: left; padding-left: 0;"><strong>{ $L_ACL_SETTING } [{ $p_mask:f_mask:category:CAT_NAME }]</strong></th>
+				<!-- IF { $p_mask:S_VIEW } -->
+					<td scope="col">{ $L_ACL_YES }</td>
+					<td scope="col">{ $L_ACL_NEVER }</td>
+				<!-- ELSE -->
+					<td class="row2"><a href="javascript: mark_options('options{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }{ $p_mask:f_mask:category:#LOOP_NUMBER }', 'y'); reset_role('role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }');">{ $L_ACL_YES }</a></td>
+					<td class="row2"><a href="javascript: mark_options('options{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }{ $p_mask:f_mask:category:#LOOP_NUMBER }', 'u'); reset_role('role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }');">{ $L_ACL_NO }</a></td>
+					<td class="row2"><a href="javascript: mark_options('options{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }{ $p_mask:f_mask:category:#LOOP_NUMBER }', 'n'); reset_role('role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }');">{ $L_ACL_NEVER }</a></td>
+				<!-- ENDIF -->
+				</tr>
+				</thead>
+				<tbody>
+				<!-- LOOP $p_mask:f_mask:category:mask -->
+					<!-- IF { $p_mask:f_mask:category:mask:#LOOP_NUMBER } % 2 --><tr class="row4"><!-- ELSE --><tr class="row3"><!-- ENDIF -->
+					<td ><!-- IF { $p_mask:f_mask:category:mask:U_TRACE } --><a href="#" onclick="javascript:trace('{ $p_mask:f_mask:category:mask:U_TRACE }')" title="{L_TRACE_SETTING}"><img src="images/icon_trace.gif" alt="{ $L_TRACE_SETTING }" /></a> <!-- ENDIF -->{ $p_mask:f_mask:category:mask:PERMISSION }</th>
+					<!-- IF { $p_mask:S_VIEW } -->
+						<td<!-- IF { $p_mask:f_mask:category:mask:S_YES } --> class="yes"<!-- ELSE --> class="no"<!-- ENDIF -->>&nbsp;</td>
+						<td<!-- IF { $p_mask:f_mask:category:mask:S_NEVER } --> class="never"<!-- ELSE --> class="no"<!-- ENDIF -->>&nbsp;</td>
+					<!-- ELSE -->
+						<td class="row2"><input onchange="reset_role('role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }')" id="{ $p_mask:f_mask:category:mask:S_FIELD_NAME }_y" name="{ $p_mask:f_mask:category:mask:S_FIELD_NAME }" class="radio" type="radio"<!-- IF { $p_mask:f_mask:category:mask:S_YES } --> checked="checked"<!-- ENDIF --> value="1" /></td>
+						<td class="row2"><input onchange="reset_role('role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }')" id="{ $p_mask:f_mask:category:mask:S_FIELD_NAME }_u" name="{ $p_mask:f_mask:category:mask:S_FIELD_NAME }" class="radio" type="radio"<!-- IF { $p_mask:f_mask:category:mask:S_NO } --> checked="checked"<!-- ENDIF --> value="-1" /></td>
+						<td class="row2"><input onchange="reset_role('role{ $p_mask:#LOOP_NUMBER }{ $p_mask:f_mask:#LOOP_NUMBER }')" id="{ $p_mask:f_mask:category:mask:S_FIELD_NAME }_n" name="{ $p_mask:f_mask:category:mask:S_FIELD_NAME }" class="radio" type="radio"<!-- IF { $p_mask:f_mask:category:mask:S_NEVER } --> checked="checked"<!-- ENDIF --> value="0" /></td>
+					<!-- ENDIF -->
+				</tr>
+				<!-- ENDLOOP $p_mask:f_mask:category:mask -->
+				</tbody>
+				</table>
+			<!-- ENDLOOP $p_mask:f_mask:category -->
+		</td>
+	</tr>
+	<!-- ENDLOOP $f_mask -->
+	
+	</tbody>
+</table>
+
+<!-- ENDLOOP $p_mask -->
\ No newline at end of file

Modified: cms/trunk/includes/templates/modules/forums/mcp_viewlogs.html
===================================================================
--- cms/trunk/includes/templates/modules/forums/mcp_viewlogs.html	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/templates/modules/forums/mcp_viewlogs.html	2006-09-12 14:55:25 UTC (rev 187)
@@ -20,7 +20,7 @@
 	</tr>
 	<!-- IF S_TOPIC_ID -->
 	<tr>
-		<td class="row3" colspan="5"><span class="gensmall">{L_LOGS_CURRENT_TOPIC} <a href="{U_VIEWTOPIC}"><b>{TOPIC_NAME}</b></a></td>
+		<td class="row3" colspan="5"><span class="gensmall">{L_LOGS_CURRENT_TOPIC} <a href="{U_VIEWTOPIC}"><b>{TOPIC_NAME}</b></a></span></td>
 	</tr>
 	<!-- ENDIF -->
 	<!-- BEGIN log -->

Modified: cms/trunk/includes/user.php
===================================================================
--- cms/trunk/includes/user.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/includes/user.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -105,7 +105,7 @@
 	function time_convert($time, $conversion = 'user')
 	{
 		// user and gmt
-		if ($conversion == 'gmt')
+		if ($conversion === 'gmt')
 		{
 			return ($time - $this->time_offset);
 		}
@@ -118,6 +118,7 @@
 		global $_CLASS;
 
 		settype($id, 'int');
+		$admin_login = true;
 
 		if ($bot = check_bot_status($this->browser, $this->ip))
 		{
@@ -358,10 +359,10 @@
 		return $this->img[$img];
 	}
 		
-	function add_lang($lang_file = false, $module = false)
+	function add_lang($lang_file = false, $module = false, $direct_path = false)
 	{
-//Need a check for if the lang file exsists
-	
+		global $_CLASS;
+
 		//print_r(debug_backtrace());
 		if (is_array($lang_file))
 		{
@@ -369,37 +370,68 @@
 			{
 				$this->add_lang($lang, $module);
 			}
-			
+
 			unset($lang);
 			return;
 		}
-		
-		if ($lang_file)
+
+		if ($direct_path)
 		{
-			if (mb_strpos($lang_file, '/') !== false)
+			if (file_exists(SITE_FILE_ROOT.$lang_file))
 			{
-				include SITE_FILE_ROOT."language/{$this->lang_name}/$lang_file";
+				require_once SITE_FILE_ROOT.$lang_file;
 
-				return;
+				return true;
 			}
 
+			return false;
+		}
+
+		if ($lang_file)
+		{
 			$lang_file = $lang_file.'.php';
 		}
 		else
 		{
 			$lang_file = 'index.php';
 		}
+		
+		if (!$module && !is_null($module) && isset($_CLASS['core_display']->page['page_name']))
+		{
+			$module = $_CLASS['core_display']->page['page_name'];
+		}
 
-		if (!$module)
+		if ($module)
 		{
-			global $_CLASS;
+			$module .= '/';
+		}
 
-			include SITE_FILE_ROOT.'modules/'.$_CLASS['core_display']->page['page_name']."/language/$this->lang_name/$lang_file";
+		if (file_exists(SITE_FILE_ROOT."modules/{$module}language/{$this->lang_name}/$lang_file"))
+		{
+			require_once SITE_FILE_ROOT."modules/{$module}language/{$this->lang_name}/$lang_file";
+			
+			return true;
+		}
+		elseif (file_exists(SITE_FILE_ROOT."modules/{$module}language/$lang_file"))
+		{
+			require_once SITE_FILE_ROOT."modules/{$module}language/$lang_file";
 
-			return;
+			return true;
 		}
-		
-		include SITE_FILE_ROOT."modules/$module/language/$this->lang_name/$lang_file";		
+		elseif (file_exists(SITE_FILE_ROOT."language/{$module}{$this->lang_name}/$lang_file"))
+		{
+			require_once SITE_FILE_ROOT."language/{$module}{$this->lang_name}/$lang_file";
+			
+			return true;
+		}
+		elseif (file_exists(SITE_FILE_ROOT."language/{$module}$lang_file"))
+		{
+			require_once SITE_FILE_ROOT."language/{$module}$lang_file";
+			
+			return true;
+		}
+
+		return false;
 	}
 
 	function user_data_get($name, $default = false)

Modified: cms/trunk/install/build_data.php
===================================================================
--- cms/trunk/install/build_data.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/install/build_data.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -268,6 +268,8 @@
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_aauth', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_attach', 1)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_authgroups', 1)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_authusers', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_backup', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_bbcode', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_board', 1)");

Modified: cms/trunk/installer.php
===================================================================
--- cms/trunk/installer.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/installer.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -487,7 +487,26 @@
 
 if ($stage === 1)
 {
-	$gd_info = gd_info();
+	$gd_info = false;
+
+	if (!extension_loaded('gd'))
+	{
+		if (function_exists('dl'))
+		{
+			$prefix = (PHP_SHLIB_SUFFIX === 'dll') ? 'php_' : '';
+			dl($prefix . 'gd2.' . PHP_SHLIB_SUFFIX);
+
+			if (extension_loaded('gd'))
+			{
+				$gd_info = gd_info();
+			}
+		}
+	}
+	else
+	{
+		$gd_info = gd_info();
+	}
+
 	$continue = true;
 
 	if (!$compatible = version_compare(PHP_VERSION, '4.2.0', '>='))
@@ -508,8 +527,8 @@
 		
 		'mbstring'	=> extension_loaded('mbstring'),
 		'zlib'		=> extension_loaded('zlib'),
-		'gd'		=> extension_loaded('gd'),
-		'gd_version'=> $gd_info['GD Version'],
+		'gd'		=> $gd_info,
+		'gd_version'=> ($gd_info) ? $gd_info['GD Version'] : '',
 
 		'continue'	=> $continue,
 	));

Added: cms/trunk/javascript/forums/tooltip.js
===================================================================
--- cms/trunk/javascript/forums/tooltip.js	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/javascript/forums/tooltip.js	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,251 @@
+/*
+javascript for Bubble Tooltips by Alessandro Fulciniti
+- http://pro.html.it - http://web-graphics.com 
+obtained from: http://web-graphics.com/mtarchive/001717.php
+
+phpBB Development Team:
+	- modified to adhere to our coding guidelines
+	- integration into our design
+	- added ability to perform tooltips on select elements
+	- further adjustements
+*/
+
+var head_text, tooltip_mode;
+
+/**
+* Enable tooltip replacements for links
+*/
+function enable_tooltips_link(id, headline, sub_id)
+{
+	var links, i, hold;
+	
+	head_text = headline;
+
+	if (!document.getElementById || !document.getElementsByTagName)
+	{
+		return;
+	}
+
+	hold = document.createElement('span');
+	hold.id = '_tooltip_container';
+	hold.setAttribute('id', '_tooltip_container');
+	hold.style.position = 'absolute';
+
+	document.getElementsByTagName('body')[0].appendChild(hold);
+
+	if (id == null)
+	{
+		links = document.getElementsByTagName('a');
+	}
+	else
+	{
+		links = document.getElementById(id).getElementsByTagName('a');
+	}
+
+	for (i = 0; i < links.length; i++)
+	{
+		if (sub_id)
+		{
+			if (links[i].id.substr(0, sub_id.length) == sub_id)
+			{
+				prepare(links[i]);
+			}
+		}
+		else
+		{
+			prepare(links[i]);
+		}
+	}
+
+	tooltip_mode = 'link';
+}
+
+/**
+* Enable tooltip replacements for selects
+*/
+function enable_tooltips_select(id, headline, sub_id)
+{
+	var links, i, hold;
+	
+	head_text = headline;
+
+	if (!document.getElementById || !document.getElementsByTagName)
+	{
+		return;
+	}
+
+	hold = document.createElement('span');
+	hold.id = '_tooltip_container';
+	hold.setAttribute('id', '_tooltip_container');
+	hold.style.position = 'absolute';
+
+	document.getElementsByTagName('body')[0].appendChild(hold);
+
+	if (id == null)
+	{
+		links = document.getElementsByTagName('option');
+	}
+	else
+	{
+		links = document.getElementById(id).getElementsByTagName('option');
+	}
+
+	for (i = 0; i < links.length; i++)
+	{
+		if (sub_id)
+		{
+			if (links[i].parentNode.id.substr(0, sub_id.length) == sub_id)
+			{
+				prepare(links[i]);
+			}
+		}
+		else
+		{
+			prepare(links[i]);
+		}
+	}
+
+	tooltip_mode = 'select';
+}
+
+/**
+* Prepare elements to replace
+*/
+function prepare(element)
+{
+	var tooltip, text, desc, title;
+
+	text = element.getAttribute('title');
+
+	if (text == null || text.length == 0)
+	{
+		return;
+	}
+
+	element.removeAttribute('title');
+	tooltip = create_element('span', 'tooltip');
+
+	title = create_element('span', 'top');
+	title.appendChild(document.createTextNode(head_text));
+	tooltip.appendChild(title);
+
+	desc = create_element('span', 'bottom');
+	desc.innerHTML = text;
+	tooltip.appendChild(desc);
+
+	set_opacity(tooltip);
+
+	element.tooltip = tooltip;
+	element.onmouseover = show_tooltip;
+	element.onmouseout = hide_tooltip;
+
+	if (tooltip_mode == 'link')
+	{
+		element.onmousemove = locate;
+	}
+}
+
+/**
+* Show tooltip
+*/
+function show_tooltip(e)
+{
+	document.getElementById('_tooltip_container').appendChild(this.tooltip);
+	locate(this);
+}
+
+/**
+* Hide tooltip
+*/
+function hide_tooltip(e)
+{
+	var d = document.getElementById('_tooltip_container');
+	if (d.childNodes.length > 0)
+	{
+		d.removeChild(d.firstChild);
+	}
+}
+
+/**
+* Set opacity on tooltip element
+*/
+function set_opacity(element)
+{
+	element.style.filter = 'alpha(opacity:95)';
+	element.style.KHTMLOpacity = '0.95';
+	element.style.MozOpacity = '0.95';
+	element.style.opacity = '0.95';
+}
+
+/**
+* Create new element
+*/
+function create_element(tag, c)
+{
+	var x = document.createElement(tag);
+	x.className = c;
+	x.style.display = 'block';
+	return x;
+}
+
+/**
+* Correct positioning of tooltip container
+*/
+function locate(e)
+{
+	var posx = 0;
+	var posy = 0;
+
+	e = e.parentNode;
+
+	if (e.offsetParent)
+	{
+		for (var posx = 0, posy = 0; e.offsetParent; e = e.offsetParent)
+		{
+			posx += e.offsetLeft;
+			posy += e.offsetTop;
+		}
+	}
+	else
+	{
+		posx = e.offsetLeft;
+		posy = e.offsetTop;
+	}
+
+	if (tooltip_mode == 'link')
+	{
+		document.getElementById('_tooltip_container').style.top=(posy+20) + 'px';
+		document.getElementById('_tooltip_container').style.left=(posx-20) + 'px';
+	}
+	else
+	{
+		document.getElementById('_tooltip_container').style.top=(posy+30) + 'px';
+		document.getElementById('_tooltip_container').style.left=(posx-205) + 'px';
+	}
+
+/*
+	if (e == null)
+	{
+		e = window.event;
+	}
+
+	if (e.pageX || e.pageY)
+	{
+		posx = e.pageX;
+		posy = e.pageY;
+	}
+	else if (e.clientX || e.clientY)
+	{
+		if (document.documentElement.scrollTop)
+		{
+			posx = e.clientX+document.documentElement.scrollLeft;
+			posy = e.clientY+document.documentElement.scrollTop;
+		}
+		else
+		{
+			posx = e.clientX+document.body.scrollLeft;
+			posy = e.clientY+document.body.scrollTop;
+		}
+	}
+*/
+}

Modified: cms/trunk/modules/control_panel/index.php
===================================================================
--- cms/trunk/modules/control_panel/index.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/control_panel/index.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -190,7 +190,7 @@
 						redirect();
 					}
 			
-					login_box();
+					$_CLASS['core_auth']->auth_login();
 				break;
 			
 				case 'logout':

Modified: cms/trunk/modules/control_panel/modules/ucp_pm.php
===================================================================
--- cms/trunk/modules/control_panel/modules/ucp_pm.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/control_panel/modules/ucp_pm.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -233,6 +233,17 @@
 		{
 			place_pm_into_folder($global_privmsgs_rules, get_variable('release', 'POST', 0));
 			$num_not_moved = $_CLASS['core_user']->data['user_new_privmsg'];
+
+			// Make sure num_not_moved is valid.
+			if ($num_not_moved < 0)
+			{
+				$sql = 'UPDATE ' . CORE_USERS_TABLE . '
+					SET user_new_privmsg = 0, user_unread_privmsg = 0
+					WHERE user_id = ' . $_CLASS['core_user']->data['user_id'];
+				$_CLASS['core_db']->query($sql);
+
+				$num_not_moved = $_CLASS['core_user']->data['user_new_privmsg'] = $_CLASS['core_user']->data['user_unread_privmsg'] = 0;
+			}
 		}
 
 		if (!$msg_id && $folder_id == PRIVMSGS_NO_BOX)

Modified: cms/trunk/modules/control_panel/modules/ucp_pm_compose.php
===================================================================
--- cms/trunk/modules/control_panel/modules/ucp_pm_compose.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/control_panel/modules/ucp_pm_compose.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -192,7 +192,7 @@
 		$folder_id		= isset($post['folder_id']) ? $post['folder_id'] : 0;
 		$message_text	= isset($post['message_text']) ? $post['message_text'] : '';
 
-		if (!$post['author_id'] && $msg_id)
+		if ((!$post['author_id'] || ($post['author_id'] == ANONYMOUS && $action !== 'delete')) && $msg_id)
 		{
 			trigger_error('NO_AUTHOR');
 		}

Modified: cms/trunk/modules/control_panel/modules/ucp_pm_viewfolder.php
===================================================================
--- cms/trunk/modules/control_panel/modules/ucp_pm_viewfolder.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/control_panel/modules/ucp_pm_viewfolder.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -129,7 +129,18 @@
 				{
 					foreach ($id_ary as $ug_id => $_id)
 					{
-						$address_list[$message_id][] = (($type === 'u') ? '<a href="'.generate_link('members_list&amp;mode=viewprofile&amp;u='.$ug_id).'">' : '<a href="'.generate_link('members_list&amp;mode=group&amp;g='.$ug_id).'">') . (($recipient_list[$type][$ug_id]['colour']) ? '<span style="color:#' . $recipient_list[$type][$ug_id]['colour'] . '">' : '<span>') . $recipient_list[$type][$ug_id]['name'] . '</span></a>';
+						$user_colour = ($recipient_list[$type][$ug_id]['colour']) ? ' style="color:#' . $recipient_list[$type][$ug_id]['colour'] . '"' : '';
+
+						if ($type === 'u')
+						{
+							$link = ($ug_id != ANONYMOUS) ? '<a href="' . generate_link('members_list&amp;mode=viewprofile&amp;u='.$ug_id) . '"' . $user_colour . '>' : '';
+						}
+						else
+						{
+							$link = '<a href="' . generate_link('members_list&amp;mode=group&amp;g='.$ug_id) . '"' . $user_colour . '>';
+						}
+
+						$address_list[$message_id][] = $link . $recipient_list[$type][$ug_id]['name'] . (($link) ? '</a>' : '');
 					}
 				}
 			}
@@ -144,7 +155,7 @@
 			$folder_alt = ($row['pm_unread']) ? 'NEW_MESSAGES' : 'NO_NEW_MESSAGES';
 
 			// Generate all URIs ...
-			$message_author = '<a href="'.generate_link('members_list&amp;mode=viewprofile&amp;u=' . $row['author_id']) . '">' . $row['username'] . '</a>';
+			$message_author = ($row['author_id'] != ANONYMOUS) ? '<a href="' . generate_link('members_list&amp;mode=viewprofile&amp;u=' . $row['author_id']) . '">' . $row['username'] . '</a>' : $row['username'];
 			$view_message_url = generate_link($parent_class->link_parent."&amp;f=$folder_id&amp;p=$message_id");
 			$remove_message_url = generate_link($parent_class->link_parent.'&amp;mode=compose&amp;action=delete&amp;p='.$message_id);
 			
@@ -168,16 +179,16 @@
 				'MESSAGE_AUTHOR'	=> $message_author,
 				'SENT_TIME'		 	=> $_CLASS['core_user']->format_date($row['message_time']),
 				'SUBJECT'			=> censor_text($row['message_subject']),
-				'FOLDER'			=> (isset($folder[$row['folder_id']])) ? $folder[$row['folder_id']]['folder_name'] : '',
-				'U_FOLDER'			=> (isset($folder[$row['folder_id']])) ? generate_link($parent_class->link_parent.'&amp;folder=' . $row['folder_id']) : '',
+				'FOLDER'			=> isset($folder[$row['folder_id']]) ? $folder[$row['folder_id']]['folder_name'] : '',
+				'U_FOLDER'			=> isset($folder[$row['folder_id']]) ? generate_link($parent_class->link_parent.'&amp;folder=' . $row['folder_id']) : '',
 				'PM_ICON_IMG'		=> (!empty($icons[$row['icon_id']])) ? '<img src="' . $config['icons_path'] . '/' . $icons[$row['icon_id']]['img'] . '" width="' . $icons[$row['icon_id']]['width'] . '" height="' . $icons[$row['icon_id']]['height'] . '" alt="" title="" />' : '',
 				'FOLDER_IMG'		=> $_CLASS['core_user']->img($folder_img, $folder_alt),
 				'PM_IMG'			=> ($row_indicator) ? $_CLASS['core_user']->img('pm_' . $row_indicator, '') : '',
 				'ATTACH_ICON_IMG'	=> ($row['message_attachment']) ? $_CLASS['core_user']->img('icon_attach', $_CLASS['core_user']->lang['TOTAL_ATTACHMENTS']) : '',
 				//'S_PM_REPORTED'		=> (!empty($row['message_reported'])) ? true : false,
 				'S_PM_REPORTED'		=> '',
-				'S_PM_DELETED'		=> ($row['pm_deleted']),
-				
+				'S_PM_DELETED'		=> ($row['pm_deleted']) ? true : false,
+				'S_AUTHOR_DELETED'	=> ($row['author_id'] == ANONYMOUS) ? true : false,
 				'U_VIEW_PM'			=> ($row['pm_deleted']) ? '' : $view_message_url,
 				'U_REMOVE_PM'		=> ($row['pm_deleted']) ? $remove_message_url : '',
 				

Modified: cms/trunk/modules/control_panel/modules/ucp_pm_viewmessage.php
===================================================================
--- cms/trunk/modules/control_panel/modules/ucp_pm_viewmessage.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/control_panel/modules/ucp_pm_viewmessage.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -58,8 +58,8 @@
 	// Parse the message and subject
 
 	// Replace naughty words such as farty pants
-	$message_row['message_subject'] = censor_text($message_row['message_subject']);
-	$message_row['message_text'] = censor_text($message_row['message_text']);
+	$message_row['message_subject'] = censor_text($message_row['message_subject']);
+	$message_row['message_text'] = str_replace("\n", '<br />', censor_text($message_row['message_text']));
 
 	// If the board has HTML off but the message has HTML on then we process it, else leave it alone
 	if ($message_row['enable_html'] && !$config['auth_html_pm'])
@@ -74,7 +74,7 @@
 	}
 
 	// Always process smilies after parsing bbcodes
-	$message_row['message_text'] = str_replace("\n", '<br />', smiley_text($message_row['message_text']));
+	$message_row['message_text'] = smiley_text($message_row['message_text']);
 
 	// Editing information
 	if ($message_row['message_edit_count'] && $config['display_last_edited'])
@@ -163,6 +163,9 @@
 	// End signature parsing, only if needed
 	if ($signature)
 	{
+		$signature = censor_text($signature);
+		$signature = str_replace("\n", '<br />', censor_text($signature));
+
 		if ($user_info['user_sig_bbcode_bitfield'])
 		{
 			if ($bbcode === false)
@@ -175,7 +178,6 @@
 		}
 
 		$signature = smiley_text($signature);
-		$signature = str_replace("\n", '<br />', censor_text($signature));
 	}
 
 	$url = 'Control_Panel&amp;i=pm';
@@ -212,16 +214,17 @@
 		'U_REPORT'			=> (false) ? generate_link('Forums&amp;file=report&amp;pm=' . $message_row['msg_id']) : '',
 		'U_INFO'			=> ($_CLASS['forums_auth']->acl_get('m_') && ($message_row['message_reported'] || $message_row['pm_forwarded'])) ? generate_link('Forums&amp;file=mcp&amp;mode=pm_details&amp;p=' . $message_row['msg_id']) : '',
 		'U_DELETE' 			=> generate_link("$url&amp;mode=compose&amp;action=delete&amp;f=$folder_id&amp;p=" . $message_row['msg_id']),
-		'U_AUTHOR_PROFILE' 	=> generate_link('members_list&amp;mode=viewprofile&amp;u=' . $author_id),
+		'U_AUTHOR_PROFILE' 	=> ($author_id != ANONYMOUS) ? generate_link('members_list&amp;mode=viewprofile&amp;u=' . $author_id) : '',
 		'U_EMAIL' 			=> $user_info['email'],
 		'U_QUOTE'			=> ($author_id != $_CLASS['core_user']->data['user_id']) ? generate_link("$url&amp;mode=compose&amp;action=quote&amp;f=$folder_id&amp;p=" . $message_row['msg_id']) : '',
-		'U_EDIT' 			=> (($message_row['message_time'] > time() - $config['pm_edit_time'] || !$config['pm_edit_time']) && $folder_id == PRIVMSGS_OUTBOX) ? generate_link("$url&amp;mode=compose&amp;action=edit&amp;f=$folder_id&amp;p=" . $message_row['msg_id']) : '', 
-		'U_POST_REPLY_PM' 	=> ($author_id != $_CLASS['core_user']->data['user_id']) ? generate_link("$url&amp;mode=compose&amp;action=reply&amp;f=$folder_id&amp;p=" . $message_row['msg_id']) : '',
+		'U_EDIT' 			=> (($message_row['message_time'] > $_CLASS['core_user']->time - $config['pm_edit_time'] || !$config['pm_edit_time']) && $folder_id == PRIVMSGS_OUTBOX) ? generate_link("$url&amp;mode=compose&amp;action=edit&amp;f=$folder_id&amp;p=" . $message_row['msg_id']) : '', 
+		'U_POST_REPLY_PM' 	=> ($author_id != $_CLASS['core_user']->data['user_id'] && $author_id != ANONYMOUS) ? generate_link("$url&amp;mode=compose&amp;action=reply&amp;f=$folder_id&amp;p=" . $message_row['msg_id']) : '',
 		'U_PREVIOUS_PM'		=> generate_link("$url&amp;f=$folder_id&amp;p=" . $message_row['msg_id'] . "&amp;view=previous"),
 		'U_NEXT_PM'			=> generate_link("$url&amp;f=$folder_id&amp;p=" . $message_row['msg_id'] . "&amp;view=next"),
 
 		'S_MESSAGE_REPORTED'=> ($message_row['message_reported'] && $_CLASS['forums_auth']->acl_get('m_')) ? true : false,
 		'S_DISPLAY_NOTICE'	=> $display_notice && $message_row['message_attachment'],
+		'S_AUTHOR_DELETED'	=> ($author_id == ANONYMOUS) ? true : false,
 
 		'U_PRINT_PM'		=> generate_link("$url&amp;f=$folder_id&amp;p=" . $message_row['msg_id'] . "&amp;view=print"),
 		'U_EMAIL_PM'		=> ($_CORE_CONFIG['email']['email_enable']) ? 'Email' : '',
@@ -325,6 +328,11 @@
 		$subject	= $row['message_subject'];
 		$message	= $row['message_text'];
 
+		$subject = censor_text($subject);
+		$message = censor_text($message);
+
+		$message = str_replace("\n", '<br />', $message);
+
 		if ($row['bbcode_bitfield'])
 		{
 			$bbcode->bbcode_second_pass($message, $row['bbcode_uid'], $row['bbcode_bitfield']);
@@ -332,9 +340,6 @@
 
 		$message = smiley_text($message, !$row['enable_smilies']);
 
-		$subject = censor_text($subject);
-		$message = censor_text($message);
-
 		if ($id == $msg_id)
 		{
 			$next_history_pm = next($rowset);
@@ -346,16 +351,16 @@
 			'AUTHOR_NAME' 		=> $author,
 			'SUBJECT'	 		=> $subject,
 			'SENT_DATE' 		=> $_CLASS['core_user']->format_date($row['message_time']),
-			'MESSAGE' 			=> str_replace("\n", '<br />', $message), 
+			'MESSAGE' 			=> $message, 
 			'FOLDER'			=> implode(', ', $row['folder']),
 
 			'S_CURRENT_MSG'		=> ($row['msg_id'] == $msg_id),
 
 			'U_MSG_ID'			=> $row['msg_id'],
 			'U_VIEW_MESSAGE'	=> generate_link("$url&amp;f=$folder_id&amp;p=" . $row['msg_id']),
-			'U_AUTHOR_PROFILE' 	=> generate_link('members_list&amp;mode=viewprofile&amp;u='.$author_id),
+			'U_AUTHOR_PROFILE' 	=> ($author_id != ANONYMOUS) ? generate_link('members_list&amp;mode=viewprofile&amp;u='.$author_id) : '',
 			'U_QUOTE'			=> ($author_id != $_CLASS['core_user']->data['user_id']) ? generate_link("$url&amp;mode=compose&amp;action=quote&amp;f=" . $folder_id . "&amp;p=" . $row['msg_id']) : '',
-			'U_POST_REPLY_PM' 	=> ($author_id != $_CLASS['core_user']->data['user_id']) ? generate_link("$url&amp;mode=compose&amp;action=reply&amp;f=$folder_id&amp;p=" . $row['msg_id']) : '')
+			'U_POST_REPLY_PM' 	=> ($author_id != $_CLASS['core_user']->data['user_id'] && $author_id != ANONYMOUS) ? generate_link("$url&amp;mode=compose&amp;action=reply&amp;f=$folder_id&amp;p=" . $row['msg_id']) : '')
 		);
 		unset($rowset[$id]);
 		$prev_id = $id;

Modified: cms/trunk/modules/forums/admin/index.php
===================================================================
--- cms/trunk/modules/forums/admin/index.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/admin/index.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -37,7 +37,9 @@
 	die; 
 }
 
-global $_CLASS, $_CORE_CONFIG;
+global $_CLASS, $_CORE_CONFIG;
+
+$_CLASS['core_user']->add_lang('admin_common', 'forums');
 
 // Some often used variables
 $safe_mode	= (@ini_get('safe_mode') || @strtolower(ini_get('safe_mode')) == 'on') ? true : false;
@@ -52,14 +54,11 @@
 $_CLASS['core_blocks']->add_block($data);
 
 load_class(SITE_FILE_ROOT.'includes/forums/auth.php', 'forums_auth');
-$_CLASS['auth'] =& $_CLASS['forums_auth'];
 
 require_once(SITE_FILE_ROOT.'includes/forums/functions.php');
 require_once(SITE_FILE_ROOT.'includes/forums/functions_admin.php');
 
-$_CLASS['core_user']->add_lang('admin', 'forums');
-//$_CLASS['core_user']->add_img(false, 'Forums');
-$_CLASS['auth']->acl($_CLASS['core_user']->data);
+$_CLASS['forums_auth']->acl($_CLASS['core_user']->data);
 
 $file = get_variable('file', 'REQUEST', 'main');
 
@@ -77,11 +76,16 @@
 	'T_RANKS_PATH'			=> "{$config['ranks_path']}/",
 	'T_UPLOAD_PATH'			=> "{$config['upload_path']}/",
 
-	'ICON_MOVE_UP'		=> '<img src="modules/forums/images/admin/icon_up.gif" alt="' . $_CLASS['core_user']->lang['MOVE_UP'] . '" title="' . $_CLASS['core_user']->lang['MOVE_UP'] . '" />',
-	'ICON_MOVE_DOWN'	=> '<img src="modules/forums/images/admin/icon_down.gif" alt="' . $_CLASS['core_user']->lang['MOVE_DOWN'] . '" title="' . $_CLASS['core_user']->lang['MOVE_DOWN'] . '" />',
-	'ICON_EDIT'			=> '<img src="modules/forums/images/admin/icon_edit.gif" alt="' . $_CLASS['core_user']->lang['EDIT'] . '" title="' . $_CLASS['core_user']->lang['EDIT'] . '" />',
-	'ICON_DELETE'		=> '<img src="modules/forums/images/admin/icon_delete.gif" alt="' . $_CLASS['core_user']->lang['DELETE'] . '" title="' . $_CLASS['core_user']->lang['DELETE'] . '" />',
-	'ICON_SYNC'			=> '<img src="modules/forums/images/admin/icon_sync.gif" alt="' . $_CLASS['core_user']->lang['RESYNC'] . '" title="' . $_CLASS['core_user']->lang['RESYNC'] . '" />',
+	'ICON_MOVE_UP'				=> '<img src="modules/forums/images/admin/icon_up.gif" alt="' . $_CLASS['core_user']->lang['MOVE_UP'] . '" title="' . $_CLASS['core_user']->lang['MOVE_UP'] . '" />',
+	'ICON_MOVE_UP_DISABLED'		=> '<img src="modules/forums/images/admin/icon_up_disabled.gif" alt="' . $_CLASS['core_user']->lang['MOVE_UP'] . '" title="' . $_CLASS['core_user']->lang['MOVE_UP'] . '" />',
+	'ICON_MOVE_DOWN'			=> '<img src="modules/forums/images/admin/icon_down.gif" alt="' . $_CLASS['core_user']->lang['MOVE_DOWN'] . '" title="' . $_CLASS['core_user']->lang['MOVE_DOWN'] . '" />',
+	'ICON_MOVE_DOWN_DISABLED'	=> '<img src="modules/forums/images/admin/icon_down_disabled.gif" alt="' . $_CLASS['core_user']->lang['MOVE_DOWN'] . '" title="' . $_CLASS['core_user']->lang['MOVE_DOWN'] . '" />',
+	'ICON_EDIT'					=> '<img src="modules/forums/images/admin/icon_edit.gif" alt="' . $_CLASS['core_user']->lang['EDIT'] . '" title="' . $_CLASS['core_user']->lang['EDIT'] . '" />',
+	'ICON_EDIT_DISABLED'		=> '<img src="modules/forums/images/admin/icon_edit_disabled.gif" alt="' . $_CLASS['core_user']->lang['EDIT'] . '" title="' . $_CLASS['core_user']->lang['EDIT'] . '" />',
+	'ICON_DELETE'				=> '<img src="modules/forums/images/admin/icon_delete.gif" alt="' . $_CLASS['core_user']->lang['DELETE'] . '" title="' . $_CLASS['core_user']->lang['DELETE'] . '" />',
+	'ICON_DELETE_DISABLED'		=> '<img src="modules/forums/images/admin/icon_delete_disabled.gif" alt="' . $_CLASS['core_user']->lang['DELETE'] . '" title="' . $_CLASS['core_user']->lang['DELETE'] . '" />',
+	'ICON_SYNC'					=> '<img src="modules/forums/images/admin/icon_sync.gif" alt="' . $_CLASS['core_user']->lang['RESYNC'] . '" title="' . $_CLASS['core_user']->lang['RESYNC'] . '" />',
+	'ICON_SYNC_DISABLED'		=> '<img src="modules/forums/images/admin/icon_sync_disabled.gif" alt="' . $_CLASS['core_user']->lang['RESYNC'] . '" title="' . $_CLASS['core_user']->lang['RESYNC'] . '" />',
 ));
 	
 if (file_exists(SITE_FILE_ROOT.'includes/forums/admin/'.$file.'.php'))

Modified: cms/trunk/modules/forums/download.php
===================================================================
--- cms/trunk/modules/forums/download.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/download.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -49,12 +49,13 @@
 	FROM ' . FORUMS_ATTACHMENTS_TABLE . "
 	WHERE attach_id = $download_id";
 $result = $_CLASS['core_db']->query_limit($sql, 1);
+$attachment = $_CLASS['core_db']->fetch_row_assoc($result);
+$_CLASS['core_db']->free_result($result);
 
-if (!($attachment = $_CLASS['core_db']->fetch_row_assoc($result)))
+if (!$attachment)
 {
 	trigger_error('ERROR_NO_ATTACHMENT');
 }
-$_CLASS['core_db']->free_result($result);
 
 if ((!$attachment['in_message'] && !$config['allow_attachments']) || ($attachment['in_message'] && !$config['allow_pm_attach']))
 {
@@ -74,7 +75,7 @@
 	$row = $_CLASS['core_db']->fetch_row_assoc($result);
 	$_CLASS['core_db']->free_result($result);
 
-	if ($_CLASS['auth']->acl_gets(array('f_download', 'u_download'), $row['forum_id']))
+	if ($_CLASS['auth']->acl_get('u_download') && $_CLASS['auth']->acl_get('f_download', $row['forum_id']))
 	{
 		if ($row['forum_password'])
 		{
@@ -117,21 +118,22 @@
 	FROM ' . FORUMS_ATTACHMENTS_TABLE . "
 	WHERE attach_id = $download_id";
 $result = $_CLASS['core_db']->query_limit($sql, 1);
+$attachment = $_CLASS['core_db']->fetch_row_assoc($result);
+$_CLASS['core_db']->free_result($result);
 
-if (!($attachment = $_CLASS['core_db']->fetch_row_assoc($result)))
+if (!$attachment)
 {
 	trigger_error('ERROR_NO_ATTACHMENT');
 }
-$_CLASS['core_db']->free_result($result);
 
 $attachment['physical_filename'] = basename($attachment['physical_filename']);
+$display_cat = $extensions[$attachment['extension']]['display_cat'];
 
-
 if ($thumbnail)
 {
 	$attachment['physical_filename'] = 'thumb_' . $attachment['physical_filename'];
 }
-else
+elseif ($display_cat == ATTACHMENT_CATEGORY_NONE || $display_cat == ATTACHMENT_CATEGORY_IMAGE)
 {
 	// Update download count
 	$sql = 'UPDATE ' . FORUMS_ATTACHMENTS_TABLE . ' 
@@ -172,64 +174,38 @@
 		trigger_error($_CLASS['core_user']->lang['ERROR_NO_ATTACHMENT'] . '<br /><br />' . sprintf($_CLASS['core_user']->lang['FILE_NOT_FOUND_404'], $filename));
 	}
 
-	// Determine the Browser the User is using, because of some nasty incompatibilities.
-	// borrowed from phpMyAdmin. :)
-	$user_agent = (!empty($_SERVER['HTTP_USER_AGENT'])) ? $_SERVER['HTTP_USER_AGENT'] : '';
-
-	if (ereg('Opera(/| )([0-9].[0-9]{1,2})', $user_agent, $log_version))
-	{
-		$browser_version = $log_version[2];
-		$browser_agent = 'opera';
+	// Check if headers already sent or not able to get the file contents.
+	if (headers_sent() || !@is_readable($filename))
+	{
+		trigger_error('UNABLE_TO_DELIVER_FILE');
 	}
-	else if (ereg('MSIE ([0-9].[0-9]{1,2})', $user_agent, $log_version))
-	{
-		$browser_version = $log_version[1];
-		$browser_agent = 'ie';
-	}
-	else if (ereg('OmniWeb/([0-9].[0-9]{1,2})', $user_agent, $log_version))
-	{
-		$browser_version = $log_version[1];
-		$browser_agent = 'omniweb';
-    }
-	else if (ereg('(Konqueror/)(.*)(;)', $user_agent, $log_version))
-	{
-		$browser_version = $log_version[2];
-		$browser_agent = 'konqueror';
-    }
-	else if (ereg('Mozilla/([0-9].[0-9]{1,2})', $user_agent, $log_version) && ereg('Safari/([0-9]*)', $user_agent, $log_version2))
-	{
-		$browser_version = $log_version[1] . '.' . $log_version2[1];
-		$browser_agent = 'safari';
-    }
-	else if (ereg('Mozilla/([0-9].[0-9]{1,2})', $user_agent, $log_version))
-	{
-		$browser_version = $log_version[1];
-		$browser_agent = 'mozilla';
-    }
-	else
-	{
-		$browser_version = 0;
-		$browser_agent = 'other';
-    }
 
 	/*
 		Correct the mime type - we force application/octetstream for all files, except images
 		Please do not change this, it is a security precaution
 	*/
+	if ($category == ATTACHMENT_CATEGORY_NONE && strpos($attachment['mimetype'], 'image') === false)
+	{
+		$attachment['mimetype'] = (strpos(strtolower($user->browser), 'msie') !== false || strpos(strtolower($user->browser), 'opera') !== false) ? 'application/octetstream' : 'application/octet-stream';
+	}
 
-	if ($category == ATTACHMENT_CATEGORY_NONE && strpos($attachment['mimetype'], 'image') === false)
+	/* Clean all output buffers */
+	if (@ob_get_length())
 	{
-		$attachment['mimetype'] = ($browser_agent === 'ie' || $browser_agent === 'opera') ? 'application/octetstream' : 'application/octet-stream';
+		while (@ob_end_clean());
 	}
 
-	/* Clean all output buffers */
-	while (@ob_end_clean());
 	header('Content-Encoding: ');
 
 	/* Send out required headers */
 	header('Pragma: public');
+	
+	// Try X-Sendfile since it is much more server friendly.
+	// lighttpd has core support for it. An apache2 module is available at http://celebnamer.celebworld.ws/stuff/mod_xsendfile/
+	header('X-Sendfile: ' . $filename);
+
 	header('Content-Type: ' . $attachment['mimetype'] . '; name="' . $attachment['real_filename'] . '"');
-	header('Content-Disposition: inline; filename="' . $attachment['real_filename'] . '"');
+	header('Content-Disposition: attachment; filename="' . $attachment['real_filename'] . '"');
 
 	/* Now send the File Contents to the Browser */
 	$size = @filesize($filename);
@@ -258,7 +234,7 @@
 		return true;
 	}
 
-	$url = (getenv('HTTP_REFERER')) ? trim(getenv('HTTP_REFERER')) : trim($_SERVER['HTTP_REFERER']);
+	$url = getenv('HTTP_REFERER') ? trim(getenv('HTTP_REFERER')) : trim($_SERVER['HTTP_REFERER']);
 
 	if (!$url)
 	{
@@ -266,25 +242,34 @@
 	}
 
 	// Split URL into domain and script part
-	$url = explode('?', str_replace(array('http://', 'https://'), array('', ''), $url));
-	$hostname = trim($url[0]);
+	$url = @parse_url($url);
+	
+	if ($url === false)
+	{
+		return ($config['secure_allow_empty_referer']) ? true : false;
+	}
+
+	$hostname = $url['host'];
 	unset($url);
 
 	$allowed = ($config['secure_allow_deny']) ? false : true;
 	$iplist = array();
 
-	$ip_ary = gethostbynamel($hostname);
-
-	foreach ($ip_ary as $ip)
-	{
-		if ($ip)
-		{
-			$iplist[] = $ip;
-		}
+	if (($ip_ary = @gethostbynamel($hostname)) !== false)
+	{
+		foreach ($ip_ary as $ip)
+		{
+			if ($ip)
+			{
+				$iplist[] = $ip;
+			}
+		}
 	}
 	
 	// Check for own server...
-	if (preg_match('#^.*?' . $config['server_name'] . '.*?$#i', $hostname))
+	$server_name = (!empty($_SERVER['SERVER_NAME'])) ? $_SERVER['SERVER_NAME'] : getenv('SERVER_NAME');
+
+	if (preg_match('#^.*?' . preg_quote($server_name, '#') . '.*?$#i', $hostname))
 	{
 		$allowed = true;
 	}
@@ -305,7 +290,7 @@
 			{
 				foreach ($iplist as $ip)
 				{
-					if (preg_match('#^' . str_replace('*', '.*?', $site_ip) . '$#i', $ip))
+					if (preg_match('#^' . str_replace('*', '.*?', preg_quote($site_ip, '#')) . '$#i', $ip))
 					{
 						if ($row['ip_exclude'])
 						{
@@ -322,7 +307,7 @@
 
 			if ($site_hostname)
 			{
-				if (preg_match('#^' . str_replace('*', '.*?', $site_hostname) . '$#i', $hostname))
+				if (preg_match('#^' . str_replace('*', '.*?', preg_quote($site_hostname, '#')) . '$#i', $hostname))
 				{
 					if ($row['ip_exclude'])
 					{

Added: cms/trunk/modules/forums/images/Thumbs.db
===================================================================
(Binary files differ)


Property changes on: cms/trunk/modules/forums/images/Thumbs.db
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: cms/trunk/modules/forums/images/admin/Thumbs.db
===================================================================
(Binary files differ)


Property changes on: cms/trunk/modules/forums/images/admin/Thumbs.db
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: cms/trunk/modules/forums/images/en/Thumbs.db
===================================================================
(Binary files differ)


Property changes on: cms/trunk/modules/forums/images/en/Thumbs.db
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: cms/trunk/modules/forums/language/admin.php
===================================================================
--- cms/trunk/modules/forums/language/admin.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/admin.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,2216 @@
+<?php
+/** 
+*
+* admin [English]
+*
+* @package phpBB3
+* @version $Id: admin.php,v 1.27 2005/05/15 20:17:34 acydburn Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+// DEVELOPERS PLEASE NOTE
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang += array(
+	'LOGIN_ADMIN'			=> 'To administer the board you must be an authenticated user.',
+	'LOGIN_ADMIN_CONFIRM'	=> 'To administer the board you must re-authenticate yourself.',
+	'LOGIN_ADMIN_SUCCESS'	=> 'You have successfully authenticated and will now be redirected to the Administration Control Panel',
+	'NO_ADMIN'				=> 'You are not authorised to administer this board.',
+	'NO_FRAMES'				=> 'Sorry, your browser does not support frames.',
+
+	'ADMIN_TITLE'	=> 'Administration Panel',
+	'ADMIN'			=> 'Administration',
+
+	'RETURN_TO'		=> 'Return to ...',
+	'FORUM_INDEX'	=> 'Forum Index',
+	'ADMIN_INDEX'	=> 'Admin Index',
+
+	'ACP_INDEX'				=> 'Admin index',
+
+	'ACP_CAT_GENERAL'		=> 'General',
+	'ACP_CAT_FORUM'			=> 'Forum',
+	'ACP_BOARD_SETTINGS'	=> 'Board settings',
+	'ACP_BOARD_DEFAULTS'	=> 'Board defaults',
+	'ACP_CAT_SERVER'		=> 'Server',
+	'ACP_BOARD_SERVER'		=> 'Server settings',
+
+	'ACP_CAT_USERGROUP'		=> 'Users &amp; Groups',
+	'ACP_USERS_MANAGE'		=> 'Edit user data',
+	
+
+
+	'DB_CAT'		=> 'Database',
+	'DB_BACKUP'		=> 'Backup Database',
+	'DB_RESTORE'	=> 'Restore Database',
+	'SEARCH_INDEX'	=> 'Search Indexing',
+	'DB_UTILS'		=> 'Database Utilities',
+
+	'FORUM_CAT'	=> 'Forums',
+	'PRUNE'		=> 'Pruning',
+
+	'GENERAL_CAT'		=> 'General',
+	'AUTH_SETTINGS'		=> 'Authentication',
+	'AVATAR_SETTINGS'	=> 'Avatar Settings',
+	'BASIC_CONFIG'		=> 'Basic Configuration',
+	'BOARD_DEFAULTS'	=> 'Board Defaults',
+	'BOARD_SETTINGS'	=> 'Board Settings',
+	'COOKIE_SETTINGS'	=> 'Cookie Settings',
+	'MESSAGE_SETTINGS'	=> 'Message Settings',
+	'EMAIL_SETTINGS'	=> 'Email Settings',
+	'MASS_EMAIL'		=> 'Mass Email',
+	'SERVER_SETTINGS'	=> 'Server Settings',
+	'LOAD_SETTINGS'		=> 'Load Settings',
+	'EVENTS'			=> 'Events',
+	'CRON'				=> 'Cronjobs',
+	'PHP_INFO'			=> 'PHP Information',
+	'IM'				=> 'Jabber Settings',
+
+	'LOG_CAT'		=> 'Logging',
+	'ADMIN_LOGS'	=> 'Admin Log',
+	'MOD_LOGS'		=> 'Moderator Log',
+	'CRITICAL_LOGS'	=> 'Error Log',
+
+	'PERM_CAT'		=> 'Permissions',
+	'USER_PERMS'	=> 'User permissions',
+	'GROUP_PERMS'	=> 'Group permissions',
+
+	'POST_CAT'		=> 'Posting',
+	'SMILIES'		=> 'Smilies',
+	'ICONS'			=> 'Icons',
+	'WORD_CENSOR'	=> 'Word Censors',
+
+	'STYLE_CAT'			=> 'Styles',
+	'MANAGE_STYLE'		=> 'Styles',
+	'MANAGE_TEMPLATE'	=> 'Templates',
+	'MANAGE_THEME'		=> 'Themes',
+	'MANAGE_IMAGESET'	=> 'Imagesets',
+
+	'USER_CAT'		=> 'Users / Groups',
+	'MANAGE_USERS'	=> 'Manage Users',
+	'BAN_EMAILS'	=> 'Ban Emails',
+	'BAN_IPS'		=> 'Ban IPs',
+	'BAN_USERS'		=> 'Ban Usernames',
+	'DISALLOW'		=> 'Disallow names',
+	'RANKS'			=> 'Ranks',
+	'PRUNE_USERS'	=> 'Prune users',
+	'BOTS'			=> 'Manage Bots',
+	'GROUP_MANAGE'	=> 'Manage groups',
+	'CUSTOM_PROFILE_FIELDS'	=> 'Profile fields',
+
+	'LANGUAGE_CAT'		=> 'Language',
+	'LANGUAGE_PACKS'	=> 'Language Packs',
+
+	
+	'ADMINISTRATORS'	=> 'Administrators',
+	'USERNAMES_EXPLAIN'	=> 'Place each username on a seperate line',
+	'LOOK_UP_FORUM'		=> 'Select a Forum',
+	'MANAGE'			=> 'Manage',
+	'ADD'				=> 'Add',
+	'PERMISSIONS'		=> 'Permissions',
+	'UPDATE'			=> 'Update',
+	'EXPORT_STORE'		=> 'Store',
+	'EXPORT_DOWNLOAD'	=> 'Download',
+	'CONFIG_UPDATED'	=> 'Configuration updated successfully',
+	'DOWNLOAD_STORE'		=> 'Download or Store file',
+	'DOWNLOAD_STORE_EXPLAIN'=> 'You may directly download the file or save it in your store/ folder.',
+	'COLOUR_SWATCH'		=> 'Web-safe colour swatch',
+	'UPDATE_MARKED'		=> 'Update Marked',
+	'UPDATE_ALL'		=> 'Update All',
+
+	'CONFIRM_OPERATION'	=> 'Are you sure you wish to carry out this operation?',
+
+	'LOG_INDEX_ACTIVATE'	=> '<b>Activated inactive users</b><br />&#187; %s',
+	'LOG_INDEX_DELETE'		=> '<b>Deleted inactive users</b><br />&#187; %s',
+	'LOG_INDEX_REMIND'		=> '<b>Sent reminder emails to inactive users</b><br />&#187; %s',
+
+	'LOG_USER_INACTIVE'		=> '<b>User deactivated</b><br />&#187; %s',
+	'LOG_USER_ACTIVE'		=> '<b>User activated</b><br />&#187; %s',
+
+	'LOG_MASS_EMAIL'		=> '<b>Sent mass email</b><br />&#187; %s',
+
+	'LOG_DELETE_WORD'		=> '<b>Deleted word censor</b><br />&#187; %s',
+	'LOG_EDIT_WORD'			=> '<b>Edited word censor</b><br />&#187; %s',
+	'LOG_ADD_WORD'			=> '<b>Added word censor</b><br />&#187; %s',
+
+	'log_db_backup'			=> '<b>Database backup</b>',
+	'log_db_restore'		=> '<b>Database restore</b>',
+	'log_search_index'		=> '<b>Re-indexed search system</b><br />&#187; %s',
+
+	'log_disallow_add'		=> '<b>Added disallowed username</b><br />&#187; %s',
+	'log_disallow_delete'	=> '<b>Deleted disallowed username</b>',
+
+	'LOG_ADMIN_CLEAR'		=> '<b>Cleared admin log</b>',
+	'LOG_MOD_CLEAR'			=> '<b>Cleared moderator log</b>',
+	'LOG_CRITICAL_CLEAR'	=> '<b>Cleared error log</b>',
+
+	'LOG_PRUNE'				=> '<b>Pruned forums</b><br />&#187; %s',
+	'LOG_AUTO_PRUNE'		=> '<b>Auto-pruned forums</b><br />&#187; %s',
+
+	'LOG_BAN_EXCLUDE_USER'	=> '<b>Excluded user from ban</b> for reason "<i>%s</i>"<br />&#187; %s ',
+	'LOG_BAN_EXCLUDE_IP'	=> '<b>Excluded ip from ban</b> for reason "<i>%s</i>"<br />&#187; %s ',
+	'LOG_BAN_EXCLUDE_EMAIL' => '<b>Excluded email from ban</b> for reason "<i>%s</i>"<br />&#187; %s ',
+	'LOG_BAN_USER'			=> '<b>Banned User</b> for reason "<i>%s</i>"<br />&#187; %s ',
+	'LOG_BAN_IP'			=> '<b>Banned ip</b> for reason "<i>%s</i>"<br />&#187; %s',
+	'LOG_BAN_EMAIL'			=> '<b>Banned email</b> for reason "<i>%s</i>"<br />&#187; %s',
+	'LOG_UNBAN_USER'		=> '<b>Unbanned user</b><br />&#187; %s',
+	'LOG_UNBAN_IP'			=> '<b>Unbanned ip</b><br />&#187; %s',
+	'LOG_UNBAN_EMAIL'		=> '<b>Unbanned email</b><br />&#187; %s',
+
+	'LOG_DOWNLOAD_EXCLUDE_IP'	=> '<b>Exluded ip/hostname from download list</b><br />&#187; %s',
+	'LOG_DOWNLOAD_IP'			=> '<b>Added ip/hostname to download list</b><br />&#187; %s',
+	'LOG_DOWNLOAD_REMOVE_IP'	=> '<b>Removed ip/hostname from download list</b><br />&#187; %s',
+
+	'LOG_SERVER_CONFIG'		=> '<b>Altered server settings</b>',
+	'LOG_DEFAULT_CONFIG'	=> '<b>Altered board defaults</b>',
+	'LOG_SETTING_CONFIG'	=> '<b>Altered board settings</b>',
+	'LOG_COOKIE_CONFIG'		=> '<b>Altered cookie settings</b>',
+	'LOG_EMAIL_CONFIG'		=> '<b>Altered email settings</b>',
+	'LOG_AVATAR_CONFIG'		=> '<b>Altered avatar settings</b>',
+	'LOG_AUTH_CONFIG'		=> '<b>Altered authentication settings</b>',
+	'LOG_LOAD_CONFIG'		=> '<b>Altered load settings</b>',
+	'LOG_MESSAGE_CONFIG'	=> '<b>Altered private message settings</b>',
+
+	'LOG_ATTACH_CONFIG'		=> '<b>Altered attachment settings</b>',
+	'LOG_ATTACH_EXT_ADD'	=> '<b>Added or edited attachment extension</b><br />&#187; %s',
+	'LOG_ATTACH_EXT_DEL'	=> '<b>Removed attachment extension</b><br />&#187; %s',
+	'LOG_ATTACH_EXT_UPDATE'	=> '<b>Updated attachment extension</b><br />&#187; %s',
+	'LOG_ATTACH_EXTGROUP_ADD' => '<b>Added extension group</b><br />&#187; %s',
+	'LOG_ATTACH_EXTGROUP_EDIT' => '<b>Edited extension group</b><br />&#187; %s',
+	'LOG_ATTACH_EXTGROUP_DEL' => '<b>Removed extension group</b><br />&#187; %s',
+	'LOG_ATTACH_FILEUPLOAD'	=> '<b>Orphan File uploaded to Post Number %1$d - %2$s</b>',
+	'LOG_ATTACH_ORPHAN_DEL'	=> '<b>Orphan Files deleted</b><br />&#187; %s',
+
+	'log_prune_user_deac'	=> '<b>Users Deactivated</b><br />%s',
+	'log_prune_user_del_del'=> '<b>Users Pruned and Posts Deleted</b><br />%s',
+	'log_prune_user_del_anon'=> '<b>Users Pruned and Posts Retained</b><br />%s',
+
+	'LOG_RESYNC_STATS'		=> '<b>Post, topic and user stats reset</b>',
+	'LOG_RESYNC_POSTCOUNTS'	=> '<b>User postcounts synced</b>',
+	'LOG_RESET_DATE'		=> '<b>Board start date reset</b>',
+	'LOG_RESET_ONLINE'		=> '<b>Most users online reset</b>',
+
+	'LOG_ACL_MOD_DEL'			=> '<b>Removed Moderators</b> from %s<br />&#187; %s',
+	'LOG_ACL_MOD_ADD'			=> '<b>Added or edited Moderators</b> from %s<br />&#187; %s',
+	'LOG_ACL_SUPERMOD_DEL'		=> '<b>Removed Super Moderators</b><br />&#187; %s',
+	'LOG_ACL_SUPERMOD_ADD'		=> '<b>Added or edited Super Moderators</b><br />&#187; %s',
+	'LOG_ACL_ADMIN_DEL'			=> '<b>Removed Administrators</b><br />&#187; %s',
+	'LOG_ACL_ADMIN_ADD'			=> '<b>Added or edited Administrators</b><br />&#187; %s',
+	'LOG_ACL_FORUM_DEL'			=> '<b>Removed Forum access</b> from %s<br />&#187; %s',
+	'LOG_ACL_FORUM_ADD'			=> '<b>Added or edited Forum access</b> from %s<br />&#187; %s',
+	'LOG_ACL_USER_ADD'			=> '<b>Edited User permissions</b><br />&#187; %s',
+	'LOG_ACL_GROUP_ADD'			=> '<b>Edited Group permissions</b><br />&#187; %s',
+	'LOG_ACL_PRESET_ADD'		=> '<b>Added or edited permission preset</b><br />&#187; %s',
+	'LOG_ACL_PRESET_DEL'		=> '<b>Deleted permission preset</b><br />&#187; %s',
+
+	'LOG_FORUM_ADD'			=> '<b>Created new forum</b><br />&#187; %s',
+	'LOG_FORUM_MOVE_UP'		=> '<b>Moved forum</b> %s <b>above</b> %s',
+	'LOG_FORUM_MOVE_DOWN'	=> '<b>Moved forum</b> %s <b>below</b> %s',
+	'LOG_FORUM_EDIT'		=> '<b>Edited forum details</b><br />&#187; %s',
+	'LOG_FORUM_SYNC'		=> '<b>Re-synchronised forum</b><br />&#187; %s',
+	'LOG_FORUM_DEL_POSTS'	=> '<b>Deleted forum and its messages</b><br />&#187; %s',
+	'LOG_FORUM_DEL_FORUMS'	=> '<b>Deleted forum and its subforums</b><br />&#187; %s',
+	'LOG_FORUM_DEL_POSTS_MOVE_FORUMS'	=> '<b>Deleted forum and its messages, moved subforums</b> to %s<br />&#187; %s',
+	'LOG_FORUM_DEL_MOVE_POSTS_FORUMS'	=> '<b>Deleted forum and its subforums, moved messages</b> to %s<br />&#187; %s',
+	'LOG_FORUM_DEL_MOVE_POSTS'	=> '<b>Deleted forum and moved posts </b> to %s<br />&#187; %s',
+	'LOG_FORUM_DEL_MOVE_FORUMS'	=> '<b>Deleted forum and moved subforums</b> to %s<br />&#187; %s',
+	'LOG_FORUM_DEL_POSTS_FORUMS'=> '<b>Deleted forum, its messages and subforums</b><br />&#187; %s',
+	'LOG_FORUM_DEL_MOVE_POSTS_MOVE_FORUMS'	=> '<b>Deleted forum, moved posts</b> to %s <b>and subforums</b> to %s<br />&#187; %s',
+
+	'LOG_GROUP_UPDATED'		=> '<b>Usergroup details updated</b><br />&#187; %s',
+	'LOG_GROUP_CREATED'		=> '<b>New usergroup created</b><br />&#187; %s',
+	'LOG_MODS_ADDED'		=> '<b>Added new leaders to usergroup</b> %s<br />&#187; %s',
+	'LOG_USERS_ADDED'		=> '<b>Added new members to usergroup</b> %s<br />&#187; %s',
+	'LOG_GROUP_DEFAULTS'	=> '<b>Group made default for members</b><br />&#187; %s',
+	'LOG_USERS_APPROVED'	=> '<b>Users approved in usergroup</b> %s<br />&#187; %s',
+	'LOG_GROUP_DEMOTED'		=> '<b>Leaders demoted in usergroup</b> %s<br />&#187; %s',
+	'LOG_GROUP_PROMOTED'	=> '<b>Members promoted to leader in usergroup</b> %s<br />&#187; %s',
+	'LOG_GROUP_REMOVE'		=> '<b>Members removed from usergroup</b> %s<br />&#187; %s',
+	'LOG_GROUP_DELETE'		=> '<b>Usergroup deleted</b><br />&#187; %s',
+
+	'LOG_ADD_STYLE'		=> '<b>Added new style</b><br />&#187; %s',
+	'LOG_EDIT_STYLE'	=> '<b>Edited style</b><br />&#187; %s',
+	'LOG_EXPORT_STYLE'	=> '<b>Exported style</b><br />&#187; %s',
+	'LOG_DELETE_STYLE'	=> '<b>Deleted style</b><br />&#187; %s',
+
+	'LOG_ADD_THEME_FS'		=> '<b>Add new theme on filesystem</b><br />&#187; %s',
+	'LOG_ADD_THEME_DB'		=> '<b>Added new theme to database</b><br />&#187; %s',
+	'LOG_EDIT_THEME'		=> '<b>Edited theme</b><br />&#187; %s',
+	'LOG_EDIT_THEME_DETAILS'=> '<b>Edited theme details</b><br />&#187; %s',
+	'LOG_EXPORT_THEME'		=> '<b>Exported theme</b><br />&#187; %s',
+	'LOG_DELETE_THEME'		=> '<b>Theme deleted</b><br />&#187; %s',
+
+	'LOG_ADD_TEMPLATE_FS'		=> '<b>Add new template set on filesystem</b><br />&#187; %s',
+	'LOG_ADD_TEMPLATE_DB'		=> '<b>Added new template set to database</b><br />&#187; %s',
+	'LOG_EDIT_TEMPLATE'			=> '<b>Edited template set</b><br />&#187; %s',
+	'LOG_EDIT_TEMPLATE_DETAILS'	=> '<b>Edited template details</b><br />&#187; %s',
+	'LOG_EXPORT_TEMPLATE'		=> '<b>Exported template set</b><br />&#187; %s',
+	'LOG_DELETE_TEMPLATE'		=> '<b>Deleted template set</b><br />&#187; %s',
+	'LOG_EDIT_TEMPLATE'			=> '<b>Edited template</b><br />&#187; %s [%s]',
+	'LOG_CLEAR_TPLCACHE'		=> '<b>Cleared template cache</b><br />&#187; %s',
+
+	'LOG_ADD_IMAGESET'			=> '<b>Added new imageset</b><br />&#187; %s',
+	'LOG_EDIT_IMAGESET'			=> '<b>Edited imageset</b><br />&#187; %s',
+	'LOG_EDIT_IMAGESET_DETAILS'	=> '<b>Edited imageset details</b><br />&#187; %s',
+	'LOG_EXPORT_IMAGESET'		=> '<b>Exported imageset</b><br />&#187; %s',
+	'LOG_DELETE_IMAGESET'		=> '<b>Deleted imageset</b><br />&#187; %s',
+
+	'LOG_BBCODE_ADD'		=> '<b>Added new BBCode</b><br />&#187; %s',
+	'LOG_BBCODE_EDIT'		=> '<b>Edited BBCode</b><br />&#187; %s',
+	'LOG_BBCODE_DELETE'		=> '<b>Deleted BBCode</b><br />&#187; %s',
+
+	'LOG_JAB_PASSCHG'	=> '<b>Jabber password changed</b>',
+	'LOG_JAB_REGISTER'	=> '<b>Jabber account registered</b>',
+	'LOG_JAB_CHANGED'	=> '<b>Jabber account changed</b>',
+
+	'LOG_BOT_ADDED'		=> '<b>New bot added</b><br />&#187; %s',
+	'LOG_BOT_UPDATED'	=> '<b>Existing bot updated</b><br />&#187; %s',
+	'LOG_BOT_DELETE'	=> '<b>Deleted bot</b><br />&#187; %s',
+
+	'LOG_DELETE_LANGUAGE_PACK'		=> '<b>Deleted language pack</b><br />&#187; %s',
+	'LOG_LANGUAGE_PACK_INSTALLED'	=> '<b>Installed language pack</b><br />&#187; %s',
+	'LOG_UPDATE_LANG_DETAILS'		=> '<b>Updated language pack details</b><br />&#187; %s',
+);
+
+// Index page
+$this->lang += array(
+	'WELCOME_PHPBB'	=> 'Welcome to phpBB',
+	'ADMIN_INTRO'	=> 'Thank you for choosing phpBB as your forum solution. This screen will give you a quick overview of all the various statistics of your board. The links on the left hand side of this screen allow you to control every aspect of your forum experience. Each page will have instructions on how to use the tools.',
+
+	'FORUM_STATS'	=> 'Forum Statistics',
+	'STATISTIC'		=> 'Statistic',
+	'VALUE'			=> 'Value',
+	'NUMBER_POSTS'	=> 'Number of posts',
+	'POSTS_PER_DAY' => 'Posts per day',
+	'NUMBER_TOPICS' => 'Number of topics',
+	'TOPICS_PER_DAY'=> 'Topics per day',
+	'NUMBER_USERS'	=> 'Number of users',
+	'USERS_PER_DAY' => 'Users per day',
+	'NUMBER_FILES'	=> 'Number of Attachments',
+	'FILES_PER_DAY'	=> 'Attachments per day',
+	'BOARD_STARTED' => 'Board started',
+	'AVATAR_DIR_SIZE'	=> 'Avatar directory size',
+	'UPLOAD_DIR_SIZE'	=> 'Upload directory size',
+	'DATABASE_SIZE'		=> 'Database size',
+	'GZIP_COMPRESSION'	=> 'Gzip compression',
+	'NOT_AVAILABLE'		=> 'Not available',
+	'ON'				=> 'ON',
+	'OFF'				=> 'OFF',
+	'RESET_ONLINE'		=> 'Reset Online',
+	'RESET_DATE'		=> 'Reset Date',
+	'RESYNC_STATS'		=> 'Resync Stats',
+	'RESYNC_POSTCOUNTS'	=> 'Resync Postcounts',
+
+	'INACTIVE_USERS'		=> 'Inactive Users',
+	'INACTIVE_USERS_EXPLAIN'=> 'This is a list of users who have registered but whos accounts are inactive. You can activate, delete or remind (by sending an email) these users if you wish.',
+	'NO_INACTIVE_USERS'		=> 'No inactive users',
+	'ACTIVATE'				=> 'Activate',
+	'REMIND'				=> 'Remind',
+
+	'ADMIN_LOG'					=> 'Logged administrator actions',
+	'ADMIN_LOG_INDEX_EXPLAIN'	=> 'This gives an overview of the last five actions carried out by board administrators. A full copy of the log can be viewed from the appropriate menu item to the left.',
+	'IP'	=> 'User IP',
+	'ACTION'=> 'Action',
+);
+
+// Restore/Backup
+$this->lang += array(
+	'Database_Utilities' => 'Database Utilities',
+
+	'Backup'			=> 'Backup',
+	'Backup_explain'	=> 'Here you can backup all your phpBB related data. You may store the resulting archive in your store/ folder or download it directly. Depending on your server configuration you be able to compress the file in a number of formats. If you wish to include any additional "custom" tables please list them in the additional tables field, separated by commas. ',
+	'Backup_options'	=> 'Backup options',
+	'Backup_type'		=> 'Backup type',
+	'Start_backup'		=> 'Start Backup',
+	'Full_backup'		=> 'Full',
+	'Structure_only'	=> 'Structure Only',
+	'Data_only'			=> 'Data only',
+	'INC_SEARCH_INDEX'			=> 'Include Search Index tables',
+	'INC_SEARCH_INDEX_EXPLAIN'	=> 'Saying no here will reduce the size of the backup by ignoring the search indexes.',
+	'Additional_tables'			=> 'Additional tables',
+	'Additional_tables_explain' => 'Include the names of other tables you wish to backup here, comma separated.',
+	'Compress_file'			=> 'Compress file',
+	'Store_local'			=> 'Store file locally',
+	'Store_local_explain'	=> 'To store the file on the server rather than download it specify a path here relative to the phpBB2 root.',
+	'Backup_download'		=> 'Your download will start shortly please wait till it begins',
+	'Backup_writing'		=> 'The backup file is being generated please wait till it completes',
+	'Backup_success'		=> 'The backup file has been created successfully in the location you specified',
+	'Backups_not_supported' => 'Sorry but database backups are not currently supported for your database system',
+
+	'Restore' => 'Restore',
+	'Restore_explain' => 'This will perform a full restore of all phpBB tables from a saved file. You can <u>either</u> upload the backup file via this form or upload it manually to a location on the server. If your server supports it you may use a gzip compressed text file and it will automatically be decompressed. <b>WARNING</b> This will overwrite any existing data. The restore may take a long time to process please do not move from this page till it is complete.',
+	'Upload_file' => 'Upload backup file',
+	'Select_file' => 'Select a file',
+	'Local_backup_file' => 'Location of backup file',
+	'Local_backup_file_explain' => 'Location on the server where backup file is stored relative to the phpBB root, e.g. ../tmp/backup.sql',
+	'Supported_extensions' => 'Supported extensions',
+	'Start_Restore' => 'Start Restore',
+	'Restore_success' => 'The Database has been successfully restored.<br /><br />Your board should be back to the state it was when the backup was made.',
+	'Restore_Error_filename' => 'The file you uploaded had an unsupported extension.',
+	'Compress_unsupported' => 'The version of PHP installed on this server does not support the type of compression used for your backup. Please use a compression method listed on the previous page.',
+	'Restore_Error_no_file' => 'No file was uploaded',
+);
+
+// Permissions
+$this->lang += array(
+	'ACL_EXPLAIN'			=> 'Permissions are based on a simple YES / NO system. Setting an option to NO for a user or usergroup overrides any other value assigned to it. If you do not wish to assign a value for an option for this user or group select UNSET. If values are assigned for this option elsewhere they will be used in preference, else NO is assumed.',
+	'PERMISSIONS_EXPLAIN'	=> 'Here you can alter which users and groups can access which forums. To assign moderators or define administrators please use the appropriate page (see left hand side menu).',
+	'MODERATORS'			=> 'Moderators',
+	'MODERATORS_EXPLAIN'	=> 'Here you can assign users and groups as forum moderators. To assign users access to forums, to define super moderators or administrators please use the appropriate page (see left hand side menu). If you are permitted you can also change permissions for this forum from this page. Use the select box to change views.',
+	'SUPER_MODERATORS'			=> 'Super Moderators',
+	'SUPER_MODERATORS_EXPLAIN'	=> 'Here you can assign users and groups as super moderators. Super Moderators are like ordinary moderators accept they have access to every forum on your board. To assign users access to forums or define administrators please use the appropriate page (see left hand side menu). If you are permitted you can also set permissions for forum options from this page. Use the select box to change views.',
+	'ADMINISTRATORS_EXPLAIN'	=> 'Here you can assign administrator rights to users or groups. All users with admin permissions can view the administration panel. If you are permitted you can also change permissions for forums, super moderator and moderator options from this page. Use the select box to change views.',
+	'USER_PERMISSIONS'			=> 'User Permissions',
+	'USER_PERMISSIONS_EXPLAIN'	=> 'Here you can set user based permissions. These include capabilities such as the use of avatars, sending private messages, etc. To alter these settings for large numbers of users the Group permissions system is the prefered method.',
+	'GROUP_PERMISSIONS'			=> 'Group Permissions',
+	'GROUP_PERMISSIONS_EXPLAIN' => 'Here you can set usergroup based permissions. These include capabilities such as the use of avatars, sending private messages, etc. To alter these settings for single users the User permissions system is the prefered method.',
+	'DEPENDENCIES'			=>	'Dependencies',
+	'DEPENDENCIES_EXPLAIN'	=>	'Here you can define relationships between administrator or moderator permission options and forum options. Using this you can automatically update forum permissions based on setting admin or moderator options. While this can save time care should be taken in defining these dependencies. Remember, these settings apply to all users and all groups.',
+
+	'LOOK_UP_GROUP'		=> 'Look up Usergroup',
+	'MANAGE_USERS'		=> 'Manage Users',
+	'ADD_USERS'			=> 'Add Users',
+	'MANAGE_GROUPS'		=> 'Manage Groups',
+	'ADD_GROUPS'		=> 'Add Groups',
+	'ALLOWED_USERS'		=> 'Allowed users',
+	'DISALLOWED_USERS'	=> 'Disallowed users',
+	'ALLOWED_GROUPS'	=> 'Allowed groups',
+	'DISALLOWED_GROUPS' => 'Disallowed groups',
+	'REMOVE_SELECTED'	=> 'Remove selected',
+	'SET_OPTIONS'	=> 'Set Options',
+	'OPTION'		=> 'Option',
+	'YES'			=> 'Yes',
+	'NO'			=> 'No',
+	'UNSET'			=> 'Unset',
+	'IGNORE'		=> 'Ignore',
+	'PRESETS'		=> 'Presets',
+	'ALL_YES'		=> 'All Yes',
+	'ALL_NO'		=> 'All No',
+	'ALL_UNSET'		=> 'All Unset',
+	'ALL_IGNORE'	=> 'All Ignore',
+	'USER_PRESETS'	=> 'User presets',
+	'FROM_PARENT'	=> 'From Parent',
+	'SELECT_VIEW'	=> 'Select view',
+	'ACL_SUBFORUMS'			=> 'Assign to sub-forums',
+	'ACL_SUBFORUMS_EXPLAIN'	=> 'Select the subforums (if any) you want to inherit these permissions',
+	'PRESETS_EXPLAIN'		=> 'To update or delete an existing preset select it from the list.',
+	'SELECT_PRESET'			=> 'Select preset',
+	'PRESET_NAME'			=> 'Preset name',
+	'EMPTY'					=> 'Empty',
+	'WARNING'			=> 'Warning',
+	'WARNING_EXPLAIN'	=> 'You have altered settings for one or alternative views. Be sure to verify these settings before updating',
+	'NOTIFY'			=> 'Notification',
+	'SELECTED_USER'		=> 'Selected User',
+	'SELECTED_USERS'	=> 'Selected Users',
+	'SELECTED_GROUP'	=> 'Selected Group',
+	'SELECTED_GROUPS'	=> 'Selected Groups',
+	'SELECTED_FORUM'	=> 'Selected Forum',
+	'SELECTED_FORUMS'	=> 'Selected Forums',
+	'WILL_SET_OPTIONS'	=> 'Will set options in',
+	'INHERIT_PARENT'	=> 'Inherit Parent',
+	'SAVE'				=> 'Save',
+
+	'ACL_VIEW_FORUM'	=> 'Forum Options',
+	'ACL_VIEW_MOD'		=> 'Moderator Options',
+	'ACL_VIEW_SUPERMOD'	=> 'Supermod Options',
+	'ACL_VIEW_ADMIN'	=> 'Admin Options',
+
+	'AUTH_UPDATED'	=> 'Permissions have been updated',
+
+	'acl_a_server' 		=> 'Can alter server and email settings',
+	'acl_a_defaults' 	=> 'Can alter board defaults',
+	'acl_a_board' 		=> 'Can alter board settings',
+	'acl_a_cookies' 	=> 'Can alter cookie settings',
+	'acl_a_names' 		=> 'Can alter disallowed names',
+	'acl_a_words' 		=> 'Can alter word censors',
+	'acl_a_icons' 		=> 'Can alter topic icons and smilies',
+	'acl_a_search' 		=> 'Can re-index search tables',
+	'acl_a_prune' 		=> 'Can prune forums',
+	'acl_a_bbcode' 		=> 'Can define BBCode tags',
+	'acl_a_attach' 		=> 'Can manage attachments',
+	'acl_a_ranks'		=> 'Can manage ranks',
+	'acl_a_user' 		=> 'Can manage users',
+	'acl_a_userdel' 	=> 'Can delete or prune users',
+	'acl_a_useradd' 	=> 'Can add new users',
+	'acl_a_group' 		=> 'Can manage groups',
+	'acl_a_groupdel' 	=> 'Can delete groups',
+	'acl_a_groupadd' 	=> 'Can add new groups',
+	'acl_a_forum' 		=> 'Can manage forums',
+	'acl_a_forumdel' 	=> 'Can delete forums',
+	'acl_a_forumadd' 	=> 'Can add new forums',
+	'acl_a_ban' 		=> 'Can manage bans',
+	'acl_a_auth' 		=> 'Can alter forum permissions',
+	'acl_a_authmods' 	=> 'Can alter moderator permissions',
+	'acl_a_authadmins' 	=> 'Can alter admin permissions',
+	'acl_a_authusers' 	=> 'Can alter user permissions',
+	'acl_a_authgroups' 	=> 'Can alter group permissions',
+	'acl_a_email' 		=> 'Can send mass email',
+	'acl_a_styles' 		=> 'Can manage styles',
+	'acl_a_backup' 		=> 'Can backup database',
+	'acl_a_restore' 	=> 'Can restore database',
+	'acl_a_clearlogs' 	=> 'Can clear admin and mod logs',
+	'acl_a_events' 		=> 'Can use event system',
+	'acl_a_cron' 		=> 'Can use cron system',
+	'acl_a_authdeps'	=> 'Can set dependencies',
+
+	'acl_m_edit'	=> 'Can edit posts',
+	'acl_m_delete'	=> 'Can delete posts',
+	'acl_m_move'	=> 'Can move topics',
+	'acl_m_lock'	=> 'Can lock topics',
+	'acl_m_split'	=> 'Can split topics',
+	'acl_m_merge'	=> 'Can merge topics',
+	'acl_m_approve' => 'Can approve posts',
+	'acl_m_unrate'	=> 'Can un-rate posts',
+	'acl_m_auth'	=> 'Can set permissions',
+	'acl_m_ip'		=> 'Can view IP\'s',
+	'acl_m_info'	=> 'Can alter forum info',
+
+	'acl_f_list'		=> 'Can see forum',
+	'acl_f_read'		=> 'Can read forum',
+	'acl_f_post'		=> 'Can post in forum',
+	'acl_f_reply'		=> 'Can reply to posts',
+	'acl_f_quote'		=> 'Can quote posts',
+	'acl_f_edit'		=> 'Can edit own posts',
+	'acl_f_user_lock'	=> 'Can lock own topics',
+	'acl_f_delete'		=> 'Can delete own posts',
+	'acl_f_poll'		=> 'Can create polls',
+	'acl_f_vote'		=> 'Can vote in polls',
+	'acl_f_votechg'		=> 'Can change existing vote',
+	'acl_f_announce'	=> 'Can post announcements',
+	'acl_f_sticky'		=> 'Can post stickies',
+	'acl_f_attach'		=> 'Can attach files',
+	'acl_f_download'	=> 'Can download files',
+	'acl_f_html'		=> 'Can post HTML',
+	'acl_f_bbcode'		=> 'Can post BBCode',
+	'acl_f_smilies'		=> 'Can post smilies',
+	'acl_f_img'			=> 'Can post images',
+	'acl_f_flash'		=> 'Can post Flash',
+	'acl_f_sigs'		=> 'Can use signatures',
+	'acl_f_search'		=> 'Can search the forum',
+	'acl_f_email'		=> 'Can email topics',
+	'acl_f_rate'		=> 'Can rate posts',
+	'acl_f_report'		=> 'Can report posts',
+	'acl_f_print'		=> 'Can print topics',
+	'acl_f_ignoreflood' => 'Can ignore flood limit',
+	'acl_f_postcount'	=> 'Increment post counter',
+	'acl_f_moderate'	=> 'Posts are moderated',
+	'acl_f_bump'		=> 'Can bump topics',
+	'acl_f_subscribe'	=> 'Can subscribe forum',
+
+	'acl_u_hideonline'	=> 'Can hide online status',
+	'acl_u_viewonline'	=> 'Can view all online',
+	'acl_u_viewprofile'	=> 'Can view profiles',
+	'acl_u_sendemail'	=> 'Can send emails',
+	'acl_u_sendim'		=> 'Can send instant messages',
+	'acl_u_sendpm'		=> 'Can send private messages',
+	'acl_u_readpm'		=> 'Can read private messages',
+	'acl_u_chgavatar'	=> 'Can change avatar',
+	'acl_u_chgemail'	=> 'Can change email address',
+	'acl_u_chgname'		=> 'Can change username',
+	'acl_u_chggrp'		=> 'Can change default usergroup',
+	'acl_u_chgpasswd'	=> 'Can change password',
+	'acl_u_chgcensors'	=> 'Can disable word censors',
+	'acl_u_search'		=> 'Can search board',
+	'acl_u_savedrafts'	=> 'Can save drafts',
+	'acl_u_download'	=> 'Can download files',
+	'acl_u_attach'		=> 'Can attach files',
+	'acl_u_sig'			=> 'Can use signature',
+
+	'acl_u_pm_attach'	=> 'Can attach files in private messages',
+	'acl_u_pm_html'		=> 'Can post HTML in private messages',
+	'acl_u_pm_bbcode'	=> 'Can post BBCode in private messages',
+	'acl_u_pm_smilies'	=> 'Can post smilies in private messages',
+	'acl_u_pm_download'	=> 'Can download files in private messages',
+	'acl_u_pm_report'	=> 'Can report private messages',
+	'acl_u_pm_edit'		=> 'Can edit own private messages',
+	'acl_u_pm_printpm'	=> 'Can print private messages',
+	'acl_u_pm_emailpm'	=> 'Can email private messages',
+	'acl_u_pm_forward'	=> 'Can forward private messages',
+	'acl_u_pm_delete'	=> 'Can remove private messages from own folder',
+	'acl_u_pm_img'		=> 'Can post images in private messages',
+	'acl_u_pm_flash'	=> 'Can post Flash in private messages'
+);
+
+// User pruning
+$this->lang += array(
+	'PRUNE_USERS_EXPLAIN'	=> 'Here you can delete (or deactivate) users from you board. This can be done in a variety of ways; by post count, last activity, etc. Each of these criteria can be combined, i.e. you can prune users last active before 2002-01-01 with fewer than 10 posts. Alternatively you can enter a list of users directly into the text box, any criteria entered will be ignored. Take care with this facility! Once a user is deleted there is no way back.',
+	'SELECT_USERS_EXPLAIN'	=> 'Enter specific usernames here, they will be used in preference to the criteria above.',
+
+	'LAST_ACTIVE_EXPLAIN'		=> 'Enter a date in yyyy-mm-dd format.',
+	'JOINED_EXPLAIN'			=> 'Enter a date in yyyy-mm-dd format.',
+	'DELETE_USER_POSTS'			=> 'Delete pruned user posts',
+	'DELETE_USER_POSTS_EXPLAIN' => 'Removes posts made by deleted users, has no effect if users are deactivated.',
+	'DEACTIVATE_DELETE'			=> 'Deactivate or delete',
+	'DEACTIVATE_DELETE_EXPLAIN'	=> 'Choose whether to deactivate users or delete them entirely, note there is no undo!',
+	'DEACTIVATE'				=> 'Deactivate',
+	'DELETE_USERS'				=> 'Delete',
+
+	'USER_DEACTIVATE_SUCCESS'	=> 'The selected users have been deactivated successfully',
+	'USER_DELETE_SUCCESS'		=> 'The selected users have been deleted successfully',
+);
+
+// Banning
+$this->lang += array(
+	'BAN_EXPLAIN'				=> 'Here you can control the banning of users by name, IP or email address. These methods prevent a user reaching any part of the board. You can give a short (255 character) reason for the ban if you wish. This will be displayed in the admin log. The length of a ban can also be specified. If you want the ban to end on a specific date rather than after a set time period select <u>Until</u> for the ban length and enter a date in yyyy-mm-dd format.',
+	'BAN_EXCLUDE'				=> 'Exclude from banning',
+
+	'BAN_REASON'	=> 'Reason for ban',
+	'BAN_LENGTH'	=> 'Length of ban',
+	'PERMANENT'		=> 'Permanent',
+	'30_MINS'		=> '30 Minutes',
+	'1_HOUR'		=> '1 Hour',
+	'6_HOURS'		=> '6 Hours',
+	'OTHER'			=> 'Until',
+
+	'BAN_USERNAME_EXPLAIN'		=> 'You can ban multiple users in one go by entering each name on a new line. Use the <u>Find a Username</u> facility to look up and add one or more users automatically.',
+	'UNBAN_USERNAME'			=> 'Un-ban or Un-exclude usernames',
+	'UNBAN_USERNAME_EXPLAIN'	=> 'You can unban (or un-exclude) multiple users in one go using the appropriate combination of mouse and keyboard for your computer and browser. Excluded users have a grey background.',
+	'BAN_USER_EXCLUDE_EXPLAIN'	=> 'Enable this to exclude the entered users from all current bans.',
+	'NO_BANNED_USERS'			=> 'No banned usernames',
+
+	'IP_HOSTNAME'			=> 'IP addresses or hostnames',
+	'BAN_IP_EXPLAIN'		=> 'To specify several different IP\'s or hostnames enter each on a new line. To specify a range of IP addresses separate the start and end with a hyphen (-), to specify a wildcard use *',
+	'UNBAN_IP'				=> 'Un-ban or Un-exclude IPs',
+	'UNBAN_IP_EXPLAIN'		=> 'You can unban (or un-exclude) multiple IP addresses in one go using the appropriate combination of mouse and keyboard for your computer and browser. Excluded IP\'s have a grey background.',
+	'BAN_IP_EXCLUDE_EXPLAIN'=> 'Enable this to exclude the entered IP from all current bans.',
+	'NO_BANNED_IP'			=> 'No banned IP addresses',
+
+	'BAN_EMAIL'					=> 'Ban one or more email addresses',
+	'BAN_EMAIL_EXPLAIN'			=> 'To specify more than one email address enter each on a new line. To match partial addresses use * as the wildcard, e.g. *@hotmail.com, *@*.domain.tld, etc.',
+	'UNBAN_EMAIL'				=> 'Un-ban or Un-exclude Emails',
+	'UNBAN_EMAIL_EXPLAIN'		=> 'You can unban (or un-exclude) multiple email addresses in one go using the appropriate combination of mouse and keyboard for your computer and browser. Excluded email addresses have a grey background.',
+	'BAN_EMAIL_EXCLUDE_EXPLAIN' => 'Enable this to exclude the entered email address from all current bans.',
+	'NO_BANNED_EMAIL'			=> 'No banned email addresses',
+
+	'BAN_UPDATE_SUCESSFUL'	=> 'The banlist has been updated successfully',
+);
+
+// Jabber settings
+$this->lang += array(
+	'IM_EXPLAIN'	=> 'Here you can enable and control the use Jabber for instant messaging and board notices. Jabber is an opensource protocol and therefore available for use by anyone. Some Jabber servers include gateways or transports which allow you to contact users on other networks. Not all servers offer all transports and changes in protocols can prevent transports from operating. Note that it may take several seconds to update Jabber account details, do not stop the script till completed!',
+
+	'JAB_ENABLE'			=> 'Enable Jabber',
+	'JAB_ENABLE_EXPLAIN'	=> 'Enables use of jabber messaging and notifications',
+
+	'JAB_SERVER'			=> 'Jabber server',
+	'JAB_SERVER_EXPLAIN'	=> 'See %sjabber.org%s for a list of servers',
+	'JAB_PORT'				=> 'Jabber port',
+	'JAB_PORT_EXPLAIN'		=> 'Leave blank unless you know it is not 5222',
+	'JAB_USERNAME'			=> 'Jabber username',
+	'JAB_USERNAME_EXPLAIN'	=> 'If this user is not registered it will be created if possible.',
+	'JAB_PASSWORD'			=> 'Jabber password',
+	'JAB_RESOURCE'			=> 'Jabber resource',
+	'JAB_RESOURCE_EXPLAIN'	=> 'The resource locates this particular connection, e.g. board, home, etc.',
+
+	'JAB_PASS_CHANGED'		=> 'Jabber password changed successfully',
+	'JAB_REGISTERED'		=> 'New account registered successfully',
+	'JAB_CHANGED'			=> 'Jabber account changed successfully',
+
+	'ERR_JAB_USERNAME'		=> 'The username specified already exists, please choose an alternative.',
+	'ERR_JAB_REGISTER'		=> 'An error occured trying to register this account, %s',
+	'ERR_JAB_PASSCHG'		=> 'Could not change password',
+	'ERR_JAB_PASSFAIL'		=> 'Password update failed, %s',
+);
+
+// Message Settings
+$this->lang += array(
+	'MESSAGE_SETTINGS_EXPLAIN'	=> 'Here you can set all default settings for private messaging',
+
+	'BOXES_MAX'					=> 'Max private message folders',
+	'BOXES_MAX_EXPLAIN'			=> 'By default users may create this many personal folders for private messages..',
+	'BOXES_LIMIT'				=> 'Max private messages per box',
+	'BOXES_LIMIT_EXPLAIN'		=> 'Users may receive no more than this many messages in each of their private message boxes or zero for unlimited messages.',
+	'FULL_FOLDER_ACTION'		=> 'Full folder default action',
+	'FULL_FOLDER_ACTION_EXPLAIN'=> 'Default Action to take if an users folder is full and if the users folder action set is not applicable. For the special folder "SENTBOX" the default action is always deleting old messages.',
+	'HOLD_NEW_MESSAGES'			=> 'Hold new messages',
+	'PM_EDIT_TIME'				=> 'Limit editing time',
+	'PM_EDIT_TIME_EXPLAIN'		=> 'Limits the time available to edit a private message not already delivered, zero equals infinity',
+
+	'ALLOW_MASS_PM'		=> 'Allow Mass PM\'s',
+	'ALLOW_HTML_PM'		=> 'Allow HTML in private messages',
+	'ALLOW_BBCODE_PM'	=> 'Allow BBCode in private messages',
+	'ALLOW_SMILIES_PM'	=> 'Allow smilies in private messages',
+	'ALLOW_DOWNLOAD_PM'	=> 'Allow downloading of attachments in private messages',
+	'ALLOW_REPORT_PM'	=> 'Allow reporting of private messages',
+	'ALLOW_FORWARD_PM'	=> 'Allow forwarding of private messages',
+	'ALLOW_PRINT_PM'	=> 'Allow print view in private messaging',
+	'ALLOW_EMAIL_PM'	=> 'Allow emailing private messages',
+	'ALLOW_IMG_PM'		=> 'Allow use of IMG BBCode Tag',
+	'ALLOW_FLASH_PM'	=> 'Allow use of FLASH BBCode Tag',
+	'ENABLE_PM_ICONS'	=> 'Enable use of topic icons in private messages'
+);
+
+// Cookie settings
+$this->lang += array(
+	'COOKIE_SETTINGS_EXPLAIN'	=> 'These details define the data used to send cookies to your users browsers. In most cases the default values for the cookie settings should be sufficient. If you do need to change any do so with care, incorrect settings can prevent users logging in.',
+
+	'COOKIE_DOMAIN'			=> 'Cookie domain',
+	'COOKIE_NAME'			=> 'Cookie name',
+	'COOKIE_PATH'			=> 'Cookie path',
+	'COOKIE_SECURE'			=> 'Cookie secure',
+	'COOKIE_SECURE_EXPLAIN' => 'If your server is running via SSL set this to enabled else leave as disabled',
+);
+
+// Avatar settings
+$this->lang += array(
+	'AVATAR_SETTINGS_EXPLAIN'	=> 'Avatars are generally small, unique images a user can associate with themselves. Depending on the style they are usually displayed below the username when viewing topics. Here you can determine how users can define their avatars. Please note that in order to upload avatars you need to have created the directory you name below and ensure it can be written to by the web server. Please also note that filesize limits are only imposed on uploaded avatars, they do not apply to remotely linked images.',
+	'ALLOW_LOCAL'				=> 'Enable gallery avatars',
+	'ALLOW_REMOTE'				=> 'Enable remote avatars',
+	'ALLOW_REMOTE_EXPLAIN'		=> 'Avatars linked to from another website',
+	'ALLOW_UPLOAD'				=> 'Enable avatar uploading',
+	'MAX_FILESIZE'				=> 'Maximum Avatar File Size',
+	'MAX_FILESIZE_EXPLAIN'		=> 'For uploaded avatar files',
+	'MIN_AVATAR_SIZE'			=> 'Minimum Avatar Dimensions',
+	'MIN_AVATAR_SIZE_EXPLAIN'	=> '(Height x Width in pixels)',
+	'MAX_AVATAR_SIZE'			=> 'Maximum Avatar Dimensions',
+	'MAX_AVATAR_SIZE_EXPLAIN'	=> '(Height x Width in pixels)',
+	'AVATAR_STORAGE_PATH'		=> 'Avatar Storage Path',
+	'AVATAR_STORAGE_PATH_EXPLAIN'	=> 'Path under your phpBB root dir, e.g. images/avatars/upload',
+	'AVATAR_GALLERY_PATH'			=> 'Avatar Gallery Path',
+	'AVATAR_GALLERY_PATH_EXPLAIN'	=> 'Path under your phpBB root dir for pre-loaded images, e.g. images/avatars/gallery',
+);
+
+// Server settings
+$this->lang += array(
+	'SERVER_SETTINGS_EXPLAIN'	=> 'Here you define server and domain dependant settings. Please ensure the data you enter is accurate, errors will result in emails containing incorrect information. When entering the domain name remember it does include http:// or other protocol term. Only alter the port number if you know your server uses a different value, port 80 is correct in most cases.',
+	'SERVER_NAME'				=> 'Domain Name',
+	'SERVER_NAME_EXPLAIN'		=> 'The domain name this board runs from',
+	'SCRIPT_PATH'				=> 'Script path',
+	'SCRIPT_PATH_EXPLAIN'		=> 'The path where phpBB2 is located relative to the domain name',
+	'SERVER_PORT'				=> 'Server Port',
+	'SERVER_PORT_EXPLAIN'		=> 'The port your server is running on, usually 80, only change if different',
+	'IP_VALID'					=> 'Session IP validation',
+	'IP_VALID_EXPLAIN'			=> 'Determines how much of the users IP is used to validate a session; All compares the complete address, A.B.C the first x.x.x, A.B the first x.x, None disables checking.',
+	'ALL'						=> 'All',
+	'CLASS_C'					=> 'A.B.C',
+	'CLASS_B'					=> 'A.B',
+	'BROWSER_VALID'				=> 'Validate browser',
+	'BROWSER_VALID_EXPLAIN'		=> 'Enables browser validation for each session inproving security.',
+	'ENABLE_GZIP'				=> 'Enable GZip Compression',
+	'SMILIES_PATH'				=> 'Smilies storage path',
+	'SMILIES_PATH_EXPLAIN'		=> 'Path under your phpBB root dir, e.g. images/smilies',
+	'ICONS_PATH'				=> 'Post icons storage path',
+	'ICONS_PATH_EXPLAIN'		=> 'Path under your phpBB root dir, e.g. images/icons',
+	'UPLOAD_ICONS_PATH'			=> 'Extension group icons storage path',
+	'UPLOAD_ICONS_PATH_EXPLAIN'	=> 'Path under your phpBB root dir, e.g. images/upload_icons',
+	'RANKS_PATH'				=> 'Rank image storage path',
+	'RANKS_PATH_EXPLAIN'		=> 'Path under your phpBB root dir, e.g. images/ranks',
+);
+
+// Load settings
+$this->lang += array(
+	'LOAD_SETTINGS_EXPLAIN'		=> 'Here you can enable and disable certain board functions to reduce the amount of processing required. On most servers there is no need to disable any functions. However on certain systems or in shared hosting environments it may be beneficial to disable capabilities you do not really need. You can also specify limits for system load and active sessions beyond which the board will go offline.',
+	'LIMIT_LOAD'				=> 'Limit system load',
+	'LIMIT_LOAD_EXPLAIN'		=> 'If the 1 minute system load exceeds this value the board will go offline, 1.0 equals ~100% utilisation of one processor. This only functions on UNIX based servers.',
+	'LIMIT_SESSIONS'			=> 'Limit sessions',
+	'LIMIT_SESSIONS_EXPLAIN'	=> 'If the number of sessions exceeds this value within a one minute period the board will go offline. Set to 0 for unlimited sessions.',
+	'SESSION_LENGTH'			=> 'Session length',
+	'SESSION_LENGTH_EXPLAIN'	=> 'Sessions will expire after this time, in seconds.',
+	'YES_POST_MARKING'			=> 'Enable dotted topics',
+	'YES_POST_MARKING_EXPLAIN'	=> 'Indicates whether user has posted to a topic.',
+	'YES_READ_MARKING'			=> 'Enable server-side topic marking',
+	'YES_READ_MARKING_EXPLAIN'	=> 'Stores read/unread status information in the database rather than a cookie.',
+	'ONLINE_LENGTH'				=> 'View online time span',
+	'ONLINE_LENGTH_EXPLAIN'		=> 'Time in minutes after which inactive users will not appear in viewonline listings, lower equals less processing.',
+	'YES_ONLINE'				=> 'Enable online user listings',
+	'YES_ONLINE_EXPLAIN'		=> 'Display online user information on index, forum and topic pages.',
+	'YES_ONLINE_GUESTS'			=> 'Enable online guest listings in viewonline',
+	'YES_ONLINE_GUESTS_EXPLAIN'	=> 'Allow display of guest user informations in viewonline.',
+	'YES_ONLINE_TRACK'			=> 'Enable display of user online img',
+	'YES_ONLINE_TRACK_EXPLAIN'	=> 'Display online information for user in profiles and viewtopic.',
+	'YES_BIRTHDAYS'				=> 'Enable birthday listing',
+	'YES_MODERATORS'			=> 'Enable display of Moderators',
+	'YES_JUMPBOX'				=> 'Enable display of Jumpbox',
+	'YES_SEARCH'				=> 'Enable search facilities',
+	'YES_SEARCH_EXPLAIN'		=> 'User and backend search functions including fulltext updates when posting.',
+	'YES_SEARCH_UPDATE'			=> 'Enable fulltext updating',
+	'YES_SEARCH_UPDATE_EXPLAIN'	=> 'Updating of fulltext indexes when posting, overriden if search is disabled.',
+	'YES_SEARCH_PHRASE'			=> 'Enable phrase searching',
+	'YES_SEARCH_PHRASE_EXPLAIN'	=> 'Searching for phrases requires additional processing.',
+	'RECOMPILE_TEMPLATES'		=> 'Recompile stale templates',
+	'RECOMPILE_TEMPLATES_EXPLAIN'=> 'Check for updated template files on filesystem and recompile.',
+);
+
+// Email settings
+$this->lang += array(
+	'EMAIL_SETTINGS_EXPLAIN'	=> 'This information is used when the board sends emails to your users. Please ensure the email address you specify is valid, any bounced or undeliverable messages will likely be sent to that address. If your host does not provide a native (PHP based) email service you can instead send messages directly using SMTP. This requires the address of an appropriate server (ask your provider if necessary), do not specify any old name here! If the server requires authentication (and only if it does) enter the necessary username and password. Please note only basic authentication is offered, different authentication implementations are not currently supported.',
+	'ENABLE_EMAIL'				=> 'Enable board-wide emails',
+	'ENABLE_EMAIL_EXPLAIN'		=> 'If this is set to disabled no emails will be sent by the board at all.',
+	'BOARD_EMAIL_FORM'			=> 'Users send email via board',
+	'BOARD_EMAIL_FORM_EXPLAIN'	=> 'Instead of showing the users email address users are able to send emails via the board.',
+	'BOARD_HIDE_EMAILS'			=> 'Hide email addresses',
+	'BOARD_HIDE_EMAILS_EXPLAIN'	=> 'This function keeps email addresses completely private.',
+	'EMAIL_FUNCTION_NAME'		=> 'Email Function Name',
+	'EMAIL_FUNCTION_NAME_EXPLAIN' => 'The email function used to send mails through PHP.',
+	'EMAIL_PACKAGE_SIZE'		=> 'Email Package Size',
+	'EMAIL_PACKAGE_SIZE_EXPLAIN' => 'This is the number of emails sent in one package.',
+	'ADMIN_EMAIL'				=> 'Return Email Address',
+	'ADMIN_EMAIL_EXPLAIN'		=> 'This will be used as the return address on all emails.',
+	'EMAIL_SIG'					=> 'Email Signature',
+	'EMAIL_SIG_EXPLAIN'			=> 'This text will be attached to all emails the board sends.',
+	'CONTACT_EMAIL'				=> 'Contact email address',
+	'CONTACT_EMAIL_EXPLAIN'		=> 'This address will be used whenever a specific contact point is needed, e.g. spam, error output, etc.',
+	'USE_SMTP'					=> 'Use SMTP Server for email',
+	'USE_SMTP_EXPLAIN'			=> 'Say yes if you want or have to send email via a named server instead of the local mail function.',
+	'SMTP_SERVER'				=> 'SMTP Server Address',
+	'SMTP_PORT'					=> 'SMTP Server Port',
+	'SMTP_PORT_EXPLAIN'			=> 'Only change this if you know your SMTP server is on a different port.',
+	'SMTP_AUTH_METHOD'			=> 'Authentication method for SMTP',
+	'SMTP_AUTH_METHOD_EXPLAIN'	=> 'Only used if a username/password is set, ask your provider if you are unsure which method to use.',
+	'SMTP_LOGIN'				=> 'LOGIN',
+	'SMTP_PLAIN'				=> 'PLAIN',
+	'SMTP_CRAM_MD5'				=> 'CRAM-MD5',
+	'SMTP_DIGEST_MD5'			=> 'DIGEST-MD5',
+	'SMTP_POP_BEFORE_SMTP'		=> 'POP-BEFORE-SMTP',
+	'SMTP_USERNAME'				=> 'SMTP Username',
+	'SMTP_USERNAME_EXPLAIN'		=> 'Only enter a username if your smtp server requires it.',
+	'SMTP_PASSWORD'				=> 'SMTP Password',
+	'SMTP_PASSWORD_EXPLAIN'		=> 'Only enter a password if your smtp server requires it.',
+);
+
+// Board settings
+$this->lang += array(
+	'BOARD_SETTINGS_EXPLAIN'	=> 'Here you can determine the basic operation of your board, from the site name through user registration to private messaging.',
+	'SITE_NAME'					=> 'Site name',
+	'SITE_DESC'					=> 'Site description',
+	'DISABLE_BOARD'				=> 'Disable board',
+	'DISABLE_BOARD_EXPLAIN'		=> 'This will make the board unavailable to users. You can also enter a short (255 character) message to display if you wish.',
+	'ACC_ACTIVATION'			=> 'Account activation',
+	'ACC_ACTIVATION_EXPLAIN'	=> 'This determines whether users have immediate access to the board or if confirmation is required. You can also completely disable new registrations.',
+	'ACC_NONE'					=> 'None',
+	'ACC_USER'					=> 'User',
+	'ACC_ADMIN'					=> 'Admin',
+	'ACC_USER_ADMIN'			=> 'User + Admin',
+	'ACC_DISABLE'				=> 'Disable',
+	'VISUAL_CONFIRM'			=> 'Enable visual confirmation',
+	'VISUAL_CONFIRM_EXPLAIN'	=> 'Requires new users enter a random code matching an image to help prevent mass registrations.',
+	'LOGIN_LIMIT'				=> 'Login attempts',
+	'LOGIN_LIMIT_EXPLAIN'		=> 'Number of failed logins users can make before being locked out that session',
+	'REG_LIMIT'					=> 'Registration attempts',
+	'REG_LIMIT_EXPLAIN'			=> 'Number of attempts users can make at the confirmation code before being locked out that session.',
+	'FORCE_PASS_CHANGE'			=> 'Force password change',
+	'FORCE_PASS_CHANGE_EXPLAIN'	=> 'Require user to change their password after a set number of days or zero to disable.',
+	'CHAR_LIMIT'				=> 'Max characters per post',
+	'CHAR_LIMIT_EXPLAIN'		=> 'Set to 0 for unlimited characters.',
+	'SMILIES_LIMIT'				=> 'Max smilies per post',
+	'SMILIES_LIMIT_EXPLAIN'		=> 'Set to 0 for unlimited smilies.',
+	'QUOTE_DEPTH_LIMIT'			=> 'Max nested quotes per post',
+	'QUOTE_DEPTH_LIMIT_EXPLAIN'	=> 'Set to 0 for unlimited depth.',
+	'USERNAME_LENGTH'			=> 'Username length',
+	'USERNAME_LENGTH_EXPLAIN'	=> 'Minimum and maximum number of characters in usernames.',
+	'USERNAME_CHARS'			=> 'Limit username chars',
+	'USERNAME_CHARS_EXPLAIN'	=> 'Restrict type of characters that may be used in usernames, spacers are; space, -, +, _, [ and ]',
+	'PASSWORD_LENGTH'			=> 'Password length',
+	'PASSWORD_LENGTH_EXPLAIN'	=> 'Minimum and maximum number of characters in passwords.',
+	'PASSWORD_TYPE'				=> 'Password complexity',
+	'PASSWORD_TYPE_EXPLAIN'		=> 'Determines how complex a password needs to be when set or altered, subsequent options include the previous ones.',
+	'PASS_TYPE_ANY'				=> 'No requirements',
+	'PASS_TYPE_CASE'			=> 'Must be mixed case',
+	'PASS_TYPE_ALPHA'			=> 'Must contain alphanumerics',
+	'PASS_TYPE_SYMBOL'			=> 'Must contain symbols',
+	'MIN_CHARS'					=> 'Min',
+	'MAX_CHARS'					=> 'Max',
+	'ALLOW_EMAIL_REUSE'			=> 'Allow Email address re-use',
+	'ALLOW_EMAIL_REUSE_EXPLAIN'	=> 'Different users can register with the same email address.',
+	'USERNAME_CHARS_ANY'		=> 'Any character',
+	'USERNAME_ALPHA_ONLY'		=> 'Alphanumeric only',
+	'USERNAME_ALPHA_SPACERS'	=> 'Alphanumeric and spacers',
+	'ENABLE_COPPA'				=> 'Enable COPPA',
+	'ENABLE_COPPA_EXPLAIN'		=> 'This requires users to declare whether they are 13 or over for compliance with the U.S. COPPA act.',
+	'COPPA_FAX'					=> 'COPPA Fax Number',
+	'COPPA_MAIL'				=> 'COPPA Mailing Address',
+	'COPPA_MAIL_EXPLAIN'		=> 'This is the mailing address where parents will send COPPA registration forms',
+	'BOARD_PM'					=> 'Private Messaging',
+	'BOARD_PM_EXPLAIN'			=> 'Enable or disable private messaging for all users.',
+	'EDIT_TIME'					=> 'Limit editing time',
+	'EDIT_TIME_EXPLAIN'			=> 'Limits the time available to edit a new post, zero equals infinity',
+	'DISPLAY_LAST_EDITED'		=> 'Display last edited time information',
+	'DISPLAY_LAST_EDITED_EXPLAIN' => 'Choose if the last edited by information to be displayed on posts',
+	'FLOOD_INTERVAL'			=> 'Flood Interval',
+	'FLOOD_INTERVAL_EXPLAIN'	=> 'Number of seconds a user must wait between posting new messages. To enable users to ignore this alter their permissions.',
+	'BUMP_INTERVAL'				=> 'Bump Interval',
+	'BUMP_INTERVAL_EXPLAIN'		=> 'Number of minutes, hours or days between the last post to a topic and the ability to bump this topic.',
+	'SEARCH_INTERVAL'			=> 'Search Flood Interval',
+	'SEARCH_INTERVAL_EXPLAIN'	=> 'Number of seconds users must wait between searches.',
+	'MIN_SEARCH_CHARS'			=> 'Min characters indexed by search',
+	'MIN_SEARCH_CHARS_EXPLAIN'	=> 'Words with at least this many characters will be indexed for searching.',
+	'MAX_SEARCH_CHARS'			=> 'Max characters indexed by search',
+	'MAX_SEARCH_CHARS_EXPLAIN'	=> 'Words with no more than this many characters will be indexed for searching.',
+	'TOPICS_PER_PAGE'			=> 'Topics Per Page',
+	'POSTS_PER_PAGE'			=> 'Posts Per Page',
+	'HOT_THRESHOLD'				=> 'Posts for Popular Threshold',
+	'MAX_POLL_OPTIONS'			=> 'Max number of poll options',
+);
+
+// Auth settings
+$this->lang += array(
+	'AUTH_SETTINGS_EXPLAIN'	=> 'phpBB2 supports authentication plug-ins, or modules. These allow you determine how users are authenticated when they log into the board. By default three plug-ins are provided; DB, LDAP and Apache. Not all methods require additional information so only fill out fields if they are relevant to the selected method.',
+	'AUTH_METHOD'			=> 'Select an authentication method',
+	'LDAP_SERVER'			=> 'LDAP server name',
+	'LDAP_SERVER_EXPLAIN'	=> 'If using LDAP this is the name or IP address of the server.',
+	'LDAP_DN'				=> 'LDAP base dn',
+	'LDAP_DN_EXPLAIN'		=> 'This is the Distinguished Name, locating the user information, e.g. o=My Company,c=US',
+	'LDAP_UID'				=> 'LDAP uid',
+	'LDAP_UID_EXPLAIN'		=> 'This is the key under which to search for a given login identity, e.g. uid, sn, etc.',
+);
+
+// Board defaults
+$this->lang += array(
+	'BOARD_DEFAULTS_EXPLAIN'	=> 'These settings allow you to define a number of default or global settings used by the board. For example, to disable the use of HTML across the entire board alter the relevant setting below. This data is also used for new user registrations and (where relevant) guest users. Please note that registered users can override some of these options with their own settings.',
+	'DEFAULT_STYLE'				=> 'Default Style',
+	'OVERRIDE_STYLE'			=> 'Override user style',
+	'OVERRIDE_STYLE_EXPLAIN'	=> 'Replaces users style with the default.',
+	'DEFAULT_LANGUAGE'			=> 'Default Language',
+	'DEFAULT_DATE_FORMAT'		=> 'Date Format',
+	'DEFAULT_DATE_FORMAT_EXPLAIN'=> 'The date format is the same as the PHP date function.',
+	'SYSTEM_TIMEZONE'			=> 'System Timezone',
+	'SYSTEM_DST'				=> 'Enable Daylight Savings Time',
+	'ALLOW_TOPIC_NOTIFY'		=> 'Allow Topic Watching',
+	'ALLOW_FORUM_NOTIFY'		=> 'Allow Forum Watching',
+	'ALLOW_NAME_CHANGE'			=> 'Allow Username changes',
+
+	'MIN_RATINGS'				=> 'Ratings count before karma',
+	'MIN_RATINGS_EXPLAIN'		=> 'Number of distinct ratings before users karma is calculated.',
+	'ALLOW_ATTACHMENTS'			=> 'Allow Attachments',
+	'ALLOW_PM_ATTACHMENTS'		=> 'Allow Attachments in Private Messages',
+	'ALLOW_HTML'				=> 'Allow HTML',
+	'ALLOWED_TAGS'				=> 'Allowed HTML tags',
+	'ALLOWED_TAGS_EXPLAIN'		=> 'Separate tags with commas.',
+	'ALLOW_BBCODE'				=> 'Allow BBCode',
+	'ALLOW_SMILIES'				=> 'Allow Smilies',
+	'ALLOW_SIG'					=> 'Allow Signatures',
+	'MAX_SIG_LENGTH'			=> 'Maximum signature length',
+	'MAX_SIG_LENGTH_EXPLAIN'	=> 'Maximum number of characters in user signatures.',
+	'ALLOW_NO_CENSORS'			=> 'Allow Disable of Censors',
+	'ALLOW_NO_CENSORS_EXPLAIN'	=> 'User can disable word censoring.',
+	'ALLOW_BOOKMARKS'			=> 'Allow bookmarking topics',
+	'ALLOW_BOOKMARKS_EXPLAIN'	=> 'User is able to store personal bookmarks'
+);
+
+// Karma settings
+$this->lang += array(
+	'KARMA_SETTINGS'		=> 'Karma Settings',
+	'KARMA_SETTINGS_EXPLAIN'=> 'Here you can enable and disable the user Karma rating system. You can also modify the weighting factors used to derive each users karma.',
+	'ENABLE_KARMA'			=> 'Enable Karma',
+
+	'KARMA_HIST_WEIGHT'			=> 'Historical ratings weighting',
+	'KARMA_HIST_WEIGHT_EXPLAIN'	=> 'Ratings made before the previous 30 days',
+	'KARMA_DAY_WEIGHT'			=> 'Recent ratings weighting',
+	'KARMA_DAY_WEIGHT_EXPLAIN'	=> 'Ratings made in past 30 days',
+	'KARMA_REG_WEIGHT'			=> 'Membership length weighting',
+	'KARMA_REG_WEIGHT_EXPLAIN'	=> 'Total length of membership',
+	'KARMA_POST_WEIGHT'			=> 'Total posts weighting',
+);
+
+// Avatars
+$this->lang += array(
+	'AVATARS_GALLERY'	=> 'Avatar Gallery',
+);
+
+// PHP info
+$this->lang += array(
+	'PHP_INFO_EXPLAIN'	=> 'This page lists information on the version of PHP installed on this server. It includes details of loaded modules, available variables and default settings. This information may be useful when diagnosing problems. Please be aware that some hosting companies will limit what information is displayed here for security reasons. You are advised to not give out any details on this page except when asked by support or other Team Member on the support forums.',
+);
+
+// Forum admin
+$this->lang += array(
+	'FORUM_ADMIN'			=> 'Forum Administration',
+	'FORUM_ADMIN_EXPLAIN'	=> 'In phpBB 2.2 there are no categories, everything is forum based. Each forum can have an unlimited number of sub-forums and you can determine whether each may be posted to or not (i.e. whether it acts like an old category). Here you can add, edit, delete, lock, unlock individual forums as well as set certain additional controls. If your posts and topics have got out of sync you can also resynchronise a forum.',
+	'FORUM_EDIT_EXPLAIN'	=> 'The form below will allow you to customise this forum. Please note that moderation and post count controls are set via forum permissions for each user or usergroup.',
+	'FORUM_DELETE'			=> 'Delete Forum',
+	'FORUM_DELETE_EXPLAIN'	=> 'The form below will allow you to delete a forum and decide where you want to put all topics (or forums) it contained.',
+
+	'EDIT_FORUM'	=> 'Edit forum',
+	'CREATE_FORUM'	=> 'Create new forum',
+	'REMOVE'		=> 'Remove',
+	'EDIT'			=> 'Edit',
+	'MOVE_UP'		=> 'Move up',
+	'MOVE_DOWN'		=> 'Move down',
+	'RESYNC'		=> 'Sync',
+	'UPDATE'		=> 'Update',
+
+	'FORUM_SETTINGS'	=> 'Forum Settings',
+	'FORUM_GENERAL'		=> 'General Forum Settings',
+	'FORUM_TYPE'		=> 'Forum Type',
+	'TYPE_FORUM'		=> 'Forum',
+	'TYPE_CAT'			=> 'Category',
+	'TYPE_LINK'			=> 'Link',
+	'FORUM_NAME'		=> 'Forum Name',
+	'FORUM_DESC'		=> 'Description',
+	'FORUM_DESC_EXPLAIN'=> 'Any markup entered here will displayed as is.',
+	'FORUM_LINK'		=> 'Forum Link',
+	'FORUM_LINK_EXPLAIN'=> 'Full URL to location clicking this forum will take the user.',
+	'FORUM_LINK_TRACK'	=> 'Track Link Redirects',
+	'FORUM_LINK_TRACK_EXPLAIN'	=> 'Records the number of times a forum link was clicked.',
+	'FORUM_STATUS'		=> 'Forum Status',
+	'FORUM_STYLE'		=> 'Forum Style',
+	'FORUM_IMAGE'		=> 'Forum Image',
+	'FORUM_IMAGE_EXPLAIN'=> 'Location, relative to the phpBB root directory, of an image to associate with this forum.',
+	'FORUM_PARENT'		=> 'Parent Forum',
+
+	'FORUM_RULES'			=> 'Forum Rules',
+	'FORUM_RULES_EXPLAIN'	=> 'Forum Rules are displayed at any page within the given forum.',
+	'FORUM_RULES_LINK'		=> 'Link to Forum Rules',
+	'FORUM_RULES_LINK_EXPLAIN'=> 'You are able to enter the URL of the page/post containing your forum rules here. This setting will override the Forum Rules text you specified.',
+	'FORUM_RULES_PREVIEW'	=> 'Forum Rules preview',
+	'PARSE_BBCODE'			=> 'Parse BBCode',
+	'PARSE_SMILIES'			=> 'Parse Smilies',
+	'PARSE_URLS'			=> 'Parse Links',
+
+	'NO_PARENT'			=> 'No Parent',
+	'LINK'				=> 'Link',
+	'LOCKED'			=> 'Locked',
+	'UNLOCKED'			=> 'Unlocked',
+	'ENABLE_NEWS'		=> 'Set as news forum',
+	'ENABLE_NEWS_EXPLAIN' => 'If set to yes posts in this forum will be displayed as news items.',
+	'ENABLE_RECENT'		=> 'Display active topics',
+	'ENABLE_RECENT_EXPLAIN' => 'If set to yes topics made to this forum will be shown in the active topics list.',
+	'DISPLAY_ACTIVE_TOPICS'			=> 'Enable active topics',
+	'DISPLAY_ACTIVE_TOPICS_EXPLAIN'	=> 'If set to yes active topics in selected subforums will be displayed under this category.',
+	'ENABLE_INDEXING'	=> 'Enable search indexing',
+	'ENABLE_INDEXING_EXPLAIN'	=> 'If set to yes posts made to this forum will be indexed for searching.',
+	'ENABLE_TOPIC_ICONS'=> 'Enable Topic Icons',
+	'LIST_INDEX'		=> 'List Forum On Index',
+	'LIST_INDEX_EXPLAIN'=> 'Displays a link to this forum under the root parent forum on the index.',
+	'FORUM_AUTO_PRUNE'			=> 'Enable Auto-Pruning',
+	'FORUM_AUTO_PRUNE_EXPLAIN'	=> 'Prunes the forum of topics, set the frequency/age parameters below.',
+	'AUTO_PRUNE_FREQ'			=> 'Auto-prune Frequency',
+	'AUTO_PRUNE_FREQ_EXPLAIN'	=> 'Time in days between pruning events.',
+	'AUTO_PRUNE_DAYS'			=> 'Auto-prune Post Age',
+	'AUTO_PRUNE_DAYS_EXPLAIN'	=> 'Number of days since last post after which topic is removed.',
+	'AUTO_PRUNE_VIEWED'			=> 'Auto-prune Post Viewed Age',
+	'AUTO_PRUNE_VIEWED_EXPLAIN'	=> 'Number of days since topic was viewed after which topic is removed.',
+	'PRUNE_OLD_POLLS'			=> 'Prune Old Polls',
+	'PRUNE_OLD_POLLS_EXPLAIN'	=> 'Removes topics with polls not voted in for post age days.',
+	'PRUNE_FINISHED_POLLS'		=> 'Prune Closed Polls',
+	'PRUNE_FINISHED_POLLS_EXPLAIN'=> 'Removes topics with polls which have ended.',
+	'PRUNE_ANNOUNCEMENTS'		=> 'Prune Announcements',
+	'PRUNE_STICKY'				=> 'Prune Stickies',
+	'FORUM_TOPICS_PAGE'			=> 'Topics Per Page',
+	'FORUM_TOPICS_PAGE_EXPLAIN'	=> 'If non-zero this value will override the default topics per page setting.',
+	'ACTIVE_TOPICS_PAGE'			=> 'Number of active topics',
+	'ACTIVE_TOPICS_PAGE_EXPLAIN'	=> 'If non-zero this value will override the default topics per page setting.',
+	'FORUM_PASSWORD'			=> 'Forum Password',
+	'FORUM_PASSWORD_EXPLAIN'	=> 'Defines a password for this forum, use the permission system in preference.',
+	'FORUM_PASSWORD_CONFIRM'	=> 'Confirm Forum Password',
+	'FORUM_PASSWORD_CONFIRM_EXPLAIN'	=> 'Only needs to be set if a forum password is entered.',
+
+	'MOVE_POSTS_TO'		=> 'Move posts',
+	'MOVE_SUBFORUMS_TO' => 'Move subforums',
+	'DELETE_ALL_POSTS'	=> 'Delete posts',
+	'DELETE_SUBFORUMS'	=> 'Delete subforums and posts',
+
+	'NO_DESTINATION_FORUM'		=> 'You have not specified a forum to move content to',
+	'FORUM_PASSWORD_MISMATCH'	=> 'The passwords you entered did not match.',
+	'FORUM_NAME_EMPTY'			=> 'You must enter a name for this forum.',
+	'FORUM_DATA_NEGATIVE'		=> 'Pruning parameters cannot be negative.',
+	'FORUM_CREATED'				=> 'Forum created successfully.',
+	'FORUM_UPDATED'				=> 'Forum informations updated successfully.',
+	'REDIRECT_ACL'				=> 'To set permissions for this forum click %sHERE%s.',
+	'FORUM_DELETED'				=> 'Forum successfully deleted',
+	'FORUM_RESYNCED'			=> 'Forum successfully resynced',
+);
+
+// Smiley and topic icons
+$this->lang += array(
+	'ICONS_EXPLAIN'	=> 'From this page you can add, remove and edit the icons users may add to their topics or posts. These icons are generally displayed next to topic titles on the forum listing, or the post subjects in topic listings. You can also install and create new packages of icons.',
+	'SMILIES_EXPLAIN' => 'Smilies or emoticons are typically small, sometimes animated images used to convey an emotion or feeling. From this page you can add, remove and edit the emoticons users can use in their posts and private messages. You can also install and create new packages of smilies.',
+	'IMPORT_SMILIES'	=> 'Install smilies pak',
+	'EXPORT_SMILIES'	=> 'Create smilies pak',
+	'IMPORT_ICONS'	=> 'Install icons pak',
+	'EXPORT_ICONS'	=> 'Create icons pak',
+	'MASS_ADD_SMILIES'=> 'Add multiple smilies',
+	'ADD_SMILIES'	=> 'Add single smiley',
+	'ADD_ICONS'		=> 'Add single icon',
+	'ADD_ICONS'		=> 'Add multiple icons',
+	'EDIT_SMILIES'	=> 'Edit smilies',
+	'EDIT_ICONS'	=> 'Edit Icons',
+	'SMILIES_NOT_DISPLAYED' => 'The following smilies are not displayed on the posting page',
+	'ICONS_NOT_DISPLAYED' => 'The following icons are not displayed on the posting page',
+	'CODE'			=> 'Code',
+	'EMOTION'		=> 'Emotion',
+	'REORDER'		=> 'Reorder',
+	'DISPLAY'		=> 'Display',
+	'DIMENSIONS'	=> 'Dimensions',
+	'FIRST'			=> 'First',
+	'AFTER_SMILIES'	=> 'After %s',
+	'AFTER_ICONS'	=> 'After %s',
+
+	'SMILIES_CONFIG'	=> 'Smiley configuration',
+	'SMILIES_IMAGE'		=> 'Smiley image',
+	'SMILIES_CODE'		=> 'Smiley code',
+	'SMILIES_URL'		=> 'Smiley image file',
+	'SMILIES_ORDER'		=> 'Smiley order',
+	'SMILIES_EMOTION'	=> 'Emotion',
+	'SMILIES_ADD'		=> 'Add a new Smiley',
+	'SMILIES_EDIT'		=> 'Edit Smiley',
+	'SMILIES_LOCATION'	=> 'Smiley location',
+	'SMILIES_WIDTH'		=> 'Smiley width',
+	'SMILIES_HEIGHT'	=> 'Smiley height',
+
+	'ICONS_CONFIG'		=> 'Icon configuration',
+	'ICONS_IMAGE'		=> 'Icon image',
+	'ICONS_LOCATION'	=> 'Icon location',
+	'ICONS_URL'			=> 'Icon image file',
+	'ICONS_ORDER'		=> 'Icon order',
+	'ICONS_ADD'			=> 'Add a new Icon',
+	'ICONS_EDIT'		=> 'Edit Icon',
+	'ICONS_WIDTH'		=> 'Icon width',
+	'ICONS_HEIGHT'		=> 'Icon height',
+
+	'EXPORT_SMILIES_EXPLAIN' => 'To create a package of your currently installed smilies, click %sHERE%s to download the smilies.pak file. Once downloaded create a zip or tgz file containing all of your smilies plus this .pak configuration file.',
+	'EXPORT_ICONS_EXPLAIN' => 'To create a package of your currently installed icons, click %sHERE%s to download the icons package file. Once downloaded create a zip or tgz file containing all of your icons plus this .pak configuration file.',
+	'NO_SMILIES_EXPORT'	=> 'You have no smilies with which to create a package.',
+	'NO_ICONS_EXPORT'	=> 'You have no icons with which to create a package.',
+	'WRONG_PAK_TYPE'	=> 'The specified package does not contain the appropriate data.',
+	'SELECT_PACKAGE'	=> 'Select a package file',
+	'DELETE_ALL'		=> 'Delete all',
+	'KEEP_ALL'			=> 'Keep all',
+	'REPLACE_MATCHES'	=> 'Replace matches',
+	'NO_SMILIES_PAK'	=> 'No smiley packages found.',
+	'CURRENT_SMILIES'	=> 'Current smilies',
+	'SMILIES_IMPORT_SUCCESS' => 'The smilies pack was imported successfully',
+	'NO_ICONS_PAK' => 'No icon packages found.',
+	'CURRENT_ICONS' => 'Current icons',
+	'DISPLAY_ON_POSTING'	=> 'Display on posting',
+	
+	'ICONS_IMPORT_SUCCESS' => 'The icons pack was imported successfully',
+	'SMILIES_DELETED' => 'The smiley has been removed successfully.',
+	'SMILIES_EDITED' => 'The smiley has been updated successfully.',
+	'SMILIES_ADDED' => 'The smiley has been added successfully.',
+	'SMILIES_IMPORTED' => 'The smilies pack has been installed successfully.',
+	'ICONS_DELETED' => 'The icon has been removed successfully.',
+	'ICONS_EDITED' => 'The icon has been updated successfully.',
+	'ICONS_ADDED' => 'The icon has been added successfully.',
+	'ICONS_IMPORTED' => 'The icons pack has been installed successfully.',
+);
+
+// Custom bbcodes
+$this->lang += array(
+	'BBCODES'						=>	'BBCodes',
+	'BBCODES_EXPLAIN'			=>	'BBCode is a special implementation of HTML offering greater control over what and how something is displayed. Additionnally, you can save users from typing sometimes very long HTML code by providing them a single BBCode as replacement. From this page you can add, remove and edit custom BBCodes',
+
+	'TOO_MANY_BBCODES'		=>	'You cannot create any more BBCodes. Please remove one or more BBCodes then try again',
+	'BBCODE_NOT_EXIST'		=>	'The BBCode you selected does not exist',
+	'BBCODE_ADDED'				=>	'BBCode added successfully',
+	'BBCODE_EDITED'				=>	'BBCode edited successfully',
+
+	'BBCODE_TAG'					=>	'Tag',
+	'ADD_BBCODE'					=>	'Add a new BBCode',
+
+	// Note to translators: you can translate everything but what's between { and }
+	'BBCODE_USAGE'							=>	'BBCode usage',
+	'BBCODE_USAGE_EXPLAIN'			=>	'Here you define how to use the bbcode. Replace any variable input by the corresponding token (see below)',
+	'BBCODE_USAGE_EXAMPLE'			=>	'[colour={COLOR}]{TEXT}[/colour]<br /><br />[font={TEXT1}]{TEXT2}[/font]',
+	'HTML_REPLACEMENT'					=>	'HTML replacement',
+	'HTML_REPLACEMENT_EXPLAIN'		=>	'Here you define the default HTML replacement (each template can have its own HTML replacement). Do not forget to put back tokens you used above!',
+	'HTML_REPLACEMENT_EXAMPLE'	=>	'&lt;font color="{COLOR}"&gt;{TEXT}&lt;/font&gt;<br /><br />&lt;font face="{TEXT1}"&gt;{TEXT2}&lt;/font&gt;',
+	'TOKENS'										=>	'Tokens',
+	'TOKENS_EXPLAIN'						=>	'Tokens are placeholders for user input. The input will be validated only if it matches the corresponding definition. If needed, you can number them by adding a number as the last character between the braces, e.g. {USERNAME1}, {USERNAME2}.<br /><br />In addition to these tokens you can use any of lang string present in your language/ directory like this: {L_<i>&lt;stringname&gt;</i>} where <i>&lt;stringname&gt;</i> is the name of the translated string you want to add. For example, {L_WROTE} will be displayed as "wrote" or its translation according to user\'s locale',
+
+	'EXAMPLE'										=>	'Example:',
+	'EXAMPLES'									=>	'Examples:',
+
+	'TOKEN'							=>	'Token',
+	'TOKEN_DEFINITION'	 	=>	'What can it be?',
+
+	'tokens'	=>	array(
+		'TEXT'			=>	'Any text, including foreign characters, numbers, etc...',
+		'NUMBER'		=>	'Any serie of digits',
+		'EMAIL'			=>	'A valid email address',
+		'URL'				=>	'A valid URL using any protocol (http, ftp, etc... cannot be used for javascript exploits). If none is given, "http://" is prepended to to the string',
+		'LOCAL_URL'	=>	'A local URL. The URL must be relative to the topic page and cannot contain a server name or protocol',
+		'COLOR'		=>	'A HTML color, can be either in the numeric form #FF1234 or an english name such as "blue"'
+	)
+);
+
+// User admin
+$this->lang += array(
+	'USER_ADMIN'			=> 'User Administration',
+	'USER_ADMIN_EXPLAIN'	=> 'Here you can change your users information and certain specific options. To modify the users permissions please use the user and group permissions system.',
+	'SELECT_USER'			=> 'Select User',
+
+	'SELECT_FORM'			=> 'Select form',
+	'USER_ADMIN_OVERVIEW'	=> 'Overview',
+	'USER_ADMIN_FEEDBACK'	=> 'Feedback',
+	'USER_ADMIN_PROFILE'	=> 'Profile',
+	'USER_ADMIN_PREFS'		=> 'Preferences',
+	'USER_ADMIN_AVATAR'		=> 'Avatar',
+	'USER_ADMIN_SIG'		=> 'Signature',
+	'USER_ADMIN_GROUP'		=> 'Groups',
+	'USER_ADMIN_PERM'		=> 'Permissions',
+	'USER_ADMIN_ATTACH'		=> 'Attachments',
+
+	'FOUNDER'				=> 'Founder',
+	'FOUNDER_EXPLAIN'		=> 'Founders can never be banned, deleted or altered by non-founder members',
+	'USER_INFO'				=> 'Basic information',
+	'REGISTERED'			=> 'Registered',
+	'REGISTERED_IP'			=> 'Registered from IP',
+	'LAST_ACTIVE'			=> 'Last active',
+	'WARNINGS'				=> 'Warnings',
+	'WARNINGS_EXPLAIN'		=> 'You can directly alter the warnings this users has received.',
+	'USER_TOOLS'			=> 'Basic tools',
+	'QUICK_TOOLS'			=> 'Quick tools',
+	'DELETE_USER'			=> 'Delete users',
+	'DELETE_USER_EXPLAIN'	=> 'Please note that deleting a user is final, they cannot be recovered',
+	'RETAIN_POSTS'			=> 'Retain posts',
+	'DELETE_POSTS'			=> 'Delete posts',
+	'USER_ADMIN_BAN_USER'	=> 'Ban by username',
+	'USER_ADMIN_BAN_EMAIL'	=> 'Ban by email',
+	'USER_ADMIN_BAN_IP'		=> 'Ban by IP',
+	'USER_ADMIN_FORCE'		=> 'Force re-activation',
+	'USER_ADMIN_DEACTIVATE'	=> 'Deactivate account',
+	'USER_ADMIN_ACTIVATE'	=> 'Activate account',
+	'USER_ADMIN_MOVE_POSTS'	=> 'Move all posts',
+	'MOVE_POSTS_EXPLAIN'	=> 'Please select the forum to which you wish to move all the posts this user has made.',
+
+	'USER_POSTING_PREFS'	=> 'Posting preferences',
+
+	'ADMIN_SIGNATURE_PREVIEW'	=> 'Users signature will appear like this',
+
+	'USER_ADMIN_BAN_NAME_REASON'	=> 'Username banned via user management',
+	'USER_ADMIN_BAN_IP_REASON'		=> 'IP banned via user management',
+	'USER_ADMIN_BAN_EMAIL_REASON'	=> 'Email address banned via user management',
+
+	'USER_DELETED'			=> 'User deleted successfully',
+	'USER_OVERVIEW_UPDATED'	=> 'User details updated',
+	'USER_PROFILE_UPDATED'	=> 'User profile updated',
+	'USER_PREFS_UPDATED'	=> 'User preferences updated',
+	'USER_ADMIN_INACTIVE'	=> 'User deactivated successfully',
+	'USER_ADMIN_ACTIVE'		=> 'User activated successfully',
+);
+
+// Group admin
+$this->lang += array(
+	'GROUP_MANAGE_EXPLAIN' => 'From this panel you can administer all your usergroups, you can; delete, create and edit existing groups. You may choose moderators, toggle open/closed group status and set the group name and description.',
+
+	'USER_DEF_GROUPS'			=> 'User defined groups',
+	'USER_DEF_GROUPS_EXPLAIN'	=> 'These are groups created by you or another admin on this board. You can manage memberships as well as edit group properties or even delete the group. By clicking "Default" you can set the relevant group to the default for all its members.',
+	'SPECIAL_GROUPS'			=> 'Predefined groups',
+	'SPECIAL_GROUPS_EXPLAIN'	=> 'Pre-defined groups are special groups, they cannot be deleted or directly modified. However you can still add users and alter basic settings. By clicking "Default" you can set the relevant group to the default for all its members.',
+	'TOTAL_MEMBERS'			=> 'Members',
+	'GROUP_DEFS_UPDATED'	=> 'Default group set for all members',
+	'CREATE_GROUP'			=> 'Create new group',
+
+	'GROUP_LIST'			=> 'Current members',
+	'GROUP_LIST_EXPLAIN'	=> 'This is a complete list of all the current users with membership of this group. You can delete members (except in certain special groups) or add new ones as you see fit.',
+	'GROUP_MEMBERS'			=> 'Group members',
+	'GROUP_MEMBERS_EXPLAIN' => 'This is a complete listing of all the members of this usergroup. It includes seperate sections for leaders, pending and existing members. From here you can manage all aspects of who has membership of this group and what their role is. To remove a leader but keep them in the group use Demote rather than delete. Similarly use Promote to make an existing member a leader.',
+	'GROUP_LEAD'			=> 'Group leaders',
+	'GROUP_APPROVED'		=> 'Approved Members',
+	'GROUP_PENDING'			=> 'Pending Members',
+	'GROUPS_NO_MEMBERS'		=> 'This group has no members',
+	'GROUPS_NO_MODS'		=> 'No group leaders defined',
+	'SELECT_OPTION'	=> 'Select option',
+	'GROUP_DEFAULT'	=> 'Default',
+	'GROUP_APPROVE'	=> 'Approve',
+	'GROUP_PROMOTE'	=> 'Promote',
+	'GROUP_DEMOTE'	=> 'Demote',
+	'GROUP_DELETE'	=> 'Delete',
+
+	'ADD_USERS_EXPLAIN'				=> 'Here you can add new users to the group. You may select whether this group becomes the new default for the selected users. Additionally you can define them as group leaders. Please enter each username on a seperate line.',
+	'USER_DEFAULT'			=> 'User default',
+	'USER_GROUP_DEFAULT'	=> 'Set as default group',
+	'USER_GROUP_DEFAULT_EXPLAIN'	=> 'Saying yes here will set this group as the default group for the added users',
+	'USER_GROUP_LEADER'		=> 'Set as group leader',
+	'GROUP_USERS_EXIST'		=> 'The selected users are already members.',
+	'GROUP_USERS_ADDED'		=> 'New users added to group successfully.',
+	'GROUP_MODS_ADDED'		=> 'New group moderators added successfully.',
+	'USERS_APPROVED'		=> 'Users approved successfully.',
+
+	'GROUP_EDIT_EXPLAIN'	=> 'Here you can edit an existing group. You can change its name, description and type (open, closed, etc.). You can also set certain groupwide options such as colouration, rank, etc. Changes made here override users current settings. Please note that group members can alter their avatar unless you set appropriate user permissions.',
+	'GROUP_DETAILS'			=> 'Group details',
+	'GROUP_NAME'			=> 'Group name',
+	'GROUP_DESC'			=> 'Group description',
+	'GROUP_TYPE'			=> 'Group type',
+	'GROUP_TYPE_EXPLAIN'	=> 'This determines which users can join or view this group.',
+	'GROUP_OPEN'			=> 'Open',
+	'GROUP_REQUEST'			=> 'Request',
+	'GROUP_CLOSED'			=> 'Closed',
+	'GROUP_HIDDEN'			=> 'Hidden',
+	'GROUP_COLOR'			=> 'Group colour',
+	'GROUP_COLOR_EXPLAIN'	=> 'Defines the colour members usernames will appear in, leave blank for user default.',
+	'FORCE_COLOR'			=> 'Force update',
+	'GROUP_RANK'			=> 'Group rank',
+	'GROUP_AVATAR'			=> 'Group avatar',
+	'GROUP_AVATAR_EXPLAIN'	=> 'This image will be displayed in the Group Control Panel.',
+	'GROUP_UPDATED'			=> 'Group preferences updated successfully.',
+	'GROUP_CREATED'			=> 'Group has been created successfully',
+
+	'GROUP_SETTINGS_SAVE'		=> 'Groupwide settings',
+	'GROUP_SETTINGS'			=> 'Set user preferences',
+	'GROUP_SETTINGS_EXPLAIN'	=> 'Here you can force changes in users current preferences. Please note these settings are not saved for the group itself. They are intended as a quick method of altering the preferences of all users in this group.',
+	'GROUP_LANG'				=> 'Group language',
+	'GROUP_TIMEZONE'			=> 'Group timezone',
+	'GROUP_DST'					=> 'Group daylight savings',
+
+	'GROUP_MODS_DEMOTED'		=> 'Group leaders demoted successfully',
+	'GROUP_MODS_PROMOTED'		=> 'Group members promoted successfully',
+	'GROUP_USERS_REMOVE'		=> 'Users removed from group and new defaults set successfully',
+	'GROUP_DELETED'				=> 'Group deleted and user default groups set successfully',
+
+	'GROUP_ERR_USERNAME'	=> 'No group name specified.',
+	'GROUP_ERR_USER_LONG'	=> 'Group name too long.',
+	'GROUP_ERR_DESC_LONG'	=> 'Group description too long.',
+	'GROUP_ERR_TYPE'		=> 'Inappropriate group type specified.',
+	'GROUP_ERR_USERS_EXIST' => 'The specified users are already members of this group',
+);
+
+// Forum Pruning
+$this->lang += array(
+	'FORUM_PRUNE_EXPLAIN' => 'This will delete any topic which has not been posted to within the number of days you select. If you do not enter a number then all topics will be deleted. It will not remove topics in which polls are still running nor will it remove announcements. You will need to remove these topics manually.',
+	'PRUNE_NOT_POSTED'	=> 'Days since last posted',
+	'PRUNE_NOT_VIEWED'	=> 'Days since last viewed',
+
+	'TOPICS_PRUNED'		=> 'Topics pruned',
+	'POSTS_PRUNED'		=> 'Posts pruned',
+	'PRUNE_SUCCESS'		=> 'Pruning of forums was successful',
+);
+
+// Word censors
+$this->lang += array(
+	'WORDS_TITLE' => 'Word Censoring',
+	'WORDS_EXPLAIN' => 'From this control panel you can add, edit, and remove words that will be automatically censored on your forums. In addition people will not be allowed to register with usernames containing these words. Wildcards (*) are accepted in the word field, eg. *test* will match detestable, test* would match testing, *test would match detest.',
+	'WORD' => 'Word',
+	'EDIT_WORD' => 'Edit word censor',
+	'REPLACEMENT' => 'Replacement',
+	'ADD_WORD' => 'Add new word',
+	'UPDATE_WORD' => 'Update word censor',
+	'ENTER_WORD' => 'You must enter a word and its replacement',
+	'NO_WORD' => 'No word selected for editing',
+	'WORD_UPDATED' => 'The selected word censor has been successfully updated',
+	'WORD_ADDED' => 'The word censor has been successfully added',
+	'WORD_REMOVED' => 'The selected word censor has been successfully removed',
+);
+
+// Mass email
+$this->lang += array(
+	'MASS_EMAIL_EXPLAIN'	=> 'Here you can email a message to either all of your users, or all users of a specific group.  To do this, an email will be sent out to the administrative email address supplied, with a blind carbon copy sent to all recipients. If you are emailing a large group of people please be patient after submitting and do not stop the page halfway through. It is normal for a mass emailing to take a long time, you will be notified when the script has completed',
+	'COMPOSE'				=> 'Compose',
+	'SEND_TO_GROUP'			=> 'Send to group',
+	'SEND_TO_USERS'			=> 'Send to users',
+	'SEND_TO_USERS_EXPLAIN'	=> 'Entering names here will override any group selected above. Enter each username on a new line.',
+	'MASS_MESSAGE'			=> 'Your message',
+	'MASS_MESSAGE_EXPLAIN'	=> 'Please note that you may enter only plain text. All markup will be removed before sending.',
+	'ALL_USERS'				=> 'All Users',
+	'NO_EMAIL_SUBJECT'		=> 'You must specify a subject for your message.',
+	'NO_EMAIL_MESSAGE'		=> 'You must enter a message.',
+	'EMAIL_SENT'			=> 'Your message has been queued for sending.',
+	'EMAIL_SEND_ERROR'		=> 'There were one or more errors while sending the email. Please check the %sError Log%s for detailed error messages.',
+	'SEND_IMMEDIATLY'		=> 'Send immediatly',
+	'LOG_SESSION'			=> 'Log Mail Session',
+	'MAIL_PRIORITY'			=> 'Mail Priority',
+	'MAIL_LOW_PRIORITY'		=> 'Low',
+	'MAIL_NORMAL_PRIORITY'	=> 'Normal',
+	'MAIL_HIGH_PRIORITY'	=> 'High'
+);
+
+// Ranks
+$this->lang += array(
+	'RANKS_EXPLAIN' => 'Using this form you can add, edit, view and delete ranks. You can also create custom ranks which can be applied to a user via the user management facility',
+	'ADD_RANK' => 'Add new rank',
+	'RANK_TITLE' => 'Rank Title',
+	'RANK_SPECIAL' => 'Set as Special Rank',
+	'RANK_MINIMUM' => 'Minimum Posts',
+	'RANK_IMAGE' => 'Rank Image',
+	'RANK_IMAGE_EXPLAIN' => 'Use this to define a small image associated with the rank. The path is relative to the root phpBB2 directory.',
+	'MUST_SELECT_RANK' => 'You must select a rank.',
+	'NO_ASSIGNED_RANK' => 'No special rank assigned.',
+	'RANK_UPDATED' => 'The rank was successfully updated.',
+	'RANK_ADDED' => 'The rank was successfully added.',
+	'RANK_REMOVED' => 'The rank was successfully deleted.',
+	'NO_UPDATE_RANKS' => 'The rank was successfully deleted. However user accounts using this rank were not updated.  You will need to manually reset the rank on these accounts.',
+);
+
+// Disallowed names
+$this->lang += array(
+	'Disallow_control' => 'Username Disallow Control',
+	'Disallow_explain' => 'Here you can control usernames which will not be allowed to be used.  Disallowed usernames are allowed to contain a wildcard character of *.  Please note that you will not be allowed to specify any username that has already been registered, you must first delete that name then disallow it',
+	'Delete_disallow' => 'Delete',
+	'Delete_disallow_title' => 'Remove a Disallowed Username',
+	'Delete_disallow_explain' => 'You can remove a disallowed username by selecting the username from this list and clicking submit',
+	'Add_disallow' => 'Add',
+	'Add_disallow_title' => 'Add a disallowed username',
+	'Add_disallow_explain' => 'You can disallow a username using the wildcard character * to match any character',
+	'No_disallowed' => 'No Disallowed Usernames',
+	'Disallowed_deleted' => 'The disallowed username has been successfully removed',
+	'Disallow_successful' => 'The disallowed username has been successfully added',
+	'Disallowed_already' => 'The name you entered could not be disallowed. It either already exists in the list, exists in the word censor list, or a matching username is present',
+);
+
+// Styling
+$this->lang += array(
+	'STYLES'			=> 'Styles',
+	'STYLES_EXPLAIN'	=> 'Here you can manage the available styles on your board. A style consists off a template, theme and imageset. You may alter existing styles, delete, deactivate, reactivate, create or import new ones. You can also see what a style will look like using the preview function. The current default style is noted by the presence of an asterix, * Also listed is the total user count for each style, note that overriding user styles will not be reflected here.',
+	'STYLE_NAME'			=> 'Style name',
+	'STYLE_USED_BY'			=> 'Used by',
+	'STYLE_ACTIVATE'		=> 'Activate',
+	'STYLE_DEACTIVATE'		=> 'Deactivate',
+	'CREATE_STYLE'			=> 'Create new style',
+	'INSTALLED_STYLE'		=> 'Installed styles',
+	'UNINSTALLED_STYLE'		=> 'Uninstalled styles',
+	'NO_UNINSTALLED_STYLE'	=> 'No uninstalled styles detected',
+	'DEACTIVATE_DEFAULT'	=> 'You cannot deactivate the default style.',
+
+	'EDIT_DETAILS_STYLE'		=> 'Edit Style',
+	'EDIT_DETAILS_STYLE_EXPLAIN'=> 'Using the form below you can modify this existing style. You may alter the combination of template, theme and imageset which define the style itself. You may also deactivate the style and alter its name.',
+	'STYLE_ACTIVE'				=> 'Active',
+	'STYLE_DEFAULT'				=> 'Make default style',
+	'STYLE_IMAGESET'			=> 'Imageset',
+	'STYLE_THEME'				=> 'Theme',
+	'STYLE_TEMPLATE'			=> 'Template',
+	'STYLE_ADDED'				=> 'Style added successfully',
+	'STYLE_EDITED'				=> 'Style edited successfully',
+
+	'ADD_STYLE'				=> 'Create Style',
+	'ADD_STYLE_EXPLAIN'		=> 'Here you can create a new style. Depending on your server configuration and file permissions you may have additional options. For example you may be able to base this style on an existing one. You may also be able to upload or import (from the store directory) a style archive. If you upload or import an archive the style name will be determined automatically.',
+	'INSTALL_STYLE'			=> 'Install Style',
+	'INSTALL_STYLE_EXPLAIN'	=> 'Here you can install a new style and if appropriate the corresponding style elements. If you already have the relevant style elements installed they will not be overwritten. Some styles require existing style elements to already be installed. If you try installing such a style and do not have the required elements you will be notified.',
+	'STYLE_BASIS'			=> 'Style based on',
+	'SELECT_STYLE'			=> 'Select style',
+	'STYLE_UPLOAD_BASIS'	=> 'Upload a style',
+	'STYLE_IMPORT_BASIS'	=> 'Import style from store',
+
+	'STYLE_EXPORT'			=> 'Export Style',
+	'STYLE_EXPORT_EXPLAIN'	=> 'Here you can export a style in the form of an archive. A style does not need to contain all elements but it must contain at least one. For example if you have created a new theme and imageset for a commonly used template you could simply export the theme and imageset and ommit the template. You may select whether to download the file directly or to place it in your store folder for download later or via FTP.',
+	'INCLUDE_TEMPLATE'		=> 'Include template',
+	'INCLUDE_THEME'			=> 'Include theme',
+	'INCLUDE_IMAGESET'		=> 'Include imageset',
+	'STYLE_EXPORTED'		=> 'Style exported succesfully and stored in %s',
+
+	'DELETE_STYLE'			=> 'Delete style',
+	'DELETE_STYLE_EXPLAIN'	=> 'Here you can remove the selected style. You cannot remove all the style elements from here. These must be deleted individually via their respective forms. Take care in deleting styles there is no undo facility.',
+	'REPLACE_STYLE'			=> 'Replace style with',
+	'REPLACE_STYLE_EXPLAIN'	=> 'This style will replace the one being deleted for members that use it.',
+	'ONLY_STYLE'			=> 'This is the only remaining style, you cannot delete it',
+	'STYLE_DELETED'			=> 'Style deleted successfully',
+
+	'TEMPLATES'					=> 'Templates',
+	'TEMPLATES_EXPLAIN'			=> 'A Template set comprises all the markup used to generate the layout of your board. Here you can  edit existing template sets, delete, export, import and preview sets. You can also modify the templating code used to generate BBCode.',
+	'CREATE_TEMPLATE'			=> 'Create new template set',
+	'INSTALLED_TEMPLATE'		=> 'Installed templates',
+	'UNINSTALLED_TEMPLATE'		=> 'Uninstalled templates',
+	'NO_UNINSTALLED_TEMPLATE'	=> 'No uninstalled templates detected',
+
+	'EDIT_TEMPLATE'			=> 'Edit Template',
+	'EDIT_TEMPLATE_EXPLAIN'	=> 'Here you can edit your template set directly. Please remember that these edits are permanent and cannot be undone once submitted. If PHP can write to the template files in your styles directory any changes here will be written directly to those files. If PHP cannot write to those files they will be copied into the database and all changes will only be reflected there. Please take care when editing your template set, remember to close all replacement variable terms {XXXX} and conditional statements.',
+	'SELECTED_TEMPLATE'		=> 'Selected template set:',
+	'RAW_HTML'				=> 'Raw HTML',
+	'TEMPLATE_UPDATED'		=> 'Template updated successfully',
+
+	'EDIT_DETAILS_TEMPLATE'			=> 'Edit template details',
+	'EDIT_DETAILS_TEMPLATE_EXPLAIN'	=> 'Here you can edit certain templates details such as its name. You may also have the option to switch storage of the stylesheet from the filesystem to the database and vice versa. This option depends on your PHP configuration and whether your template set can be written to by the webserver.',
+	'ADD_TEMPLATE'				=> 'Create Template',
+	'ADD_TEMPLATE_EXPLAIN'		=> 'Here you can add a new template. Depending on your server configuration and file permissions you may have additional options here. For example you may be able to base this template set on an existing one. You may also be able to upload or import (from the store directory) a template archive. If you upload or import an archive the template name can be optionally taken from the archive name (to do this leave the template name blank).',
+	'INSTALL_TEMPLATE'			=> 'Install Template',
+	'INSTALL_TEMPLATE_EXPLAIN'	=> 'Here you can install a new template set. Depending on your server configuration you may have a number of options here.',
+	'TEMPLATE_NAME'				=> 'Template name',
+	'SELECT_TEMPLATE'			=> 'Select template',
+	'TEMPLATE_BASIS'			=> 'Template set based on',
+	'TEMPLATE_UPLOAD_BASIS'		=> 'Upload a template',
+	'TEMPLATE_IMPORT_BASIS'		=> 'Import template from store',
+	'TEMPLATE_LOCATION'			=> 'Store templates in',
+	'TEMPLATE_LOCATION_EXPLAIN'	=> 'Images are always stored on the filesystem.',
+	'TEMPLATE_ADDED'			=> 'Template set added and stored on filesystem',
+	'TEMPLATE_ADDED_DB'			=> 'Template set added and stored in database',
+
+	'TEMPLATE_CACHE'		=> 'Template Cache',
+	'TEMPLATE_CACHE_EXPLAIN'=> 'By default phpBB caches the compiled version of its templates. This decreases the load on the server each time a page is viewed and thus may reduce the page generation time. Here you can view the cache status of each file and delete individual files or the entire cache.',
+	'CACHE_FILENAME'		=> 'Template file',
+	'CACHE_FILESIZE'		=> 'Filesize',
+	'CACHE_CACHED'			=> 'Cached',
+	'CACHE_MODIFIED'		=> 'Modified',
+	'NO_CACHED_TPL_FILES'		=> 'No cached files for this template',
+	'TEMPLATE_CACHE_CLEARED'=> 'Cached templates deleted',
+
+	'TEMPLATE_EXPORT'			=> 'Export Templates',
+	'TEMPLATE_EXPORT_EXPLAIN'	=> 'Here you can export a template set in the form of an archive. This archive will contain all the files necessary to install the templates on another board. You may select whether to download the file directly or to place it in your store folder for download later or via FTP.',
+	'TEMPLATE_EXPORTED'		=> 'Templates exported succesfully and stored in %s',
+
+	'DELETE_TEMPLATE'			=> 'Delete Template',
+	'DELETE_TEMPLATE_EXPLAIN'	=> 'Here you can remove the selected template set from the database. Additionally, if you have permission you can elect to remove the set from the filesystem. Please note that there is no undo capability. When the templates are deleted they are gone for good. It is recommended that you first export your set for possible future use.',
+	'REPLACE_TEMPLATE'			=> 'Replate template with',
+	'REPLACE_TEMPLATE_EXPLAIN'	=> 'This template set will replace the one you are deleting in any styles that use it.',
+	'TEMPLATE_DELETED'			=> 'Template set deleted successfully',
+	'TEMPLATE_DELETED_FS'		=> 'Template set removed from database but some files may remain on the filesystem',
+	'ONLY_TEMPLATE'				=> 'This is the only remaining template set, you cannot delete it',
+
+	'THEMES'				=> 'Themes',
+	'THEMES_EXPLAIN'		=> 'From here you can create, install, edit, delete and export themes. A theme is the combination of colours and images that are applied to your templates to define the basic look of your forum. The range of options open to you depends on the configuration of your server and phpBB installation, see the Manual for further details. Please note that when creating new themes the use of an existing theme as a basis is optional.',
+	'SELECT_THEME_BASIS'	=> 'Select optional basis',
+	'THEME_VERSION_DIFF'	=> 'This theme was designed for a version of phpBB 2.2 different from that installed you may encounter some issues in its use.',
+	'CREATE_THEME'			=> 'Create new theme',
+	'INSTALLED_THEME'		=> 'Installed themes',
+	'UNINSTALLED_THEME'		=> 'Uninstalled themes',
+	'NO_UNINSTALLED_THEME'	=> 'No uninstalled themes detected',
+
+	'DELETE_THEME'			=> 'Delete theme',
+	'DELETE_THEME_EXPLAIN'	=> 'Here you can remove the selected theme from the database. Additionally, if you have permission you can elect to remove the theme from the filesystem. Please note that there is no undo capability. When the theme is deleted it is gone for good. It is recommended that you first export your theme for possible future use.',
+	'REPLACE_THEME'			=> 'Replace theme with',
+	'REPLACE_THEME_EXPLAIN'	=> 'This theme will replace the one you are deleting in any styles that use it.',
+	'THEME_DELETED'			=> 'Theme deleted successfully',
+	'THEME_DELETED_FS'		=> 'Theme removed from database but files remain on the filesystem',
+	'ONLY_THEME'			=> 'This is the only remaining theme, you cannot delete it',
+
+	'EDIT_DETAILS_THEME'		=> 'Edit theme details',
+	'EDIT_DETAILS_THEME_EXPLAIN'=> 'Here you can edit certain theme details such as its name. You may also have the option to switch storage of the stylesheet from the filesystem to the database and vice versa. This option depends on your PHP configuration and whether your stylesheet can be written to by the webserver.',
+	'ADD_THEME'			=> 'Create Theme',
+	'ADD_THEME_EXPLAIN'	=> 'Here you can add a new theme. Depending on your server configuration and file permissions you may have additional options here. For example you may be able to base this theme on an existing one. You may also be able to upload or import (from the store directory) a theme archive. If you upload or import an archive the theme name can be optionally taken from the archive name (to do this leave the theme name blank).',
+	'INSTALL_THEME'			=> 'Install Theme',
+	'INSTALL_THEME_EXPLAIN'	=> 'Here you can install your selected theme. You can edit certain details if you wish or use the installation defaults.',
+	'THEME_NAME'			=> 'Theme Name',
+	'THEME_BASIS'			=> 'Theme Basis',
+	'THEME_BASIS'			=> 'Theme based on',
+	'THEME_UPLOAD_BASIS'	=> 'Upload a theme',
+	'THEME_IMPORT_BASIS'	=> 'Import theme from store',
+	'THEME_LOCATION'		=> 'Store stylesheet in',
+	'THEME_LOCATION_EXPLAIN'=> 'Images are always stored on the filesystem.',
+
+	'EDIT_THEME'			=> 'Edit theme',
+	'EDIT_THEME_EXPLAIN'	=> 'Here you can edit the selected theme, changing colours, images, etc. You can switch between a simplified interface where you can set basic colours, etc. and a more advanced "raw CSS" mode. The raw mode allows you add additional parameters such as borders, etc. Only set parameters you need else leave them blank or unset. Default classes used by this theme are coloured red in the select box. You may also add additional "custom" classes should your template or style make use of them.',
+	'SELECTED_THEME'		=> 'Selected theme',
+	'SELECT_CLASS'			=> 'Select class',
+	'SHOW_RAW_CSS'			=> 'Show CSS',
+	'HIDE_RAW_CSS'			=> 'Hide CSS',
+	'SHOW_RAW_CSS_NOTE'		=> 'Note',
+	'SHOW_RAW_CSS_EXPLAIN'	=> 'Enter each element on a new line, ending with a ; Expand the data for each element, e.g. do not use font: use font-family:, font-weight:, etc.',
+	'CSS_CAT_LAYOUT'	=> 'Layout',
+	'CSS_#HEADER'		=> 'Header',
+	'CSS_#LOGO'			=> 'Header logo',
+	'CSS_#MENU'			=> 'Menu container',
+	'CSS_#INFO'			=> 'Info container',
+	'CSS_#FOOTER'		=> 'Footer',
+	'CSS_CAT_TEXT'		=> 'Text Classes',
+	'CSS_BODY'			=> 'Body',
+	'CSS_P'				=> 'Paragraph',
+	'CSS_H1'			=> 'Header 1',
+	'CSS_H2'			=> 'Header 2',
+	'CSS_H3'			=> 'Header 3',
+	'CSS_TABLETITLE'	=> 'Table Title',
+	'CSS_CATTITLE'		=> 'Category Title',
+	'CSS_TOPICTITLE'	=> 'Topic Titles',
+	'CSS_TOPICAUTHOR'	=> 'Topic Author',
+	'CSS_TOPICDETAILS'	=> 'Topic Details',
+	'CSS_POSTBODY'		=> 'Post Text',
+	'CSS_POSTHILIT'		=> 'Post Highlight',
+	'CSS_POSTAUTHOR'	=> 'Post Author',
+	'CSS_POSTDETAILS'	=> 'Post Details',
+	'CSS_MAINMENU'		=> 'Main Menu',
+	'CSS_NAV'			=> 'Navigation',
+	'CSS_GENMED'		=> 'General Medium',
+	'CSS_GENSMALL'		=> 'General Small',
+	'CSS_COPYRIGHT'		=> 'Copyright',
+	'CSS_CAT_TABLES'	=> 'Tabular Classes',
+	'CSS_TABLE'			=> 'Table',
+	'CSS_TH'			=> 'Table Header',
+	'CSS_TD'			=> 'Table Data',
+	'CSS_CAT'			=> 'Category Header',
+	'CSS_CATDIV'		=> 'Category Fade',
+	'CSS_ROW1'			=> 'Alternate Row 1',
+	'CSS_ROW2'			=> 'Alternate Row 2',
+	'CSS_ROW3'			=> 'Alternate Row 3',
+	'CSS_SPACER'		=> 'Spacer Row',
+	'CSS_HR'			=> 'Horizontal Rule',
+	'CSS_CAT_FORMS'		=> 'Form Classes',
+	'CSS_FORM'			=> 'Form',
+	'CSS_INPUT'			=> 'Input',
+	'CSS_SELECT'		=> 'Select',
+	'CSS_TEXTAREA'		=> 'Textarea',
+	'CSS_POST'			=> 'Text Input',
+	'CSS_BTNMAIN'		=> 'Primary Buttons',
+	'CSS_BTNLITE'		=> 'Secondary Buttons',
+	'CSS_BTNBBCODE'		=> 'BBCode Buttons',
+	'CSS_CAT_BBCODE'	=> 'BBCode Classes',
+	'CSS_B'				=> 'Bold',
+	'CSS_U'				=> 'Underline',
+	'CSS_I'				=> 'Italics',
+	'CSS_COLOR'			=> 'Colour',
+	'CSS_SIZE'			=> 'Size',
+	'CSS_CODE'			=> 'Code',
+	'CSS_QUOTE'			=> 'Quote',
+	'CSS_FLASH'			=> 'Flash',
+	'CSS_SYNTAXBG'		=> 'Syntax Background',
+	'CSS_SYNTAXCOMMENT'	=> 'Syntax Comments',
+	'CSS_SYNTAXDEFAULT'	=> 'Syntax Default',
+	'CSS_SYNTAXHTML'	=> 'Syntax HTML',
+	'CSS_SYNTAXKEYWORD'	=> 'Syntax Keyword',
+	'CSS_SYNTAXSTRING'	=> 'Syntax String',
+	'CSS_CAT_CUSTOM'	=> 'Custom Classes',
+	'CSS_ANCHOR_LINK'	=> 'Link',
+	'CSS_ANCHOR_ACTIVE'	=> 'Active',
+	'CSS_ANCHOR_VISITED'=> 'Visited',
+	'CSS_ANCHOR_HOVER'	=> 'Hover',
+
+	'CSS_PARAMETER'		=> 'Parameter',
+	'CSS_VALUE'			=> 'Value',
+	'RAW_CSS'			=> 'Raw CSS',
+	'BACKGROUND'		=> 'Background',
+	'BACKGROUND_COLOUR' => 'Background colour',
+	'BACKGROUND_IMAGE'	=> 'Background image',
+	'BACKGROUND_REPEAT' => 'Repeat background',
+	'REPEAT_NO'			=> 'None',
+	'REPEAT_X'			=> 'Only horizontally',
+	'REPEAT_Y'			=> 'Only vertically',
+	'REPEAT_ALL'		=> 'Both directions',
+	'FOREGROUND'		=> 'Foreground',
+	'COLOUR_EXPLAIN'	=> 'This is a hex-triplet of the form #RRGGBB or colour name',
+	'FONT_COLOUR'		=> 'Font colour',
+	'FONT_FACE'			=> 'Font face',
+	'FONT_FACE_EXPLAIN' => 'You can specify multiple fonts seperated by commas.',
+	'FONT_SIZE'			=> 'Font size',
+	'UNDERLINE'			=> 'Underline',
+	'ITALIC'			=> 'Italic',
+	'BOLD'				=> 'Bold',
+	'LINE_SPACING'		=> 'Line spacing',
+	'CUSTOM_CLASS'			=> 'Custom Class',
+	'CUSTOM_CLASS_EXPLAIN'	=> 'You can add additional classes to this theme if you wish. You must provide the actual CSS class name below, it must be the same as that you have or will use in your template. Please remember that class names may contain only alphanumeric characters, periods (.), colons (:) and number/hash/pound (#). The new class will be added to the Custom Class category in the select box above.',
+	'CSS_CLASS_NAME'		=> 'CSS class name',
+	'CUSTOM_CLASS'			=> 'Custom Class',
+
+	'THEME_CLASS_ADDED'		=> 'Custom class added successfully',
+	'THEME_UPDATED'			=> 'Class updated successfully',
+	'THEME_ADDED_DB'		=> 'New theme added to database',
+	'THEME_ADDED'			=> 'New theme added on filesystem',
+	'THEME_DETAILS_UPDATE'	=> 'Theme details updated',
+
+	'THEME_EXPORT'			=> 'Export Theme',
+	'THEME_EXPORT_EXPLAIN'	=> 'Here you can export a theme in the form of an archive. This archive will contain all the data necessary to install the theme on another board. You may select whether to download the file directly or to place it in your store folder for download later or via FTP.',
+	'THEME_EXPORTED'		=> 'Theme exported succesfully and stored in %s',
+
+	'IMAGESETS'					=> 'Imagesets',
+	'IMAGESETS_EXPLAIN'			=> 'Imagesets comprise all the button, forum, folder, etc. and other non-style specific images used by the board. Here you can edit, export or delete existing imagesets and import or activate new sets.',
+	'CREATE_IMAGESET'			=> 'Create new imageset',
+	'INSTALLED_IMAGESET'		=> 'Installed imagesets',
+	'UNINSTALLED_IMAGESET'		=> 'Uninstalled imagesets',
+	'NO_UNINSTALLED_IMAGESET'	=> 'No uninstalled imagesets detected',
+
+	'EDIT_IMAGESET'			=> 'Edit Imageset',
+	'EDIT_IMAGESET_EXPLAIN'	=> 'Here you can edit the individual images which define the imageset. You can also specify  dimensions for the image. Dimensions are optional, specifying them can overcome certain rendering issues with some browsers. By not specifying them you reduce the size of the database record a little.',
+	'SELECTED_IMAGESET'		=> 'Selected imageset',
+	'SELECT_IMAGE'			=> 'Select image',
+	'IMAGE'					=> 'Image',
+	'CURRENT_IMAGE'			=> 'Current Image',
+	'SELECTED_IMAGE'		=> 'Selected Image',
+	'DIMENSIONS'			=> 'Include dimensions',
+	'DIMENSIONS_EXPLAIN'	=> 'Selecting yes here will include width/height parameters.',
+	'IMAGE_PARAMETER'		=> 'Parameter',
+	'IMAGE_VALUE'			=> 'Value',
+	'LOCALISED_IMAGES'		=> 'Localised',
+	'GLOBAL_IMAGES'			=> 'Global',
+	'IMG_CAT_BUTTONS'		=> 'Localised buttons',
+	'IMG_BTN_POST'			=> 'New topic',
+	'IMG_BTN_REPLY'			=> 'Reply topic',
+	'IMG_BTN_LOCKED'		=> 'Topic locked',
+	'IMG_BTN_POST_PM'		=> 'New message',
+	'IMG_BTN_REPLY_PM'		=> 'Reply message',
+	'IMG_BTN_DELETE'		=> 'Delete post',
+	'IMG_BTN_QUOTE'			=> 'Quote post',
+	'IMG_BTN_PROFILE'		=> 'Show profile',
+	'IMG_BTN_EMAIL'			=> 'Send email',
+	'IMG_BTN_SEARCH'		=> 'Search posts',
+	'IMG_BTN_WWW'			=> 'Website',
+	'IMG_BTN_IP'			=> 'Show IP',
+	'IMG_BTN_EDIT'			=> 'Edit post',
+	'IMG_BTN_AIM'			=> 'AIM',
+	'IMG_BTN_ICQ'			=> 'ICQ',
+	'IMG_BTN_JABBER'		=> 'Jabber',
+	'IMG_BTN_YIM'			=> 'YIM',
+	'IMG_BTN_MSNM'			=> 'MSNM',
+	'IMG_BTN_ONLINE'		=> 'User online',
+	'IMG_BTN_OFFLINE'		=> 'User offline',
+	'IMG_BTN_REPORT'		=> 'Report post',
+	'IMG_BTN_PM'			=> 'Send message',
+	'IMG_BTN_FRIEND'		=> 'Add as friend',
+	'IMG_BTN_FOE'			=> 'Add as foe',
+	'IMG_CAT_ICONS'			=> 'General icons',
+	'IMG_ICON_UNAPPROVED'	=> 'Post unapproved',
+	'IMG_ICON_REPORTED'		=> 'Post reported',
+	'IMG_ICON_ATTACH'		=> 'Attachment',
+	'IMG_ICON_POST'			=> 'Minipost',
+	'IMG_ICON_POST_NEW'		=> 'New minipost',
+	'IMG_ICON_POST_LATEST'	=> 'Last post',
+	'IMG_ICON_POST_NEWEST'	=> 'Newest post',
+	'IMG_CAT_FORUMS'		=> 'Forum icons',
+	'IMG_FORUM'				=> 'Forum',
+	'IMG_FORUM_NEW'			=> 'Forum new posts',
+	'IMG_FORUM_LOCKED'		=> 'Forum locked',
+	'IMG_FORUM_LINK'		=> 'Forum link',
+	'IMG_SUB_FORUM'			=> 'Subforum',
+	'IMG_SUB_FORUM_NEW'		=> 'Subforum new posts',
+	'IMG_CAT_FOLDERS'				=> 'Topic icons',
+	'IMG_FOLDER'					=> 'Topic',
+	'IMG_FOLDER_NEW'				=> 'Topic new posts',
+	'IMG_FOLDER_LOCKED'				=> 'Topic locked',
+	'IMG_FOLDER_POSTED'				=> 'Topic posted to',
+	'IMG_FOLDER_NEW_POSTED'			=> 'Topic posted to new',
+	'IMG_FOLDER_LOCKED_NEW'			=> 'Topic locked new',
+	'IMG_FOLDER_LOCKED_POSTED'		=> 'Topic locked posted to',
+	'IMG_FOLDER_LOCKED_NEW_POSTED'	=> 'Topic locked posted to new',
+	'IMG_FOLDER_HOT'				=> 'Topic hot',
+	'IMG_FOLDER_HOT_NEW'			=> 'Topic hot new posts',
+	'IMG_FOLDER_HOT_POSTED'			=> 'Topic hot posted to',
+	'IMG_FOLDER_HOT_NEW_POSTED'		=> 'Topic hot posted to new',
+	'IMG_FOLDER_STICKY'				=> 'Sticky topic',
+	'IMG_FOLDER_STICKY_POSTED'		=> 'Sticky topic posted to',
+	'IMG_FOLDER_STICKY_NEW'			=> 'Sticky topic new posts',
+	'IMG_FOLDER_STICKY_NEW_POSTED'	=> 'Sticky topic posted to new',
+	'IMG_FOLDER_ANNOUNCE'				=> 'Announcement',
+	'IMG_FOLDER_ANNOUNCE_NEW'			=> 'Announcement new posts',
+	'IMG_FOLDER_ANNOUNCE_POSTED'		=> 'Announcement posted to',
+	'IMG_FOLDER_ANNOUNCE_NEW_POSTED'	=> 'Announcement posted to new',
+	'IMG_FOLDER_GLOBAL'				=> 'Global',
+	'IMG_FOLDER_GLOBAL_NEW'			=> 'Global new posts',
+	'IMG_FOLDER_GLOBAL_POSTED'		=> 'Global posted to',
+	'IMG_FOLDER_GLOBAL_NEW_POSTED'	=> 'Global posted to new',
+	'IMG_CAT_POLLS'		=> 'Polling images',
+	'IMG_POLL_LEFT'		=> 'Poll left end',
+	'IMG_POLL_RIGHT'	=> 'Poll right end',
+	'IMG_POLL_CENTER'	=> 'Poll centre',
+	'IMG_CAT_KARMA'		=> 'Karma images',
+	'IMG_KARMA_LEFT'	=> 'Karma left end',
+	'IMG_KARMA_CENTER'	=> 'Karma centre',
+	'IMG_KARMA_RIGHT'	=> 'Karma right end',
+	'IMG_CAT_CUSTOM'	=> 'Custom images',
+	'IMAGESET_UPDATED'	=> 'Imageset updated successfully',
+
+	'EDIT_DETAILS_IMAGESET'	=> 'Edit imageset details',
+	'EDIT_DETAILS_IMAGESET_EXPLAIN'=> 'Here you can edit certain imageset details such as its name.',
+	'ADD_IMAGESET'			=> 'Create Imageset',
+	'ADD_IMAGESET_EXPLAIN'	=> 'Here you can create a new imageset. Depending on your server configuration and file permissions you may have additional options here. For example you may be able to base this imageset on an existing one. You may also be able to upload or import (from the store directory) a imageset archive. If you upload or import an archive the imageset name can be optionally taken from the archive name (to do this leave the imageset name blank).',
+	'INSTALL_IMAGESET'			=> 'Install Imageset',
+	'INSTALL_IMAGESET_EXPLAIN'	=> 'Here you can install your selected imageset. You can edit certain details if you wish or use the installation defaults.',
+	'IMAGESET_NAME'				=> 'Imageset Name',
+	'IMAGESET_BASIS'			=> 'Imageset Basis',
+	'IMAGESET_BASIS'			=> 'Imageset based on',
+	'IMAGESET_UPLOAD_BASIS'		=> 'Upload a imageset',
+	'IMAGESET_IMPORT_BASIS'		=> 'Import imageset from store',
+
+	'IMAGESET_EXPORT'			=> 'Export Imageset',
+	'IMAGESET_EXPORT_EXPLAIN'	=> 'Here you can export an imageset in the form of an archive. This archive will contain all the data necessary to install the set of images on another board. You may select whether to download the file directly or to place it in your store folder for download later or via FTP.',
+	'IMAGESET_EXPORTED'		=> 'Imageset exported succesfully and stored in %s',
+	'DELETE_IMAGESET'			=> 'Delete Imageset',
+	'DELETE_IMAGESET_EXPLAIN'	=> 'Here you can remove the selected imageset from the database. Additionally, if you have permission you can elect to remove the set from the filesystem. Please note that there is no undo capability. When the imageset is deleted it is gone for good. It is recommended that you first export your set for possible future use.',
+	'REPLACE_IMAGESET'			=> 'Replace imageset with',
+	'REPLACE_IMAGESET_EXPLAIN'	=> 'This imageset will replace the one you are deleting in any styles that use it.',
+	'IMAGESET_DELETED'			=> 'Imageset set deleted successfully',
+	'IMAGESET_DELETED_FS'		=> 'Imageset set removed from database but some files may remain on the filesystem',
+	'ONLY_IMAGESET'				=> 'This is the only remaining imageset, you cannot delete it',
+
+	'STYLE_ERR_NOT_STYLE'		=> 'The imported or uploaded file did not contain a valid style archive.',
+	'STYLE_ERR_MORE_ELEMENTS'	=> 'You must select at least two style elements.',
+	'STYLE_ERR_STYLE_NAME'		=> 'You must supply a name for this style',
+	'STYLE_ERR_NAME_LONG'		=> 'The style name can be no longer than 30 characters',
+	'STYLE_ERR_NAME_EXIST'		=> 'A style with that name already exists',
+	'STYLE_ERR_COPY_LONG'		=> 'The copyright can be no longer than 60 characters',
+	'STYLE_ERR_NO_IDS'			=> 'You must select a template, theme and imageset for this style',
+	'STYLE_ERR_NAME_CHARS'		=> 'The style name can only contain alphanumeric characters, -, +, _ and space',
+	'REQUIRES_TEMPLATE'			=> 'This style requires the %s template set to be installed.',
+	'REQUIRES_THEME'			=> 'This style requires the %s theme to be installed.',
+	'REQUIRES_IMAGESET'			=> 'This style requires the %s imageset to be installed.',
+	'TEMPLATE_ERR_STYLE_NAME'	=> 'You must supply a name for this templates',
+	'TEMPLATE_ERR_NAME_CHARS'	=> 'The template name can only contain alphanumeric characters, -, +, _ and space',
+	'TEMPLATE_ERR_NAME_LONG'	=> 'The template name can be no longer than 30 characters',
+	'TEMPLATE_ERR_NAME_EXIST'	=> 'A template set with that name already exists',
+	'TEMPLATE_ERR_COPY_LONG'	=> 'The copyright can be no longer than 60 characters',
+	'TEMPLATE_ERR_ARCHIVE'		=> 'Please select an archive method',
+	'TEMPLATE_ERR_NOT_TEMPLATE'	=> 'The archive you specified does not contain a valid template set.',
+	'ERR_TPLCACHE_READ'			=> 'Cannot read the cache directory',
+	'THEME_ERR_STYLE_NAME'		=> 'You must supply a name for this theme',
+	'THEME_ERR_NAME_CHARS'		=> 'The theme name can only contain alphanumeric characters, -, +, _ and space',
+	'THEME_ERR_NAME_LONG'		=> 'The theme name can be no longer than 30 characters',
+	'THEME_ERR_NAME_EXIST'		=> 'A theme with that name already exists',
+	'THEME_ERR_COPY_LONG'		=> 'The copyright can be no longer than 60 characters',
+	'THEME_ERR_ARCHIVE'			=> 'Please select an archive method',
+	'THEME_ERR_NOT_THEME'		=> 'The archive you specified does not contain a valid theme.',
+	'THEME_ERR_CLASS_CHARS'		=> 'Only alphanumeric characters plus ., : and # are valid in class names.',
+	'IMAGESET_ERR_STYLE_NAME'	=> 'You must supply a name for this imageset',
+	'IMAGESET_ERR_NAME_CHARS'	=> 'The imageset name can only contain alphanumeric characters, -, +, _ and space',
+	'IMAGESET_ERR_NAME_LONG'	=> 'The imageset name can be no longer than 30 characters',
+	'IMAGESET_ERR_NAME_EXIST'	=> 'A imageset with that name already exists',
+	'IMAGESET_ERR_COPY_LONG'	=> 'The copyright can be no longer than 60 characters',
+	'IMAGESET_ERR_ARCHIVE'		=> 'Please select an archive method',
+	'IMAGESET_ERR_NOT_IMAGESET'	=> 'The archive you specified does not contain a valid imageset.',
+
+	'ARCHIVE_FORMAT'		=> 'Archive file type',
+	'ALLOWED_FILETYPES'		=> 'Allowed filetypes',
+	'SELECT_BASIS'			=> 'Select optional basis',
+	'TEXT_COLUMNS'			=> 'Columns',
+	'TEXT_ROWS'				=> 'Rows',
+	'COPYRIGHT'				=> 'Copyright',
+	'CACHE'					=> 'Cache',
+	'EXPORT'				=> 'Export',
+	'DETAILS'				=> 'Details',
+	'REFRESH'				=> 'Refresh',
+	'STORE_DATABASE'		=> 'Database',
+	'STORE_FILESYSTEM'		=> 'Filesystem',
+	'DELETE_FROM_FS'		=> 'Delete from filesystem',
+	'INSTALL'				=> 'Install',
+	'FROM'					=> 'from', // "Create new style .... from ..."
+	'OPTIONAL_BASIS'		=> 'Optional basis',
+	'NO_IMAGESET'			=> 'Cannot find imageset on filesystem',
+	'NO_THEME'				=> 'Cannot find theme on filesystem',
+	'NO_TEMPLATE'			=> 'Cannot find template on filesystem',
+	'NO_STYLE'				=> 'Cannot find style on filesystem',
+	'NO_BASIS'				=> 'Do not use basis',
+	'NO_IMPORT'				=> 'Do not import',
+	'UPLOAD_WRONG_TYPE'		=> 'Only the following filetypes are accepted: %s',
+);
+
+// Search indexing
+$this->lang += array(
+	'SEARCH_INDEX_EXPLAIN' => 'phpBB2 uses a fulltext search system. This breaks down each post into seperate words and then, if the word does not already exist it stores those words in a table. In turn the post is linked to each word it contains in this table. This allows quick searching of large databases and helps reduce load on the server compared to most other methods.</p><p>However, if the tables get out of sync for some reason or you change the minimum, maximum or disallowed list of words the tables need updating. This facility allows you to do just that.</p><p>Please be aware this procedure can take a long time, particularly on large databases. During this period your forum will be automatically shut down to prevent people posting. You can cancel the procedure at any time. Please remember this is an intensive operation and should only be carried out when absolutely necessarily. Do not run this script too often!</p>',
+	'SEARCH_INDEX_CANCEL'		=> 'Re-indexing of search system has been cancelled. Please note this will result in searches returning incomplete results. You can re-index the posts again at any stage.',
+	'SEARCH_INDEXING_COMPLETE'	=> 'Re-indexing of search system has been completed. You can re-index the posts again at any stage.',
+	'START' => 'Start',
+	'STOP'	=> 'Stop',
+);
+
+// Admin logs
+$this->lang += array(
+	'ADMIN_LOGS_EXPLAIN'	=> 'This lists all the actions carried out by board administrators. You can sort by username, date, IP or action. If you have appropriate permissions you can also clear individual operations or the log as a whole.',
+	'MOD_LOGS_EXPLAIN'		=> 'This lists the actions carried out by board moderators, select a forum from the drop down list. You can sort by username, date, IP or action. If you have appropriate permissions you can also clear individual operations or the log as a whole.',
+	'CRITICAL_LOGS_EXPLAIN'	=> 'This lists the actions carried out by the board itself. These log provides you with information you are able to use for solving specific problems, for example non-delivery of emails. You can sort by username, date, IP or action. If you have appropriate permissions you can also clear individual operations or the log as a whole.',
+	'DISPLAY_LOG'			=> 'Display entries from previous',
+
+	'ALL_ENTRIES'	=> 'All entries',
+	'SORT_IP'		=> 'IP address',
+	'SORT_DATE'		=> 'Date',
+	'SORT_ACTION'	=> 'Log action',
+	'NO_ENTRIES'	=> 'No log entries for this period',
+);
+
+// Attachments
+$this->lang += array(
+	'ATTACHMENT_SETTINGS'			=> 'Attachment Settings',
+	'ATTACHMENT_SETTINGS_EXPLAIN'	=> 'Here you can configure the Main Settings for Attachments and the associated Special Categories.',
+
+	'UPLOAD_DIR'					=> 'Upload Directory',
+	'UPLOAD_DIR_EXPLAIN'			=> 'Storage Path for Attachments.',
+	'DISPLAY_ORDER'					=> 'Attachment Display Order',
+	'DISPLAY_ORDER_EXPLAIN'			=> 'Display attachments ordered by time.',
+	'ATTACH_MAX_FILESIZE'			=> 'Maximum filesize',
+	'ATTACH_MAX_FILESIZE_EXPLAIN'	=> 'Maximum size of each file, 0 is unlimited.',
+	'ATTACH_QUOTA'					=> 'Total attachment quota',
+	'ATTACH_QUOTA_EXPLAIN'			=> 'Maximum drive space available for attachments in total, 0 is unlimited.',
+	'ATTACH_MAX_PM_FILESIZE'		=> 'Maximum filesize messaging',
+	'ATTACH_MAX_PM_FILESIZE_EXPLAIN' => 'Maximum drive space available per user for private message attachments, 0 is unlimited.',
+	'MAX_ATTACHMENTS'				=> 'Max attachments per post',
+	'MAX_ATTACHMENTS_PM'			=> 'Max attachments per message',
+
+	'SETTINGS_CAT_IMAGES'		=> 'Image category settings',
+	'ASSIGNED_GROUP'			=> 'Assigned Group',
+	'DISPLAY_INLINED'			=> 'Display images inline',
+	'DISPLAY_INLINED_EXPLAIN'	=> 'If set to No image attachments will show as a link.',
+	'CREATE_THUMBNAIL'			=> 'Create thumbnail',
+	'CREATE_THUMBNAIL_EXPLAIN'	=> 'Create a thumbnail in all possible situations.',
+	'MIN_THUMB_FILESIZE'		=> 'Minimum thumbnail filesize',
+	'MIN_THUMB_FILESIZE_EXPLAIN' => 'Do not create a thumbnail for images smaller than this.',
+	'IMAGICK_PATH'				=> 'Imagemagick path',
+	'IMAGICK_PATH_EXPLAIN'		=> 'Full path to the imagemagick convert application, e.g. /usr/bin/',
+	'SEARCH_IMAGICK'			=> 'Search for Imagemagick',
+	'MAX_IMAGE_SIZE'			=> 'Maximum Image Dimensions',
+	'MAX_IMAGE_SIZE_EXPLAIN'	=> 'Maximum size of image attachments, 0px by 0px disables image attachments.',
+	'IMAGE_LINK_SIZE'			=> 'Image Link Dimensions',
+	'IMAGE_LINK_SIZE_EXPLAIN'	=> 'Display image attachment as link if image is larger than this, set to 0px by 0px to disable.',
+
+	'NO_UPLOAD_DIR'		=> 'The upload directory you specified does not exist.',
+	'UPLOAD_NOT_DIR'	=> 'The upload location you specified does not appear to be a directory.',
+	'NO_WRITE_UPLOAD'	=> 'The upload directory you specified cannot be written to. Please alter the permissions to allow the webserver to write to it.',
+
+	'ATTACHMENTS'				=> 'Attachments',
+	'ATTACH_EXTENSIONS_URL'		=> 'Extensions',
+	'ATTACH_EXT_GROUPS_URL'		=> 'Extension Groups',
+	'ATTACH_ORPHAN_URL'			=> 'Orphan Attachments',
+
+	'EXTENSION_GROUPS_TITLE'	=> 'Manage Extension Groups',
+	'EXTENSION_GROUPS_TITLE_EXPLAIN'	=> 'Here you can add, delete and modify your Extension Groups, you can disable Extension Groups, assign a special Category to them, change the download mechanism and you can define an Upload Icon which will be displayed in front of an Attachment belonging to the Group.',
+	'EXTENSION_GROUPS'			=> 'Extension Groups',
+	'EXTENSION_GROUP'			=> 'Extension Group',
+	'SPECIAL_CATEGORY'			=> 'Special Category',
+	'SPECIAL_CATEGORY_EXPLAIN'	=> 'Special Categories differ between the way presented within posts.',
+	'DOWNLOAD_MODE'				=> 'Download Mode',
+	'DOWNLOAD_MODE_EXPLAIN'		=> 'If you experience problems downloading files, set this to "physical", the user will be directed to the file directly. Do not set it to physical if not really needed, it discloses the filename.',
+	'UPLOAD_ICON'				=> 'Upload Icon',
+	'MAX_EXTGROUP_FILESIZE'		=> 'Maximum Filesize',
+	'ASSIGNED_EXTENSIONS'		=> 'Assigned Extensions',
+	'ADD_EXTENSION_GROUP'		=> 'Add Extension Group',
+	'EDIT_EXTENSION_GROUP'		=> 'Edit Extension Group',
+	'NO_EXT_GROUP_SPECIFIED'	=> 'No Extension Group specified',
+	'NO_EXT_GROUP_NAME'			=> 'No Group Name entered',
+	'SUCCESS_EXTENSION_GROUP_ADD'	=> 'Extension Group successfully added',
+	'SUCCESS_EXTENSION_GROUP_EDIT'	=> 'Extension Group successfully updated',
+	'EXTENSION_GROUP_EXIST'		=> 'The Extension Group %s already exist',
+	'EXTENSION_GROUP_DELETED'	=> 'Extension Group successfully deleted',
+	'ALLOWED_FORUMS'			=> 'Allowed Forums',
+	'ALLOWED_FORUMS_EXPLAIN'	=> 'Able to post the assigned extensions at the selected (or all if selected) forums',
+	'ALLOW_IN_PM'				=> 'Allowed in private messaging',
+	'ALLOW_ALL_FORUMS'			=> 'Allow All Forums',
+	'ALLOW_SELECTED_FORUMS'		=> 'Only Forums selected below',
+	'GO_TO_EXTENSIONS'			=> 'Go to Extension Management Screen',
+
+	'CAT_IMAGES'				=> 'Images',
+	'CAT_WM_FILES'				=> 'Win Media Streams',
+	'CAT_RM_FILES'				=> 'Real Media Streams',
+	'MODE_INLINE'				=> 'Inline',
+	'MODE_PHYSICAL'				=> 'Physical',
+	'NO_IMAGE'					=> 'No Image',
+
+	'MANAGE_EXTENSIONS'			=> 'Manage Extensions',
+	'MANAGE_EXTENSIONS_EXPLAIN' => 'Here you can manage your allowed extensions. To activate your Extensions, please refer to the extension groups management panel. We strongly recommend not to allow scripting extensions (such as php, php3, php4, phtml, pl, cgi, asp, aspx...)',
+	'ADD_EXTENSION'				=> 'Add extension',
+	'EXTENSIONS_UPDATED'		=> 'Extensions successfully updated',
+	'EXTENSION_EXIST'			=> 'The Extension %s already exist',
+	'NOT_ASSIGNED'				=> 'Not assigned',
+
+	'ORPHAN_ATTACHMENTS'		=> 'Orphan Attachments', // Title
+	'ORPHAN_ATTACHMENTS_EXPLAIN' => 'Here you are able to see files within the Attachments upload directory but not assigned to posts. This happens mostly if users are attaching files but not submitting the post. You are able to delete the files or attach them to existing posts. Attaching to posts requires a valid post id, you have to determine this id by yourself, this feature is mainly for those people wanting to upload files with another program and assigning those (mostly large) files to an existing post.',
+	'UPLOADING_FILES'			=> 'Uploading Files',
+	'UPLOADING_FILE_TO'			=> 'Uploading File "%1$s" to Post Number %2$d...',
+	'UPLOAD_DENIED_FORUM'		=> 'You do not have the permission to upload files to forum "%s"',
+	'ATTACH_POST_ID'			=> 'Post ID',
+	'ATTACH_TO_POST'			=> 'Attach file to post',
+	'SUCCESSFULLY_UPLOADED'		=> 'Succeessfully uploaded',
+	'ADMIN_UPLOAD_ERROR'		=> 'Errors while trying to attach file: %s',
+
+	'SECURE_DOWNLOADS'				=> 'Enable secure downloads',
+	'SECURE_DOWNLOADS_EXPLAIN'		=> 'With this option enabled, downloads are limited to IP\'s/hostnames you defined.',
+	'SECURE_ALLOW_DENY'				=> 'Allow/Deny List',
+	'SECURE_ALLOW_DENY_EXPLAIN'		=> 'Allow or Deny the list of addresses, this setting only applies to downloading files',
+	'ORDER_ALLOW_DENY'				=> 'Allow',
+	'ORDER_DENY_ALLOW'				=> 'Deny',
+	'SECURE_EMPTY_REFERER'			=> 'Allow empty referer',
+	'SECURE_EMPTY_REFERER_EXPLAIN'	=> 'Secure downloads are based on referers. Do you want to allow downloads for those ommitting the referer?',
+
+	'DEFINE_ALLOWED_IPS'			=> 'Define allowed IPs/Hostnames',
+	'DEFINE_DISALLOWED_IPS'			=> 'Define disallowed IPs/Hostnames',
+	'EXCLUDE_FROM_ALLOWED_IP'		=> 'Exclude IP from allowed IPs/Hostnames',
+	'EXCLUDE_FROM_DISALLOWED_IP'	=> 'Exclude IP from disallowed IPs/Hostnames',
+	'REMOVE_ALLOWED_IPS'			=> 'Remove or Un-exclude allowed IPs/Hostnames',
+	'REMOVE_DISALLOWED_IPS'			=> 'Remove or Un-exclude disallowed IPs/Hostnames',
+	'DOWNLOAD_ADD_IPS_EXPLAIN'		=> 'To specify several different IP\'s or hostnames enter each on a new line. To specify a range of IP addresses separate the start and end with a hyphen (-), to specify a wildcard use *',
+	'DOWNLOAD_REMOVE_IPS_EXPLAIN'	=> 'You can remove (or un-exclude) multiple IP addresses in one go using the appropriate combination of mouse and keyboard for your computer and browser. Excluded IP\'s have a blue background.',
+	'EXCLUDE_ENTERED_IP'			=> 'Enable this to exclude the entered IP/Hostname.',
+	'NO_IPS_DEFINED'				=> 'No IPs or Hostnames defined',
+	'SECURE_DOWNLOAD_UPDATE_SUCCESS'=> 'The IP list has been updated successfully',
+	'SECURE_DOWNLOAD_NOTICE'		=> 'Secure Downloads are not enabled. The settings below will be applied after enabling secure downloads.'
+);
+
+// Installation
+$this->lang += array(
+	'WELCOME_INSTALL'	=> 'Welcome to phpBB 2 Installation',
+
+	'INSTALL_REQUIRED'		=> 'Required',
+	'INSTALL_OPTIONAL'		=> 'Optional',
+	'UNAVAILABLE'	=> 'Unavailable',
+	'AVAILABLE'		=> 'Available',
+	'TESTS_PASSED'	=> 'Tests passed',
+	'TESTS_FAILED'	=> 'Tests failed',
+
+	'INSTALL_ADVICE'	=> 'Installation Compatibility',
+	'INSTALL_ADVICE_EXPLAIN'=> 'Before proceeding with full installation phpBB will carry out some tests on your server and basic install. Please ensure you read through the results thoroughly and do not proceed until all tests are passed.',
+	'PHP_AND_APPS'			=> 'PHP and Applications',
+	'INSTALL_REQUIRED_PHP'	=> 'You must be running at least PHP 4.1.0 with support for at least one compatible database. If no support modules are shown as available you should contact your hosting provider or review the relevant PHP installation documentation for advice. If "safe mode" is displayed below your PHP installation is running in that mode. This will impose limitations on remote administration and similar features.',
+	'INSTALL_OPTIONAL_PHP'	=> 'These modules or applications are optional, you do not need these to use phpBB 2.2. However if you do have them they will will enable greater functionality.',
+	'PHP_VERSION_REQD'	=> 'PHP version >= 4.1.0',
+	'PHP_SAFE_MODE'		=> 'Safe Mode',
+	'PHP_REQD_DB'		=> 'Supported Databases',
+	'DLL_FIREBIRD'		=> 'Firebird 1.5+',
+	'DLL_MYSQL'			=> 'MySQL 3.23.x/4.x',
+	'DLL_MYSQL4'		=> 'MySQL 4.1+',
+	'DLL_MYSQLI'		=> 'MySQL 4.1+ with MySQLi Extension',
+	'DLL_MSSQL'			=> 'MSSQL Server 2000',
+	'DLL_MSSQL-ODBC'	=> 'MSSQL Server 2000 via ODBC',
+	'DLL_ORACLE'		=> 'Oracle',
+	'DLL_POSTGRES'		=> 'PostgreSQL 7.x',
+	'DLL_SQLITE'		=> 'SQLite',
+	'DLL_MBSTRING'		=> 'Multi-byte character support',
+	'DLL_ZLIB'			=> 'zlib Compression support [ Visual confirmation, gz, .tar.gz, .zip ]',
+	'DLL_FTP'			=> 'Remote FTP support [ Installation ]',
+	'DLL_XML'			=> 'XML support [ Jabber ]',
+	'DLL_MHASH'			=> 'Mhash hashing support [ Jabber ]',
+	'APP_MAGICK'		=> 'Imagemagick support [ Attachments ]',
+	'NO_LOCATION'		=> 'Cannot determine location',
+	'DIRECTORIES_AND_FILES'		=> 'Directory and file setup',
+	'INSTALL_REQUIRED_FILES'	=> 'In order to function correctly phpBB needs to be able to access or write to certain files or directories. If you see "Not Found" you need to create the relevant file or directory. If you see "Unwriteable" you need to change the permissions on the file or directory to allow phpBB to write to it.',
+	'INSTALL_OPTIONAL_FILES'	=> 'These files, directories or permissions are optional. The installation routines will attempt to use various techniques to complete if they do not exist or cannot be written to. However, the presence of these files, directories or permissions will speed installation.',
+	'FILE_FOUND'		=> 'Found',
+	'FILE_NOT_FOUND'	=> 'Cannot find',
+	'FILE_WRITEABLE'	=> 'Writeable',
+	'FILE_UNWRITEABLE'	=> 'Unwriteable',
+	'INSTALL_NEXT'		=> 'Next stage',
+	'INSTALL_NEXT_PASS'	=> 'All the basic tests have been passed and you may proceed to the next stage of installation. If you have changed any permissions, modules, etc. and wish to re-test you can do so if you wish.',
+	'INSTALL_NEXT_FAIL'	=> 'Some tests failed and you should correct these problems before proceeding to the next stage. Failure to do so may result in an incomplete installation.',
+
+	'INITIAL_CONFIG'		=> 'Basic Configuration',
+	'INITIAL_CONFIG_EXPLAIN'=> 'Now that install has determined your server can run phpBB you need to supply some specific information. If you do not know how to connect to your database please contact your hosting provider (in the first instance) or  use the phpBB support forums. When entering data please ensure you check it thoroughly before continuing.',
+	'ADMIN_CONFIG'			=> 'Admin Configuration',
+	'DEFAULT_LANG'			=> 'Default board language',
+	'ADMIN_USERNAME'		=> 'Administrator username',
+	'CONTACT_EMAIL'			=> 'Contact email address',
+	'CONTACT_EMAIL_CONFIRM'	=> 'Confirm contact email',
+	'ADMIN_PASSWORD'		=> 'Administrator password',
+	'ADMIN_PASSWORD_CONFIRM'=> 'Confirm administrator password',
+	'DB_CONFIG'			=> 'Database Configuration',
+	'DBMS'				=> 'Database type',
+	'DB_HOST'			=> 'Database server hostname or DSN',
+	'DB_HOST_EXPLAIN'	=> 'DSN stands for Data Source Name and is relevant only for ODBC installs.',
+	'DB_PORT'			=> 'Database server port',
+	'DB_PORT_EXPLAIN'	=> 'Leave this blank unless you know the server operates on a non-standard port.',
+	'DB_NAME'			=> 'Database name',
+	'DB_USERNAME'		=> 'Database username',
+	'DB_PASSWORD'		=> 'Database password',
+	'TABLE_PREFIX'		=> 'Prefix for tables in database',
+	'DB_TEST'			=> 'Test Connection',
+	'INSTALL_DB_CONNECT'=> 'Successfull Connection',
+	'SERVER_CONFIG'			=> 'Server Configuration',
+	'SERVER_NAME'			=> 'Domain name',
+	'SERVER_NAME_EXPLAIN'	=> 'The domain name this board runs from',
+	'SCRIPT_PATH'			=> 'Script path',
+	'SCRIPT_PATH_EXPLAIN'	=> 'The path where phpBB2 is located relative to the domain name',
+	'SERVER_PORT'			=> 'Server port',
+	'SERVER_PORT_EXPLAIN'	=> 'The port your server is running on, usually 80, only change if different',
+	'CACHE_STORE'			=> 'Cache type',
+	'CACHE_STORE_EXPLAIN'	=> 'The physical location where data is cached, filesystem is prefered.',
+	'INSTALL_TEST'	=> 'Test Again',
+	'INSTALL_NEXT'	=> 'Next Stage',
+	'INSTALL_START'	=> 'Start Install',
+
+	'INSTALL_SEND_CONFIG'	=> 'Unfortunately phpBB could not write the configuration information directly to your config.php. This may be because the file does not exist or is not writeable. A number of options will be listed below enabling you to complete installation of config.php.',
+	'FTP_CONFIG'		=> 'Transfer config by FTP',
+	'FTP_CONFIG_EXPLAIN'=> 'phpBB has detected the presence of the ftp module on this server. You may attempt to install your config.php via this if you wish. You will need to supply the information listed below. Remember your username and password are those to your server! (ask your hosting provider for details if you are unsure what these are)',
+	'FTP_PATH'			=> 'FTP Path',
+	'FTP_PATH_EXPLAIN'	=> 'This is the path from your root directory to that of phpBB2, e.g. htdocs/phpBB2/',
+	'FTP_USERNAME'		=> 'FTP Username',
+	'FTP_PASSWORD'		=> 'FTP Password',
+	'FTP_UPLOAD'		=> 'Upload',
+	'DL_CONFIG'			=> 'Download config',
+	'DL_CONFIG_EXPLAIN'	=> 'You may download the complete config.php to your own PC. You will then need to upload the file manually, replacing any existing config.php in your phpBB 2.2 root directory. Please remember to upload the file in ASCII format (see your FTP application documentation if you are unsure how to achieve this). When you have uploaded the config.php please click "Done" to move to the next stage.',
+	'DL_DOWNLOAD'		=> 'Download',
+	'DL_DONE'			=> 'Done',
+	'RETRY_WRITE'			=> 'Retry writing config',
+	'RETRY_WRITE_EXPLAIN'	=> 'If you wish you can change the permissions on config.php to allow phpBB to write to it. Should you wish to do that you can click Retry below to try again. Remember to return the permissions on config.php after phpBB2 has finished installation.',
+	'CONFIG_RETRY'			=> 'Retry',
+
+	'INSTALL_CONGRATS'			=> 'Congratulations',
+	'INSTALL_CONGRATS_EXPLAIN'	=> 'You have now successfully installed phpBB 2.2. Clicking the button below will take you to your Administration Control Panel (ACP). Take some time to examine the options available to you. Remember that help is available online via the Userguide and the phpBB support forums, see the %sREADME%s for further information.',
+	'INSTALL_LOGIN'				=> 'Login',
+
+	'INST_ERR_FATAL'			=> 'Fatal installation error',
+	'INST_ERR_MISSING_DATA'		=> 'You must fill out all fields in this block',
+	'INST_ERR_NO_DB'			=> 'Cannot load the PHP module for the selected database type',
+	'INST_ERR_EMAIL_MISMATCH'	=> 'The emails you entered did not match.',
+	'INST_ERR_PASSWORD_MISMATCH'=> 'The passwords you entered did not match.',
+	'INST_ERR_DB_CONNECT'		=> 'Could not connect to the database, see error message below',
+	'INST_ERR_DB_NO_ERROR'		=> 'No error message given',
+	'INST_ERR_PREFIX'			=> 'Tables with the specified prefix already exist, please choose an alternative.',
+	'INST_ERR_FATAL_DB'			=> 'A fatal and unrecoverable database error has occured. This may be because the specified user does not have appropriate rights to CREATE TABLES or INSERT data, etc. Further information may be given below. Please contact your hosting provider in the first instance or the support forums of phpBB for further assistance.',
+	'INST_ERR_FTP_PATH'			=> 'Could not change to the given directory, please check the path.',
+	'INST_ERR_FTP_LOGIN'		=> 'Could not login to ftp server, check your username and password',
+);
+
+// Bots
+$this->lang += array(
+	'BOTS_EXPLAIN'	=> 'Bots or crawlers are automated agents most commonly used by search engines to update their databases. Since they rarely make proper use of sessions they can distort visitor counts, increase load and sometimes fail to index sites correctly. Here you can define a special type of user to overcome these problems.',
+
+	'BOT_NAME'			=> 'Bot name',
+	'BOT_LAST_VISIT'	=> 'Last visit',
+	'BOT_NEVER'			=> 'Never',
+	'BOT_ACTIVATE'		=> 'Activate',
+	'BOT_DEACTIVATE'	=> 'Deactivate',
+	'BOT_ADD'			=> 'Add bot',
+
+	'BOT_EDIT'			=> 'Edit bots',
+	'BOT_EDIT_EXPLAIN'	=> 'Here you can add or edit an existing bot entry. You may define an agent string and/or one or more IP addresses (or range of addresses) to match. Be careful when defining matching agent strings or addresses. You may also specify a style and language that the bot will view the board using. This may allow you to reduce bandwidth use by setting a simple style for bots. Remember to set appropriate permissions for the special Bot usergroup.',
+	'BOT_NAME_EXPLAIN'	=> 'Used only for your own information.',
+	'BOT_LANG'			=> 'Bot language',
+	'BOT_LANG_EXPLAIN'	=> 'The language presented to the bot as it browses.',
+	'BOT_STYLE'			=> 'Bot style',
+	'BOT_STYLE_EXPLAIN'	=> 'The style used for the board by the bot.',
+	'BOT_VIS'			=> 'Bot visible',
+	'BOT_VIS_EXPLAIN'	=> 'Allow bot to be seen by all users in online lists.',
+	'BOT_ACTIVE'		=> 'Bot active',
+	'BOT_AGENT'			=> 'Agent match',
+	'BOT_AGENT_EXPLAIN'	=> 'A string matching the bots browser agent, partial matches are allowed.',
+	'BOT_IP'			=> 'Bot IP address',
+	'BOT_IP_EXPLAIN'	=> 'Partial matches are allowed, seperate addresses with an apostrophe. A single hostname may be entered instead of an IP.',
+
+	'BOT_ADDED'		=> 'New bot successfully added',
+	'BOT_UPDATED'	=> 'Existing bot updated successfully',
+	'BOT_DELETED'	=> 'Bot deleted successfully',
+
+	'NO_BOT'	=> 'Found no bot with the specified ID',
+	'ERR_BOT_NO_MATCHES'	=> 'You must supply at least one of an agent or IP for this bot match.',
+	'ERR_BOT_NO_IP'			=> 'The IP addresses you supplied were invalid or the hostname could not be resolved.',
+);
+
+// Custom profile fields
+$this->lang += array(
+	'FIELD_INT'		=> 'Numbers',
+	'FIELD_STRING'	=> 'Single Textfield',
+	'FIELD_TEXT'	=> 'Textarea',
+	'FIELD_BOOL'	=> 'Boolean (Yes/No)',
+	'FIELD_DROPDOWN'=> 'Dropdown Box',
+	'FIELD_DATE'	=> 'Date',
+
+	'NO_FIELD_TYPE'				=> 'No Field type specified',
+	'FIRST_OPTION'				=> 'First Option',
+	'SECOND_OPTION'				=> 'Second Option',
+	'EMPTY_FIELD_IDENT'			=> 'Empty field name',
+	'INVALID_CHARS_FIELD_IDENT'	=> 'Field name can only contain lowercase a-z and _',
+	'EMPTY_USER_FIELD_NAME'		=> 'Empty Field Name presented to the user',
+
+	'PROFILE_BASIC_OPTIONS'		=> 'Basic Options',
+	'PROFILE_TYPE_OPTIONS'		=> 'Profile type specific options',
+	'PROFILE_LANG_OPTIONS'		=> 'Language specific options',
+
+	'STEP_1_TITLE_CREATE'		=> 'Add Profile Field',
+	'STEP_1_TITLE_EDIT'			=> 'Edit Profile Field',
+
+	'STEP_1_EXPLAIN_CREATE'		=> 'Here you can enter the first basic parameters of your new profile field. These informations are needed for the second step where you are able to set remaining options and where you are able to preview and tweak your profile field further.',
+	'STEP_1_EXPLAIN_EDIT'		=> 'Here you can change the basic parameters of your profile field. The relevant options are re-calculated within the second step, where you are able to preview and test the changed settings.',
+
+	'STEP_2_TITLE_CREATE'		=> 'Profile type specific options',
+	'STEP_2_TITLE_EDIT'			=> 'Profile type specific options',
+
+	'STEP_2_EXPLAIN_CREATE'		=> 'Here you are able to define some common options. Further you are able to preview the field you generated, as the user will see it. Play around with it until you are satisfied as how the field behaves.',
+	'STEP_2_EXPLAIN_EDIT'		=> 'Here you are able to change some common options. Further you are able to preview the changed field, as the user will see it. Play around with it until you are satisfied as how the field behaves.<br /><b>Please note that changes to profile fields will not affect existing profile fields entered by your users.</b>',
+
+	'STEP_3_TITLE_CREATE'		=> 'Remaining Language Definitions',
+	'STEP_3_TITLE_EDIT'			=> 'Language Definitions',
+
+	'STEP_3_EXPLAIN_CREATE'		=> 'Since you have more than one board language installed, you have to fill out the remaining language items too. The profile field will work with the default language enabled, you are able to fill out the remaining language items later too.',
+	'STEP_3_EXPLAIN_EDIT'		=> 'Since you have more than one board language installed, you now can change or add the remaining language items too. The profile field will work with the default language enabled.',
+
+	'ROWS'						=> 'Rows',
+	'COLUMNS'					=> 'Columns',
+	'UPDATE_PREVIEW'			=> 'Update Preview',
+	'PREVIEW_PROFILE_FIELD'		=> 'Preview Profile Field',
+	'EVERYTHING_OK'				=> 'Everything OK',
+
+	'STRING_DEFAULT_VALUE_EXPLAIN'	=> 'Enter a default phrase to be displayed, a default value. Leave empty if you want to show it empty at the first place.',
+	'TEXT_DEFAULT_VALUE_EXPLAIN'=> 'Enter a default text to be displayed, a default value. Leave empty if you want to show it empty at the first place.',
+	'BOOL_ENTRIES_EXPLAIN'		=> 'Enter your options now',
+	'DROPDOWN_ENTRIES_EXPLAIN'	=> 'Enter your options now, every option in one line',
+
+	'REQUIRED_FIELD'			=> 'Required Field',
+	'REQUIRED_FIELD_EXPLAIN'	=> 'Force profile field to be filled out or specified by user',
+	'DISPLAY_AT_REGISTRATION'	=> 'Display at registration screen',
+	'HIDE_PROFILE_FIELD'		=> 'Hide Profile Field',
+	'HIDE_PROFILE_FIELD_EXPLAIN'=> 'Only Administrators and Moderators are able to see/fill out this profile field',
+	'EXCLUDE_FROM_VIEW'			=> 'Do not display profile field',
+	'EXCLUDE_FROM_VIEW_EXPLAIN'	=> 'The profile field will not be shown on viewtopic/viewprofile/memberlist/etc.',
+
+	'ADDED_PROFILE_FIELD'		=> 'Successfully added custom profile field',
+	'CREATE_NEW_FIELD'			=> 'Create New Field',
+	'REMOVED_PROFILE_FIELD'		=> 'Successfully removed profile field.',
+	'CONFIRM_DELETE_PROFILE_FIELD'	=> 'Are you sure you want to delete this profile field?',
+	'PROFILE_FIELD_ACTIVATED'	=> 'Profile field successfully activated',
+	'PROFILE_FIELD_DEACTIVATED'	=> 'Profile field successfully deactivated',
+	'CHANGED_PROFILE_FIELD'		=> 'Successfully changed profile field',
+
+	'LOG_CREATE_PROFILE_FIELD'		=> '<b>Profile field added</b><br />&#187; %s',
+	'LOG_EDIT_PROFILE_FIELD'		=> '<b>Profile field changed</b><br />&#187; %s',
+	'LOG_ACTIVATE_PROFILE_FIELD'	=> '<b>Profile field activated</b><br />&#187; %s',
+	'LOG_DEACTIVATE_PROFILE_FIELD'	=> '<b>Profile field deactivated</b><br />&#187; %s',
+	'LOG_REMOVED_PROFILE_FIELD'		=> '<b>Profile field removed</b><br />&#187; %s',
+
+	'CHARS_ANY'		=> 'Any character',
+	'NUMBERS_ONLY'	=> 'Only numbers (0-9)',
+	'ALPHA_ONLY'		=> 'Alphanumeric only',
+	'ALPHA_SPACERS'	=> 'Alphanumeric and spacers',
+
+	'FIELD_TYPE'			=> 'Field Type',
+	'FIELD_TYPE_EXPLAIN'	=> 'You are not able to change the field type later.',
+	'FIELD_IDENT'			=> 'Field Name',
+	'FIELD_IDENT_EXPLAIN'	=> 'The Field Name is a name for you to identify the profile field, it is not displayed to the user.',
+	'LANG_SPECIFIC_OPTIONS'	=> 'Language specific options [<b>%s</b>]',
+	'USER_FIELD_NAME'		=> 'Field Name presented to the user',
+	'FIELD_DESCRIPTION'		=> 'Field Description',
+	'FIELD_DESCRIPTION_EXPLAIN'	=> 'The Explanation for this field presented to the user',
+
+	'CP_LANG_NAME'			=> 'Field Name presented to the user',
+	'CP_LANG_EXPLAIN'		=> 'Field Description',
+	'CP_LANG_EXPLAIN_EXPLAIN'	=> 'The Explanation for this field presented to the user',
+	'CP_LANG_DEFAULT_VALUE'	=> 'Default Value',
+	'CP_LANG_OPTIONS'		=> 'Options',
+
+	'FIELD_LENGTH'			=> 'Length of input box',
+	'MIN_FIELD_CHARS'		=> 'Minimum number of characters',
+	'MAX_FIELD_CHARS'		=> 'Maximum number of characters',
+	'MIN_FIELD_NUMBER'		=> 'Lowest allowed number',
+	'MAX_FIELD_NUMBER'		=> 'Highest allowed number',
+	'DEFAULT_VALUE'			=> 'Default Value',
+	'FIELD_VALIDATION'		=> 'Field Validation',
+	'ENTRIES'				=> 'Entries',
+	'BOOL_TYPE_EXPLAIN'		=> 'Define the Type, either a checkbox or radio buttons',
+	'RADIO_BUTTONS'			=> 'Radio Buttons',
+	'CHECKBOX'				=> 'Checkbox',
+	'NO_VALUE_OPTION'		=> 'Option equal to non entered value',
+	'NO_VALUE_OPTION_EXPLAIN'	=> 'Value for a non-entry. If the field is required, the user gets an error if he choose the option selected here',
+	'ALWAYS_TODAY'			=> 'Always the current date',
+
+	'DEFAULT_ISO_LANGUAGE'	=> 'Default Language [%s]',
+	'ISO_LANGUAGE'			=> 'Language [%s]',
+
+	'NO_FIELD_ID'			=> 'No field id specified',
+	'FIELD_NOT_FOUND'		=> 'Profile field not found',
+	'NO_FIELD_ENTRIES'		=> 'No Entries defined',
+);
+
+// Language Packs
+$this->lang += array(
+	'LANGUAGE_PACKS_EXPLAIN'	=> 'Here you are able to install/remove language packs',
+	'LANGUAGE_PACK_NAME'		=> 'Name',
+	'LANGUAGE_PACK_LOCALNAME'	=> 'Local name',
+	'LANGUAGE_PACK_ISO'			=> 'ISO',
+	'LANGUAGE_PACK_USED_BY'		=> 'Used by',
+	'INSTALLED_LANGUAGE_PACKS'	=> 'Installed language packs',
+	'UNINSTALLED_LANGUAGE_PACKS'=> 'Uninstalled language packs',
+	'NO_UNINSTALLED_LANGUAGE_PACKS'	=> 'No uninstalled language packs',
+	'NO_LANG_ID'				=> 'You haven\'t specified a language pack',
+	'NO_REMOVE_DEFAULT_LANG'	=> 'You are not able to remove the default language pack.<br />If you want to remove this language pack, change your boards default language first.',
+	'LANGUAGE_PACK_DELETED'		=> 'The language pack <b>%s</b> has been removed successfully. All users using this language have been resetted to the boards default language.',
+	'LANGUAGE_PACK_NOT_EXIST'	=> 'The selected language pack does not exist.',
+	'LANGUAGE_PACK_ALREADY_INSTALLED'	=> 'This language pack is already installed.',
+	'INVALID_LANGUAGE_PACK'		=> 'The selected language pack seems to be not valid. Please verify the language pack and upload it again if necessary.',
+	'LANGUAGE_PACK_INSTALLED'	=> 'The language pack <b>%s</b> has been successfully installed.',
+	'LANGUAGE_PACK_DETAILS'		=> 'Language Pack Details',
+	'WRONG_LANGUAGE_FILE'		=> 'Selected language file is invalid',
+	'LANGUAGE_DETAILS_UPDATED'	=> 'Language details successfully updated',
+
+	'LANG_ENGLISH_NAME'			=> 'English name',
+	'LANG_LOCAL_NAME'			=> 'Local name',
+	'LANG_ISO_CODE'				=> 'ISO Code',
+	'LANG_AUTHOR'				=> 'Language Pack Author',
+
+	'MISSING_LANGUAGE_FILE'		=> 'Missing Language File: <span style="color:red">%s</span>',
+	'THOSE_MISSING_LANG_FILES'	=> 'The following language files are missing from the %s language folder',
+	'MISSING_LANG_VARIABLES'	=> 'Missing Language Variables',
+	'THOSE_MISSING_LANG_VARIABLES'	=> 'The following language variables are missing from the <b>%s</b> language pack',
+
+	'LANGUAGE_KEY'				=> 'Language Key',
+	'LANGUAGE_VARIABLE'			=> 'Language Variable',
+	'LANGUAGE_FILES'			=> 'Language Files',
+	'HELP_FILES'				=> 'Help Files',
+	'EMAIL_TEMPLATES'			=> 'Email Templates',
+
+	'LANGUAGE_ENTRIES'			=> 'Language Entries',
+	'LANGUAGE_ENTRIES_EXPLAIN'	=> 'Here you are able to change existing language pack entries or not already translated ones.<br /><b>Note:</b> Once you changed a language file, the changes will be stored within a seperate folder for you to download. The changes will not be seen by your users until you replace the original language files at your webspace (by uploading them).',
+	'REMOVE_FROM_STORAGE_FOLDER'=> 'Remove from storage folder',
+	'FILE_CONTENTS'				=> 'File Contents',
+	'FILE_FROM_STORAGE'			=> 'File from storage folder',
+	'SUBMIT_AND_DOWNLOAD'		=> 'Submit and Download File',
+	'SELECT_DOWNLOAD_FORMAT'	=> 'Select download format',
+	'DOWNLOAD_AS'				=> 'Download as',
+	'DOWNLOAD'					=> 'Download',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/admin_common.php
===================================================================
--- cms/trunk/modules/forums/language/admin_common.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/admin_common.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,599 @@
+<?php
+/** 
+*
+* acp common [English]
+*
+* @package language
+* @version $Id: common.php,v 1.57 2006/08/10 13:33:06 naderman Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+// DEVELOPERS PLEASE NOTE
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+// Common
+$this->lang += array(
+	'ACP_ADMINISTRATORS'		=> 'Administrators',
+	'ACP_ADMIN_LOGS'			=> 'Admin Log',
+	'ACP_ADMIN_ROLES'			=> 'Admin Roles',
+	'ACP_ATTACHMENTS'			=> 'Attachments',
+	'ACP_ATTACHMENT_SETTINGS'	=> 'Attachment Settings',
+	'ACP_AUTH_SETTINGS'			=> 'Authentication',
+	'ACP_AUTOMATION'			=> 'Automation',
+	'ACP_AVATAR_SETTINGS'		=> 'Avatar Settings',
+
+	'ACP_BACKUP'				=> 'Backup',
+	'ACP_BAN'					=> 'Banning',
+	'ACP_BAN_EMAILS'			=> 'Ban Emails',
+	'ACP_BAN_IPS'				=> 'Ban IPs',
+	'ACP_BAN_USERNAMES'			=> 'Ban Usernames',
+	'ACP_BASIC_PERMISSIONS'		=> 'Basic Permissions',
+	'ACP_BBCODES'				=> 'BBCodes',
+	'ACP_BOARD_CONFIGURATION'	=> 'Board Configuration',
+	'ACP_BOARD_DEFAULTS'		=> 'Board Defaults',
+	'ACP_BOARD_FEATURES'		=> 'Board Features',
+	'ACP_BOARD_MANAGEMENT'		=> 'Board Management',
+	'ACP_BOARD_SETTINGS'		=> 'Board Settings',
+	'ACP_BOTS'					=> 'Spiders/Robots',
+	
+	'ACP_CAPTCHA'				=> 'CAPTCHA',
+
+	'ACP_CAT_DATABASE'			=> 'Database',
+	'ACP_CAT_DOT_MODS'			=> '.Mods',
+	'ACP_CAT_FORUMS'			=> 'Forums',
+	'ACP_CAT_GENERAL'			=> 'General',
+	'ACP_CAT_MAINTENANCE'		=> 'Maintenance',
+	'ACP_CAT_PERMISSIONS'		=> 'Permissions',
+	'ACP_CAT_POSTING'			=> 'Posting',
+	'ACP_CAT_STYLES'			=> 'Styles',
+	'ACP_CAT_SYSTEM'			=> 'System',
+	'ACP_CAT_USERGROUP'			=> 'Users and Groups',
+	'ACP_CAT_USERS'				=> 'Users',
+	'ACP_CLIENT_COMMUNICATION'	=> 'Client Communication',
+	'ACP_COOKIE_SETTINGS'		=> 'Cookie Settings',
+	'ACP_CRITICAL_LOGS'			=> 'Error Log',
+	'ACP_CUSTOM_PROFILE_FIELDS'	=> 'Custom Profile Fields',
+	
+	'ACP_DATABASE'				=> 'Database Management',
+	'ACP_DISALLOW'				=> 'Disallow',
+	'ACP_DISALLOW_USERNAMES'	=> 'Disallow Usernames',
+	
+	'ACP_EMAIL_SETTINGS'		=> 'Email Settings',
+	'ACP_EXTENSION_GROUPS'		=> 'Manage Extension Groups',
+	
+	'ACP_FORUM_BASED_PERMISSIONS'	=> 'Forum Based Permissions',
+	'ACP_FORUM_LOGS'				=> 'Forum Logs',
+	'ACP_FORUM_MANAGEMENT'			=> 'Forum Management',
+	'ACP_FORUM_MODERATORS'			=> 'Forum Moderators',
+	'ACP_FORUM_PERMISSIONS'			=> 'Forum Permissions',
+	'ACP_FORUM_ROLES'				=> 'Forum Roles',
+
+	'ACP_GENERAL_CONFIGURATION'		=> 'General Configuration',
+	'ACP_GENERAL_TASKS'				=> 'General Tasks',
+	'ACP_GLOBAL_MODERATORS'			=> 'Global Moderators',
+	'ACP_GLOBAL_PERMISSIONS'		=> 'Global Permissions',
+	'ACP_GROUPS'					=> 'Groups',
+	'ACP_GROUPS_FORUM_PERMISSIONS'	=> 'Groups Forum Permissions',
+	'ACP_GROUPS_MANAGE'				=> 'Manage Groups',
+	'ACP_GROUPS_MANAGEMENT'			=> 'Group Management',
+	'ACP_GROUPS_PERMISSIONS'		=> 'Groups Permissions',
+	
+	'ACP_ICONS'					=> 'Topic Icons',
+	'ACP_ICONS_SMILIES'			=> 'Topic Icons/Smilies',
+	'ACP_IMAGESETS'				=> 'Imagesets',
+	'ACP_INDEX'					=> 'Admin index',
+	
+	'ACP_JABBER_SETTINGS'		=> 'Jabber Settings',
+	
+	'ACP_LANGUAGE'				=> 'Language Management',
+	'ACP_LANGUAGE_PACKS'		=> 'Language Packs',
+	'ACP_LOAD_SETTINGS'			=> 'Load Settings',
+	'ACP_LOGGING'				=> 'Logging',
+	
+	'ACP_MAIN'					=> 'Admin index',
+	'ACP_MANAGE_EXTENSIONS'		=> 'Manage Extensions',
+	'ACP_MANAGE_FORUMS'			=> 'Manage Forums',
+	'ACP_MANAGE_RANKS'			=> 'Manage Ranks',
+	'ACP_MANAGE_REASONS'		=> 'Manage Report/Denial Reasons',
+	'ACP_MANAGE_USERS'			=> 'Manage Users',
+	'ACP_MASS_EMAIL'			=> 'Mass Email',
+	'ACP_MESSAGES'				=> 'Messages',
+	'ACP_MESSAGE_SETTINGS'		=> 'Private Message Settings',
+	'ACP_MODULE_MANAGEMENT'		=> 'Module Management',
+	'ACP_MOD_LOGS'				=> 'Moderator Log',
+	'ACP_MOD_ROLES'				=> 'Moderator Roles',
+	
+	'ACP_ORPHAN_ATTACHMENTS'	=> 'Orphan Attachments',
+	
+	'ACP_PERMISSIONS'			=> 'Permissions',
+	'ACP_PERMISSION_MASKS'		=> 'Permission Masks',
+	'ACP_PERMISSION_ROLES'		=> 'Permission Roles',
+	'ACP_PERMISSION_SETTINGS'	=> 'Permission Settings',
+	'ACP_PERMISSION_TRACE'		=> 'Permission Trace',
+	'ACP_PHP_INFO'				=> 'PHP Information',
+	'ACP_POST_SETTINGS'			=> 'Post Settings',
+	'ACP_PRUNE_FORUMS'			=> 'Prune Forums',
+	'ACP_PRUNE_USERS'			=> 'Prune Users',
+	'ACP_PRUNING'				=> 'Pruning',
+	
+	'ACP_QUICK_ACCESS'			=> 'Quick Access',
+	
+	'ACP_RANKS'					=> 'Ranks',
+	'ACP_REASONS'				=> 'Report/Denial Reasons',
+	'ACP_REGISTER_SETTINGS'		=> 'User Registration Settings',
+
+	'ACP_RESTORE'				=> 'Restore',
+
+	'ACP_SEARCH'				=> 'Search Configuration',
+	'ACP_SEARCH_INDEX'			=> 'Search Index',
+	'ACP_SEARCH_SETTINGS'		=> 'Search Settings',
+
+	'ACP_SECURITY_SETTINGS'		=> 'Security Settings',
+	'ACP_SERVER_CONFIGURATION'	=> 'Server Configuration',
+	'ACP_SERVER_SETTINGS'		=> 'Server Settings',
+	'ACP_SIGNATURE_SETTINGS'	=> 'Signature Settings',
+	'ACP_SMILIES'				=> 'Smilies',
+	'ACP_SPECIAL_PERMISSIONS'	=> 'Special Permissions',
+	'ACP_STYLE_COMPONENTS'		=> 'Style Components',
+	'ACP_STYLE_MANAGEMENT'		=> 'Style Management',
+	'ACP_STYLES'				=> 'Styles',
+	
+	'ACP_TEMPLATES'				=> 'Templates',
+	'ACP_THEMES'				=> 'Themes',
+	
+	'ACP_UPDATE'					=> 'Updating',
+	'ACP_USERS_FORUM_PERMISSIONS'	=> 'Users Forum Permissions',
+	'ACP_USERS_LOGS'				=> 'User Logs',
+	'ACP_USERS_PERMISSIONS'			=> 'Users Permissions',
+	'ACP_USER_ATTACH'				=> 'Attachments',
+	'ACP_USER_AVATAR'				=> 'Avatar',
+	'ACP_USER_FEEDBACK'				=> 'Feedback',
+	'ACP_USER_GROUPS'				=> 'Groups',
+	'ACP_USER_MANAGEMENT'			=> 'User Management',
+	'ACP_USER_OVERVIEW'				=> 'Overview',
+	'ACP_USER_PERM'					=> 'Permissions',
+	'ACP_USER_PREFS'				=> 'Preferences',
+	'ACP_USER_PROFILE'				=> 'Profile',
+	'ACP_USER_RANK'					=> 'Rank',
+	'ACP_USER_ROLES'				=> 'User Roles',
+	'ACP_USER_SECURITY'				=> 'User Security',
+	'ACP_USER_SIG'					=> 'Signature',
+
+	'ACP_VC_SETTINGS'					=> 'Visual Confirmation Settings',
+	'ACP_VC_CAPTCHA_DISPLAY'			=> 'CAPTCHA Image Preview',
+	'ACP_VERSION_CHECK'					=> 'Check for Updates',
+	'ACP_VIEW_ADMIN_PERMISSIONS'		=> 'View Admin Permissions',
+	'ACP_VIEW_FORUM_MOD_PERMISSIONS'	=> 'View Forum Moderator Permissions',
+	'ACP_VIEW_FORUM_PERMISSIONS'		=> 'View Forum Permissions',
+	'ACP_VIEW_GLOBAL_MOD_PERMISSIONS'	=> 'View Global Moderator Permissions',
+	'ACP_VIEW_USER_PERMISSIONS'			=> 'View User Permissions',
+	
+	'ACP_WORDS'					=> 'Word Censoring',
+
+	'ACTION'				=> 'Action',
+	'ACTIONS'				=> 'Actions',
+	'ACTIVATE'				=> 'Activate',
+	'ADD'					=> 'Add',
+	'ADMIN'					=> 'Administration',
+	'ADMIN_INDEX'			=> 'Admin Index',
+	'ADMIN_PANEL'			=> 'Administration Control Panel',
+
+	'BACK'					=> 'Back',
+
+	'COLOUR_SWATCH'			=> 'Web-safe colour swatch',
+	'CONFIG_UPDATED'		=> 'Configuration updated successfully',
+	'CONFIRM_OPERATION'		=> 'Are you sure you wish to carry out this operation?',
+
+	'DEACTIVATE'				=> 'Deactivate',
+	'DIMENSIONS'				=> 'Dimensions',
+	'DISABLE'					=> 'Disable',
+	'DOWNLOAD'					=> 'Download',
+	'DOWNLOAD_AS'				=> 'Download as',
+	'DOWNLOAD_STORE'			=> 'Download or Store file',
+	'DOWNLOAD_STORE_EXPLAIN'	=> 'You may directly download the file or save it in your store/ folder.',
+
+	'EDIT'					=> 'Edit',
+	'ENABLE'				=> 'Enable',
+	'EXPORT_DOWNLOAD'		=> 'Download',
+	'EXPORT_STORE'			=> 'Store',
+
+	'FORUM_INDEX'			=> 'Forum Index',
+
+	'GENERAL_OPTIONS'		=> 'General Options',
+	'GENERAL_SETTINGS'		=> 'General Settings',
+	'GLOBAL_MASK'			=> 'Global Permission Mask',
+
+	'INSTALL'				=> 'Install',
+	'IP'					=> 'User IP',
+	'IP_HOSTNAME'			=> 'IP addresses or hostnames',
+
+	'LOGGED_IN_AS'			=> 'You are logged in as:',
+	'LOGIN_ADMIN'			=> 'To administer the board you must be an authenticated user.',
+	'LOGIN_ADMIN_CONFIRM'	=> 'To administer the board you must re-authenticate yourself.',
+	'LOGIN_ADMIN_SUCCESS'	=> 'You have successfully authenticated and will now be redirected to the Administration Control Panel',
+	'LOOK_UP_FORUM'			=> 'Select a Forum',
+
+	'MANAGE'				=> 'Manage',
+	'MOVE_DOWN'				=> 'Move Down',
+	'MOVE_UP'				=> 'Move Up',
+
+	'NOTIFY'				=> 'Notification',
+	'NO_ADMIN'				=> 'You are not authorised to administer this board.',
+	'NO_EMAILS_DEFINED'		=> 'No valid email addresses found',
+
+	'OFF'					=> 'OFF',
+	'ON'					=> 'ON',
+
+	'PARSE_BBCODE'			=> 'Parse BBCode',
+	'PARSE_SMILIES'			=> 'Parse Smilies',
+	'PARSE_URLS'			=> 'Parse Links',
+	'PROCEED_TO_ACP'		=> '%sProceed to the ACP%s',
+	'REMIND'				=> 'Remind',
+	'REORDER'				=> 'Reorder',
+	'RESYNC'				=> 'Sync',
+	'RETURN_TO'				=> 'Return to ...',
+
+	'SELECT_ANONYMOUS'		=> 'Select Anonymous User',
+	'SELECT_OPTION'			=> 'Select option',
+
+	'UCP'					=> 'User Control Panel',
+	'USERNAMES_EXPLAIN'		=> 'Place each username on a seperate line',
+	'USER_CONTROL_PANEL'	=> 'User Control Panel',
+
+	'WARNING'				=> 'Warning',
+
+	'DEBUG_EXTRA_WARNING'	=> 'The DEBUG_EXTRA constant is defined which is only meant for development purposes by the developers.<br />The board is running additional code to display sql reports, which slows down the board in a significant manner. Additionally sql errors are always displayed with a full backtrace to all users instead of displaying it solely to administrators, which is the default setting.<br /><br />With this said, please be aware that you are currently running your installation in <b>Debug Mode</b> and should you take this board live, please remove the constant from the config file.',
+);
+
+// PHP info
+$this->lang += array(
+	'ACP_PHP_INFO_EXPLAIN'	=> 'This page lists information on the version of PHP installed on this server. It includes details of loaded modules, available variables and default settings. This information may be useful when diagnosing problems. Please be aware that some hosting companies will limit what information is displayed here for security reasons. You are advised to not give out any details on this page except when asked by support or other Team Member on the support forums.',
+);
+
+// Logs
+$this->lang += array(
+	'ACP_ADMIN_LOGS_EXPLAIN'	=> 'This lists all the actions carried out by board administrators. You can sort by username, date, IP or action. If you have appropriate permissions you can also clear individual operations or the log as a whole.',
+	'ACP_CRITICAL_LOGS_EXPLAIN'	=> 'This lists the actions carried out by the board itself. These log provides you with information you are able to use for solving specific problems, for example non-delivery of emails. You can sort by username, date, IP or action. If you have appropriate permissions you can also clear individual operations or the log as a whole.',
+	'ACP_MOD_LOGS_EXPLAIN'		=> 'This lists the actions carried out by board moderators, select a forum from the drop down list. You can sort by username, date, IP or action. If you have appropriate permissions you can also clear individual operations or the log as a whole.',
+	'ACP_USERS_LOGS_EXPLAIN'	=> 'This lists all actions carried out by users or on users.',
+	'ALL_ENTRIES'				=> 'All entries',
+
+	'DISPLAY_LOG'	=> 'Display entries from previous',
+
+	'NO_ENTRIES'	=> 'No log entries for this period',
+
+	'SORT_IP'		=> 'IP address',
+	'SORT_DATE'		=> 'Date',
+	'SORT_ACTION'	=> 'Log action',
+);
+
+// Index page
+$this->lang += array(
+	'ADMIN_INTRO'				=> 'Thank you for choosing phpBB as your forum solution. This screen will give you a quick overview of all the various statistics of your board. The links on the left hand side of this screen allow you to control every aspect of your forum experience. Each page will have instructions on how to use the tools.',
+	'ADMIN_LOG'					=> 'Logged administrator actions',
+	'ADMIN_LOG_INDEX_EXPLAIN'	=> 'This gives an overview of the last five actions carried out by board administrators. A full copy of the log can be viewed from the appropriate menu item or following the link below.',
+	'AVATAR_DIR_SIZE'			=> 'Avatar directory size',
+
+	'BOARD_STARTED'		=> 'Board started',
+
+	'DATABASE_SERVER_INFO'	=> 'Database server',
+	'DATABASE_SIZE'			=> 'Database size',
+
+	'FILES_PER_DAY'		=> 'Attachments per day',
+	'FORUM_STATS'		=> 'Forum Statistics',
+
+	'GZIP_COMPRESSION'	=> 'Gzip compression',
+
+	'INACTIVE_USERS'			=> 'Inactive Users',
+	'INACTIVE_USERS_EXPLAIN'	=> 'This is a list of users who have registered but whos accounts are inactive. You can activate, delete or remind (by sending an email) these users if you wish.',
+
+	'NO_INACTIVE_USERS'	=> 'No inactive users',
+	'NOT_AVAILABLE'		=> 'Not available',
+	'NUMBER_FILES'		=> 'Number of Attachments',
+	'NUMBER_POSTS'		=> 'Number of posts',
+	'NUMBER_TOPICS'		=> 'Number of topics',
+	'NUMBER_USERS'		=> 'Number of users',
+
+	'POSTS_PER_DAY'		=> 'Posts per day',
+
+	'RESET_DATE'			=> 'Reset Date',
+	'RESET_ONLINE'			=> 'Reset Online',
+	'RESYNC_POSTCOUNTS'		=> 'Resync Postcounts',
+	'RESYNC_POST_MARKING'	=> 'Resync dotted topics',
+	'RESYNC_STATS'			=> 'Resync Stats',
+
+	'STATISTIC'			=> 'Statistic',
+
+	'TOPICS_PER_DAY'	=> 'Topics per day',
+
+	'UPLOAD_DIR_SIZE'	=> 'Upload directory size',
+	'USERS_PER_DAY'		=> 'Users per day',
+
+	'VALUE'				=> 'Value',
+	'VIEW_ADMIN_LOG'	=> 'View administrator log',
+
+	'WELCOME_PHPBB'			=> 'Welcome to phpBB',
+);
+
+// Log Entries
+$this->lang += array(
+	'LOG_ACL_ADD_USER_GLOBAL_U_'		=> '<b>Added or edited users user permissions</b><br />&#187; %s',
+	'LOG_ACL_ADD_GROUP_GLOBAL_U_'		=> '<b>Added or edited groups user permissions</b><br />&#187; %s',
+	'LOG_ACL_ADD_USER_GLOBAL_M_'		=> '<b>Added or edited users global moderator permissions</b><br />&#187; %s',
+	'LOG_ACL_ADD_GROUP_GLOBAL_M_'		=> '<b>Added or edited groups global moderator permissions</b><br />&#187; %s',
+	'LOG_ACL_ADD_USER_GLOBAL_A_'		=> '<b>Added or edited users admin permissions</b><br />&#187; %s',
+	'LOG_ACL_ADD_GROUP_GLOBAL_A_'		=> '<b>Added or edited groups admin permissions</b><br />&#187; %s',
+
+	'LOG_ACL_ADD_ADMIN_GLOBAL_A_'		=> '<b>Added or edited Administrators</b><br />&#187; %s',
+	'LOG_ACL_ADD_MOD_GLOBAL_M_'			=> '<b>Added or edited Global Moderators</b><br />&#187; %s',
+
+	'LOG_ACL_ADD_USER_LOCAL_F_'			=> '<b>Added or edited users forum access</b> from %1$s<br />&#187; %2$s',
+	'LOG_ACL_ADD_USER_LOCAL_M_'			=> '<b>Added or edited users forum moderator access</b> from %1$s<br />&#187; %2$s',
+	'LOG_ACL_ADD_GROUP_LOCAL_F_'		=> '<b>Added or edited groups forum access</b> from %1$s<br />&#187; %2$s',
+	'LOG_ACL_ADD_GROUP_LOCAL_M_'		=> '<b>Added or edited groups forum moderator access</b> from %1$s<br />&#187; %2$s',
+
+	'LOG_ACL_ADD_MOD_LOCAL_M_'			=> '<b>Added or edited Moderators</b> from %1$s<br />&#187; %2$s',
+	'LOG_ACL_ADD_FORUM_LOCAL_F_'		=> '<b>Added or edited Forum Permissions</b> from %1$s<br />&#187; %2$s',
+
+	'LOG_ACL_DEL_ADMIN_GLOBAL_A_'		=> '<b>Removed Administrators</b><br />&#187; %s',
+	'LOG_ACL_DEL_MOD_GLOBAL_M_'			=> '<b>Removed Global Moderators</b><br />&#187; %s',
+	'LOG_ACL_DEL_MOD_LOCAL_M_'			=> '<b>Removed Moderators</b> from %1$s<br />&#187; %2$s',
+	'LOG_ACL_DEL_FORUM_LOCAL_F_'		=> '<b>Removed User/Group Forum Permissions</b> from %1$s<br />&#187; %2$s',
+
+	'LOG_ACL_TRANSFER_PERMISSIONS'		=> '<b>Permissions transfered from</b><br />&#187; %s',
+	'LOG_ACL_RESTORE_PERMISSIONS'		=> '<b>Own permissions restored after using permissions from</b><br />&#187; %s',
+	
+	'LOG_ADMIN_AUTH_FAIL'		=> '<b>Failed administration login attempt</b>',
+	'LOG_ADMIN_AUTH_SUCCESS'	=> '<b>Successful administration login</b>',
+
+	'LOG_ATTACH_EXT_ADD'		=> '<b>Added or edited attachment extension</b><br />&#187; %s',
+	'LOG_ATTACH_EXT_DEL'		=> '<b>Removed attachment extension</b><br />&#187; %s',
+	'LOG_ATTACH_EXT_UPDATE'		=> '<b>Updated attachment extension</b><br />&#187; %s',
+	'LOG_ATTACH_EXTGROUP_ADD'	=> '<b>Added extension group</b><br />&#187; %s',
+	'LOG_ATTACH_EXTGROUP_EDIT'	=> '<b>Edited extension group</b><br />&#187; %s',
+	'LOG_ATTACH_EXTGROUP_DEL'	=> '<b>Removed extension group</b><br />&#187; %s',
+	'LOG_ATTACH_FILEUPLOAD'		=> '<b>Orphan File uploaded to Post</b><br />&#187; ID %1$d - %2$s',
+	'LOG_ATTACH_ORPHAN_DEL'		=> '<b>Orphan Files deleted</b><br />&#187; %s',
+
+	'LOG_BAN_EXCLUDE_USER'	=> '<b>Excluded user from ban</b> for reason "<i>%1$s</i>"<br />&#187; %2$s ',
+	'LOG_BAN_EXCLUDE_IP'	=> '<b>Excluded ip from ban</b> for reason "<i>%1$s</i>"<br />&#187; %2$s ',
+	'LOG_BAN_EXCLUDE_EMAIL' => '<b>Excluded email from ban</b> for reason "<i>%1$s</i>"<br />&#187; %2$s ',
+	'LOG_BAN_USER'			=> '<b>Banned User</b> for reason "<i>%1$s</i>"<br />&#187; %2$s ',
+	'LOG_BAN_IP'			=> '<b>Banned ip</b> for reason "<i>%1$s</i>"<br />&#187; %2$s',
+	'LOG_BAN_EMAIL'			=> '<b>Banned email</b> for reason "<i>%1$s</i>"<br />&#187; %2$s',
+	'LOG_UNBAN_USER'		=> '<b>Unbanned user</b><br />&#187; %s',
+	'LOG_UNBAN_IP'			=> '<b>Unbanned ip</b><br />&#187; %s',
+	'LOG_UNBAN_EMAIL'		=> '<b>Unbanned email</b><br />&#187; %s',
+
+	'LOG_BBCODE_ADD'		=> '<b>Added new BBCode</b><br />&#187; %s',
+	'LOG_BBCODE_EDIT'		=> '<b>Edited BBCode</b><br />&#187; %s',
+	'LOG_BBCODE_DELETE'		=> '<b>Deleted BBCode</b><br />&#187; %s',
+
+	'LOG_BOT_ADDED'		=> '<b>New bot added</b><br />&#187; %s',
+	'LOG_BOT_DELETE'	=> '<b>Deleted bot</b><br />&#187; %s',
+	'LOG_BOT_UPDATED'	=> '<b>Existing bot updated</b><br />&#187; %s',
+
+	'LOG_CLEAR_ADMIN'		=> '<b>Cleared admin log</b>',
+	'LOG_CLEAR_CRITICAL'	=> '<b>Cleared error log</b>',
+	'LOG_CLEAR_MOD'			=> '<b>Cleared moderator log</b>',
+	'LOG_CLEAR_USER'		=> '<b>Cleared user log</b><br />&#187; %s',
+	'LOG_CLEAR_USERS'		=> '<b>Cleared user logs</b>',
+
+	'LOG_CONFIG_ATTACH'			=> '<b>Altered attachment settings</b>',
+	'LOG_CONFIG_AUTH'			=> '<b>Altered authentication settings</b>',
+	'LOG_CONFIG_AVATAR'			=> '<b>Altered avatar settings</b>',
+	'LOG_CONFIG_COOKIE'			=> '<b>Altered cookie settings</b>',
+	'LOG_CONFIG_EMAIL'			=> '<b>Altered email settings</b>',
+	'LOG_CONFIG_FEATURES'		=> '<b>Altered board features</b>',
+	'LOG_CONFIG_LOAD'			=> '<b>Altered load settings</b>',
+	'LOG_CONFIG_MESSAGE'		=> '<b>Altered private message settings</b>',
+	'LOG_CONFIG_POST'			=> '<b>Altered post settings</b>',
+	'LOG_CONFIG_REGISTRATION'	=> '<b>Altered user registration settings</b>',
+	'LOG_CONFIG_SEARCH'			=> '<b>Altered search settings</b>',
+	'LOG_CONFIG_SECURITY'		=> '<b>Altered security settings</b>',
+	'LOG_CONFIG_SERVER'			=> '<b>Altered server settings</b>',
+	'LOG_CONFIG_SETTINGS'		=> '<b>Altered board settings</b>',
+	'LOG_CONFIG_SIGNATURE'		=> '<b>Altered signature settings</b>',
+	'LOG_CONFIG_VISUAL'			=> '<b>Altered visual confirmation settings</b>',
+
+	'LOG_APPROVE_TOPIC'			=> '<b>Approved topic</b><br />&#187; %s',
+	'LOG_BUMP_TOPIC'			=> '<b>User bumped topic</b><br />&#187; %s',
+	'LOG_DELETE_POST'			=> '<b>Deleted post</b><br />&#187; %s',
+	'LOG_DELETE_TOPIC'			=> '<b>Deleted topic</b><br />&#187; %s',
+	'LOG_FORK'					=> '<b>Copied topic</b><br />&#187; from %s',
+	'LOG_LOCK'					=> '<b>Locked topic</b><br />&#187; %s',
+	'LOG_LOCK_POST'				=> '<b>Locked post</b><br />&#187; %s',
+	'LOG_MERGE'					=> '<b>Merged posts</b> into topic<br />&#187;%s',
+	'LOG_MOVE'					=> '<b>Moved topic</b><br />&#187; from %s',
+	'LOG_TOPIC_DELETED'			=> '<b>Deleted topic</b><br />&#187; %s',
+	'LOG_TOPIC_RESYNC'			=> '<b>Resynchronised topic counters</b><br />&#187; %s',
+	'LOG_TOPIC_TYPE_CHANGED'	=> '<b>Changed topic type</b><br />&#187; %s',
+	'LOG_UNLOCK'				=> '<b>Unlocked topic</b><br />&#187; %s',
+	'LOG_UNLOCK_POST'			=> '<b>Unlocked post</b><br />&#187; %s',
+
+	'LOG_DISALLOW_ADD'		=> '<b>Added disallowed username</b><br />&#187; %s',
+	'LOG_DISALLOW_DELETE'	=> '<b>Deleted disallowed username</b>',
+
+	'LOG_DB_BACKUP'			=> '<b>Database backup</b>',
+	'LOG_DB_RESTORE'		=> '<b>Database restore</b>',
+
+	'LOG_DOWNLOAD_EXCLUDE_IP'	=> '<b>Exluded ip/hostname from download list</b><br />&#187; %s',
+	'LOG_DOWNLOAD_IP'			=> '<b>Added ip/hostname to download list</b><br />&#187; %s',
+	'LOG_DOWNLOAD_REMOVE_IP'	=> '<b>Removed ip/hostname from download list</b><br />&#187; %s',
+
+	'LOG_ERROR_JABBER'		=> '<b>Jabber Error</b><br />&#187; %s',
+	'LOG_ERROR_EMAIL'		=> '<b>Email Error</b><br />&#187; %s',
+	
+	'LOG_FORUM_ADD'							=> '<b>Created new forum</b><br />&#187; %s',
+	'LOG_FORUM_DEL_FORUM'					=> '<b>Deleted forum</b><br />&#187; %s',
+	'LOG_FORUM_DEL_FORUMS'					=> '<b>Deleted forum and its subforums</b><br />&#187; %s',
+	'LOG_FORUM_DEL_MOVE_FORUMS'				=> '<b>Deleted forum and moved subforums</b> to %1$s<br />&#187; %2$s',
+	'LOG_FORUM_DEL_MOVE_POSTS'				=> '<b>Deleted forum and moved posts </b> to %1$s<br />&#187; %2$s',
+	'LOG_FORUM_DEL_MOVE_POSTS_FORUMS'		=> '<b>Deleted forum and its subforums, moved messages</b> to %1$s<br />&#187; %2$s',
+	'LOG_FORUM_DEL_MOVE_POSTS_MOVE_FORUMS'	=> '<b>Deleted forum, moved posts</b> to %1$s <b>and subforums</b> to %2$s<br />&#187; %3$s',
+	'LOG_FORUM_DEL_POSTS'					=> '<b>Deleted forum and its messages</b><br />&#187; %s',
+	'LOG_FORUM_DEL_POSTS_FORUMS'			=> '<b>Deleted forum, its messages and subforums</b><br />&#187; %s',
+	'LOG_FORUM_DEL_POSTS_MOVE_FORUMS'		=> '<b>Deleted forum and its messages, moved subforums</b> to %1$s<br />&#187; %2$s',
+	'LOG_FORUM_EDIT'						=> '<b>Edited forum details</b><br />&#187; %s',
+	'LOG_FORUM_MOVE_DOWN'					=> '<b>Moved forum</b> %1$s <b>below</b> %2$s',
+	'LOG_FORUM_MOVE_UP'						=> '<b>Moved forum</b> %1$s <b>above</b> %2$s',
+	'LOG_FORUM_SYNC'						=> '<b>Re-synchronised forum</b><br />&#187; %s',
+
+	'LOG_GROUP_CREATED'		=> '<b>New usergroup created</b><br />&#187; %s',
+	'LOG_GROUP_DEFAULTS'	=> '<b>Group made default for members</b><br />&#187; %s',
+	'LOG_GROUP_DELETE'		=> '<b>Usergroup deleted</b><br />&#187; %s',
+	'LOG_GROUP_DEMOTED'		=> '<b>Leaders demoted in usergroup</b> %1$s<br />&#187; %2$s',
+	'LOG_GROUP_PROMOTED'	=> '<b>Members promoted to leader in usergroup</b> %1$s<br />&#187; %2$s',
+	'LOG_GROUP_REMOVE'		=> '<b>Members removed from usergroup</b> %1$s<br />&#187; %2$s',
+	'LOG_GROUP_UPDATED'		=> '<b>Usergroup details updated</b><br />&#187; %s',
+	'LOG_MODS_ADDED'		=> '<b>Added new leaders to usergroup</b> %1$s<br />&#187; %2$s',
+	'LOG_USERS_APPROVED'	=> '<b>Users approved in usergroup</b> %1$s<br />&#187; %2$s',
+	'LOG_USERS_ADDED'		=> '<b>Added new members to usergroup</b> %1$s<br />&#187; %2$s',
+
+	'LOG_IMAGESET_ADD_DB'		=> '<b>Added new imageset to database</b><br />&#187; %s',
+	'LOG_IMAGESET_ADD_FS'		=> '<b>Add new imageset on filesystem</b><br />&#187; %s',
+	'LOG_IMAGESET_DELETE'		=> '<b>Deleted imageset</b><br />&#187; %s',
+	'LOG_IMAGESET_EDIT_DETAILS'	=> '<b>Edited imageset details</b><br />&#187; %s',
+	'LOG_IMAGESET_EDIT'			=> '<b>Edited imageset</b><br />&#187; %s',
+	'LOG_IMAGESET_EXPORT'		=> '<b>Exported imageset</b><br />&#187; %s',
+	'LOG_IMAGESET_REFRESHED'	=> '<b>Refreshed imageset</b><br />&#187; %s',
+
+	'LOG_INDEX_ACTIVATE'	=> '<b>Activated inactive users</b><br />&#187; %s',
+	'LOG_INDEX_DELETE'		=> '<b>Deleted inactive users</b><br />&#187; %s',
+	'LOG_INDEX_REMIND'		=> '<b>Sent reminder emails to inactive users</b><br />&#187; %s',
+	'LOG_INSTALL_CONVERTED'	=> '<b>Converted from %1$s to phpBB %2$s</b>',
+	'LOG_INSTALL_INSTALLED'	=> '<b>Installed phpBB %s</b>',
+
+	'LOG_IP_BROWSER_CHECK'	=> '<b>Session IP/Browser check failed</b><br />&#187;User IP "<i>%1$s</i>" checked against session IP "<i>%2$s</i>" and user browser string "<i>%3$s</i>" checked against session browser string "<i>%4$s</i>".',
+
+	'LOG_JAB_CHANGED'			=> '<b>Jabber account changed</b>',
+	'LOG_JAB_PASSCHG'			=> '<b>Jabber password changed</b>',
+	'LOG_JAB_REGISTER'			=> '<b>Jabber account registered</b>',
+	'LOG_JAB_SETTINGS_CHANGED'	=> '<b>Jabber settings changed</b>',
+
+	'LOG_LANGUAGE_PACK_DELETED'		=> '<b>Deleted language pack</b><br />&#187; %s',
+	'LOG_LANGUAGE_PACK_INSTALLED'	=> '<b>Installed language pack</b><br />&#187; %s',
+	'LOG_LANGUAGE_PACK_UPDATED'		=> '<b>Updated language pack details</b><br />&#187; %s',
+	'LOG_LANGUAGE_FILE_REPLACED'	=> '<b>Replaced language file</b><br />&#187; %s',
+
+	'LOG_MASS_EMAIL'		=> '<b>Sent mass email</b><br />&#187; %s',
+
+	'LOG_MCP_CHANGE_POSTER'	=> '<b>Changed poster in topic "%1$s"</b><br />&#187; from %2$s to %3$s',
+
+	'LOG_MODULE_DISABLE'	=> '<b>Module disabled</b>',
+	'LOG_MODULE_ENABLE'		=> '<b>Module enabled</b>',
+	'LOG_MODULE_MOVE_DOWN'	=> '<b>Module moved down</b><br />&#187; %s',
+	'LOG_MODULE_MOVE_UP'	=> '<b>Module moved up</b><br />&#187; %s',
+	'LOG_MODULE_REMOVED'	=> '<b>Module removed</b><br />&#187; %s',
+	'LOG_MODULE_ADD'		=> '<b>Module added</b><br />&#187; %s',
+	'LOG_MODULE_EDIT'		=> '<b>Module edited</b><br />&#187; %s',
+
+	'LOG_A_ROLE_ADD'		=> '<b>Admin Role added</b><br />&#187; %s',
+	'LOG_A_ROLE_EDIT'		=> '<b>Admin Role edited</b><br />&#187; %s',
+	'LOG_A_ROLE_REMOVED'	=> '<b>Admin Role removed</b><br />&#187; %s',
+	'LOG_F_ROLE_ADD'		=> '<b>Forum Role added</b><br />&#187; %s',
+	'LOG_F_ROLE_EDIT'		=> '<b>Forum Role edited</b><br />&#187; %s',
+	'LOG_F_ROLE_REMOVED'	=> '<b>Forum Role removed</b><br />&#187; %s',
+	'LOG_M_ROLE_ADD'		=> '<b>Moderator Role added</b><br />&#187; %s',
+	'LOG_M_ROLE_EDIT'		=> '<b>Moderator Role edited</b><br />&#187; %s',
+	'LOG_M_ROLE_REMOVED'	=> '<b>Moderator Role removed</b><br />&#187; %s',
+	'LOG_U_ROLE_ADD'		=> '<b>User Role added</b><br />&#187; %s',
+	'LOG_U_ROLE_EDIT'		=> '<b>User Role edited</b><br />&#187; %s',
+	'LOG_U_ROLE_REMOVED'	=> '<b>User Role removed</b><br />&#187; %s',
+
+	'LOG_PROFILE_FIELD_ACTIVATE'	=> '<b>Profile field activated</b><br />&#187; %s',
+	'LOG_PROFILE_FIELD_CREATE'		=> '<b>Profile field added</b><br />&#187; %s',
+	'LOG_PROFILE_FIELD_DEACTIVATE'	=> '<b>Profile field deactivated</b><br />&#187; %s',
+	'LOG_PROFILE_FIELD_EDIT'		=> '<b>Profile field changed</b><br />&#187; %s',
+	'LOG_PROFILE_FIELD_REMOVED'		=> '<b>Profile field removed</b><br />&#187; %s',
+
+	'LOG_PRUNE'					=> '<b>Pruned forums</b><br />&#187; %s',
+	'LOG_AUTO_PRUNE'			=> '<b>Auto-pruned forums</b><br />&#187; %s',
+	'LOG_PRUNE_USER_DEAC'		=> '<b>Users deactivated</b><br />&#187; %s',
+	'LOG_PRUNE_USER_DEL_DEL'	=> '<b>Users pruned and posts deleted</b><br />&#187; %s',
+	'LOG_PRUNE_USER_DEL_ANON'	=> '<b>Users pruned and posts retained</b><br />&#187; %s',
+
+	'LOG_REASON_ADDED'		=> '<b>Added report/denial reason</b><br />&#187; %s',
+	'LOG_REASON_REMOVED'	=> '<b>Removed report/denial reason</b><br />&#187; %s',
+	'LOG_REASON_UPDATED'	=> '<b>Updated report/denial reason</b><br />&#187; %s',
+
+	'LOG_RESET_DATE'			=> '<b>Board start date reset</b>',
+	'LOG_RESET_ONLINE'			=> '<b>Most users online reset</b>',
+	'LOG_RESYNC_POSTCOUNTS'		=> '<b>User postcounts synced</b>',
+	'LOG_RESYNC_POST_MARKING'	=> '<b>Dotted topics synced</b>',
+	'LOG_RESYNC_STATS'			=> '<b>Post, topic and user stats reset</b>',
+
+	'LOG_STYLE_ADD'				=> '<b>Added new style</b><br />&#187; %s',
+	'LOG_STYLE_DELETE'			=> '<b>Deleted style</b><br />&#187; %s',
+	'LOG_STYLE_EDIT_DETAILS'	=> '<b>Edited style</b><br />&#187; %s',
+	'LOG_STYLE_EXPORT'			=> '<b>Exported style</b><br />&#187; %s',
+
+	'LOG_TEMPLATE_ADD_DB'			=> '<b>Added new template set to database</b><br />&#187; %s',
+	'LOG_TEMPLATE_ADD_FS'			=> '<b>Add new template set on filesystem</b><br />&#187; %s',
+	'LOG_TEMPLATE_CACHE_CLEARED'	=> '<b>Deleted cached versions of template files in template set <i>%1$s</i></b><br />&#187; %2$s',
+	'LOG_TEMPLATE_DELETE'			=> '<b>Deleted template set</b><br />&#187; %s',
+	'LOG_TEMPLATE_EDIT'				=> '<b>Edited template set <i>%1$s</i></b><br />&#187; %2$s',
+	'LOG_TEMPLATE_EDIT_DETAILS'		=> '<b>Edited template details</b><br />&#187; %s',
+	'LOG_TEMPLATE_EXPORT'			=> '<b>Exported template set</b><br />&#187; %s',
+	'LOG_TEMPLATE_REFRESHED'		=> '<b>Refreshed template set</b><br />&#187; %s',
+
+	'LOG_THEME_ADD_DB'			=> '<b>Added new theme to database</b><br />&#187; %s',
+	'LOG_THEME_ADD_FS'			=> '<b>Add new theme on filesystem</b><br />&#187; %s',
+	'LOG_THEME_DELETE'			=> '<b>Theme deleted</b><br />&#187; %s',
+	'LOG_THEME_EDIT_DETAILS'	=> '<b>Edited theme details</b><br />&#187; %s',
+	'LOG_THEME_EDIT'			=> '<b>Edited theme <i>%1$s</i></b><br />&#187; Modified class <i>%2$s</i>',
+	'LOG_THEME_EDIT_ADD'		=> '<b>Edited theme <i>%1$s</i></b><br />&#187; Added class <i>%2$s</i>',
+	'LOG_THEME_EXPORT'			=> '<b>Exported theme</b><br />&#187; %s',
+	'LOG_THEME_REFRESHED'		=> '<b>Refreshed theme</b><br />&#187; %s',
+
+	'LOG_USER_ACTIVE'		=> '<b>User activated</b><br />&#187; %s',
+	'LOG_USER_BAN_USER'		=> '<b>Banned User via user management</b> for reason "<i>%1$s</i>"<br />&#187; %2$s',
+	'LOG_USER_BAN_IP'		=> '<b>Banned ip via user management</b> for reason "<i>%1$s</i>"<br />&#187; %2$s',
+	'LOG_USER_BAN_EMAIL'	=> '<b>Banned email via user management</b> for reason "<i>%1$s</i>"<br />&#187; %2$s',
+	'LOG_USER_DELETED'		=> '<b>Deleted user</b><br />&#187; %s',
+	'LOG_USER_DEL_ATTACH'	=> '<b>Removed all attachments made by the user</b><br />&#187; %s',
+	'LOG_USER_DEL_AVATAR'	=> '<b>Removed user avatar</b><br />&#187; %s',
+	'LOG_USER_DEL_POSTS'	=> '<b>Removed all posts made by the user</b><br />&#187; %s',
+	'LOG_USER_DEL_SIG'		=> '<b>Removed user signature</b><br />&#187; %s',
+	'LOG_USER_INACTIVE'		=> '<b>User deactivated</b><br />&#187; %s',
+	'LOG_USER_MOVE_POSTS'	=> '<b>Moved user posts</b><br />&#187; posts by "%1$s" to forum "%2$s"',
+	'LOG_USER_NEW_PASSWORD'	=> '<b>Changed user password</b><br />&#187; %s',
+	'LOG_USER_REACTIVATE'	=> '<b>Forced user account re-activation</b><br />&#187; %s',
+	'LOG_USER_UPDATE_EMAIL'	=> '<b>User "%1$s" changed email</b><br />&#187; from "%2$s" to "%3$s"',
+	'LOG_USER_UPDATE_NAME'	=> '<b>Changed username</b><br />&#187; from "%1$s" to "%2$s"',
+	'LOG_USER_USER_UPDATE'	=> '<b>Updated user details</b><br />&#187; %s',
+
+	'LOG_USER_ACTIVE_USER'		=> '<b>User account activated</b>',
+	'LOG_USER_DEL_AVATAR_USER'	=> '<b>User avatar removed</b>',
+	'LOG_USER_DEL_SIG_USER'		=> '<b>User signature removed</b>',
+	'LOG_USER_FEEDBACK'			=> '<b>Added user feedback</b><br />&#187; %s',
+	'LOG_USER_GENERAL'			=> '%s',
+	'LOG_USER_INACTIVE_USER'	=> '<b>User account de-activated</b>',
+	'LOG_USER_LOCK'				=> '<b>User locked own topic</b><br />&#187; %s',
+	'LOG_USER_MOVE_POSTS_USER'	=> '<b>Moved all posts to forum "%s"</b>',
+	'LOG_USER_REACTIVATE_USER'	=> '<b>Forced user account re-activation</b>',
+	'LOG_USER_UNLOCK'			=> '<b>User unlocked own topic</b><br />&#187; %s',
+	'LOG_USER_WARNING'			=> '<b>Added user warning</b><br />&#187;%s',
+	'LOG_USER_WARNING_BODY'		=> '<b>The following warning was issued to this user</b><br />&#187;%s',
+
+	'LOG_USER_GROUP_CHANGE'			=> '<b>User changed default group</b><br />&#187; %s',
+	'LOG_USER_GROUP_DEMOTE'			=> '<b>User demoted as leaders from usergroup</b><br />&#187; %s',
+	'LOG_USER_GROUP_JOIN'			=> '<b>User joined group</b><br />&#187; %s',
+	'LOG_USER_GROUP_JOIN_PENDING'	=> '<b>User joined group and needs to be approved</b><br />&#187; %s',
+	'LOG_USER_GROUP_RESIGN'			=> '<b>User resigned membership from group</b><br />&#187; %s',
+
+	'LOG_WORD_ADD'			=> '<b>Added word censor</b><br />&#187; %s',
+	'LOG_WORD_DELETE'		=> '<b>Deleted word censor</b><br />&#187; %s',
+	'LOG_WORD_EDIT'			=> '<b>Edited word censor</b><br />&#187; %s',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/admin_forums.php
===================================================================
--- cms/trunk/modules/forums/language/admin_forums.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/admin_forums.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,124 @@
+<?php
+/** 
+*
+* acp_forums [English]
+*
+* @package language
+* @version $Id: forums.php,v 1.9 2006/07/09 16:22:58 acydburn Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+// Forum Admin
+$this->lang += array(
+	'AUTO_PRUNE_DAYS'			=> 'Auto-prune Post Age',
+	'AUTO_PRUNE_DAYS_EXPLAIN'	=> 'Number of days since last post after which topic is removed.',
+	'AUTO_PRUNE_FREQ'			=> 'Auto-prune Frequency',
+	'AUTO_PRUNE_FREQ_EXPLAIN'	=> 'Time in days between pruning events.',
+	'AUTO_PRUNE_VIEWED'			=> 'Auto-prune Post Viewed Age',
+	'AUTO_PRUNE_VIEWED_EXPLAIN'	=> 'Number of days since topic was viewed after which topic is removed.',
+
+	'COPY_PERMISSIONS'				=> 'Copy permissions from',
+	'COPY_PERMISSIONS_ADD_EXPLAIN'	=> 'Once created, the forum will have the same permissions as the one you select here. If no forum is selected the newly created forum will not be visible until permissions had been set.',
+	'COPY_PERMISSIONS_EDIT_EXPLAIN'	=> 'If you select to copy permissions, the forum will have the same permissions as the one you select here. This will overwrite any permissions you have previously set for this forum with the permissions of the forum you select here. If no forum is selected the current permissions will be kept.',
+	'CREATE_FORUM'					=> 'Create new forum',
+
+	'DECIDE_MOVE_DELETE_CONTENT'		=> 'Delete content or move to forum',
+	'DEFAULT_STYLE'						=> 'Default Style',
+	'DELETE_ALL_POSTS'					=> 'Delete posts',
+	'DELETE_SUBFORUMS'					=> 'Delete subforums and posts',
+	'DISPLAY_ACTIVE_TOPICS'				=> 'Enable active topics',
+	'DISPLAY_ACTIVE_TOPICS_EXPLAIN'		=> 'If set to yes active topics in selected subforums will be displayed under this category.',
+
+	'EDIT_FORUM'					=> 'Edit forum',
+	'ENABLE_INDEXING'				=> 'Enable search indexing',
+	'ENABLE_INDEXING_EXPLAIN'		=> 'If set to yes posts made to this forum will be indexed for searching.',
+	'ENABLE_POST_REVIEW'			=> 'Enable post review',
+	'ENABLE_POST_REVIEW_EXPLAIN'	=> 'If set to yes users are able to review their post if new posts were made to the topic while users wrote theirs. This should be disabled for chat forums.',
+	'ENABLE_RECENT'					=> 'Display active topics',
+	'ENABLE_RECENT_EXPLAIN'			=> 'If set to yes topics made to this forum will be shown in the active topics list.',
+	'ENABLE_TOPIC_ICONS'			=> 'Enable Topic Icons',
+
+	'FORUM_ADMIN'						=> 'Forum Administration',
+	'FORUM_ADMIN_EXPLAIN'				=> 'In phpBB3 there are no categories, everything is forum based. Each forum can have an unlimited number of sub-forums and you can determine whether each may be posted to or not (i.e. whether it acts like an old category). Here you can add, edit, delete, lock, unlock individual forums as well as set certain additional controls. If your posts and topics have got out of sync you can also resynchronise a forum.',
+	'FORUM_AUTO_PRUNE'					=> 'Enable Auto-Pruning',
+	'FORUM_AUTO_PRUNE_EXPLAIN'			=> 'Prunes the forum of topics, set the frequency/age parameters below.',
+	'FORUM_CREATED'						=> 'Forum created successfully.',
+	'FORUM_DATA_NEGATIVE'				=> 'Pruning parameters cannot be negative.',
+	'FORUM_DELETE'						=> 'Delete Forum',
+	'FORUM_DELETE_EXPLAIN'				=> 'The form below will allow you to delete a forum and decide where you want to put all topics (or forums) it contained.',
+	'FORUM_DELETED'						=> 'Forum successfully deleted',
+	'FORUM_DESC'						=> 'Description',
+	'FORUM_DESC_EXPLAIN'				=> 'Any markup entered here will displayed as is.',
+	'FORUM_EDIT_EXPLAIN'				=> 'The form below will allow you to customise this forum. Please note that moderation and post count controls are set via forum permissions for each user or usergroup.',
+	'FORUM_IMAGE'						=> 'Forum Image',
+	'FORUM_IMAGE_EXPLAIN'				=> 'Location, relative to the phpBB root directory, of an image to associate with this forum.',
+	'FORUM_LINK_EXPLAIN'				=> 'Full URL (including the protocol, for example http://) to location clicking this forum will take the user.',
+	'FORUM_LINK_TRACK'					=> 'Track Link Redirects',
+	'FORUM_LINK_TRACK_EXPLAIN'			=> 'Records the number of times a forum link was clicked.',
+	'FORUM_NAME'						=> 'Forum Name',
+	'FORUM_NAME_EMPTY'					=> 'You must enter a name for this forum.',
+	'FORUM_PARENT'						=> 'Parent Forum',
+	'FORUM_PASSWORD'					=> 'Forum Password',
+	'FORUM_PASSWORD_CONFIRM'			=> 'Confirm Forum Password',
+	'FORUM_PASSWORD_CONFIRM_EXPLAIN'	=> 'Only needs to be set if a forum password is entered.',
+	'FORUM_PASSWORD_EXPLAIN'			=> 'Defines a password for this forum, use the permission system in preference.',
+	'FORUM_PASSWORD_MISMATCH'			=> 'The passwords you entered did not match.',
+	'FORUM_PRUNE_SETTINGS'				=> 'Forum prune settings',
+	'FORUM_RESYNCED'					=> 'Forum "%s" successfully resynced',
+	'FORUM_RULES_EXPLAIN'				=> 'Forum Rules are displayed at any page within the given forum.',
+	'FORUM_RULES_LINK'					=> 'Link to Forum Rules',
+	'FORUM_RULES_LINK_EXPLAIN'			=> 'You are able to enter the URL of the page/post containing your forum rules here. This setting will override the Forum Rules text you specified.',
+	'FORUM_RULES_PREVIEW'				=> 'Forum Rules preview',
+	'FORUM_SETTINGS'					=> 'Forum Settings',
+	'FORUM_STATUS'						=> 'Forum Status',
+	'FORUM_STYLE'						=> 'Forum Style',
+	'FORUM_TOPICS_PAGE'					=> 'Topics Per Page',
+	'FORUM_TOPICS_PAGE_EXPLAIN'			=> 'If non-zero this value will override the default topics per page setting.',
+	'FORUM_TYPE'						=> 'Forum Type',
+	'FORUM_UPDATED'						=> 'Forum informations updated successfully.',
+
+	'GENERAL_FORUM_SETTINGS'	=> 'General Forum Settings',
+
+	'LINK'					=> 'Link',
+	'LIST_INDEX'			=> 'List Forum On Index',
+	'LIST_INDEX_EXPLAIN'	=> 'Displays a link to this forum under the root parent forum on the index.',
+	'LOCKED'				=> 'Locked',
+
+	'MOVE_POSTS_TO'		=> 'Move posts',
+	'MOVE_SUBFORUMS_TO'	=> 'Move subforums',
+
+	'NO_DESTINATION_FORUM'			=> 'You have not specified a forum to move content to',
+	'NO_FORUM_ACTION'				=> 'No action defined for what happens with the forum content',
+	'NO_PARENT'						=> 'No Parent',
+	'NO_PERMISSIONS'				=> 'Do not copy permissions',
+	'NO_PERMISSION_FORUM_ADD'		=> 'You do not have the neccessary permissions to add forums',
+	'NO_PERMISSION_FORUM_DELETE'	=> 'You do not have the neccessary permissions to delete forums',
+
+	'PARENT_NOT_EXIST'			=> 'Parent does not exist',
+	'PRUNE_ANNOUNCEMENTS'		=> 'Prune Announcements',
+	'PRUNE_STICKY'				=> 'Prune Stickies',
+	'PRUNE_OLD_POLLS'			=> 'Prune Old Polls',
+	'PRUNE_OLD_POLLS_EXPLAIN'	=> 'Removes topics with polls not voted in for post age days.',
+	
+	'REDIRECT_ACL'	=> 'Now you are able to %sset permissions%s for this forum.',
+
+	'TYPE_CAT'			=> 'Category',
+	'TYPE_FORUM'		=> 'Forum',
+	'TYPE_LINK'			=> 'Link',
+
+	'UNLOCKED'			=> 'Unlocked',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/admin_permissions.php
===================================================================
--- cms/trunk/modules/forums/language/admin_permissions.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/admin_permissions.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,216 @@
+<?php
+/** 
+*
+* acp_permissions [English]
+*
+* @package language
+* @version $Id: permissions.php,v 1.13 2006/08/02 15:53:19 acydburn Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang += array(
+	'ACP_PERMISSIONS_EXPLAIN'	=> '
+		<p>Permissions are highly granular and grouped into four major sections, which are:</p>
+
+		<h2>Global Permissions</h2>
+		<p>These are used to control access on a global level and apply to the entire bulletin board. They are further divided into Users Permissions, Groups Permissions, Administrators and Global Moderators.</p>
+
+		<h2>Forum Based Permissions</h2>
+		<p>These are used to control access on a per forum basis. They are further divided into Forum Permissions, Forum Moderators, Users Forum Permissions and Groups Forum Permissions.</p>
+
+		<h2>Permission Roles</h2>
+		<p>These are used to create different sets of permissions for the different permission types later being able to be assigned on a role-based basis. The default roles should cover the administration of bulletin boards large and small, though within each of the four divisions, you can add/edit/delete roles as you see fit.</p>
+
+		<h2>Permission Mask</h2>
+		<p>These are used to view the effective permissions assigned to Users, Moderators (Local and Global), Administrators or Forums.</p>
+	
+		<br />
+
+		<p>For further information on setting up and managing permissions on your phpBB3 forum, please see <a href="http://www.phpbb.com/support/documentation/3.0/quickstart/quick_permissions.html">Chapter 1.5 of our Quick Start Guide</a>.</p>
+	',
+
+	'ACL_NEVER'				=> 'Never',
+	'ACL_SET'				=> 'Setting Permissions',
+	'ACL_SET_EXPLAIN'		=> 'Permissions are based on a simple YES/NO system. Setting an option to NEVER for a user or usergroup overrides any other value assigned to it. If you do not wish to assign a value for an option for this user or group select NO. If values are assigned for this option elsewhere they will be used in preference, else NEVER is assumed. All objects marked (with the checkbox in front of them) will copy the permission set you defined.',
+	'ACL_SETTING'			=> 'Setting',
+
+	'ACL_TYPE_A_'			=> 'Administrative Permissions',
+	'ACL_TYPE_F_'			=> 'Forum Permissions',
+	'ACL_TYPE_M_'			=> 'Moderative Permissions',
+	'ACL_TYPE_U_'			=> 'User Permissions',
+
+	'ACL_TYPE_GLOBAL_A_'	=> 'Administrative Permissions',
+	'ACL_TYPE_GLOBAL_U_'	=> 'User Permissions',
+	'ACL_TYPE_GLOBAL_M_'	=> 'Global Moderator Permissions',
+	'ACL_TYPE_LOCAL_M_'		=> 'Forum Moderator Permissions',
+	'ACL_TYPE_LOCAL_F_'		=> 'Forum Permissions',
+	
+	'ACL_NO'				=> 'No',
+	'ACL_VIEW'				=> 'Viewing Permissions',
+	'ACL_VIEW_EXPLAIN'		=> 'Here you can see the effective permissions the user/group is having. A red square indicates that the user/group does not have the permission, a green square indicates that the user/group does have the permission.',
+	'ACL_YES'				=> 'Yes',
+
+	'ACP_ADMINISTRATORS_EXPLAIN'				=> 'Here you can assign administrator rights to users or groups. All users with admin permissions can view the administration panel.',
+	'ACP_FORUM_MODERATORS_EXPLAIN'				=> 'Here you can assign users and groups as forum moderators. To assign users access to forums, to define global moderative rights or administrators please use the appropriate page.',
+	'ACP_FORUM_PERMISSIONS_EXPLAIN'				=> 'Here you can alter which users and groups can access which forums. To assign moderators or define administrators please use the appropriate page.',
+	'ACP_GLOBAL_MODERATORS_EXPLAIN'				=> 'Here you can assign global moderator rights to users or groups. These moderators are like ordinary moderators except they have access to every forum on your board.',
+	'ACP_GROUPS_FORUM_PERMISSIONS_EXPLAIN'		=> 'Here you can assign forum permissions to groups.',
+	'ACP_GROUPS_PERMISSIONS_EXPLAIN'			=> 'Here you can assign global permissions to groups - user permissions, global moderator permissions and admin permissions. User permissions include capabilities such as the use of avatars, sending private messages, etc. Global moderator permissions are blabla, administrative permissions blabla. Individual users permissions should only be changed in rare occassions, the preferred method is putting users in groups and assigning the groups permissions.',
+	'ACP_ADMIN_ROLES_EXPLAIN'					=> 'Here you are able to manage the roles for administrative permissions. Roles are effective permissions, if you change a role the items having this role assigned will change it\'s permissions too.',
+	'ACP_FORUM_ROLES_EXPLAIN'					=> 'Here you are able to manage the roles for forum permissions. Roles are effective permissions, if you change a role the items having this role assigned will change it\'s permissions too.',
+	'ACP_MOD_ROLES_EXPLAIN'						=> 'Here you are able to manage the roles for moderative permissions. Roles are effective permissions, if you change a role the items having this role assigned will change it\'s permissions too.',
+	'ACP_USER_ROLES_EXPLAIN'					=> 'Here you are able to manage the roles for user permissions. Roles are effective permissions, if you change a role the items having this role assigned will change it\'s permissions too.',
+	'ACP_USERS_FORUM_PERMISSIONS_EXPLAIN'		=> 'Here you can assign forum permissions to users.',
+	'ACP_USERS_PERMISSIONS_EXPLAIN'				=> 'Here you can assign global permissions to users - user permissions, global moderator permissions and admin permissions. User permissions include capabilities such as the use of avatars, sending private messages, etc. Global moderator permissions are blabla, administrative permissions blabla. To alter these settings for large numbers of users the Group permissions system is the prefered method. Users permissions should only be changed in rare occassions, the preferred method is putting users in groups and assigning the groups permissions.',
+	'ACP_VIEW_ADMIN_PERMISSIONS_EXPLAIN'		=> 'Here you can view the effective administrative permissions assigned to the selected users/groups',
+	'ACP_VIEW_GLOBAL_MOD_PERMISSIONS_EXPLAIN'	=> 'Here you can view the global moderative permissions assigned to the selected users/groups',
+	'ACP_VIEW_FORUM_PERMISSIONS_EXPLAIN'		=> 'Here you can view the forum permissions assigned to the selected users/groups and forums',
+	'ACP_VIEW_FORUM_MOD_PERMISSIONS_EXPLAIN'	=> 'Here you can view the forum moderator permissions assigned to the selected users/groups and forums',
+	'ACP_VIEW_USER_PERMISSIONS_EXPLAIN'			=> 'Here you can view the effective user permissions assigned to the selected users/groups',
+
+	'ADD_GROUPS'				=> 'Add Groups',
+	'ADD_PERMISSIONS'			=> 'Add Permissions',
+	'ADD_USERS'					=> 'Add Users',
+	'ALL_GROUPS'				=> 'Select all groups',
+	'ALL_NEVER'					=> 'All Never',
+	'ALL_NO'					=> 'All No',
+	'ALL_USERS'					=> 'Select all users',
+	'ALL_YES'					=> 'All Yes',
+	'APPLY_ALL_PERMISSIONS'		=> 'Apply all Permissions',
+	'APPLY_PERMISSIONS'			=> 'Apply Permissions',
+	'APPLY_PERMISSIONS_EXPLAIN'	=> 'The Permissions and Role defined for this item will only be applied to this item and all checked items.',
+	'AUTH_UPDATED'				=> 'Permissions have been updated',
+
+	'CREATE_ROLE'				=> 'Create Role',
+	'CREATE_ROLE_FROM'			=> 'Use settings from...',
+	'CUSTOM'					=> 'Custom...',
+
+	'DEFAULT'					=> 'Default',
+	'DELETE_ROLE'				=> 'Delete role',
+	'DELETE_ROLE_CONFIRM'		=> 'Are you sure you want to remove this role? Items having this role assigned will <strong>not</strong> loosing their permission settings.',
+	'DISPLAY_ROLE_ITEMS'		=> 'View Items using this role',
+
+	'EDIT_PERMISSIONS'			=> 'Edit Permissions',
+	'EDIT_ROLE'					=> 'Edit Role',
+
+	'GROUPS_NOT_ASSIGNED'		=> 'No group assigned to this role',
+
+	'LOOK_UP_FORUMS_EXPLAIN'	=> 'You are able to select more than one forum',
+	'LOOK_UP_GROUP'				=> 'Look up Usergroup',
+	'LOOK_UP_USER'				=> 'Look up User',
+
+	'MANAGE_GROUPS'		=> 'Manage Groups',
+	'MANAGE_USERS'		=> 'Manage Users',
+
+	'NO_AUTH_SETTING_FOUND'		=> 'Permission settings not defined.',
+	'NO_ROLE_ASSIGNED'			=> 'No role assigned...',
+	'NO_ROLE_ASSIGNED_EXPLAIN'	=> 'Setting to this role does not change permissions on the right. If you want to unset/remove all permissions you should use the "All No" link.',
+	'NO_ROLE_AVAILABLE'			=> 'No role available',
+	'NO_ROLE_NAME_SPECIFIED'	=> 'Please give the role a name.',
+	'NO_ROLE_SELECTED'			=> 'Role could not be found.',
+	'NO_USER_GROUP_SELECTED'	=> 'You haven\'t selected any user or group.',
+
+	'ONLY_FORUM_DEFINED'	=> 'You only defined forums in your selection. Please also select at least one user or one group.',
+
+	'PERMISSION_APPLIED_TO_ALL'		=> 'Permissions and Role will also be applied to all checked objects',
+	'PLUS_SUBFORUMS'				=> '+Subforums',
+
+	'REMOVE_PERMISSIONS'			=> 'Remove Permissions',
+	'REMOVE_ROLE'					=> 'Remove Role',
+	'ROLE'							=> 'Role',
+	'ROLE_ADD_SUCCESS'				=> 'Role successfully added.',
+	'ROLE_ASSIGNED_TO'				=> 'Users/Groups assigned to %s',
+	'ROLE_DELETED'					=> 'Role successfully removed.',
+	'ROLE_DESCRIPTION'				=> 'Role Description',
+
+	'ROLE_DESCRIPTION_ADMIN_FORUM'		=> 'Can access the forum management and forum permission settings.',
+	'ROLE_DESCRIPTION_ADMIN_FULL'		=> 'Has access to all admin functions of this forum.<br />Not recommended.',
+	'ROLE_DESCRIPTION_ADMIN_STANDARD'	=> 'Has access to most admin features but is not allowed to use server or system related tools.',
+	'ROLE_DESCRIPTION_ADMIN_USERGROUP'	=> 'Can manage groups and users: Can change permissions, settings, manage bans, and manage ranks.',
+	'ROLE_DESCRIPTION_FORUM_BOT'		=> 'This role is recommended for bots and search spiders.',
+	'ROLE_DESCRIPTION_FORUM_FULL'		=> 'Can use all forum features, including posting of announcements and stickies. Can also ignore the flood limit.<br />Not recommended for normal users.',
+	'ROLE_DESCRIPTION_FORUM_LIMITED'	=> 'Can use some forum features, but cannot attach files or use post icons.',
+	'ROLE_DESCRIPTION_FORUM_NOACCESS'	=> 'Can neither see nor access the forum.',
+	'ROLE_DESCRIPTION_FORUM_ONQUEUE'	=> 'Can use most forum features including attachments, but posts and topics need to be approved by a moderator.',
+	'ROLE_DESCRIPTION_FORUM_POLLS'		=> 'Like Standard Access but can also create polls.',
+	'ROLE_DESCRIPTION_FORUM_READONLY'	=> 'Can read the forum, but cannot create new topics or reply to posts.',
+	'ROLE_DESCRIPTION_FORUM_STANDARD'	=> 'Can use most forum features including attachments, but cannot lock or delete own topics, and cannot create polls.',
+	'ROLE_DESCRIPTION_MOD_FULL'			=> 'Can use all moderating features, including banning.',
+	'ROLE_DESCRIPTION_MOD_QUEUE'		=> 'Can use the Moderation Queue to validate and edit posts, but nothing else.',
+	'ROLE_DESCRIPTION_MOD_SIMPLE'		=> 'Can only use basic topic actions. Cannot send warnings or use moderation queue.',
+	'ROLE_DESCRIPTION_MOD_STANDARD'		=> 'Can use most moderating tools, but cannot ban users or change the post author.',
+	'ROLE_DESCRIPTION_USER_FULL'		=> 'Can use all available forum features for users, including changing the user name or ignoring the flood limit.<br />Not recommended.',
+	'ROLE_DESCRIPTION_USER_LIMITED'		=> 'Can access some of the user features. Attachments, e-mails, or instant messages are not allowed.',
+	'ROLE_DESCRIPTION_USER_NOAVATAR'	=> 'Has a limited feature set and is not allowed to use the Avatar feature.',
+	'ROLE_DESCRIPTION_USER_NOPM'		=> 'Has a limited feature set, and is not allowed to use Private Messages.',
+	'ROLE_DESCRIPTION_USER_STANDARD'	=> 'Can access most but not all user features. Cannot change user name or ignore the flood limit, for instance.',
+	
+	'ROLE_DESCRIPTION_EXPLAIN'		=> 'You are able to enter a short explanation of what the role is doing or for what it is meant for. The text you enter here will be displayed within the permissions screens too.',
+	'ROLE_DETAILS'					=> 'Role Details',
+	'ROLE_EDIT_SUCCESS'				=> 'Role successfully edited.',
+	'ROLE_NAME'						=> 'Role Name',
+	'ROLE_NAME_ALREADY_EXIST'		=> 'A role named <strong>%s</strong> already exist for the specified permission type.',
+	'ROLE_NOT_ASSIGNED'				=> 'Role has not been assigned yet.',
+
+	'SELECTED_FORUM_NOT_EXIST'		=> 'The selected forum(s) do not exist',
+	'SELECTED_GROUP_NOT_EXIST'		=> 'The selected group(s) do not exist',
+	'SELECTED_USER_NOT_EXIST'		=> 'The selected user(s) do not exist',
+	'SELECT_FORUM_SUBFORUM_EXPLAIN'	=> 'The forum you select here will include all subforums into the selection',
+	'SELECT_ROLE'					=> 'Select role...',
+	'SELECT_TYPE'					=> 'Select type',
+	'SET_PERMISSIONS'				=> 'Set permissions',
+	'SET_ROLE_PERMISSIONS'			=> 'Set role permissions',
+	'SET_USERS_PERMISSIONS'			=> 'Set users permissions',
+	'SET_USERS_FORUM_PERMISSIONS'	=> 'Set users forum permissions',
+
+	'TRACE_DEFAULT'					=> 'By default every permission is NO (unset). So the permission can be overwritten by other settings.',
+	'TRACE_FOR'						=> 'Trace for',
+	'TRACE_GLOBAL_SETTING'			=> '%s (global)',
+	'TRACE_GROUP_NEVER_TOTAL_NEVER'	=> 'This group\'s permission is set to NEVER like the total result so the old result is kept.',
+	'TRACE_GROUP_NEVER_TOTAL_NO'	=> 'This group\'s permission is set to NEVER which becomes the new total value because it wasn\'t set yet (set to NO).',
+	'TRACE_GROUP_NEVER_TOTAL_YES'	=> 'This group\'s permission is set to NEVER which overwrites the total YES to a NEVER for this user.',
+	'TRACE_GROUP_NO'				=> 'The permission is NO for this group so the old total value is kept.',
+	'TRACE_GROUP_YES_TOTAL_NEVER'	=> 'This group\'s permission is set to YES but the total NEVER cannot be overwritten.',
+	'TRACE_GROUP_YES_TOTAL_NO'		=> 'This group\'s permission is set to YES which becomes the new total value because it wasn\'t set yet (set to NO).',
+	'TRACE_GROUP_YES_TOTAL_YES'		=> 'This group\'s permission is set to YES and the total permission is already set to YES, so the total result is kept.',
+	'TRACE_PERMISSION'				=> 'Trace permission - %s',
+	'TRACE_SETTING'					=> 'Trace setting',
+
+	'TRACE_USER_GLOBAL_YES_TOTAL_YES'		=> 'The forum independent user permission evaluates to YES but the total permission is already set to YES, so the the total result is kept. %sTrace global permission%s',
+	'TRACE_USER_GLOBAL_YES_TOTAL_NEVER'		=> 'The forum independent user permission evaluates to YES which overwrites the current local result NEVER. %sTrace global permission%s',
+	'TRACE_USER_GLOBAL_NEVER_TOTAL_KEPT'	=> 'The forum independent user permission evaluates to NEVER which doesn\'t influence the local permission. %sTrace global permission%s',
+	'TRACE_USER_FOUNDER'			=> 'The user has the founder type set, therefore admin permissions are set to YES by default.',
+	'TRACE_USER_KEPT'				=> 'The user permission is NO so the old total value is kept.',
+	'TRACE_USER_NEVER_TOTAL_NEVER'	=> 'The user permission is set to NEVER and the total value is set to NEVER, so nothing is changed.',
+	'TRACE_USER_NEVER_TOTAL_NO'		=> 'The user permission is set to NEVER which becomes the total value because it was set to NO.',
+	'TRACE_USER_NEVER_TOTAL_YES'	=> 'The user permission is set to NEVER and overwrites the previous YES.',
+	'TRACE_USER_NO_TOTAL_NO'		=> 'The user permission is NO and the total value was set to NO so it defaults to NEVER.',
+	'TRACE_USER_YES_TOTAL_NEVER'	=> 'The user permission is set to YES but the total NEVER cannot be overwritten.',
+	'TRACE_USER_YES_TOTAL_NO'		=> 'The user permission is set to YES which becomes the total value because it was set to NO.',
+	'TRACE_USER_YES_TOTAL_YES'		=> 'The user permission is set to YES and the total value is set to YES, so nothing is changed.',
+	'TRACE_WHO'						=> 'Who',
+	'TRACE_TOTAL'					=> 'Total',
+
+	'USERS_NOT_ASSIGNED'			=> 'No user assigned to this role',
+	'USER_IS_MEMBER_OF_DEFAULT'		=> 'is a member of the following default groups',
+	'USER_IS_MEMBER_OF_CUSTOM'		=> 'is a member of the following custom groups',
+
+	'VIEW_ASSIGNED_ITEMS'	=> 'View assigned items',
+	'VIEW_PERMISSIONS'		=> 'View permissions',
+
+	'WRONG_PERMISSION_TYPE'	=> 'Wrong permission type selected',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/admin_permissions_phpbb.php
===================================================================
--- cms/trunk/modules/forums/language/admin_permissions_phpbb.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/admin_permissions_phpbb.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,215 @@
+<?php
+/** 
+*
+* acp_permissions (phpBB Permission Set) [English]
+*
+* @package language
+* @version $Id: permissions_phpbb.php,v 1.13 2006/07/09 16:22:58 acydburn Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+/*
+	MODDERS PLEASE NOTE
+	
+	Please add your permission settings this way:
+
+	// Adding new category
+	$lang['permission_cats']['bugs'] = 'Bugs';
+
+	// Adding new permission set
+	$lang['permission_sets']['bug_'] = 'Bug Permissions';
+
+	// Adding the permissions
+	$lang = array_merge($lang, array(
+		'acl_bug_view'		=> array('lang' => 'Can view bug reports', 'cat' => 'bugs'),
+		'acl_bug_post'		=> array('lang' => 'Can post bugs', 'cat' => 'post'), // Using a phpBB category here
+	));
+
+	TODO:
+	You are able to put your permission sets into a seperate file too by
+	prefixing it with permissions_ and putting it into the acp language folder.
+*/
+
+// Define categories and permission types
+$this->lang += array(
+	'permission_cat'	=> array(
+		'actions'		=> 'Actions',
+		'content'		=> 'Content',
+		'forums'		=> 'Forums',
+		'misc'			=> 'Misc',
+		'permissions'	=> 'Permissions',
+		'pm'			=> 'Private Messages',
+		'polls'			=> 'Polls',
+		'post'			=> 'Post',
+		'post_actions'	=> 'Post Actions',
+		'posting'		=> 'Posting',
+		'profile'		=> 'Profile',
+		'settings'		=> 'Settings',
+		'topic_actions'	=> 'Topic Actions',
+		'user_group'	=> 'Users &amp; Groups',
+	),
+
+	'permission_type'	=> array(
+		'u_'			=> 'User Permissions',
+		'a_'			=> 'Admin Permissions',
+		'm_'			=> 'Moderator Permissions',
+		'f_'			=> 'Forum Permissions',
+	),
+);
+
+// User Permissions
+$this->lang += array(
+	'acl_u_viewprofile'	=> array('lang' => 'Can view profiles', 'cat' => 'profile'),
+	'acl_u_chgname'		=> array('lang' => 'Can change username', 'cat' => 'profile'),
+	'acl_u_chgpasswd'	=> array('lang' => 'Can change password', 'cat' => 'profile'),
+	'acl_u_chgemail'	=> array('lang' => 'Can change email address', 'cat' => 'profile'),
+	'acl_u_chgavatar'	=> array('lang' => 'Can change avatar', 'cat' => 'profile'),
+	'acl_u_chggrp'		=> array('lang' => 'Can change default usergroup', 'cat' => 'profile'),
+
+	'acl_u_attach'		=> array('lang' => 'Can attach files', 'cat' => 'post'),
+	'acl_u_download'	=> array('lang' => 'Can download files', 'cat' => 'post'),
+	'acl_u_savedrafts'	=> array('lang' => 'Can save drafts', 'cat' => 'post'),
+	'acl_u_chgcensors'	=> array('lang' => 'Can disable word censors', 'cat' => 'post'),
+	'acl_u_sig'			=> array('lang' => 'Can use signature', 'cat' => 'post'),
+
+	'acl_u_sendpm'		=> array('lang' => 'Can send private messages', 'cat' => 'pm'),
+	'acl_u_masspm'		=> array('lang' => 'Can send pm to multiple users and groups', 'cat' => 'pm'),
+	'acl_u_readpm'		=> array('lang' => 'Can read private messages', 'cat' => 'pm'),
+	'acl_u_pm_edit'		=> array('lang' => 'Can edit own private messages', 'cat' => 'pm'),
+	'acl_u_pm_delete'	=> array('lang' => 'Can remove private messages from own folder', 'cat' => 'pm'),
+	'acl_u_pm_forward'	=> array('lang' => 'Can forward private messages', 'cat' => 'pm'),
+	'acl_u_pm_emailpm'	=> array('lang' => 'Can email private messages', 'cat' => 'pm'),
+	'acl_u_pm_printpm'	=> array('lang' => 'Can print private messages', 'cat' => 'pm'),
+	'acl_u_pm_attach'	=> array('lang' => 'Can attach files in private messages', 'cat' => 'pm'),
+	'acl_u_pm_download'	=> array('lang' => 'Can download files in private messages', 'cat' => 'pm'),
+	'acl_u_pm_bbcode'	=> array('lang' => 'Can post BBCode in private messages', 'cat' => 'pm'),
+	'acl_u_pm_smilies'	=> array('lang' => 'Can post smilies in private messages', 'cat' => 'pm'),
+	'acl_u_pm_img'		=> array('lang' => 'Can post images in private messages', 'cat' => 'pm'),
+	'acl_u_pm_flash'	=> array('lang' => 'Can post Flash in private messages', 'cat' => 'pm'),
+
+	'acl_u_sendemail'	=> array('lang' => 'Can send emails', 'cat' => 'misc'),
+	'acl_u_sendim'		=> array('lang' => 'Can send instant messages', 'cat' => 'misc'),
+	'acl_u_ignoreflood'	=> array('lang' => 'Can ignore flood limit', 'cat' => 'misc'),
+	'acl_u_hideonline'	=> array('lang' => 'Can hide online status', 'cat' => 'misc'),
+	'acl_u_viewonline'	=> array('lang' => 'Can view all online', 'cat' => 'misc'),
+	'acl_u_search'		=> array('lang' => 'Can search board', 'cat' => 'misc'),
+);
+
+// Forum Permissions
+$this->lang += array(
+	'acl_f_list'		=> array('lang' => 'Can see forum', 'cat' => 'post'),
+	'acl_f_read'		=> array('lang' => 'Can read forum', 'cat' => 'post'),
+	'acl_f_post'		=> array('lang' => 'Can post in forum', 'cat' => 'post'),
+	'acl_f_announce'	=> array('lang' => 'Can post announcements', 'cat' => 'post'),
+	'acl_f_sticky'		=> array('lang' => 'Can post stickies', 'cat' => 'post'),
+	'acl_f_reply'		=> array('lang' => 'Can reply to posts', 'cat' => 'post'),
+	'acl_f_icons'		=> array('lang' => 'Can use post icons', 'cat' => 'post'),
+
+	'acl_f_poll'		=> array('lang' => 'Can create polls', 'cat' => 'polls'),
+	'acl_f_vote'		=> array('lang' => 'Can vote in polls', 'cat' => 'polls'),
+	'acl_f_votechg'		=> array('lang' => 'Can change existing vote', 'cat' => 'polls'),
+
+	'acl_f_attach'		=> array('lang' => 'Can attach files', 'cat' => 'content'),
+	'acl_f_download'	=> array('lang' => 'Can download files', 'cat' => 'content'),
+	'acl_f_sigs'		=> array('lang' => 'Can use signatures', 'cat' => 'content'),
+	'acl_f_bbcode'		=> array('lang' => 'Can post BBCode', 'cat' => 'content'),
+	'acl_f_smilies'		=> array('lang' => 'Can post smilies', 'cat' => 'content'),
+	'acl_f_img'			=> array('lang' => 'Can post images', 'cat' => 'content'),
+	'acl_f_flash'		=> array('lang' => 'Can post Flash', 'cat' => 'content'),
+
+	'acl_f_edit'		=> array('lang' => 'Can edit own posts', 'cat' => 'actions'),
+	'acl_f_delete'		=> array('lang' => 'Can delete own posts', 'cat' => 'actions'),
+	'acl_f_user_lock'	=> array('lang' => 'Can lock own topics', 'cat' => 'actions'),
+	'acl_f_bump'		=> array('lang' => 'Can bump topics', 'cat' => 'actions'),
+	'acl_f_report'		=> array('lang' => 'Can report posts', 'cat' => 'actions'),
+	'acl_f_subscribe'	=> array('lang' => 'Can subscribe forum', 'cat' => 'actions'),
+	'acl_f_print'		=> array('lang' => 'Can print topics', 'cat' => 'actions'),
+	'acl_f_email'		=> array('lang' => 'Can email topics', 'cat' => 'actions'),
+
+	'acl_f_search'		=> array('lang' => 'Can search the forum', 'cat' => 'misc'),
+	'acl_f_ignoreflood' => array('lang' => 'Can ignore flood limit', 'cat' => 'misc'),
+	'acl_f_postcount'	=> array('lang' => 'Increment post counter', 'cat' => 'misc'),
+	'acl_f_noapprove'	=> array('lang' => 'Can post without approval', 'cat' => 'misc'),
+);
+
+// Moderator Permissions
+$this->lang += array(
+	'acl_m_edit'		=> array('lang' => 'Can edit posts', 'cat' => 'post_actions'),
+	'acl_m_delete'		=> array('lang' => 'Can delete posts', 'cat' => 'post_actions'),
+	'acl_m_approve'		=> array('lang' => 'Can approve posts', 'cat' => 'post_actions'),
+	'acl_m_report'		=> array('lang' => 'Can close and delete reports', 'cat' => 'post_actions'),
+	'acl_m_chgposter'	=> array('lang' => 'Can change post author', 'cat' => 'post_actions'),
+
+	'acl_m_move'	=> array('lang' => 'Can move topics', 'cat' => 'topic_actions'),
+	'acl_m_lock'	=> array('lang' => 'Can lock topics', 'cat' => 'topic_actions'),
+	'acl_m_split'	=> array('lang' => 'Can split topics', 'cat' => 'topic_actions'),
+	'acl_m_merge'	=> array('lang' => 'Can merge topics', 'cat' => 'topic_actions'),
+
+	'acl_m_info'	=> array('lang' => 'Can view post details', 'cat' => 'misc'),
+	'acl_m_warn'	=> array('lang' => 'Can issue warnings', 'cat' => 'misc'),
+	'acl_m_ban'		=> array('lang' => 'Can manage bans', 'cat' => 'misc'), // This moderator setting is only global (and not local)
+);
+
+// Admin Permissions
+$this->lang += array(
+	'acl_a_board'		=> array('lang' => 'Can alter board settings', 'cat' => 'settings'),
+	'acl_a_server'		=> array('lang' => 'Can alter server/communication settings', 'cat' => 'settings'),
+	'acl_a_jabber'		=> array('lang' => 'Can alter jabber settings', 'cat' => 'settings'),
+	'acl_a_phpinfo'		=> array('lang' => 'Can view php settings', 'cat' => 'settings'),
+
+	'acl_a_forum'		=> array('lang' => 'Can manage forums', 'cat' => 'forums'),
+	'acl_a_forumadd'	=> array('lang' => 'Can add new forums', 'cat' => 'forums'),
+	'acl_a_forumdel'	=> array('lang' => 'Can delete forums', 'cat' => 'forums'),
+	'acl_a_prune'		=> array('lang' => 'Can prune forums', 'cat' => 'forums'),
+
+	'acl_a_icons'		=> array('lang' => 'Can alter topic icons and smilies', 'cat' => 'posting'),
+	'acl_a_words'		=> array('lang' => 'Can alter word censors', 'cat' => 'posting'),
+	'acl_a_bbcode'		=> array('lang' => 'Can define BBCode tags', 'cat' => 'posting'),
+	'acl_a_attach'		=> array('lang' => 'Can alter attachment related settings', 'cat' => 'posting'),
+
+	'acl_a_user'		=> array('lang' => 'Can manage users', 'cat' => 'user_group'),
+	'acl_a_userdel'		=> array('lang' => 'Can delete/prune users', 'cat' => 'user_group'),
+	'acl_a_group'		=> array('lang' => 'Can manage groups', 'cat' => 'user_group'),
+	'acl_a_groupadd'	=> array('lang' => 'Can add new groups', 'cat' => 'user_group'),
+	'acl_a_groupdel'	=> array('lang' => 'Can delete groups', 'cat' => 'user_group'),
+	'acl_a_ranks'		=> array('lang' => 'Can manage ranks', 'cat' => 'user_group'),
+	'acl_a_profile'		=> array('lang' => 'Can manage custom profile fields', 'cat' => 'user_group'),
+	'acl_a_names'		=> array('lang' => 'Can manage disallowed names', 'cat' => 'user_group'),
+	'acl_a_ban'			=> array('lang' => 'Can manage bans', 'cat' => 'user_group'),
+
+	'acl_a_viewauth'	=> array('lang' => 'Can view permission masks', 'cat' => 'permissions'),
+	'acl_a_fauth'		=> array('lang' => 'Can alter forum permissions', 'cat' => 'permissions'),
+	'acl_a_mauth'		=> array('lang' => 'Can alter moderator permissions', 'cat' => 'permissions'),
+	'acl_a_aauth'		=> array('lang' => 'Can alter admin permissions', 'cat' => 'permissions'),
+	'acl_a_uauth'		=> array('lang' => 'Can alter user permissions', 'cat' => 'permissions'),
+	'acl_a_authgroups'	=> array('lang' => 'Can alter permissions for groups', 'cat' => 'permissions'),
+	'acl_a_authusers'	=> array('lang' => 'Can alter permissions for users', 'cat' => 'permissions'),
+	'acl_a_roles'		=> array('lang' => 'Can manage roles', 'cat' => 'permissions'),
+	'acl_a_switchperm'	=> array('lang' => 'Can use others permissions', 'cat' => 'permissions'),
+
+	'acl_a_styles'		=> array('lang' => 'Can manage styles', 'cat' => 'misc'),
+	'acl_a_viewlogs'	=> array('lang' => 'Can view logs', 'cat' => 'misc'),
+	'acl_a_clearlogs'	=> array('lang' => 'Can clear logs', 'cat' => 'misc'),
+	'acl_a_modules'		=> array('lang' => 'Can manage modules', 'cat' => 'misc'),
+	'acl_a_language'	=> array('lang' => 'Can manage language packs', 'cat' => 'misc'),
+	'acl_a_email'		=> array('lang' => 'Can send mass email', 'cat' => 'misc'),
+	'acl_a_bots'		=> array('lang' => 'Can manage bots', 'cat' => 'misc'),
+	'acl_a_reasons'		=> array('lang' => 'Can manage report/denial reasons', 'cat' => 'misc'),
+	'acl_a_backup'		=> array('lang' => 'Can backup database', 'cat' => 'misc'),
+#	'acl_a_restore'		=> array('lang' => 'Can restore database', 'cat' => 'misc'),
+	'acl_a_search'		=> array('lang' => 'Can manage search backends and settings', 'cat' => 'misc'),
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/help_bbcode.php
===================================================================
--- cms/trunk/modules/forums/language/help_bbcode.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/help_bbcode.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,99 @@
+<?php
+// -------------------------------------------------------------
+//
+// $Id: help_bbcode.php,v 1.1 2004/02/28 21:16:15 acydburn Exp $
+//
+// FILENAME  : help_bbcode.php [ English ]
+// STARTED   : Sat Dec 16, 2000
+// COPYRIGHT : ? 2001, 2003 phpBB Group
+// WWW       : http://www.phpbb.com/
+// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
+// 
+// -------------------------------------------------------------
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang['help'] = array(
+	array(
+		0 => '--',
+		1 => 'Introduction'
+	),
+	array(
+		0 => 'What is BBCode?',
+		1 => 'BBCode is a special implementation of HTML. Whether you can actually use BBCode in your posts on the forum is determined by the administrator. In addition you can disable BBCode on a per post basis via the posting form. BBCode itself is similar in style to HTML, tags are enclosed in square braces [ and ] rather than &lt; and &gt; and it offers greater control over what and how something is displayed. Depending on the template you are using you may find adding BBCode to your posts is made much easier through a clickable interface above the message area on the posting form. Even with this you may find the following guide useful.'
+	),
+	array(
+		0 => '--',
+		1 => 'Text Formatting'
+	),
+	array(
+		0 => 'How to create bold, italic and underlined text',
+		1 => 'BBCode includes tags to allow you to quickly change the basic style of your text. This is achieved in the following ways: <ul><li>To make a piece of text bold enclose it in <strong>[b][/b]</strong>, eg. <br /><br /><strong>[b]</strong>Hello<strong>[/b]</strong><br /><br />will become <strong>Hello</strong></li><li>For underlining use <strong>[u][/u]</strong>, for example:<br /><br /><strong>[u]</strong>Good Morning<strong>[/u]</strong><br /><br />becomes <u>Good Morning</u></li><li>To italicise text use <strong>[i][/i]</strong>, eg.<br /><br />This is <strong>[i]</strong>Great!<strong>[/i]</strong><br /><br />would give This is <i>Great!</i></li></ul>'
+	),
+	array(
+		0 => 'How to change the text colour or size',
+		1 => 'To alter the color or size of your text the following tags can be used. Keep in mind that how the output appears will depend on the viewers browser and system: <ul><li>Changing the colour of text is achieved by wrapping it in <strong>[color=][/color]</strong>. You can specify either a recognised colour name (eg. red, blue, yellow, etc.) or the hexadecimal triplet alternative, eg. #FFFFFF, #000000. For example, to create red text you could use:<br /><br /><strong>[color=red]</strong>Hello!<strong>[/color]</strong><br /><br />or<br /><br /><strong>[color=#FF0000]</strong>Hello!<strong>[/color]</strong><br /><br />will both output <span style="color:red">Hello!</span></li><li>Changing the text size is achieved in a similar way using <strong>[size=][/size]</strong>. This tag is dependent on the template you are using but the recommended format is a numerical value representing the text size in pixels, starting at 1 (so tiny you will not see it) through to 29 (very large!
 ). For example:<br /><br /><strong>[size=9]</strong>SMALL<strong>[/size]</strong><br /><br />will generally be <span style="font-size:9px;">SMALL</span><br /><br />whereas:<br /><br /><strong>[size=24]</strong>HUGE!<strong>[/size]</strong><br /><br />will be <span style="font-size:24px;">HUGE!</span></li></ul>'
+	),
+	array(
+		0 => 'Can I combine formatting tags?',
+		1 => 'Yes, of course you can, for example to get someones attention you may write:<br /><br /><strong>[size=18][color=red][b]</strong>LOOK AT ME!<strong>[/b][/color][/size]</strong><br /><br />this would output <span style="color:red;font-size:18px;"><strong>LOOK AT ME!</strong></span><br /><br />We don\'t recommend you output lots of text that looks like this though! Remember it is up to you, the poster to ensure tags are closed correctly. For example the following is incorrect:<br /><br /><strong>[b][u]</strong>This is wrong<strong>[/b][/u]</strong>'
+	),
+	array(
+		0 => '--',
+		1 => 'Quoting and outputting fixed-width text'
+	),
+	array(
+		0 => 'Quoting text in replies',
+		1 => 'There are two ways you can quote text, with a reference or without.<ul><li>When you utilise the Quote function to reply to a post on the board you should notice that the post text is added to the message window enclosed in a <strong>[quote=""][/quote]</strong> block. This method allows you to quote with a reference to a person or whatever else you choose to put! For example to quote a piece of text Mr. Blobby wrote you would enter:<br /><br /><strong>[quote="Mr. Blobby"]</strong>The text Mr. Blobby wrote would go here<strong>[/quote]</strong><br /><br />The resulting output will automatically add, Mr. Blobby wrote: before the actual text. Remember you <strong>must</strong> include the parenthesis "" around the name you are quoting, they are not optional.</li><li>The second method allows you to blindly quote something. To utilise this enclose the text in <strong>[quote][/quote]</strong> tags. When you view the message it will simply show, Quote: before the text itsel!
 f.</li></ul>'
+	),
+	array(
+		0 => 'Outputting code or fixed width data',
+		1 => 'If you want to output a piece of code or in fact anything that requires a  fixed width, eg. Courier type font you should enclose the text in <strong>[code][/code]</strong> tags, eg.<br /><br /><strong>[code]</strong>echo "This is some code";<strong>[/code]</strong><br /><br />All formatting used within <strong>[code][/code]</strong> tags is retained when you later view it.'
+	),
+	array(
+		0 => '--',
+		1 => 'Generating lists'
+	),
+	array(
+		0 => 'Creating an Un-ordered list',
+		1 => 'BBCode supports two types of lists, unordered and ordered. They are essentially the same as their HTML equivalents. An unordered list ouputs each item in your list sequentially one after the other indenting each with a bullet character. To create an unordered list you use <strong>[list][/list]</strong> and define each item within the list using <strong>[*]</strong>. For example to list your favorite colours you could use:<br /><br /><strong>[list]</strong><br /><strong>[*]</strong>Red<br /><strong>[*]</strong>Blue<br /><strong>[*]</strong>Yellow<br /><strong>[/list]</strong><br /><br />This would generate the following list:<ul><li>Red</li><li>Blue</li><li>Yellow</li></ul>'
+	),
+	array(
+		0 => 'Creating an Ordered list',
+		1 => 'The second type of list, an ordered list gives you control over what is output before each item. To create an ordered list you use <strong>[list=1][/list]</strong> to create a numbered list or alternatively <strong>[list=a][/list]</strong> for an alphabetical list. As with the unordered list items are specified using <strong>[*]</strong>. For example:<br /><br /><strong>[list=1]</strong><br /><strong>[*]</strong>Go to the shops<br /><strong>[*]</strong>Buy a new computer<br /><strong>[*]</strong>Swear at computer when it crashes<br /><strong>[/list]</strong><br /><br />will generate the following:<ol type="1"><li>Go to the shops</li><li>Buy a new computer</li><li>Swear at computer when it crashes</li></ol>Whereas for an alphabetical list you would use:<br /><br /><strong>[list=a]</strong><br /><strong>[*]</strong>The first possible answer<br /><strong>[*]</strong>The second possible answer<br /><strong>[*]</strong>The third possible answer<br /><strong>[/list]</stro!
 ng><br /><br />giving<ol type="a"><li>The first possible answer</li><li>The second possible answer</li><li>The third possible answer</li></ol>'
+	),
+	array(
+		0 => '--',
+		1 => 'Creating Links'
+	),
+	array(
+		0 => 'Linking to another site',
+		1 => 'phpBB BBCode supports a number of ways of creating URIs, Uniform Resource Indicators better known as URLs.<ul><li>The first of these uses the <strong>[url=][/url]</strong> tag, whatever you type after the = sign will cause the contents of that tag to act as a URL. For example to link to phpBB.com you could use:<br /><br /><strong>[url=http://www.phpbb.com/]</strong>Visit phpBB!<strong>[/url]</strong><br /><br />This would generate the following link, <a href="http://www.phpbb.com/" target="_blank">Visit phpBB!</a> You will notice the link opens in a new window so the user can continue browsing the forums if they wish.</li><li>If you want the URL itself displayed as the link you can do this by simply using:<br /><br /><strong>[url]</strong>http://www.phpbb.com/<strong>[/url]</strong><br /><br />This would generate the following link, <a href="http://www.phpbb.com/" target="_blank">http://www.phpbb.com/</a></li><li>Additionally phpBB features something called <i>Magic!
  Links</i>, this will turn any syntatically correct URL into a link without you needing to specify any tags or even the leading http://. For example typing www.phpbb.com into your message will automatically lead to <a href="http://www.phpbb.com/" target="_blank">www.phpbb.com</a> being output when you view the message.</li><li>The same thing applies equally to email addresses, you can either specify an address explicitly for example:<br /><br /><strong>[email]</strong>no.one at domain.adr<strong>[/email]</strong><br /><br />which will output <a href="emailto:no.one at domain.adr">no.one at domain.adr</a> or you can just type no.one at domain.adr into your message and it will be automatically converted when you view.</li></ul>As with all the BBCode tags you can wrap URLs around any of the other tags such as <strong>[img][/img]</strong> (see next entry), <strong>[b][/b]</strong>, etc. As with the formatting tags it is up to you to ensure the correct open and close order is following, for!
  example:<br /><br /><strong>[url=http://www.phpbb.com/][img]<!
 /strong>
http://www.phpbb.com/images/phplogo.gif<strong>[/url][/img]</strong><br /><br />is <u>not</u> correct which may lead to your post being deleted so take care.'
+	),
+	array(
+		0 => '--',
+		1 => 'Showing images in posts'
+	),
+	array(
+		0 => 'Adding an image to a post',
+		1 => 'phpBB BBCode incorporates a tag for including images in your posts. Two very important things to remember when using this tag are; many users do not appreciate lots of images being shown in posts and secondly the image you display must already be available on the internet (it cannot exist only on your computer for example, unless you run a webserver!). There is currently no way of storing images locally with phpBB (all these issues are expected to  be addressed in the next release of phpBB). To display an image you must surround the URL pointing to the image with <strong>[img][/img]</strong> tags. For example:<br /><br /><strong>[img]</strong>http://www.phpbb.com/images/phplogo.gif<strong>[/img]</strong><br /><br />As noted in the URL section above you can wrap an image in a <strong>[url][/url]</strong> tag if you wish, eg.<br /><br /><strong>[url=http://www.phpbb.com/][img]</strong>http://www.phpbb.com/images/phplogo.gif<strong>[/img][/url]</strong><br /><br />woul!
 d generate:<br /><br /><a href="http://www.phpbb.com/" target="_blank"><img src="http://www.phpbb.com/images/phplogo.gif" border="0" alt="" /></a><br />'
+	),
+	array(
+		0 => '--',
+		1 => 'Other matters'
+	),
+	array(
+		0 => 'Can I add my own tags?',
+		1 => 'No, I am afraid not directly in phpBB 2.0. We are looking at offering customisable BBCode tags for the next major version'
+	)
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/help_faq.php
===================================================================
--- cms/trunk/modules/forums/language/help_faq.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/help_faq.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,211 @@
+<?php
+// -------------------------------------------------------------
+//
+// $Id: help_faq.php,v 1.2 2004/08/01 15:38:03 acydburn Exp $
+//
+// FILENAME  : help_faq.php [ English ]
+// STARTED   : Sat Dec 16, 2000
+// COPYRIGHT : ? 2001, 2003 phpBB Group
+// WWW       : http://www.phpbb.com/
+// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
+// 
+// -------------------------------------------------------------
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang['help'] = array(
+	array(
+		0 => '--',
+		1 => 'Login and Registration Issues'
+	),
+	array(
+		0 => 'Why can\'t I login?',
+		1 => 'Have you registered? Seriously, you must register in order to login. Have you been banned from the board (a message will be displayed if you have)? If so then you should contact the webmaster or board administrator to find out why. If you have registered and are not banned and you still cannot login then check and double check your username and password. Usually this is the problem, if not then contact the board administrator they may have incorrect configuration settings for the board.'
+	),
+	array(
+		0 => 'Why do I need to register at all?',
+		1 => 'You may not have too, it is up to the administrator of the board as to whether you need to register in order to post messages. However registration will give you access to additional features not available to guest users such as definable avatar images, private messaging, emailing of fellow users, usergroup subscription, etc. It only takes a few moments to register so it is recommended you do so.'
+	),
+	array(
+		0 => 'Why do I get logged off automatically?',
+		1 => 'If you do not check the <i>Log me in automatically</i> box when you login the board will only keep you logged in for a preset time. This prevents misuse of your account by anyone else. To stay logged in check the box during login, this is not recommended if you access the board from a shared computer, e.g. library, internet cafe, university cluster, etc.'
+	),
+	array(
+		0 => 'How do I prevent my username appearing in the online user listings?',
+		1 => 'In your profile you will find an option <i>Hide your online status</i>, if you switch this <i>on</i> you\'ll only appear to board administrators or to yourself. You will be counted as a hidden user.'
+	),
+	array(
+		0 => 'I\'ve lost my password!',
+		1 => 'Don\'t panic! While your password cannot be retrieved it can be reset. To do this go to the login page and click <u>I\'ve forgotten my password</u>, follow the instructions and you should be back online in no time'
+	),
+	array(
+		0 => 'I registered but cannot login!',
+		1 => 'Firstly check your are entering the correct username and password. If they are okay then one of two things may have happened. If COPPA support is enabled and you clicked the <u>I am under 13 years old</u> link while registering then you will have to follow the instructions you received. If this is not the case then does your account need activating? Some boards will require all new registrations be activated, either by yourself or by the administrator before you can logon. When you registered it would have told you whether activation was required. If you were sent an email then follow the instructions, if you did not receive the email then are you sure your email address is valid? One reason activation is used is to reduce the possibility of <i>rouge</i> users abusing the board anonymously. If you are sure the email address you used is valid then try contacting the board administrator.'
+	),
+	array(
+		0 => 'I registered in the past but cannot login any more?!',
+		1 => 'The most likely reasons for this are; you entered an incorrect username or password (check the email you were sent when you first registered) or the administrator has deleted your account for some reason. If it is the later case then perhaps you did not post anything? It is usual for boards to periodically remove users who have not posted anything so as to reduce the size of the database. Try registering again and get involved in discussions.'
+	),
+	array(
+		0 => '--',
+		1 => 'User Preferences and settings'
+	),
+	array(
+		0 => 'How do I change my settings?',
+		1 => 'All your settings (if you are registered) are stored in the database. To alter them click the <u>Profile</u> link (generally shown at the top of pages but this may not be the case). This will allow you to change all your settings'
+	),
+	array(
+		0 => 'The times are not correct!',
+		1 => 'The times are almost certainly correct, however what you may be seeing are times displayed in a timezone different from the one you are in. If this is the case you should change your profile setting for the timezone to match your particular area, e.g. London, Paris, New York, Sydney, etc. Please note that changing the timezone, like most settings can only be done by registered users. So if you are not registered this is a good time to do so, if you pardon the pun!'
+	),
+	array(
+		0 => 'I changed the timezone and the time is still wrong!',
+		1 => 'If you are sure you have set the timezone correctly and the time is still different the most likely answer is daylight savings time (or summer time as it is known in the UK and other places). The board is not designed to handle the changeovers between standard and daylight time so during summer months the time may be an hour different from the real local time.'
+	),
+	array(
+		0 => 'My language is not in the list!',
+		1 => 'The most likely reasons for this are either the administrator did not install your language or someone has not translated this board into your language. Try asking the board administrator if they can install the language pack you need, if it does not exist then please feel free to create a new translation. More information can be found at the phpBB Group website (see link at bottom of pages)'
+	),
+	array(
+		0 => 'How do I show an image below my username?',
+		1 => 'There may be two images below a username when viewing posts. The first is an image associated with your rank, generally these take the form of stars or blocks indicating how many posts you have made or your status on the forums. Below this may be a larger image known as an avatar, this is generally unique or personal to each user. It is up to the board administrator to enable avatars and they have a choice over the way in which avatars can be made available. If you are unable to use avatars then this is the decision of the board admin, you should ask them their reasons (we\'re sure they\'ll be good!)'
+	),
+	array(
+		0 => 'How do I change my rank?',
+		1 => 'In general you cannot directly change the wording of any rank (ranks appear below your username in topics and on your profile depending on the style used). Most boards use ranks to indicate the number of posts you have made and to identify certain users, e.g. moderators and administrators may have a special rank. Please do not abuse the board by posting unnecessarily just to increase your rank, you will probably find the moderator or administrator will simply lower your post count.'
+	),
+	array(
+		0 => 'When I click the email link for a user it asks me to login?',
+		1 => 'Sorry but only registered users can send email to people via the built-in email form (if the admin has enabled this feature). This is to prevent malicious use of the email system by anonymous users.'
+	),
+	array(
+		0 => '--',
+		1 => 'Posting Issues'
+	),
+	array(
+		0 => 'How do I post a topic in a forum?',
+		1 => 'Easy, click the relevant button on either the forum or topic screens. You may need to register before you can post a message, the facilities available to you are listed at the bottom of the forum and topic screens (the <i>You can post new topics, You can vote in polls, etc.</i> list)'
+	),
+	array(
+		0 => 'How do I edit or delete a post?',
+		1 => 'Unless you are the board admin or forum moderator you can only edit or delete your own posts. You can edit a post (sometimes for only a limited time after it was made) by clicking the <i>edit</i> button for the relevant post.  If someone has already replied to the post you will find a small piece of text output below the post when you return to the topic, this lists the number of times you edited it. This will only appear if no one has replied, it also will not appear if moderators or administrators edit the post (they should leave a message saying what they altered and why). Please note that normal users cannot delete a post once someone has replied.'
+	),
+	array(
+		0 => 'How do I add a signature to my post?',
+		1 => 'To add a signature to a post you must first create one, this is done via your profile. Once created you can check the <i>Add Signature</i> box on the posting form to add your signature. You can also add a signature by default to all your posts by checking the appropriate radio box in your profile (you can still prevent a signature being added to individual posts by un-checking the add signature box on the posting form)'
+	),
+	array(
+		0 => 'How do I create a poll?',
+		1 => 'Creating a poll is easy, when you post a new topic (or edit the first post of a topic, if you have permission) you should see a <i>Add Poll</i> form below the main posting box (if you cannot see this then you probably do not have rights to create polls). You should enter a title for the poll and then at least two options (to set an option type in the poll question and click the <i>Add option</i> button. You can also set a time limit for the poll, 0 is an infinite poll. There will be a limit to the number of options you can list, this is set by the board administrator'
+	),
+	array(
+		0 => 'How do I edit or delete a poll?',
+		1 => 'As with posts, polls can only be edited by the original poster, a moderator or board admin. To edit a poll click the first post in the topic (this always has the poll associated with it). If no one has cast a vote then users can delete the poll or edit any poll option, however if people have already placed votes only moderators or administrators can edit or delete it. This is to prevent people rigging polls by changing options mid-way through a poll'
+	),
+	array(
+		0 => 'Why can\'t I access a forum?',
+		1 => 'Some forums may be limited to certain users or groups. To view, read, post, etc. you may need special authorisation, only the forum moderator and board admin can grant this access, you should contact them.'
+	),
+	array(
+		0 => 'Why can\'t I vote in polls?',
+		1 => 'Only registered users can vote in polls (so as to prevent spoofing of results). If you have registered and still cannot vote then you probably do not have appropriate access rights.'
+	),
+	array(
+		0 => '--',
+		1 => 'Formatting and Topic Types'
+	),
+	array(
+		0 => 'What is BBCode?',
+		1 => 'BBCode is a special implementation of HTML, whether you can use BBCode is determined by the administrator (you can also disable it on a per post basis from the posting form). BBCode itself is similar in style to HTML, tags are enclosed in square braces [ and ] rather than &lt; and &gt; and it offers greater control over what and how something is displayed. For more information on BBCode see the guide which can be accessed from the posting page.'
+	),
+	array(
+		0 => 'Can I use HTML?',
+		1 => '...'
+	),
+	array(
+		0 => 'What are Smileys?',
+		1 => 'Smileys, or Emoticons are small graphical images which can be used to express some feeling using a short code, e.g. :) means happy, :( means sad. The full list of emoticons can be seen via the posting form. Try not to overuse smileys though, they can quickly render a post unreadable and a moderator may decide to edit them out or remove the post altogether'
+	),
+	array(
+		0 => 'Can I post Images?',
+		1 => 'Images can indeed be shown in your posts. However, there is no facility at present for uploading images directly to this board. Therefore you must link to an image stored on a publicly accessible web server, e.g. http://www.some-unknown-place.net/my-picture.gif. You cannot link to pictures stored on your own PC (unless it is a publicly accessible server) nor images stored behind authentication mechanisms, e.g. hotmail or yahoo mailboxes, password protected sites, etc. To display the image use either the BBCode [img] tag or appropriate HTML (if allowed).'
+	),
+	array(
+		0 => 'What are Announcements?',
+		1 => 'Announcements often contain important information and you should read them as soon as possible. Announcements appear at the top of every page in the forum to which they are posted. Whether or not you can post an announcement depends on the permissions required, these are set by the administrator.'
+	),
+	array(
+		0 => 'What are Sticky topics?',
+		1 => 'Sticky topics appear below any announcements in viewforum and only on the first page. They are often quite important so you should read them where possible. As with announcements the board administrator determines what permissions are required to post sticky topics in each forum.'
+	),
+	array(
+		0 => 'What are Locked topics?',
+		1 => 'Locked topics are set this way by either the forum moderator or board administrator. You cannot reply to locked topics and any poll it contained is automatically ended. Topics may be locked for many reasons.'
+	),
+	array(
+		0 => '--',
+		1 => 'User Levels and Groups'
+	),
+	array(
+		0 => 'What are Administrators?',
+		1 => 'Administrators are people assigned the highest level of control over the entire board. These people can control all facets of board operation which includes setting permissions, banning users, creating usergroups or moderators, etc. They also have full moderator capabilities in all the forums.'
+	),
+	array(
+		0 => 'What are Moderators?',
+		1 => 'Moderators are individuals (or groups of individuals) whose job it is to look after the running of the forums from day to day. They have the power to edit or delete posts and lock, unlock, move, delete and split topics in the forum they moderate. Generally moderators are there to prevent people going <i>off-topic</i> or posting abusive or offensive material.'
+	),
+	array(
+		0 => 'What are Usergroups?',
+		1 => 'Usergroups are a way in which board administrators can group users. Each user can belong to several groups (this differs from most other boards) and each group can be assigned individual access rights. This makes it easy for administrators to set up several users as moderators of a forum, or to give them access to a private forum, etc.'
+	),
+	array(
+		0 => 'How do I join a Usergroup?',
+		1 => 'To join a usergroup click the usergroup link on the page header (dependent on template design), you can then view all usergroups. Not all groups are <i>open access</i>, some are closed and some may even have hidden memberships. If the board is open then you can request to join it by clicking the appropriate button. The user group moderator will need to approve your request, they may ask why you want to join the group. Please do not pester a group moderator if they turn your request down, they will have their reasons.'
+	),
+	array(
+		0 => 'How do I become a Usergroup Moderator?',
+		1 => 'Usergroups are initially created by the board admin, they also assign a board moderator. If you are interested in creating a usergroup then your first point of contact should be the admin, try dropping them a private message.'
+	),
+	array(
+		0 => '--',
+		1 => 'Private Messaging'
+	),
+	array(
+		0 => 'I cannot send private messages!',
+		1 => 'There are three reasons for this; you are not registered and/or not logged on, the board administrator has disabled private messaging for the entire board or the board administrator has prevented you from sending messages. If it is the later case you should try asking the administrator why.'
+	),
+	array(
+		0 => 'I keep getting unwanted private messages!',
+		1 => 'In the future we will be adding an ignore list to the private messaging system. For now though if you keep receiving unwanted private messages from someone inform the board admin, they have the power to prevent a user from sending private messages at all.'
+	),
+	array(
+		0 => 'I have received a spamming or abusive email from someone on this board!',
+		1 => 'We are sorry to hear that. The email form feature of this board includes safeguards to try and track users who send such posts. You should email the board administrator with a full copy of the email you received, it is very important this include the headers (these list details of the user that sent the email). They can then take action.'
+	),
+	array(
+		0 => '--',
+		1 => 'phpBB 2 Issues'
+	),
+	array(
+		0 => 'Who wrote this bulletin board?',
+		1 => 'This software (in its unmodified form) is produced, released and is copyright  <a href="http://www.phpbb.com/" target="_blank">phpBB Group</a>. It is made available under the GNU General Public Licence and may be freely distributed, see link for more details'
+	),
+	array(
+		0 => 'Why isn\'t X feature available?',
+		1 => 'This software was written by and licensed through phpBB Group. If you believe a feature needs to be added then please visit the phpbb.com website and see what phpBB Group have to say. Please do not post feature requests to the board at phpbb.com, the Group uses sourceforge to handle tasking of new features. Please read through the forums and see what, if any, our position may already be for a feature and then follow the procedure given there.'
+	),
+	array(
+		0 => 'Who do I contact about abusive and/or legal matters related to this board?',
+		1 => 'You should contact the administrator of this board. If you cannot find who this you should first contact one of the forum moderators and ask them who you should in turn contact. If still get no response you should contact the owner of the domain (do a whois lookup) or, if this is running on a free service (e.g. yahoo, free.fr, f2s.com, etc.), the management or abuse department of that service. Please note that phpBB Group has absolutely no control and cannot in any way be held liable over how, where or by whom this board is used. It is absolutely pointless contacting phpBB Group in relation to any legal (cease and desist, liable, defamatory comment, etc.) matter not directly related to the phpbb.com website or the discrete software of phpBB itself. If you do email phpBB Group about any third party use of this software then you should expect a terse response or no response at all.'
+	)
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/index.htm
===================================================================
--- cms/trunk/modules/forums/language/index.htm	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/index.htm	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,10 @@
+<html>
+<head>
+<title></title>
+<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
+</head>
+
+<body bgcolor="#FFFFFF" text="#000000">
+
+</body>
+</html>

Added: cms/trunk/modules/forums/language/mcp.php
===================================================================
--- cms/trunk/modules/forums/language/mcp.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/mcp.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,342 @@
+<?php
+/** 
+*
+* mcp [English]
+*
+* @package language
+* @version $Id: mcp.php,v 1.50 2006/08/12 19:36:36 acydburn Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+// DEVELOPERS PLEASE NOTE
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang += array(
+	'ACTION'				=> 'Action',
+	'ADD_FEEDBACK'			=> 'Add feedback',
+	'ADD_FEEDBACK_EXPLAIN'	=> 'If you would like to add a report on this please fill out the following form. Only use plain text; HTML, BBCode, etc. are not permitted.',
+	'ADD_WARNING'			=> 'Add warning',
+	'ADD_WARNING_EXPLAIN'	=> 'To send a warning to this user please fill out the following form. Only use plain text; HTML, BBCode, etc. are not permitted.',
+	'ALL_ENTRIES'			=> 'All entries',
+	'ALL_NOTES_DELETED'		=> 'Successfully removed all user notes',
+	'ALL_REPORTS'			=> 'All reports',
+	'ALREADY_REPORTED'		=> 'This post has already been reported',
+	'ALREADY_WARNED'		=> 'A warning has already been issued for this post',
+	'APPROVE'				=> 'Approve',
+	'APPROVE_POST'			=> 'Approve post',
+	'APPROVE_POST_CONFIRM'	=> 'Are you sure you want to approve this post?',
+	'APPROVE_POSTS'			=> 'Approve posts',
+	'APPROVE_POSTS_CONFIRM'	=> 'Are you sure you want to approve the selected posts?',
+
+	'CANNOT_MOVE_SAME_FORUM'=> 'You cannot move a topic to the forum it\'s already in',
+	'CANNOT_WARN_ANONYMOUS'	=> 'You cannot warn an guest user',
+	'CANNOT_WARN_SELF'		=> 'You cannot warn yourself',
+	'CAN_LEAVE_BLANK'		=> 'This can be left blank.',
+	'CHANGE_POSTER'			=> 'Change poster',
+	'CLOSE_REPORT'			=> 'Close report',
+	'CLOSE_REPORT_CONFIRM'	=> 'Are you sure you want to close the selected report?',
+	'CLOSE_REPORTS'			=> 'Close reports',
+	'CLOSE_REPORTS_CONFIRM'	=> 'Are you sure you want to close the selected reports?',
+
+	'DELETE_POSTS'			=> 'Delete posts',
+	'DELETE_POSTS_CONFIRM'	=> 'Are you sure you want to delete these posts?',
+	'DELETE_POST_CONFIRM'	=> 'Are you sure you want to delete this post?',
+	'DELETE_REPORT'			=> 'Delete report',
+	'DELETE_REPORT_CONFIRM'	=> 'Are you sure you want to delete the selected report?',
+	'DELETE_REPORTS'		=> 'Delete reports',
+	'DELETE_REPORTS_CONFIRM'	=> 'Are you sure you want to delete the selected reports?',
+	'DELETE_TOPICS'			=> 'Delete selected topics',
+	'DELETE_TOPICS_CONFIRM'	=> 'Are you sure you want to delete these topics?',
+	'DELETE_TOPIC_CONFIRM'	=> 'Are you sure you want to delete this topic?',
+	'DISAPPROVE'			=> 'Disapprove',
+	'DISAPPROVE_REASON'		=> 'Reason for disapproval',
+	'DISAPPROVE_POST'		=> 'Disapprove post',
+	'DISAPPROVE_POST_CONFIRM'	=> 'Are you sure you want to disapprove this post?',
+	'DISAPPROVE_POSTS'		=> 'Disapprove posts',
+	'DISAPPROVE_POSTS_CONFIRM'	=> 'Are you sure you want to disapprove the selected posts?',
+	'DISPLAY_LOG'			=> 'Display entries from previous',
+	'DISPLAY_OPTIONS'		=> 'Display options',
+
+	'EMPTY_REPORT'			=> 'You must enter a description when selecting this reason',
+	'EMPTY_TOPICS_REMOVED_WARNING'	=> 'Please note that one or several topics have been removed from the database because they were or become empty',
+
+	'FEEDBACK'				=> 'Feedback',
+	'FORK'					=> 'Fork',
+	'FORK_TOPIC'			=> 'Fork Topic',
+	'FORK_TOPIC_CONFIRM'	=> 'Are you sure you want to copy this topic?',
+	'FORK_TOPICS'			=> 'Fork selected topics',
+	'FORK_TOPICS_CONFIRM'	=> 'Are you sure you want to copy the selected topics?',
+	'FORUM_DESC'			=> 'Description',
+	'FORUM_NAME'			=> 'Forum name',
+	'FORUM_NOT_EXIST'		=> 'The forum you selected does not exist',
+	'FORUM_NOT_POSTABLE'	=> 'The forum you selected cannot be posted to',
+	'FORUM_STATUS'			=> 'Forum status',
+	'FORUM_STYLE'			=> 'Forum style',
+
+	'GLOBAL_ANNOUNCEMENT'	=> 'Global Announcement',
+
+	'IP_INFO'				=> 'IP Information',
+
+	'LATEST_LOGS'				=> 'Latest 5 logged actions',
+	'LATEST_REPORTED'			=> 'Latest 5 reports',
+	'LATEST_UNAPPROVED'			=> 'Latest 5 posts awaiting for approval',
+	'LATEST_WARNING_TIME'		=> 'Latest warning issued',
+	'LATEST_WARNINGS'			=> 'Latest 5 warnings',
+	'LEAVE_SHADOW'				=> 'Leave shadow topic in place',
+	'LIST_REPORT'				=> '1 report',
+	'LIST_REPORTS'				=> '%d reports',
+	'LOCK'						=> 'Lock',
+	'LOCK_POST_POST'			=> 'Lock post',
+	'LOCK_POST_POST_CONFIRM'	=> 'Are you sure you want to prevent editing this post?',
+	'LOCK_POST_POSTS'			=> 'Lock selected posts',
+	'LOCK_POST_POSTS_CONFIRM'	=> 'Are you sure you want to prevent editing the selected posts?',
+	'LOCK_TOPIC_CONFIRM'		=> 'Are you sure you want to lock this topic?',
+	'LOCK_TOPICS'				=> 'Lock selected topics',
+	'LOCK_TOPICS_CONFIRM'		=> 'Are you sure you want to lock all selected topics?',
+	'LOGS_CURRENT_TOPIC'		=> 'Currently viewing logs of:',
+	'LOGIN_EXPLAIN_MCP'			=> 'To moderate this forum you must login.',
+	'LOGVIEW_VIEWTOPIC'			=> 'View topic',
+	'LOGVIEW_VIEWLOGS'			=> 'View topic log',
+	'LOGVIEW_VIEWFORUM'			=> 'View forum',
+	'LOOKUP_ALL'				=> 'Look up all IPs',
+	'LOOKUP_IP'					=> 'Look up IP',
+
+	'MARKED_NOTES_DELETED'		=> 'Successfully removed all marked user notes',
+
+	'MCP_ADD'						=> 'Add a warning',
+
+	'MCP_BAN'					=> 'Banning',
+	'MCP_BAN_EMAILS'			=> 'Ban Emails',
+	'MCP_BAN_IPS'				=> 'Ban IPs',
+	'MCP_BAN_USERNAMES'			=> 'Ban Usernames',
+
+	'MCP_LOGS'						=> 'Moderator logs',
+	'MCP_LOGS_FRONT'				=> 'Front page',
+	'MCP_LOGS_FORUM_VIEW'			=> 'Forum logs',
+	'MCP_LOGS_TOPIC_VIEW'			=> 'Topic logs',
+
+	'MCP_MAIN'						=> 'Main',
+	'MCP_MAIN_FORUM_VIEW'			=> 'View forum',
+	'MCP_MAIN_FRONT'				=> 'Front page',
+	'MCP_MAIN_POST_DETAILS'			=> 'Post details',
+	'MCP_MAIN_TOPIC_VIEW'			=> 'View topic',
+	'MCP_MAKE_ANNOUNCEMENT'			=> 'Make Announcement',
+	'MCP_MAKE_ANNOUNCEMENT_CONFIRM'	=> 'Are you sure you want to change this topic to an Announcement?',
+	'MCP_MAKE_ANNOUNCEMENTS'		=> 'Make Announcements',
+	'MCP_MAKE_ANNOUNCEMENTS_CONFIRM'=> 'Are you sure you want to change the selected topics to Announcements?',
+	'MCP_MAKE_GLOBAL'				=> 'Make Global Announcement',
+	'MCP_MAKE_GLOBAL_CONFIRM'		=> 'Are you sure you want to change this topic to a Global Announcement?',
+	'MCP_MAKE_GLOBALS'				=> 'Make Global Announcements',
+	'MCP_MAKE_GLOBALS_CONFIRM'		=> 'Are you sure you want to change the selected topics to Global Announcements?',
+	'MCP_MAKE_STICKY'				=> 'Make Sticky',
+	'MCP_MAKE_STICKY_CONFIRM'		=> 'Are you sure you want to change this topic to a Sticky?',
+	'MCP_MAKE_STICKIES'				=> 'Make Stickies',
+	'MCP_MAKE_STICKIES_CONFIRM'		=> 'Are you sure you want to change the selected topics to Stickies?',
+	'MCP_MAKE_NORMAL'				=> 'Make Standard Topic',
+	'MCP_MAKE_NORMAL_CONFIRM'		=> 'Are you sure you want to change this topic to a Standard Topic?',
+	'MCP_MAKE_NORMALS'				=> 'Make Standard Topics',
+	'MCP_MAKE_NORMALS_CONFIRM'		=> 'Are you sure you want to change the selected topics to Standard Topics?',
+
+	'MCP_NOTES'						=> 'User notes',
+	'MCP_NOTES_FRONT'				=> 'Front page',
+	'MCP_NOTES_USER'				=> 'User details',
+
+	'MCP_REPORTS'					=> 'Reported posts',
+	'MCP_REPORT_DETAILS'			=> 'Report details',
+	'MCP_REPORTS_CLOSED'			=> 'Closed reports',
+	'MCP_REPORTS_CLOSED_EXPLAIN'	=> 'This is a list of all reports about posts which have previously been resolved',
+	'MCP_REPORTS_OPEN'				=> 'Open reports',
+	'MCP_REPORTS_OPEN_EXPLAIN'		=> 'This is a list of all reported posts which are still to be handled',
+
+	'MCP_QUEUE'								=> 'Moderation queue',
+	'MCP_QUEUE_APPROVE_DETAILS'				=> 'Approve details',
+	'MCP_QUEUE_UNAPPROVED_POSTS'			=> 'Posts awaiting approval',
+	'MCP_QUEUE_UNAPPROVED_POSTS_EXPLAIN'	=> 'This is a list of all posts which require approving before they will be visible to users',
+	'MCP_QUEUE_UNAPPROVED_TOPICS'			=> 'Topics awaiting approval',
+	'MCP_QUEUE_UNAPPROVED_TOPICS_EXPLAIN'	=> 'This is a list of all topics which require approving before they will be visible to users',
+
+	'MCP_VIEW_USER'			=> 'View warnings for a specific user',
+
+	'MCP_WARN'				=> 'Warnings',
+	'MCP_WARN_FRONT'		=> 'Front page',
+	'MCP_WARN_LIST'			=> 'List warnings',
+	'MCP_WARN_POST'			=> 'Warn for specific post',
+	'MCP_WARN_USER'			=> 'Warn user',
+
+	'MERGE_POSTS'			=> 'Merge posts',
+	'MERGE_POSTS_CONFIRM'	=> 'Are you sure you want to merge the selected posts?',
+	'MERGE_TOPIC_EXPLAIN'	=> 'Using the form below you can merge selected posts into another topic. These posts will not be reordered and will appear as if the users posted them to the new topic.<br />Please enter the destination topic id or click on the "Select" button to search for one',
+	'MERGE_TOPIC_ID'		=> 'Destination topic id',
+	'MODERATE_FORUM'		=> 'Moderate forum',
+	'MOD_OPTIONS'			=> 'Moderator options',
+	'MORE_INFO'				=> 'Further information',
+	'MOST_WARNINGS'			=> 'Users with most warnings',
+	'MOVE_TOPIC_CONFIRM'	=> 'Are you sure you want to move the topic into a new forum?',
+	'MOVE_TOPICS'			=> 'Move selected topics',
+	'MOVE_TOPICS_CONFIRM'	=> 'Are you sure you want to move the selected topics into a new forum?',
+
+	'NOTIFY_POSTER_APPROVAL'=> 'Notify poster about approval?',
+	'NOTIFY_POSTER_DISAPPROVAL' => 'Notify poster about disapproval?',
+	'NOTIFY_USER_WARN'		=> 'Notify user about warning?',
+	'NOT_MODERATOR'			=> 'You are not a moderator of this forum',
+	'NO_DESTINATION_FORUM'	=> 'Please select a forum for destination',
+	'NO_DESTINATION_FORUM_FOUND'	=> 'There is no destination forum available.',
+	'NO_ENTRIES'			=> 'No log entries for this period',
+	'NO_FEEDBACK'			=> 'No feedback exists for this user',
+	'NO_FINAL_TOPIC_SELECTED'	=> 'You have to select a destination topic for merging posts',
+	'NO_MATCHES_FOUND'		=> 'No matches found',
+	'NO_POST'				=> 'You have to select a post in order to warn the user for a post',
+	'NO_POST_REPORT'		=> 'This post was not reported.',
+	'NO_POST_SELECTED'		=> 'You must select at least one post to perform this action',
+	'NO_REASON_DISAPPROVAL'	=> 'Please give an appropiate reason for disapproval',
+	'NO_TOPIC_ICON'			=> 'None',
+	'NO_TOPIC_SELECTED'		=> 'You must select at least one topic to perform this action',
+
+	'OTHER_IPS'				=> 'Other IP addresses this user has posted from',
+	'ONLY_TOPIC'			=> 'Only topic "%s"',
+	'OTHER_USERS'			=> 'Users posting from this IP',
+
+	'POSTER'				=> 'Poster',
+	'POSTS_APPROVED_SUCCESS'=> 'The selected posts have been approved',
+	'POSTS_DELETED_SUCCESS'	=> 'The selected posts have been successfully removed from the database',
+	'POSTS_DISAPPROVED_SUCCESS'=> 'The selected posts have been disapproved',
+	'POSTS_LOCKED_SUCCESS'	=> 'The selected posts have been locked successfully',
+	'POSTS_MERGED_SUCCESS'	=> 'The selected posts have been merged',
+	'POSTS_UNLOCKED_SUCCESS'=> 'The selected posts have been unlocked successfully',
+	'POSTS_PER_PAGE'		=> 'Posts per page',
+	'POSTS_PER_PAGE_EXPLAIN'=> '(Set to 0 to view all posts)',
+	'POST_APPROVED_SUCCESS'	=> 'The selected post has been approved',
+	'POST_DELETED_SUCCESS'	=> 'The selected post has been successfully removed from the database',
+	'POST_DISAPPROVED_SUCCESS'	=> 'The selected post has been disapproved',
+	'POST_LOCKED_SUCCESS'	=> 'Post locked successfully',
+	'POST_NOT_EXIST'		=> 'The post you requested does not exist',
+	'POST_REPORTED_SUCCESS'	=> 'This post has been successfully reported',
+	'POST_UNLOCKED_SUCCESS'	=> 'Post unlocked successfully',
+
+	'READ_USERNOTES'		=> 'User notes',
+	'READ_WARNINGS'			=> 'User warnings',
+	'REPORTER'				=> 'Reporter',
+	'REPORTED'				=> 'Reported',
+	'REPORTED_BY'			=> 'Reported by',
+	'REPORTED_ON_DATE'		=> 'on',
+	'REPORTS_CLOSED_SUCCESS'	=> 'The selected reports have been closed successfully.',
+	'REPORTS_DELETED_SUCCESS'	=> 'The selected reports have been deleted successfully.',
+	'REPORTS_TOTAL'			=> 'In total there are <strong>%d</strong> reports to review',
+	'REPORTS_ZERO_TOTAL'	=> 'There are no reports to review',
+	'REPORT_CLOSED'			=> 'This report has previously been closed.',
+	'REPORT_CLOSED_SUCCESS'	=> 'The selected report has been closed successfully.',
+	'REPORT_DELETED_SUCCESS'	=> 'The selected report has been deleted successfully.',
+	'REPORT_DETAILS'		=> 'Report details',
+	'REPORT_MESSAGE'		=> 'Report this message',
+	'REPORT_MESSAGE_EXPLAIN'=> 'Use this form to report the selected message to the board administrators. Reporting should generally be used only if the message breaks forum rules.',
+	'REPORT_NOTIFY'			=> 'Notify me',
+	'REPORT_NOTIFY_EXPLAIN'	=> 'Informs you when your report is dealt with',
+	'REPORT_POST_EXPLAIN'	=> 'Use this form to report the selected post to the forum moderators and board administrators. Reporting should generally be used only if the post breaks forum rules.',
+	'REPORT_REASON'			=> 'Report reason',
+	'REPORT_TIME'			=> 'Report time',
+	'REPORT_TOTAL'			=> 'In total there is <strong>1</strong> report to review',
+	'RESYNC'				=> 'Resync',
+	'RETURN_MESSAGE'		=> '%sReturn to the message%s',
+	'RETURN_NEW_FORUM'		=> '%sReturn to the new forum%s',
+	'RETURN_NEW_TOPIC'		=> '%sReturn to the new topic%s',
+	'RETURN_POST'			=> '%sReturn to the post%s',
+	'RETURN_QUEUE'			=> '%sReturn to the queue%s',
+	'RETURN_REPORTS'		=> '%sReturn to the reports%s',
+
+	'SEARCH_POSTS_BY_USER'	=> 'Search posts by',
+	'SELECT_ACTION'			=> 'Select desired action',
+	'SELECT_TOPIC'			=> 'Select topic',
+	'SELECT_USER'			=> 'Select user',
+	'SORT_ACTION'			=> 'Log action',
+	'SORT_DATE'				=> 'Date',
+	'SORT_IP'				=> 'IP address',
+	'SORT_WARNINGS'			=> 'Warnings',
+	'SPLIT_AFTER'			=> 'Split from selected post',
+	'SPLIT_FORUM'			=> 'Forum for new topic',
+	'SPLIT_POSTS'			=> 'Split selected posts',
+	'SPLIT_SUBJECT'			=> 'New topic title',
+	'SPLIT_TOPIC_ALL'		=> 'Split topic from selected posts',
+	'SPLIT_TOPIC_ALL_CONFIRM'	=> 'Are you sure you want to split this topic?',
+	'SPLIT_TOPIC_BEYOND'	=> 'Split topic at selected post',
+	'SPLIT_TOPIC_BEYOND_CONFIRM'	=> 'Are you sure you want to split this topic at the selected post?',
+	'SPLIT_TOPIC_EXPLAIN'	=> 'Using the form below you can split a topic in two, either by selecting the posts individually or by splitting at a selected post',
+
+	'THIS_POST_IP'			=> 'IP for this post',
+	'TOPICS_APPROVED_SUCCESS'	=> 'The selected topics have been approved',
+	'TOPICS_DELETED_SUCCESS'=> 'The selected topics have been successfully removed from the database',
+	'TOPICS_DISAPPROVED_SUCCESS'	=> 'The selected topics have been disapproved',
+	'TOPICS_FORKED_SUCCESS'	=> 'The selected topics have been copied successfully',
+	'TOPICS_LOCKED_SUCCESS'	=> 'The selected topics have been locked',
+	'TOPICS_MOVED_SUCCESS'	=> 'The selected topics have been moved successfully',
+	'TOPICS_RESYNC_SUCCESS'	=> 'The selected topics have been resynchronised',
+	'TOPICS_UNLOCKED_SUCCESS'	=> 'The selected topics have been unlocked',
+	'TOPIC_APPROVED_SUCCESS'	=> 'The selected topic has been approved',
+	'TOPIC_DELETED_SUCCESS'	=> 'The selected topic has been successfully removed from the database',
+	'TOPIC_DISAPPROVED_SUCCESS'	=> 'The selected topic has been disapproved',
+	'TOPIC_FORKED_SUCCESS'	=> 'The selected topic has been copied successfully',
+	'TOPIC_LOCKED_SUCCESS'	=> 'The selected topic has been locked',
+	'TOPIC_MOVED_SUCCESS'	=> 'The selected topic has been moved successfully',
+	'TOPIC_NOT_EXIST'		=> 'The topic you selected does not exist',
+	'TOPIC_RESYNC_SUCCESS'	=> 'The selected topic has been resynchronised',
+	'TOPIC_SPLIT_SUCCESS'	=> 'The selected topic has been split successfully',
+	'TOPIC_TIME'			=> 'Topic time',
+	'TOPIC_TYPE_CHANGED'	=> 'Topic type changed successfully.',
+	'TOPIC_UNLOCKED_SUCCESS'=> 'The selected topic has been unlocked',
+	'TOTAL_WARNINGS'		=> 'Total Warnings',
+
+	'UNAPPROVED_POSTS_TOTAL'		=> 'In total there are <strong>%d</strong> posts waiting for approval',
+	'UNAPPROVED_POSTS_ZERO_TOTAL'	=> 'There are no posts waiting for approval',
+	'UNAPPROVED_POST_TOTAL'			=> 'In total there is <strong>1</strong> post waiting for approval',
+	'UNLOCK'						=> 'Unlock',
+	'UNLOCK_POST'					=> 'Unlock post',
+	'UNLOCK_POST_EXPLAIN'			=> 'Allow editing',
+	'UNLOCK_POST_POST'				=> 'Unlock post',
+	'UNLOCK_POST_POST_CONFIRM'		=> 'Are you sure you want to allow editing this post?',
+	'UNLOCK_POST_POSTS'				=> 'Unlock selected posts',
+	'UNLOCK_POST_POSTS_CONFIRM'		=> 'Are you sure you want to allow editing the selected posts?',
+	'UNLOCK_TOPIC'					=> 'Unlock topic',
+	'UNLOCK_TOPIC_CONFIRM'			=> 'Are you sure you want to unlock this topic?',
+	'UNLOCK_TOPICS'					=> 'Unlock selected topics',
+	'UNLOCK_TOPICS_CONFIRM'			=> 'Are you sure you want to unlock all selected topics?',
+	'USER_CANNOT_POST'				=> 'You cannot post in this forum',
+	'USER_CANNOT_REPORT'			=> 'You cannot report posts in this forum',
+	'USER_FEEDBACK_ADDED'			=> 'User feedback added successfully',
+	'USER_WARNING_ADDED'			=> 'User warned successfully',
+
+	'VIEW_DETAILS'			=> 'View details',
+
+	'WARNED_USERS'			=> 'Warned users',
+	'WARNED_USERS_EXPLAIN'	=> 'This is a list of users with unexpired warnings issued to them',
+	'WARNING_PM_BODY'		=> 'The following is a warning which has been issued to you by an administrator or moderator of this site.[quote]%s[/quote]',
+	'WARNING_PM_SUBJECT'	=> 'Board Warning Issued',
+	'WARNING_POST_DEFAULT'	=> 'This is a warning regarding the following post made by you: %s',
+	'WARNINGS_ZERO_TOTAL'	=> 'No warnings exists',
+
+	'YOU_SELECTED_TOPIC'	=> 'You selected topic number %d: %s',
+
+	'report_reasons'		=> array(
+		'TITLE'	=> array(
+			'WAREZ'		=> 'Warez',
+			'SPAM'		=> 'Spam',
+			'OFF_TOPIC'	=> 'Off-topic',
+			'OTHER'		=> 'Other'
+		),
+		'DESCRIPTION' => array(
+			'WAREZ'		=> 'The post contains links to illegal or pirated software',
+			'SPAM'		=> 'The reported post has the only purpose to advertise for a website or another product',
+			'OFF_TOPIC'	=> 'The reported post is off topic',
+			'OTHER'		=> 'The reported post does not fit into any other category, please use the description field'
+		)
+	),
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/posting.php
===================================================================
--- cms/trunk/modules/forums/language/posting.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/posting.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,200 @@
+<?php
+// -------------------------------------------------------------
+//
+// $Id: posting.php,v 1.5 2004/07/08 22:41:03 acydburn Exp $
+//
+// FILENAME  : posting.php [ English ]
+// STARTED   : Sat Dec 16, 2000
+// COPYRIGHT : ? 2001, 2003 phpBB Group
+// WWW       : http://www.phpbb.com/
+// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
+// 
+// -------------------------------------------------------------
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang += array(
+	'ADD_ATTACHMENT'			=> 'Attachment uploading',
+	'ADD_ATTACHMENT_EXPLAIN'	=> 'If you wish to attach one or more files enter the details below',
+	'ADD_FILE'					=> 'Add the file',
+	'ADD_POLL'					=> 'Poll creation',
+	'ADD_POLL_EXPLAIN'			=> 'If you do not want to add a poll to your topic leave the fields blank',
+	'ALREADY_DELETED'			=> 'Sorry but this message is already deleted.',
+	'ATTACH_QUOTA_REACHED'		=> 'Sorry, the board attachment quota has been reached.',
+	'ATTACH_SIG'				=> 'Attach a signature (signatures can be altered via the UCP)',
+
+	'BBCODE_A_HELP'				=> 'Close all open BBCode tags',
+	'BBCODE_B_HELP'				=> 'Bold text: [b]text[/b]  (alt+b)',
+	'BBCODE_C_HELP'				=> 'Code display: [code]code[/code]  (alt+c)',
+	'BBCODE_E_HELP'				=> 'List: Add list element',
+	'BBCODE_F_HELP'				=> 'Font size: [size=x-small]small text[/size]',
+	'BBCODE_IS_OFF'				=> '%sBBCode%s is <em>OFF</em>',
+	'BBCODE_IS_ON'				=> '%sBBCode%s is <em>ON</em>',
+	'BBCODE_I_HELP'				=> 'Italic text: [i]text[/i]  (alt+i)',
+	'BBCODE_L_HELP'				=> 'List: [list]text[/list]  (alt+l)',
+	'BBCODE_O_HELP'				=> 'Ordered list: [list=]text[/list]  (alt+o)',
+	'BBCODE_P_HELP'				=> 'Insert image: [img]http://image_url[/img]  (alt+p)',
+	'BBCODE_Q_HELP'				=> 'Quote text: [quote]text[/quote]  (alt+q)',
+	'BBCODE_S_HELP'				=> 'Font color: [color=red]text[/color]  Tip: you can also use color=#FF0000',
+	'BBCODE_U_HELP'				=> 'Underline text: [u]text[/u]  (alt+u)',
+	'BBCODE_W_HELP'				=> 'Insert URL: [url]http://url[/url] or [url=http://url]URL text[/url]  (alt+w)',
+	'BBCODE_D_HELP'				=> 'Flash: [flash=height,width]http://url[/flash]  (alt+d)',
+	'BUMP_ERROR'				=> 'You cannot bump this topic so soon after the last post.',
+
+	'CANNOT_DELETE_REPLIED'		=> 'Sorry but you may only delete posts which have not been replied to.',
+	'CANNOT_EDIT_POST_LOCKED'	=> 'This post has been locked. You can no longer edit that post.',
+	'CANNOT_EDIT_TIME'			=> 'You can no longer edit or delete that post',
+	'CANNOT_POST_ANNOUNCE'		=> 'Sorry but you cannot post announcements.',
+	'CANNOT_POST_NEWS'			=> 'Sorry but you cannot post news topics.',
+	'CANNOT_POST_STICKY'		=> 'Sorry but you cannot post sticky topics.',
+	'CHANGE_TOPIC_TO'			=> 'Change topic type to',
+	'CLOSE_TAGS'				=> 'Close tags',
+	'CURRENT_TOPIC'				=> 'Current topic',
+
+	'DELETE_FILE'				=> 'Delete file',
+	'DELETE_MESSAGE'			=> 'Delete message',
+	'DELETE_MESSAGE_CONFIRM'	=> 'Are you sure you want to delete this message?',
+	'DELETE_OWN_POSTS'			=> 'Sorry but you can only delete your own posts.',
+	'DELETE_POST_CONFIRM'		=> 'Are you sure you want to delete this message?',
+	'DELETE_POST_WARN'			=> 'Once deleted the post cannot be recovered',
+	'DISABLE_BBCODE'			=> 'Disable BBCode',
+	'DISABLE_MAGIC_URL'			=> 'Do not automatically parse URLs',
+	'DISABLE_SMILIES'			=> 'Disable smilies',
+	'DISALLOWED_EXTENSION'		=> 'The extension %s is not allowed',
+	'DRAFT_LOADED'				=> 'Draft loaded into posting area, you may want to finish your post now.<br />Your Draft will be deleted after submitting this post.',
+	'DRAFT_SAVED'				=> 'Draft successfully saved.',
+	'DRAFT_TITLE'				=> 'Draft title',
+
+	'EDIT_REASON'				=> 'Reason for editing this post',
+	'EMPTY_FILEUPLOAD'			=> 'The uploaded file is empty',
+	'EMPTY_MESSAGE'				=> 'You must enter a message when posting.',
+	'EMPTY_REMOTE_DATA'			=> 'File could not be uploaded, please try uploading the file manually.',
+
+	'FLASH_IS_OFF'				=> '[flash] is <em>OFF</em>',
+	'FLASH_IS_ON'				=> '[flash] is <em>ON</em>',
+	'FLOOD_ERROR'				=> 'You cannot make another post so soon after your last.',
+	'FONT_COLOR'				=> 'Font color',
+	'FONT_HUGE'					=> 'Huge',
+	'FONT_LARGE'				=> 'Large',
+	'FONT_NORMAL'				=> 'Normal',
+	'FONT_SIZE'					=> 'Font size',
+	'FONT_SMALL'				=> 'Small',
+	'FONT_TINY'					=> 'Tiny',
+
+	'GENERAL_UPLOAD_ERROR'		=> 'Could not upload attachment to %s',
+
+	'IMAGES_ARE_OFF'			=> '[img] is <em>OFF</em>',
+	'IMAGES_ARE_ON'				=> '[img] is <em>ON</em>',
+	'INVALID_FILENAME'			=> '%s is an invalid filename',
+
+	'LOAD'						=> 'Load',
+	'LOAD_DRAFT'				=> 'Load draft',
+	'LOAD_DRAFT_EXPLAIN'		=> 'Here you are able to select the draft you want to continue writing. Your current post will be canceled, all current post contents will be deleted. View, edit and delete drafts within your User Control Panel.',
+	'LOGIN_EXPLAIN_POST'		=> 'You need to login in order to post within this forum',
+	'LOGIN_EXPLAIN_REPLY'		=> 'You need to login in order to reply to topics within this forum',
+
+	'MAX_FONT_SIZE_EXCEEDED'	=> 'You may only use fonts up to size %1$d.',
+	'MAX_FLASH_HEIGHT_EXCEEDED'	=> 'Your flash files may only be up to %1$d pixels high.',
+	'MAX_FLASH_WIDTH_EXCEEDED'	=> 'Your flash files may only be up to %1$d pixels wide.',
+	'MAX_IMG_HEIGHT_EXCEEDED'	=> 'Your images may only be up to %1$d pixels high.',
+	'MAX_IMG_WIDTH_EXCEEDED'	=> 'Your images may only be up to %1$d pixels wide.',
+
+	'MESSAGE_BODY_EXPLAIN'		=> 'Enter your message here, it may contain no more than <strong>%d</strong> characters.',
+	'MESSAGE_DELETED'			=> 'Your message has been deleted successfully',
+	'MORE_SMILIES'				=> 'View more smilies',
+
+	'NOTIFY_REPLY'				=> 'Send me an email when a reply is posted',
+	'NOT_UPLOADED'				=> 'File could not be uploaded.',
+	'NO_DELETE_POLL_OPTIONS'	=> 'You cannot delete existing poll options',
+	'NO_POLL_TITLE'				=> 'You have to enter a poll title',
+	'NO_POST'					=> 'The requested post does not exist.',
+	'NO_POST_MODE'				=> 'No post mode specified',
+	'NO_TOPIC_ICON'				=> 'None',
+
+	'PARTIAL_UPLOAD'			=> 'The uploaded file was only partially uploaded',
+	'PHP_SIZE_NA'				=> 'The attachment\'s filesize is too large.<br />Could not determine the maximum size defined by PHP in php.ini.',
+	'PHP_SIZE_OVERRUN'			=> 'The attachment\'s filesize is too large, the maximum upload size is %d MB.<br />Please note this is set in php.ini and cannot be overriden.',
+	'PLACE_INLINE'				=> 'Place inline',
+	'POLL_DELETE'				=> 'Delete poll',
+	'POLL_FOR'					=> 'Run poll for',
+	'POLL_FOR_EXPLAIN'			=> 'Enter 0 or leave blank for a never ending poll',
+	'POLL_MAX_OPTIONS'			=> 'Options per user',
+	'POLL_MAX_OPTIONS_EXPLAIN'	=> 'This is the number of options each user may select when voting.',
+	'POLL_OPTIONS'				=> 'Poll options',
+	'POLL_OPTIONS_EXPLAIN'		=> 'Place each option on a new line. You may enter up to <strong>%d</strong> options',
+	'POLL_QUESTION'				=> 'Poll question',
+	'POLL_VOTE_CHANGE'			=> 'Allow re-voting',
+	'POLL_VOTE_CHANGE_EXPLAIN'	=> 'If enabled users are able to change their vote.',
+	'POSTED_ATTACHMENTS'		=> 'Posted attachments',
+	'POST_CONFIRMATION'			=> 'Confirmation of post',
+	'POST_CONFIRM_EXPLAIN'		=> 'To prevent automated posts the board administrator requires you to enter a confirmation code. The code is displayed in the image you should see below. If you are visually impaired or cannot otherwise read this code please contact the %sBoard Administrator%s.',
+	'POST_DELETED'				=> 'Your message has been deleted successfully',
+	'POST_EDITED'				=> 'Your message has been edited successfully',
+	'POST_EDITED_MOD'			=> 'Your message has been edited but requires approval',
+	'POST_GLOBAL'				=> 'Global',
+	'POST_ICON'					=> 'Post icon',
+	'POST_NORMAL'				=> 'Normal',
+	'POST_REPLY'				=> 'Post a reply',
+	'POST_REVIEW'				=> 'Post review',
+	'POST_REVIEW_EXPLAIN'		=> 'At least one new post has been made to this topic. You may wish to review your post in light of this.',
+	'POST_STORED'				=> 'Your message has been posted successfully',
+	'POST_STORED_MOD'			=> 'Your message has been saved but requires approval',
+	'POST_TOPIC'				=> 'Post a new topic',
+	'POST_TOPIC_AS'				=> 'Post topic as',
+	'PROGRESS_BAR'				=> 'Progress bar',
+
+	'QUOTE_DEPTH_EXCEEDED'		=> 'You may embed only %1$d quotes within each other.',
+
+	'SAVE'						=> 'Save',
+	'SAVE_DATE'					=> 'Saved at',
+	'SAVE_DRAFT'				=> 'Save Draft',
+	'SAVE_DRAFT_CONFIRM'		=> 'Please note that saved drafts only include the subject and the message, any other element will be removed. Do you want to save your draft now?',
+	'SMILIES'					=> 'Smilies',
+	'SMILIES_ARE_OFF'			=> 'Smilies are <em>OFF</em>',
+	'SMILIES_ARE_ON'			=> 'Smilies are <em>ON</em>',
+	'STICKY_ANNOUNCE_TIME_LIMIT'=> 'Sticky/Announcement time limit',
+	'STICK_TOPIC_FOR'			=> 'Stick topic for',
+	'STICK_TOPIC_FOR_EXPLAIN'	=> 'Enter 0 or leave blank for a never ending Sticky/Announcement',
+	'STYLES_TIP'				=> 'Tip: Styles can be applied quickly to selected text',
+
+	'TOO_FEW_CHARS'				=> 'Your message contains too few characters.',
+	'TOO_FEW_POLL_OPTIONS'		=> 'You must enter at least two poll options',
+	'TOO_MANY_ATTACHMENTS'		=> 'Cannot add another attachment, %d is the maxmimum.',
+	'TOO_MANY_CHARS'			=> 'Your message contains too many characters.',
+	'TOO_MANY_POLL_OPTIONS'		=> 'You have tried to enter too many poll options',
+	'TOO_MANY_SMILIES'			=> 'Your message contains too many smilies. A maximum of %d smilies are allowed.',
+	'TOO_MANY_URLS'				=> 'Your message contains too many urls. A maximum of %d urls are allowed.',
+	'TOO_MANY_USER_OPTIONS'		=> 'You cannot specify more Options per User than existing poll options',
+	'TOPIC_BUMPED'				=> 'Topic has been bumped successfully',
+
+	'UNAUTHORISED_BBCODE'		=> 'You cannot use certain bbcodes: ',
+	'UNGLOBALISE_EXPLAIN'		=> 'To switch this topic back from being global to a normal topic, you need to select the forum you wish this topic to be displayed.',
+	'UPDATE_COMMENT'			=> 'Update comment',
+	'URL_INVALID'				=> 'The URL you specified is invalid.',
+	'URL_NOT_FOUND'				=> 'The file specified could not be found.',
+	'USER_CANNOT_BUMP'			=> 'You cannot bump topics in this forum',
+	'USER_CANNOT_DELETE'		=> 'You cannot delete posts in this forum',
+	'USER_CANNOT_EDIT'			=> 'You cannot edit posts in this forum',
+	'USER_CANNOT_REPLY'			=> 'You cannot reply in this forum',
+	'USER_CANNOT_FORUM_POST'	=> 'You are not able to do posting operations on this forum due to the forum type not supporting it.',
+	'USERNAME_DISALLOWED'		=> 'The username you entered has been banned.',
+	'USERNAME_TAKEN'			=> 'The username you entered is already in use, please select an alternative.',
+
+	'VIEW_MESSAGE'				=> '%sView your submitted message%s',
+
+	'WRONG_FILESIZE'			=> 'The file is too big, maximum allowed size is %1d %2s',
+	'WRONG_SIZE'				=> 'The image must be at least %1$d pixels wide, %2$d pixels high and at most %3$d pixels wide and %4$d pixels high. The submitted image is %5$d pixels wide and %6$d pixels high.',
+	'HTML_IS_OFF'				=> 'HTML is <u>OFF</u>',
+	'HTML_IS_ON'				=> 'HTML is <u>ON</u>',
+	'DISABLE_HTML'				=> 'Disable HTML',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/search.php
===================================================================
--- cms/trunk/modules/forums/language/search.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/search.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,81 @@
+<?php
+/** 
+*
+* search [English]
+*
+* @package language
+* @version $Id: search.php,v 1.11 2006/07/27 19:02:47 naderman Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang += array(
+	'ALL_AVAILABLE'			=> 'All available',
+	'ALL_RESULTS'			=> 'All results',
+
+	'DISPLAY_RESULTS'		=> 'Display results as',
+
+	'FOUND_SEARCH_MATCH'	=> 'Search found %d match',
+	'FOUND_SEARCH_MATCHES'	=> 'Search found %d matches',
+	'FOUND_MORE_SEARCH_MATCHES'	=> 'Search found more than %d matches',
+
+	'GLOBAL'				=> 'Global topic',
+
+	'IGNORED_TERMS'			=> 'ignored',
+	'IGNORED_TERMS_EXPLAIN'	=> 'The following words in your search query were ignored: <b>%s</b>',
+
+	'NO_KEYWORDS'			=> 'You must specify at least one word to search for. Each word must consist of at least %d characters and must not contain more than %d characters excluding wildcards.',
+	'NO_RECENT_SEARCHES'	=> 'No searches have been carried out recently',
+	'NO_SEARCH'				=> 'Sorry but you are not permitted to use the search system.',
+	'NO_SEARCH_RESULTS'		=> 'No suitable matches were found.',
+	'NO_SEARCH_TIME'		=> 'Sorry but you cannot use search at this time. Please try again in a few minutes.',
+	'WORD_IN_NO_POST'		=> 'No posts were found because the word %s is not contained in any post.',
+	'WORDS_IN_NO_POST'		=> 'No posts were found because the words %s are not contained in any post.',
+
+	'POST_CHARACTERS'		=> 'characters of posts',
+
+	'RECENT_SEARCHES'		=> 'Recent searches',
+	'RESULT_DAYS'			=> 'Limit results to previous',
+	'RESULT_SORT'			=> 'Sort results by',
+	'RETURN_FIRST'			=> 'Return first',
+
+	'SEARCHED_FOR'			=> 'Search term used',
+	'SEARCHED_TOPIC'		=> 'Searched topic',
+	'SEARCH_ALL_TERMS'		=> 'Search for all terms or use query as entered',
+	'SEARCH_ANY_TERMS'		=> 'Search for any terms',
+	'SEARCH_AUTHOR'			=> 'Search for author',
+	'SEARCH_AUTHOR_EXPLAIN'	=> 'Use * as a wildcard for partial matches',
+	'SEARCH_FIRST_POST'		=> 'First post of topics only',
+	'SEARCH_FORUMS'			=> 'Search in forums',
+	'SEARCH_FORUMS_EXPLAIN'	=> 'Select the forum or forums you wish to search in. For speed all subforums can be searched by selecting the parent and setting enable search subforums below.',
+	'SEARCH_IN_RESULTS'		=> 'Search these results',
+	'SEARCH_KEYWORDS_EXPLAIN'	=> 'Place <strong>+</strong> in front of a word which must be found and <strong>-</strong> in front of a word which must not be found. Put a list of words seperated by <strong>|</strong> into brackets if only one of the words must be found. Use * as a wildcard for partial matches.',
+	'SEARCH_MSG_ONLY'		=> 'Message text only',
+	'SEARCH_OPTIONS'		=> 'Search Options',
+	'SEARCH_QUERY'			=> 'Search Query',
+	'SEARCH_SUBFORUMS'		=> 'Search subforums',
+	'SEARCH_TITLE_MSG'		=> 'Post subjects and message text',
+	'SEARCH_TITLE_ONLY'		=> 'Topic titles only',
+	'SEARCH_WITHIN'			=> 'Search within',
+	'SORT_ASCENDING'		=> 'Ascending',
+	'SORT_AUTHOR'			=> 'Author',
+	'SORT_DESCENDING'		=> 'Descending',
+	'SORT_FORUM'			=> 'Forum',
+	'SORT_POST_SUBJECT'		=> 'Post subject',
+	'SORT_TIME'				=> 'Post time',
+
+	'TOO_FEW_AUTHOR_CHARS'	=> 'You must specify at least %d characters of the authors name.',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/viewforum.php
===================================================================
--- cms/trunk/modules/forums/language/viewforum.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/viewforum.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,51 @@
+<?php
+// -------------------------------------------------------------
+//
+// $Id: viewforum.php,v 1.5 2004/06/06 21:44:49 acydburn Exp $
+//
+// FILENAME  : viewforum.php [ English ]
+// STARTED   : Sat Dec 16, 2000
+// COPYRIGHT : ? 2001, 2003 phpBB Group
+// WWW       : http://www.phpbb.com/
+// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
+// 
+// -------------------------------------------------------------
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang += array(
+	'ACTIVE_TOPICS'			=> 'Active Topics',
+	'ANNOUNCEMENTS'			=> 'Announcements',
+	
+	'ICON_ANNOUNCEMENT'		=> 'Announcement',
+	'ICON_STICKY'			=> 'Sticky',
+
+	'LOGIN_NOTIFY_FORUM'	=> 'You have been notified about this forum, please login to view it.',
+
+	'MARK_TOPICS_READ'		=> 'Mark Topics Read',
+	'MOVED_TOPIC'			=> 'Moved Topic',
+
+	'NEW_POSTS_HOT'			=> 'New posts [ Popular ]',
+	'NEW_POSTS_LOCKED'		=> 'New posts [ Locked ]',
+	'NO_NEW_POSTS_HOT'		=> 'No new posts [ Popular ]',
+	'NO_NEW_POSTS_LOCKED'	=> 'No new posts [ Locked ]',
+
+	'POST_FORUM_LOCKED'		=> 'Forum is locked',
+	'POST_NEW_TOPIC'		=> 'Post new topic',
+	
+	'TOPICS_MARKED'			=> 'The topics for this forum have now been marked read',
+
+	'VIEW_FORUM'			=> 'View Forum',
+	'VIEW_FORUM_TOPIC'		=> '1 Topic',
+	'VIEW_FORUM_TOPICS'		=> '%d Topics',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/viewtopic.php
===================================================================
--- cms/trunk/modules/forums/language/viewtopic.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/language/viewtopic.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -0,0 +1,98 @@
+<?php
+// -------------------------------------------------------------
+//
+// $Id: viewtopic.php,v 1.3 2004/06/06 21:44:49 acydburn Exp $
+//
+// FILENAME  : viewtopic.php [ English ]
+// STARTED   : Sat Dec 16, 2000
+// COPYRIGHT : ? 2001, 2003 phpBB Group
+// WWW       : http://www.phpbb.com/
+// LICENCE   : GPL v2.0 [ see /docs/COPYING ] 
+// 
+// -------------------------------------------------------------
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang += array(
+	'ATTACHMENT'						=> 'Attachment',
+	'ATTACHMENT_FUNCTIONALITY_DISABLED'	=> 'Attachment has been disabled',
+
+	'BOOKMARK_ADDED'		=> 'Bookmarked topic successfully.',
+	'BOOKMARK_REMOVED'		=> 'Removed bookmarked topic successfully.',
+	'BOOKMARK_TOPIC'		=> 'Bookmark topic',
+	'BOOKMARK_TOPIC_REMOVE'	=> 'Remove from bookmarks',
+	'BUMPED_BY'				=> 'Last bumped by %1$s on %2$s',
+	'BUMP_TOPIC'			=> 'Bump topic',
+
+	'CODE'					=> 'Code',
+
+	'DELETE_TOPIC'			=> 'Delete topic',
+	'DOWNLOAD_NOTICE'		=> 'You do not have the required permissions to view the files attached to this post.',
+
+	'EDITED_TIMES_TOTAL'	=> 'Last edited by %1$s on %2$s, edited %3$d times in total',
+	'EDITED_TIME_TOTAL'		=> 'Last edited by %1$s on %2$s, edited %3$d time in total',
+	'EMAIL_TOPIC'			=> 'Email friend',
+	'ERROR_NO_ATTACHMENT'	=> 'The selected Attachment does not exist anymore',
+
+	'FILE_NOT_FOUND_404'	=> 'The file <strong>%s</strong> does not exist.',
+	'FORK_TOPIC'			=> 'Copy topic',
+
+	'LINKAGE_FORBIDDEN'		=> 'You are not authorised to view, download or link from/to this site.',
+	'LOGIN_NOTIFY_TOPIC'	=> 'You have been notified about this topic, please login to view it.',
+	'LOGIN_VIEWTOPIC'		=> 'The board administrator requires you to be registered and logged in to view this topic.',
+
+	'MAKE_ANNOUNCE'				=> 'Change to Announcement',
+	'MAKE_GLOBAL'				=> 'Change to Global',
+	'MAKE_NORMAL'				=> 'Change to Standard Topic',
+	'MAKE_STICKY'				=> 'Change to Sticky',
+	'MAX_OPTIONS_SELECT'		=> 'You may select up to <strong>%d</strong> options',
+	'MAX_OPTION_SELECT'			=> 'You may select <strong>1</strong> option',
+	'MISSING_INLINE_ATTACHMENT'	=> 'The attachment <strong>%s</strong> is no longer available',
+	'MOVE_TOPIC'				=> 'Move topic',
+
+	'NO_ATTACHMENT_SELECTED'=> 'You haven\'t selected an attachment to download or view.',
+	'NO_NEWER_TOPICS'		=> 'There are no newer topics in this forum',
+	'NO_OLDER_TOPICS'		=> 'There are no older topics in this forum',
+	'NO_UNREAD_POSTS'		=> 'There are no new unread posts for this topic.',
+	'NO_VOTE_OPTION'		=> 'You must specify an option when voting.',
+
+	'POLL_ENDED_AT'			=> 'Poll ended at %s',
+	'POLL_RUN_TILL'			=> 'Poll runs till %s',
+	'POLL_VOTED_OPTION'		=> 'You voted for this option',
+	'POST_ENCODING'			=> 'This post by <strong>%1$s</strong> was made in a character set different to yours. %2$sView this post in its proper encoding%3$s.',
+	'PRINT_TOPIC'			=> 'Print view',
+
+	'QUICK_MOD'				=> 'Quick-mod tools',
+	'QUOTE'					=> 'Quote',
+
+	'REPLY_TO_TOPIC'		=> 'Reply to topic',
+	'RETURN_POST'			=> '%sReturn to the post%s',
+
+	'SUBMIT_VOTE'			=> 'Submit vote',
+
+	'TOTAL_VOTES'			=> 'Total votes',
+
+	'UNLOCK_TOPIC'			=> 'Unlock topic',
+
+	'VIEW_INFO'				=> 'Post details',
+	'VIEW_NEXT_TOPIC'		=> 'Next topic',
+	'VIEW_PREVIOUS_TOPIC'	=> 'Previous topic',
+	'VIEW_RESULTS'			=> 'View results',
+	'VIEW_TOPIC_POST'		=> '1 Post',
+	'VIEW_TOPIC_POSTS'		=> '%d Posts',
+	'VIEW_UNREAD_POST'		=> 'First unread post',
+	'VISIT_WEBSITE'			=> 'WWW',
+	'VOTE_SUBMITTED'		=> 'Your vote has been cast',
+
+	'WROTE'					=> 'wrote',
+);
+
+?>
\ No newline at end of file

Modified: cms/trunk/modules/forums/main.php
===================================================================
--- cms/trunk/modules/forums/main.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/main.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -63,11 +63,11 @@
 $birthday_list = '';
 if ($config['load_birthdays'])
 {
-	$now = explode(':', gmdate('d:m'));
+	$now = getdate(gmtime());
 
 	$sql = 'SELECT user_id, username, user_colour, user_birthday 
 		FROM ' . CORE_USERS_TABLE . " 
-		WHERE user_birthday LIKE '" . $_CLASS['core_db']->escape("{$now[0]}-{$now[1]}-") . "%'
+		WHERE user_birthday LIKE '" . $_CLASS['core_db']->escape(sprintf('%2d-%2d-', $now['mday'], $now['mon'])) . "%'
 			AND user_type = ".USER_NORMAL;
 	$result = $_CLASS['core_db']->query($sql);
 

Modified: cms/trunk/modules/forums/mcp.php
===================================================================
--- cms/trunk/modules/forums/mcp.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/mcp.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -170,7 +170,6 @@
 	// Except he is using one of the quickmod tools for users
 	$user_quickmod_actions = array(
 		'lock'			=> 'f_user_lock',
-		'unlock'		=> 'f_user_lock',
 		'make_sticky'	=> 'f_sticky',
 		'make_announce'	=> 'f_announce',
 		'make_global'	=> 'f_announce',

Modified: cms/trunk/modules/forums/posting.php
===================================================================
--- cms/trunk/modules/forums/posting.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/posting.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -918,8 +918,8 @@
 		{
 			// Lock/Unlock Topic
 			$change_topic_status = $post_data['topic_status'];
-			$perm_lock_unlock = ($_CLASS['forums_auth']->acl_get('m_lock', $forum_id) || ($_CLASS['forums_auth']->acl_get('f_user_lock', $forum_id) && $_CLASS['core_user']->is_user && $_CLASS['core_user']->data['user_id'] == $topic_poster));
-
+			$perm_lock_unlock = ($_CLASS['forums_auth']->acl_get('m_lock', $forum_id) || ($_CLASS['forums_auth']->acl_get('f_user_lock', $forum_id) && $_CLASS['core_user']->is_user && !empty($post_data['topic_poster']) && $_CLASS['core_user']->data['user_id'] == $post_data['topic_poster'] && $post_data['topic_status'] == ITEM_UNLOCKED)) ? true : false;
+		
 			if ($post_data['topic_status'] == ITEM_LOCKED && !$topic_lock && $perm_lock_unlock)
 			{
 				$change_topic_status = ITEM_UNLOCKED;
@@ -939,7 +939,7 @@
 						AND topic_moved_id = 0";
 				$_CLASS['core_db']->query($sql);
 			
-				$user_lock = ($_CLASS['forums_auth']->acl_get('f_user_lock', $forum_id) && $_CLASS['core_user']->is_user && $_CLASS['core_user']->data['user_id'] == $topic_poster) ? 'USER_' : '';
+				$user_lock = ($_CLASS['forums_auth']->acl_get('f_user_lock', $forum_id) && $_CLASS['core_user']->is_user && !empty($post_data['topic_poster']) && $_CLASS['core_user']->data['user_id'] == $post_data['topic_poster']) ? 'USER_' : '';
 
 				//add_log('mod', $forum_id, $topic_id, 'LOG_' . $user_lock . (($change_topic_status == ITEM_LOCKED) ? 'LOCK' : 'UNLOCK'), $post_data['topic_title']);
 			}
@@ -1237,7 +1237,7 @@
 $s_hidden_fields .= '<input type="hidden" name="lastclick" value="' . $current_time . '" />';
 $s_hidden_fields .= ($draft_id || isset($_REQUEST['draft_loaded'])) ? '<input type="hidden" name="draft_loaded" value="' . request_var('draft_loaded', $draft_id) . '" />' : '';
 
-$form_enctype = (@ini_get('file_uploads') == '0' || strtolower(@ini_get('file_uploads')) == 'off' || @ini_get('file_uploads') == '0' || !$config['allow_attachments'] || !$_CLASS['forums_auth']->acl_gets(array('f_attach', 'u_attach'), $forum_id)) ? '' : ' enctype="multipart/form-data"';
+$form_enctype = (@ini_get('file_uploads') == '0' || strtolower(@ini_get('file_uploads')) == 'off' || @ini_get('file_uploads') == '0' || !$config['allow_attachments'] || !$_CLASS['forums_auth']->acl_get('u_attach') || !$_CLASS['forums_auth']->acl_get('f_attach', $forum_id)) ? '' : ' enctype="multipart/form-data"';
 
 // Start assigning vars for main posting page ...
 $_CLASS['core_template']->assign_array(array(
@@ -1281,7 +1281,7 @@
 	'S_SIGNATURE_CHECKED' 	=> ($sig_checked) ? ' checked="checked"' : '',
 	'S_NOTIFY_ALLOWED'		=> ($_CLASS['core_user']->is_user),
 	'S_NOTIFY_CHECKED' 		=> ($notify_checked) ? ' checked="checked"' : '',
-	'S_LOCK_TOPIC_ALLOWED'	=> (($mode == 'edit' || $mode == 'reply' || $mode == 'quote') && ($_CLASS['forums_auth']->acl_get('m_lock', $forum_id) || ($_CLASS['forums_auth']->acl_get('f_user_lock', $forum_id) && $_CLASS['core_user']->is_user && $_CLASS['core_user']->data['user_id'] == $topic_poster))),
+	'S_LOCK_TOPIC_ALLOWED'	=> (($mode == 'edit' || $mode == 'reply' || $mode == 'quote') && ($_CLASS['forums_auth']->acl_get('m_lock', $forum_id) || ($_CLASS['forums_auth']->acl_get('f_user_lock', $forum_id) && $_CLASS['core_user']->is_user && !empty($post_data['topic_poster']) && $_CLASS['core_user']->data['user_id'] == $post_data['topic_poster'] && $post_data['topic_status'] == ITEM_UNLOCKED))) ? true : false,
 	'S_LOCK_TOPIC_CHECKED'	=> ($lock_topic_checked) ? ' checked="checked"' : '',
 	'S_LOCK_POST_ALLOWED'	=> ($mode == 'edit' && $_CLASS['forums_auth']->acl_get('m_edit', $forum_id)),
 	'S_LOCK_POST_CHECKED'	=> ($lock_post_checked) ? ' checked="checked"' : '',

Modified: cms/trunk/modules/forums/viewforum.php
===================================================================
--- cms/trunk/modules/forums/viewforum.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/viewforum.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -566,6 +566,7 @@
 			'TOPIC_ICON_IMG_WIDTH'  => empty($icons[$row['icon_id']]) ? '' :  $icons[$row['icon_id']]['width'],
 			'TOPIC_ICON_IMG_HEIGHT' => empty($icons[$row['icon_id']]) ? '' :  $icons[$row['icon_id']]['height'],
 			'ATTACH_ICON_IMG'       => ($row['topic_attachment'] && $_CLASS['forums_auth']->acl_gets(array('f_download', 'u_download'), $forum_id)) ? $_CLASS['core_user']->img('icon_attach', $_CLASS['core_user']->lang['TOTAL_ATTACHMENTS']) : '',
+			'ATTACH_ICON_IMG'		=> ($_CLASS['forums_auth']->acl_get('u_download') && $_CLASS['forums_auth']->acl_get('f_download', $forum_id) && $row['topic_attachment']) ? $_CLASS['core_user']->img('icon_topic_attach', $_CLASS['core_user']->lang['TOTAL_ATTACHMENTS']) : '',
 			'UNAPPROVED_IMG'		=> ($topic_unapproved || $posts_unapproved) ? $_CLASS['core_user']->img('icon_unapproved', ($topic_unapproved) ? 'TOPIC_UNAPPROVED' : 'POSTS_UNAPPROVED') : '',
 
 			'S_TOPIC_UNAPPROVED'	=> $topic_unapproved,

Modified: cms/trunk/modules/forums/viewtopic.php
===================================================================
--- cms/trunk/modules/forums/viewtopic.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/forums/viewtopic.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -524,23 +524,23 @@
 	for ($i = 0; $i < $count; $i++)
 	{
 		$poll_info[$i]['poll_option_text'] = censor_text($poll_info[$i]['poll_option_text']);
+		$poll_info[$i]['poll_option_text'] = str_replace("\n", '<br />', $poll_info[$i]['poll_option_text']);
 
 		if ($poll_bbcode !== false)
 		{
 			$poll_bbcode->bbcode_second_pass($poll_info[$i]['poll_option_text'], $poll_info[$i]['bbcode_uid'], $poll_option['bbcode_bitfield']);
 		}
 		$poll_info[$i]['poll_option_text'] = smiley_text($poll_info[$i]['poll_option_text']);
-		$poll_info[$i]['poll_option_text'] = str_replace("\n", '<br />', $poll_info[$i]['poll_option_text']);
 	}
 
 	$topic_data['poll_title'] = censor_text($topic_data['poll_title']);
+	$topic_data['poll_title'] = str_replace("\n", '<br />', $topic_data['poll_title']);
 
 	if ($poll_bbcode !== false)
 	{
 		$poll_bbcode->bbcode_second_pass($topic_data['poll_title'], $poll_info[0]['bbcode_uid'], $poll_info[0]['bbcode_bitfield']);
 	}
 	$topic_data['poll_title'] = smiley_text($topic_data['poll_title']);
-	$topic_data['poll_title'] = str_replace("\n", '<br />', $topic_data['poll_title']);
 
 	unset($poll_bbcode);
 	
@@ -560,6 +560,8 @@
 		);
 	}
 
+	$poll_end = $topic_data['poll_length'] + $topic_data['poll_start'];
+
 	$_CLASS['core_template']->assign_array(array(
 		'POLL_QUESTION'		=> $topic_data['poll_title'],
 		'TOTAL_VOTES' 		=> $poll_total,
@@ -567,7 +569,7 @@
 		'POLL_RIGHT_CAP_IMG'=> $_CLASS['core_user']->img('poll_right'),
 
 		'L_MAX_VOTES'		=> ($topic_data['poll_max_options'] == 1) ? $_CLASS['core_user']->lang['MAX_OPTION_SELECT'] : sprintf($_CLASS['core_user']->lang['MAX_OPTIONS_SELECT'], $topic_data['poll_max_options']), 
-		'L_POLL_LENGTH'		=> ($topic_data['poll_length']) ? sprintf($_CLASS['core_user']->lang['POLL_RUN_TILL'], $_CLASS['core_user']->format_date($topic_data['poll_length'] + $topic_data['poll_start'])) : '', 
+		'L_POLL_LENGTH'		=> ($topic_data['poll_length']) ? sprintf($_CLASS['core_user']->lang[($poll_end > $_CLASS['core_user']->time) ? 'POLL_RUN_TILL' : 'POLL_ENDED_AT'], $_CLASS['core_user']->format_date($poll_end)) : '',
 
 		'S_HAS_POLL'		=> true, 
 		'S_CAN_VOTE'		=> $s_can_vote, 
@@ -578,7 +580,7 @@
 		'U_VIEW_RESULTS'	=> generate_link($viewtopic_url . '&amp;view=viewpoll', false))
 	);
 
-	unset($poll_info, $voted_id);
+	unset($poll_end, $poll_info, $voted_id);
 }
 else
 {
@@ -647,8 +649,7 @@
 
 $result = $_CLASS['core_db']->query($sql);
 
-$today = explode('-', date('j-n-Y', $_CLASS['core_user']->time));
-$today = array('day' => (int) $today[0], 'month' => (int) $today[1], 'year' => (int) $today[2]);
+$now = getdate($_CLASS['core_user']->time);
 
 // Posts are stored in the $rowset array while $attach_list, $user_cache
 // and the global bbcode_bitfield are built
@@ -872,18 +873,18 @@
 
 				if ($bday_year)
 				{
-					$diff = $today['month'] - $bday_month;
+					$diff = $now['mon'] - $bday_month;
 					
 					if ($diff == 0)
 					{
-						$diff = ($today['day'] - $bday_day < 0) ? 1 : 0;
+						$diff = ($now['mday'] - $bday_day < 0) ? 1 : 0;
 					}
 					else
 					{
 						$diff = ($diff < 0) ? 1 : 0;
 					}
 					
-					$user_cache[$poster_id]['age'] = (int) ($today['year'] - $bday_year - $diff);
+					$user_cache[$poster_id]['age'] = (int) ($now['year'] - $bday_year - $diff);
 				}
 			}
 		}
@@ -915,7 +916,7 @@
 // Pull attachment data
 if (!empty($attach_list))
 {
-	if ($_CLASS['forums_auth']->acl_gets(array('f_download', 'u_download'), $forum_id))
+	if ($_CLASS['forums_auth']->acl_get('u_download') && $_CLASS['forums_auth']->acl_get('f_download', $forum_id))
 	{
 		$sql = 'SELECT * 
 			FROM ' . FORUMS_ATTACHMENTS_TABLE . '
@@ -1019,6 +1020,7 @@
 	if ($user_cache[$poster_id]['sig'] && empty($user_cache[$poster_id]['sig_parsed']))
 	{
 		$user_cache[$poster_id]['sig'] = censor_text($user_cache[$poster_id]['sig']);
+		$user_cache[$poster_id]['sig'] = str_replace("\n", '<br />', $user_cache[$poster_id]['sig']);
 
 		if ($user_cache[$poster_id]['sig_bbcode_bitfield'])
 		{
@@ -1026,7 +1028,6 @@
 		}
 
 		$user_cache[$poster_id]['sig'] = smiley_text($user_cache[$poster_id]['sig']);
-		$user_cache[$poster_id]['sig'] = str_replace("\n", '<br />', $user_cache[$poster_id]['sig']);
 		$user_cache[$poster_id]['sig_parsed'] = true;
 	}
 
@@ -1037,6 +1038,7 @@
 	}
 
 	$row['post_text'] = censor_text($row['post_text']);
+	$row['post_text'] = str_replace("\n", '<br />', $row['post_text']);
 
 	// Second parse bbcode here
 	if ($row['bbcode_bitfield'])
@@ -1061,7 +1063,7 @@
 	// Highlight active words (primarily for search)
 	if ($highlight_match)
 	{
-		$message = preg_replace('#(?!<.*)(?<!\w)(' . $highlight_match . ')(?!\w|[^<>]*>)#i', '<span class="posthilit">\1</span>', $message);
+		$message = preg_replace('#(?!(?:<(?:s(?:cript|tyle))?)[^<]*)(?<!\w)(' . $highlight_match . ')(?!\w|[^<>]*(?:</s(?:cript|tyle))?>)#is', '<span class="posthilit">\1</span>', $message);
 	}
 
 	if ($row['enable_html'] && ($config['allow_html'] && $_CLASS['forums_auth']->acl_get('f_html', $forum_id)))
@@ -1072,7 +1074,6 @@
 
 	// Replace naughty words such as farty pants
 	$row['post_subject'] = censor_text($row['post_subject']);
-	$row['post_text'] = str_replace("\n", '<br />', $row['post_text']);
 
 	// Editing information
 	if (($row['post_edit_count'] && $config['display_last_edited']) || $row['post_edit_reason'])
@@ -1092,7 +1093,7 @@
 			$result2 = $_CLASS['core_db']->query($sql);
 			while ($user_edit_row = $_CLASS['core_db']->fetch_row_assoc($result2))
 			{
-				$user_edit_row['username'] = ($user_edit_row['user_colour']) ? '<span style="color:#' . $user_edit_row['user_colour'] . '">' . $user_edit_row['username'] . '</span>' : $user_edit_row['username'];
+				$user_edit_row['username'] = ($user_edit_row['user_colour']) ? '<span style="color:#' . $user_edit_row['user_colour'] . '"><strong>' . $user_edit_row['username'] . '</strong></span>' : $user_edit_row['username'];
 				$post_edit_list[$user_edit_row['user_id']] = $user_edit_row;
 			}
 			$_CLASS['core_db']->free_result($result2);
@@ -1256,7 +1257,7 @@
 
 // Quick mod tools
 $topic_mod = '';
-$topic_mod .= ($_CLASS['forums_auth']->acl_get('m_lock', $forum_id) || ($_CLASS['forums_auth']->acl_get('f_user_lock', $forum_id) && $_CLASS['core_user']->data['user_id'] != ANONYMOUS && $_CLASS['core_user']->data['user_id'] == $topic_data['topic_poster'])) ? (($topic_data['topic_status'] == ITEM_UNLOCKED) ? '<option value="lock">' . $_CLASS['core_user']->lang['LOCK_TOPIC'] . '</option>' : '<option value="unlock">' . $_CLASS['core_user']->lang['UNLOCK_TOPIC'] . '</option>') : '';
+$topic_mod .= ($_CLASS['forums_auth']->acl_get('m_lock', $forum_id) || ($_CLASS['forums_auth']->acl_get('f_user_lock', $forum_id) && $_CLASS['core_user']->is_user && $_CLASS['core_user']->data['user_id'] == $topic_data['topic_poster'] && $topic_data['topic_status'] == ITEM_UNLOCKED)) ? (($topic_data['topic_status'] == ITEM_UNLOCKED) ? '<option value="lock">' . $_CLASS['core_user']->lang['LOCK_TOPIC'] . '</option>' : '<option value="unlock">' . $_CLASS['core_user']->lang['UNLOCK_TOPIC'] . '</option>') : '';
 $topic_mod .= ($_CLASS['forums_auth']->acl_get('m_delete', $forum_id)) ? '<option value="delete_topic">' . $_CLASS['core_user']->lang['DELETE_TOPIC'] . '</option>' : '';
 $topic_mod .= ($_CLASS['forums_auth']->acl_get('m_move', $forum_id)) ? '<option value="move">' . $_CLASS['core_user']->lang['MOVE_TOPIC'] . '</option>' : '';
 $topic_mod .= ($_CLASS['forums_auth']->acl_get('m_split', $forum_id)) ? '<option value="split">' . $_CLASS['core_user']->lang['SPLIT_TOPIC'] . '</option>' : '';

Modified: cms/trunk/modules/members_list/index.php
===================================================================
--- cms/trunk/modules/members_list/index.php	2006-08-20 18:00:53 UTC (rev 186)
+++ cms/trunk/modules/members_list/index.php	2006-09-12 14:55:25 UTC (rev 187)
@@ -365,17 +365,20 @@
 		}
 		unset($active_t_row);
 
-		if ($member['user_sig_bbcode_bitfield'] && $member['user_sig'])
+		if ($member['user_sig'])
 		{
-			require_once SITE_FILE_ROOT.'includes/forums/bbcode.php';
+			$member['user_sig'] = censor_text($member['user_sig']);
+			$member['user_sig'] = str_replace("\n", '<br />', $member['user_sig']);
+			
+			if ($member['user_sig_bbcode_bitfield'])
+			{
+				require_once SITE_FILE_ROOT.'includes/forums/bbcode.php';
 
-			$bbcode = new bbcode();
-			$bbcode->bbcode_second_pass($member['user_sig'], $member['user_sig_bbcode_uid'], $member['user_sig_bbcode_bitfield']);
-		}
+				$bbcode = new bbcode();
+				$bbcode->bbcode_second_pass($member['user_sig'], $member['user_sig_bbcode_uid'], $member['user_sig_bbcode_bitfield']);
+			}
 
-		if ($member['user_sig'])
-		{
-			$member['user_sig'] = censor_text(smiley_text($member['user_sig']));
+			$member['user_sig'] = smiley_text($member['user_sig']);
 		}
 
 		$poster_avatar = '';
@@ -411,8 +414,33 @@
 	
 		$last_visit = ($member['session_time']) ? $member['session_time'] : $member['user_last_visit'];
 		$online = ($member['session_time'] >= ($_CLASS['core_user']->time - $_CORE_CONFIG['server']['session_length']));
-	
+
+		$age = '';
+	
+		if ($data['user_birthday'])
+		{
+			list($bday_day, $bday_month, $bday_year) = array_map('intval', explode('-', $data['user_birthday']));
+	
+			if ($bday_year)
+			{
+				$now = getdate(gmtime());
+	
+				$diff = $now['mon'] - $bday_month;
+				if ($diff == 0)
+				{
+					$diff = ($now['mday'] - $bday_day < 0) ? 1 : 0;
+				}
+				else
+				{
+					$diff = ($diff < 0) ? 1 : 0;
+				}
+	
+				$age = (int) ($now['year'] - $bday_year - $diff);
+			}
+		}
+
 		$_CLASS['core_template']->assign_array(array(
+			'AGE'			=> $age,
 			'USERNAME'		=> $member['username'],
 			'USER_COLOR'	=> ($member['user_colour']) ? $member['user_colour'] : '',
 			'RANK_TITLE'	=> $rank_title,
@@ -453,7 +481,7 @@
 			'LOCATION'		=> (!empty($member['user_from'])) ? censor_text($member['user_from']) : '',
 			'OCCUPATION'    => (!empty($member['user_occ'])) ? str_replace("\n", '<br />', censor_text($member['user_occ'])) : '',
 			'INTERESTS'		=> (!empty($member['user_interests'])) ? str_replace("\n", '<br />', censor_text($member['user_interests'])) : '',
-			'SIGNATURE'		=> (!empty($member['user_sig'])) ? str_replace("\n", '<br />', $member['user_sig']) : '',
+			'SIGNATURE'		=> $member['user_sig'],
 
 			'AVATAR_IMG'	=> $poster_avatar,
 			'PM_IMG'		=> $_CLASS['core_user']->img('btn_pm', $_CLASS['core_user']->lang['MESSAGE']),



From viperal at mail.berlios.de  Thu Sep 21 08:41:37 2006
From: viperal at mail.berlios.de (viperal at BerliOS)
Date: Thu, 21 Sep 2006 08:41:37 +0200
Subject: [Viperals-svncheckins] r188 - in cms/trunk: . admin admin/functions
	includes includes/auth includes/cache includes/display
	includes/forums includes/forums/admin install javascript
	modules/control_panel/modules modules/forums
	modules/forums/admin modules/forums/language
Message-ID: <200609210641.k8L6fbsO027554@sheep.berlios.de>

Author: viperal
Date: 2006-09-21 08:41:32 +0200 (Thu, 21 Sep 2006)
New Revision: 188

Added:
   cms/trunk/admin/pages.php
   cms/trunk/admin/smiles.php
   cms/trunk/includes/forums/admin/admin_logs.php
   cms/trunk/includes/forums/admin/admin_permission_roles.php
   cms/trunk/modules/forums/language/admin_attachments.php
   cms/trunk/modules/forums/language/admin_board.php
   cms/trunk/modules/forums/language/admin_posting.php
   cms/trunk/modules/forums/language/admin_prune.php
Removed:
   cms/trunk/includes/forums/admin/admin_database.php
   cms/trunk/includes/forums/admin/admin_disallow.php
   cms/trunk/includes/forums/admin/admin_email.php
   cms/trunk/includes/forums/admin/admin_jabber.php
   cms/trunk/includes/forums/admin/admin_phpinfo.php
   cms/trunk/includes/forums/admin/admin_profile.php
   cms/trunk/includes/forums/admin/admin_prune_users.php
   cms/trunk/includes/forums/admin/admin_search.php
   cms/trunk/includes/forums/admin/admin_viewlogs.php
   cms/trunk/includes/forums/admin/admin_words.php
   cms/trunk/includes/forums/functions_compress.php
   cms/trunk/includes/forums/functions_jabber.php
   cms/trunk/includes/forums/functions_module.php
   cms/trunk/includes/forums/functions_profile_fields.php
   cms/trunk/includes/forums/functions_user.php
   cms/trunk/modules/forums/search.php
Modified:
   cms/trunk/admin.php
   cms/trunk/admin/blocks.php
   cms/trunk/admin/functions/block_functions.php
   cms/trunk/admin/functions/page_functions.php
   cms/trunk/admin/menu.php
   cms/trunk/admin/messages.php
   cms/trunk/admin/modules.php
   cms/trunk/admin/system.php
   cms/trunk/core.php
   cms/trunk/includes/auth/auth.php
   cms/trunk/includes/cache/cache.php
   cms/trunk/includes/cache/cache_eaccelerator.php
   cms/trunk/includes/cache/cache_file.php
   cms/trunk/includes/display/template.php
   cms/trunk/includes/forums/admin/admin_attachments.php
   cms/trunk/includes/forums/admin/admin_bbcodes.php
   cms/trunk/includes/forums/admin/admin_board.php
   cms/trunk/includes/forums/admin/admin_forums.php
   cms/trunk/includes/forums/admin/admin_icons.php
   cms/trunk/includes/forums/admin/admin_permissions.php
   cms/trunk/includes/forums/admin/admin_prune.php
   cms/trunk/includes/forums/admin/admin_ranks.php
   cms/trunk/includes/forums/admin/auth.php
   cms/trunk/includes/forums/admin/links.php
   cms/trunk/includes/forums/admin/main.php
   cms/trunk/includes/forums/auth.php
   cms/trunk/includes/forums/functions.php
   cms/trunk/includes/forums/functions_admin.php
   cms/trunk/includes/forums/functions_display.php
   cms/trunk/includes/forums/functions_posting.php
   cms/trunk/includes/forums/functions_privmsgs.php
   cms/trunk/includes/forums/functions_upload.php
   cms/trunk/includes/forums/message_parser.php
   cms/trunk/includes/functions.php
   cms/trunk/includes/functions_user.php
   cms/trunk/includes/handler.php
   cms/trunk/includes/tables.php
   cms/trunk/includes/user.php
   cms/trunk/install/build_data.php
   cms/trunk/install/build_tables.php
   cms/trunk/javascript/editor.js
   cms/trunk/modules/control_panel/modules/ucp_pm_compose.php
   cms/trunk/modules/control_panel/modules/ucp_profile.php
   cms/trunk/modules/control_panel/modules/ucp_register.php
   cms/trunk/modules/forums/admin/index.php
   cms/trunk/modules/forums/download.php
   cms/trunk/modules/forums/posting.php
   cms/trunk/modules/forums/report.php
   cms/trunk/modules/forums/viewforum.php
Log:


Modified: cms/trunk/admin/blocks.php
===================================================================
--- cms/trunk/admin/blocks.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin/blocks.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -29,7 +29,7 @@
 global $_CLASS;
 
 
-$_CLASS['core_user']->add_lang('admin/blocks.php');
+$_CLASS['core_user']->add_lang('admin/blocks', null);
 $message = false;
 
 function check_position($position, $redirect = true)

Modified: cms/trunk/admin/functions/block_functions.php
===================================================================
--- cms/trunk/admin/functions/block_functions.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin/functions/block_functions.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -75,6 +75,11 @@
 		trigger_error('BLOCK_NOT_FOUND');
 	}
 
+	if ($block['page_status'] != STATUS_ACTIVE && $block['page_status'] != STATUS_DISABLED)
+	{
+		trigger_error('INVALID_STATUS');
+	}
+
 	check_position($block['block_position']);
 	$status = ($block['block_status'] == STATUS_ACTIVE) ? STATUS_DISABLED : STATUS_ACTIVE;
 

Modified: cms/trunk/admin/functions/page_functions.php
===================================================================
--- cms/trunk/admin/functions/page_functions.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin/functions/page_functions.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -121,9 +121,9 @@
 
 	if (display_confirmation())
 	{
-		if ($page['page_type'] === PAGE_TEMPLATE)
+		if ($page['page_type'] == PAGE_TEMPLATE)
 		{
-		// remove template
+			@unlink(SITE_FILE_ROOT.'includes/templates/'.$page['page_location']);
 		}
 
 		$_CLASS['core_db']->query('DELETE from ' . CORE_PAGES_TABLE . ' WHERE page_id = '.$id);

Modified: cms/trunk/admin/menu.php
===================================================================
--- cms/trunk/admin/menu.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin/menu.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -48,9 +48,9 @@
 $menu['forums'][] = array('lang' => $_CLASS['core_user']->get_lang('ADMIN_INDEX'), 'link' => generate_link('forums', array('admin' => true)));
 $menu['forums'][] = '';
 $menu['forums'][] = array('lang' => $_CLASS['core_user']->get_lang('MANAGE_FORUMS'), 'link' => generate_link('forums&amp;file=admin_forums', array('admin' => true)));
-$menu['forums'][] = array('lang' => $_CLASS['core_user']->get_lang('PERMISSIONS'), 'link' => generate_link('forums&amp;file=admin_permissions&amp;mode=forum', array('admin' => true)));
-$menu['forums'][] = array('lang' => $_CLASS['core_user']->get_lang('ADMINISTRATORS'), 'link' => generate_link('forums&amp;file=admin_permissions&amp;mode=admin', array('admin' => true)));
-$menu['forums'][] = array('lang' => $_CLASS['core_user']->get_lang('MODERATORS'), 'link' => generate_link('forums&amp;file=admin_permissions&amp;mode=mod', array('admin' => true)));
+$menu['forums'][] = array('lang' => $_CLASS['core_user']->get_lang('PERMISSIONS'), 'link' => generate_link('forums&amp;file=admin_permissions&amp;mode=setting_forum_local', array('admin' => true)));
+$menu['forums'][] = array('lang' => $_CLASS['core_user']->get_lang('ADMINISTRATORS'), 'link' => generate_link('forums&amp;file=admin_permissions&amp;mode=setting_admin_global', array('admin' => true)));
+$menu['forums'][] = array('lang' => $_CLASS['core_user']->get_lang('MODERATORS'), 'link' => generate_link('forums&amp;file=admin_permissions&amp;mode=setting_mod_local', array('admin' => true)));
 
 $menu['system'][] = array('lang' => $_CLASS['core_user']->get_lang('SYSTEM'), 'link' => generate_link('system', array('admin' => true)));
 $menu['system'][] = array('lang' => $_CLASS['core_user']->get_lang('SITE_SETTINGS'), 'link' => generate_link('system&amp;mode=site', array('admin' => true)));

Modified: cms/trunk/admin/messages.php
===================================================================
--- cms/trunk/admin/messages.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin/messages.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -29,7 +29,7 @@
 global $_CLASS;
 
 require_once SITE_FILE_ROOT.'admin/functions/block_functions.php';
-$_CLASS['core_user']->add_lang('admin/blocks.php');
+$_CLASS['core_user']->add_lang('admin/blocks', null);
 
 function check_position($position, $redirect = true)
 {

Modified: cms/trunk/admin/modules.php
===================================================================
--- cms/trunk/admin/modules.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin/modules.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -28,7 +28,7 @@
 
 global $_CLASS;
 
-$_CLASS['core_user']->add_lang('admin/blocks.php');
+$_CLASS['core_user']->add_lang('admin/blocks', null);
 
 $mode = get_variable('mode', 'GET', false);
 
@@ -117,7 +117,7 @@
 			break;
 
 			case 'edit':
-				$result = $_CLASS['core_db']->query('SELECT * FROM '. CORE_PAGES_TABLE ." WHERE page_id = $id AND page_type = ". PAGE_MODULE);
+				$result = $_CLASS['core_db']->query('SELECT * FROM '. CORE_PAGES_TABLE .' WHERE page_id = '.$id);
 				$module = $_CLASS['core_db']->fetch_row_assoc($result);
 				$_CLASS['core_db']->free_result($result);
 
@@ -125,9 +125,39 @@
 				{
 					trigger_error('MODULE_NOT_FOUND');
 				}
-				
+
+				if ($module['page_status'] != STATUS_ACTIVE && $module['page_status'] != STATUS_DISABLED)
+				{
+					trigger_error('MODULE_NOT_INSTALLED');
+				}
+	
 				check_type($module['page_type']);
+
+				if (isset($_POST['submit']))
+				{
+					$blocks_array = get_variable('blocks_array', 'POST', array(), 'array:int');
+					$active = get_variable('active', 'POST', 0, 'int');
+
+					$data = array();
+					$data['page_title'] = get_variable('title', 'POST', null);
+					$data['page_status'] = ($active) ? STATUS_ACTIVE : STATUS_DISABLED;
+
+					$data['page_blocks'] = 0;
+
+					foreach ($blocks_array as $value)
+					{
+						$data['page_blocks'] |= (1 << $value);
+					}
+
+					$_CLASS['core_db']->query('UPDATE '.CORE_PAGES_TABLE.' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $data) .'  WHERE page_id = '.$id);
+
+					unset($data, $blocks_array, $active);
+
+					break;
+				}
+
 				settype($module['page_status'], 'int');
+				settype($module['page_blocks'], 'int');
 
 				$page_blocks_array = array(
 					array(
@@ -163,11 +193,11 @@
 				);
 				
 				$_CLASS['core_template']->assign_array(array(
-					'ADMIN_PAGE_ACTION'			=> generate_link('modules&amp;mode=edit', array('admin' => true)),
+					'ADMIN_PAGE_ACTION'			=> generate_link('modules&amp;mode=edit&id='.$id, array('admin' => true)),
 					'ADMIN_PAGE_TITLE'			=> $module['page_title'],
 					'ADMIN_PAGE_NAME'			=> mb_convert_case(preg_replace('/_/', ' ', $module['page_name']), MB_CASE_TITLE),
 					'ADMIN_PAGE_BLOCKS_ARRAY'	=> $page_blocks_array,
-					'ADMIN_PAGE_STATUS'			=> $module['page_status'],
+					'ADMIN_PAGE_ACTIVE'			=> ($module['page_status'] == STATUS_ACTIVE) ? true : false,
 					'ADMIN_PAGE_ERROR'			=> '',
 				));
 			
@@ -175,7 +205,7 @@
 			break;
 
 			case 'install':
-				$result = $_CLASS['core_db']->query('SELECT page_status, page_name, page_type FROM '.CORE_PAGES_TABLE." WHERE page_id = $id AND page_type = ". PAGE_MODULE);
+				$result = $_CLASS['core_db']->query('SELECT page_status, page_name, page_type FROM '.CORE_PAGES_TABLE.' WHERE page_id = '.$id);
 				$module = $_CLASS['core_db']->fetch_row_assoc($result);
 				$_CLASS['core_db']->free_result($result);
 

Added: cms/trunk/admin/pages.php
===================================================================
--- cms/trunk/admin/pages.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin/pages.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -0,0 +1,338 @@
+<?php
+/*
+||**************************************************************||
+||  Viperal CMS ?? :												||
+||**************************************************************||
+||																||
+||	Copyright (C) 2004, 2005									||
+||  By Ryan Marshall ( Viperal )								||
+||																||
+||  Email: viperal1 at gmail.com									||
+||  Site: http://www.viperal.com								||
+||																||
+||**************************************************************||
+||	LICENSE: ( http://www.gnu.org/licenses/gpl.txt )			||
+||**************************************************************||
+||  Viperal CMS is released under the terms and conditions		||
+||  of the GNU General Public License version 2					||
+||																||
+||**************************************************************||
+
+$Id$
+*/
+
+if (VIPERAL != 'Admin') 
+{
+	die;
+}
+
+global $_CLASS;
+
+$_CLASS['core_user']->add_lang('admin/blocks', null);
+
+$mode = get_variable('mode', 'GET', false);
+
+function check_type(&$type, $redirect = true)
+{
+	$appoved_type = array(PAGE_TEMPLATE);
+	$type = (int) $type;
+	
+	if (!in_array($type, $appoved_type, true))
+	{
+		if ($redirect)
+		{
+			redirect(generate_link('pages', array('admin' => true, 'full' => true)));
+		}
+		return false;
+	}
+
+	return true;
+}
+		
+if (isset($_REQUEST['mode']))
+{
+	if ($_REQUEST['mode'] === 'upload')
+	{
+		//$page_name = get_variable('page_name', 'POST', false);
+		$page_title = get_variable('page_title', 'POST', false);
+		$page_name = mb_strtolower(str_replace(' ', '_', $page_title));
+
+		if (!empty($_FILES['file_upload']) && $page_name)
+		{
+
+			if (!is_uploaded_file($_FILES['file_upload']['tmp_name']))
+			{
+				trigger_error('FILE_UPLOAD_ERROR');
+				die;
+			}
+
+			$destination = SITE_FILE_ROOT.'includes/templates/pages/'.$_FILES['file_upload']['name'];
+			if (file_exists($destination))
+			{
+				trigger_error('FILE_UPLOAD_ERROR');
+				die;
+			}
+
+			if (!@move_uploaded_file($_FILES['file_upload']['tmp_name'], $destination))
+			{
+				trigger_error('FILE_UPLOAD_ERROR');
+				die;
+			}
+
+			$insert_array =  array(
+				'page_name'			=> (string) $page_name,
+				'page_title'		=> (string) $page_title,
+				'page_type'			=> PAGE_TEMPLATE,
+				'page_location'		=> 'pages/'.$_FILES['file_upload']['name'],
+				'page_status'		=> STATUS_PENDING,
+			);
+
+			$_CLASS['core_db']->sql_query_build('INSERT', $insert_array, CORE_PAGES_TABLE);
+			unset($insert_array, $page_name, $page_title);
+		}
+		else
+		{
+			$_CLASS['core_template']->assign_array(array(
+				'ACTION_SUBMIT'			=> generate_link('pages&amp;mode=upload', array('admin' => true)),
+			));
+	
+			$_CLASS['core_display']->display(false, 'admin/pages/upload.html');
+		}
+	}
+	elseif ($id = get_variable('id', 'GET', false, 'int'))
+	{
+		switch ($_REQUEST['mode'])
+		{
+			case 'change':
+				require_once SITE_FILE_ROOT.'admin/functions/page_functions.php';
+
+				page_change($id);
+			break;
+
+			case 'edit':
+			case 'edit_content':
+				$result = $_CLASS['core_db']->query('SELECT * FROM '. CORE_PAGES_TABLE .' WHERE page_id = '.$id);
+				$page = $_CLASS['core_db']->fetch_row_assoc($result);
+				$_CLASS['core_db']->free_result($result);
+
+				if (!$page)
+				{
+					trigger_error('PAGE_NOT_FOUND');
+				}
+
+				if ($page['page_status'] != STATUS_ACTIVE && $page['page_status'] != STATUS_DISABLED)
+				{
+					trigger_error('PAGE_NOT_INSTALLED');
+				}
+	
+				check_type($page['page_type']);
+
+				if ($_REQUEST['mode'] === 'edit_content')
+				{
+					if (isset($_POST['submit']))
+					{
+						$data = array();
+						$data['page_title'] = get_variable('title', 'POST', null);
+	
+						$_CLASS['core_db']->query('UPDATE '.CORE_PAGES_TABLE.' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $data) .'  WHERE page_id = '.$id);
+	
+						unset($data);
+						
+						$content = get_variable('file_content', 'POST', null);
+						file_put_contents(SITE_FILE_ROOT.'includes/templates/'.$page['page_location'], $content);
+
+						break;
+					}
+					
+					$content = file_get_contents(SITE_FILE_ROOT.'includes/templates/'.$page['page_location']);
+
+					$_CLASS['core_template']->assign_array(array(
+						'ADMIN_PAGE_ACTION'			=> generate_link('pages&amp;mode=edit_content&id='.$id, array('admin' => true)),
+						'ADMIN_PAGE_NAME'			=> mb_convert_case(preg_replace('/_/', ' ', $page['page_name']), MB_CASE_TITLE),
+						'ADMIN_PAGE_TITLE'			=> $page['page_title'],
+						'ADMIN_PAGE_CONTENT'		=> $content,
+						'ADMIN_PAGE_ERROR'			=> '',
+					));
+
+					unset($content);
+
+					$_CLASS['core_display']->display(false, 'admin/pages/edit_content.html');
+
+					break;
+				}
+				
+				if (isset($_POST['submit']))
+				{
+					$blocks_array = get_variable('blocks_array', 'POST', array(), 'array:int');
+					$active = get_variable('active', 'POST', 0, 'int');
+
+					$data = array();
+					$data['page_title'] = get_variable('title', 'POST', null);
+					$data['page_status'] = ($active) ? STATUS_ACTIVE : STATUS_DISABLED;
+
+					$data['page_blocks'] = 0;
+
+					foreach ($blocks_array as $value)
+					{
+						$data['page_blocks'] |= (1 << $value);
+					}
+
+					$_CLASS['core_db']->query('UPDATE '.CORE_PAGES_TABLE.' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $data) .'  WHERE page_id = '.$id);
+
+					unset($data, $blocks_array, $active);
+
+					break;
+				}
+
+				settype($page['page_status'], 'int');
+				settype($page['page_blocks'], 'int');
+
+				$page_blocks_array = array(
+					array(
+						'value' => BLOCK_RIGHT,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_RIGHT'),
+						'checked' => ($page['page_blocks'] & (1 << BLOCK_RIGHT))
+					),
+					array(
+						'value' => BLOCK_TOP,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_TOP'),
+						'checked' => ($page['page_blocks'] & (1 << BLOCK_TOP))
+					),
+					array(
+						'value' => BLOCK_BOTTOM,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_BOTTOM'),
+						'checked' => ($page['page_blocks'] & (1 << BLOCK_BOTTOM))
+					),
+					array(
+						'value' => BLOCK_LEFT,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_LEFT'),
+						'checked' => ($page['page_blocks'] & (1 << BLOCK_LEFT))
+					),
+					array(
+						'value' => BLOCK_MESSAGE_TOP,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_MESSAGE_TOP'),
+						'checked' => ($page['page_blocks'] & (1 << BLOCK_MESSAGE_TOP))
+					),
+					array(
+						'value' => BLOCK_MESSAGE_BOTTOM,
+						'name' => $_CLASS['core_user']->get_lang('BLOCK_MESSAGE_BOTTOM'),
+						'checked' => ($page['page_blocks'] & (1 << BLOCK_MESSAGE_BOTTOM))
+					)
+				);
+				
+				$_CLASS['core_template']->assign_array(array(
+					'ADMIN_PAGE_ACTION'			=> generate_link('pages&amp;mode=edit&id='.$id, array('admin' => true)),
+					'ADMIN_PAGE_TITLE'			=> $page['page_title'],
+					'ADMIN_PAGE_NAME'			=> mb_convert_case(preg_replace('/_/', ' ', $page['page_name']), MB_CASE_TITLE),
+					'ADMIN_PAGE_BLOCKS_ARRAY'	=> $page_blocks_array,
+					'ADMIN_PAGE_ACTIVE'			=> ($page['page_status'] == STATUS_ACTIVE) ? true : false,
+					'ADMIN_PAGE_ERROR'			=> '',
+				));
+
+				$_CLASS['core_display']->display(false, 'admin/pages/edit.html');
+			break;
+
+			case 'remove':
+				require_once SITE_FILE_ROOT.'admin/functions/page_functions.php';
+				
+				page_remove($id);
+			break;
+
+			case 'auth':
+				require_once SITE_FILE_ROOT.'admin/functions/page_functions.php';
+
+				page_auth($id);
+			break;
+
+			case 'install':
+				$result = $_CLASS['core_db']->query('SELECT page_status, page_name, page_type FROM '.CORE_PAGES_TABLE.' WHERE page_id = '.$id);
+				$page = $_CLASS['core_db']->fetch_row_assoc($result);
+				$_CLASS['core_db']->free_result($result);
+
+				if (!$page || $page['page_status'] != STATUS_PENDING)
+				{
+					trigger_error($page ? 'PAGE_ALREADY_INSTALLED' : 'PAGE_NOT_FOUND');
+				}
+
+				check_type($page['page_type']);
+
+				if (display_confirmation())
+				{
+					$_CLASS['core_db']->query('UPDATE '.CORE_PAGES_TABLE.' set page_status = '.STATUS_DISABLED.' WHERE page_id = '.$id);
+				}
+			break;
+
+			case 'uninstall':
+				$result = $_CLASS['core_db']->query('SELECT page_status, page_name, page_type FROM '.CORE_PAGES_TABLE.' WHERE page_id = '.$id);
+				$page = $_CLASS['core_db']->fetch_row_assoc($result);
+				$_CLASS['core_db']->free_result($result);
+			
+				if (!$page || $page['page_status'] == STATUS_PENDING)
+				{
+					trigger_error($page ? 'PAGE_NOT_UNINSTALLABLE' : 'PAGE_NOT_FOUND');
+				}
+			
+				check_type($page['page_type']);
+				
+				if (display_confirmation())
+				{
+					$_CLASS['core_db']->query('UPDATE ' . CORE_PAGES_TABLE . ' set page_status = ' . STATUS_PENDING . ' WHERE page_id = '.$id);
+				}
+			break;
+		}
+	}
+}
+
+$sql = 'SELECT * FROM '.CORE_PAGES_TABLE.'
+			WHERE page_type = '. PAGE_TEMPLATE .'
+				ORDER BY page_name';
+
+$result = $_CLASS['core_db']->query($sql);
+
+$pages = array();
+$admin_auth = false;
+
+while ($pages = $_CLASS['core_db']->fetch_row_assoc($result))
+{
+	settype($pages['page_status'], 'int');
+
+	$active = ($pages['page_status'] === STATUS_ACTIVE);
+	if ($pages['page_status'] === STATUS_PENDING)
+	{
+		$installed = false;
+		$installer_link = generate_link('pages&amp;mode=install&amp;id='.$pages['page_id'], array('admin' => true));
+		$remove_link = generate_link('pages&amp;mode=remove&amp;id='.$pages['page_id'], array('admin' => true));
+	}
+	else
+	{
+		$installed = true;
+		$installer_link = generate_link('pages&amp;mode=uninstall&amp;id='.$pages['page_id'], array('admin' => true));
+		$remove_link = '';
+	}
+
+	$_CLASS['core_template']->assign_vars_array('normal_pages', array(
+			'ACTIVE'		=> ($active),
+			'CHANGE'		=> ($active) ? $_CLASS['core_user']->get_lang('DEACTIVATE') : $_CLASS['core_user']->get_lang('ACTIVATE'),
+			'ERROR'			=> '',
+			'INSTALLED'		=> $installed,
+			'TITLE'			=> ($pages['page_title']) ? $pages['page_title'] : mb_convert_case(preg_replace('/_/', ' ', $pages['page_name']), MB_CASE_TITLE),
+
+			'LINK_ACTIVE'		=> generate_link('pages&amp;mode=change&amp;id='.$pages['page_id'], array('admin' => true)),
+			'LINK_EDIT'			=> generate_link('pages&amp;mode=edit&amp;id='.$pages['page_id'], array('admin' => true)),
+			'LINK_EDIT_CONTENT'	=> generate_link('pages&amp;mode=edit_content&amp;id='.$pages['page_id'], array('admin' => true)),
+			'LINK_AUTH'			=> generate_link('pages&amp;mode=auth&amp;id='.$pages['page_id'], array('admin' => true)),
+			'LINK_ADMIN_AUTH'	=> ($admin_auth) ? generate_link('pages&amp;mode=admin_auth&amp;id='.$pages['page_id'], array('admin' => true)) : '' ,
+			'LINK_INSTALLER'	=> $installer_link,
+			'LINK_REMOVE'		=> $remove_link,
+	));
+}
+
+$_CLASS['core_template']->assign_array(array(
+	'LINK_UPLOAD_PAGE'		=> generate_link('pages&amp;mode=upload', array('admin' => true)),
+	'LINK_CREATE_PAGE'		=> generate_link('pages&amp;mode=create', array('admin' => true)),
+	'LINK_GENERATE_PAGE'	=> generate_link('pages&amp;mode=generate', array('admin' => true)),
+));
+
+$_CLASS['core_display']->display(false, 'admin/pages/index.html');
+
+?>
\ No newline at end of file

Added: cms/trunk/admin/smiles.php
===================================================================
--- cms/trunk/admin/smiles.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin/smiles.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -0,0 +1,186 @@
+<?php
+/*
+||**************************************************************||
+||  Viperal CMS ? :												||
+||**************************************************************||
+||																||
+||	Copyright (C) 2004, 2005									||
+||  By Ryan Marshall ( Viperal )								||
+||																||
+||  Email: viperal1 at gmail.com									||
+||  Site: http://www.viperal.com								||
+||																||
+||**************************************************************||
+||	LICENSE: ( http://www.gnu.org/licenses/gpl.txt )			||
+||**************************************************************||
+||  Viperal CMS is released under the terms and conditions		||
+||  of the GNU General Public License version 2					||
+||																||
+||**************************************************************||
+
+$Id$
+*/
+
+if (VIPERAL !== 'Admin') 
+{
+	die;
+}
+
+global $_CLASS, $_CORE_MODULE, $_CORE_CONFIG;
+
+$_CLASS['core_user']->add_lang('admin/system', null);
+
+$notice = '';
+$mode =	get_variable('mode', 'GET', false);
+$page_title = 'SMILES';
+
+if (!$mode || !in_array($mode, array('edit', 'delete', 'move_up', 'move_down')))
+{
+	$mode = '';
+}
+
+$smiley_id = get_variable('id', 'REQUEST', false, 'int');
+
+switch ($mode)
+{
+	case 'edit':
+		
+		if (isset($_POST['submit']))
+		{
+
+			$smiley_id 			= get_variable('id', 'POST', array(), 'array:int');
+			$image_width		= get_variable('width', 'POST', array(), 'array:int');
+			$image_height		= get_variable('height', 'POST', array(), 'array:int');
+			$image_code			= get_variable('code', 'POST', array(), 'array');
+			$image_description	= get_variable('description', 'POST', array(), 'array');
+			//$image_display_on_posting = (isset($_POST['display_on_posting'])) ? array_map('intval', $_POST['display_on_posting']) : array();
+	
+			$sql = 'SELECT * 
+				FROM ' . CORE_SMILIES_TABLE .'
+				WHERE smiley_id IN ('. implode(', ', $smiley_id).')';
+			$result = $_CLASS['core_db']->query($sql);
+
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				if (!$image_width[$row['smiley_id']] || !$image_height[$row['smiley_id']])
+				{
+					$img_size = @getimagesize($_CORE_CONFIG['global']['path_smilies'] . '/' . $row['smiley_src']);
+					$image_width[$row['smiley_id']] = $img_size[0];
+					$image_height[$row['smiley_id']] = $img_size[1];
+				}
+
+				$img_sql = array(
+					'smiley_width'			=> (int) $image_width[$row['smiley_id']],
+					'smiley_height'			=> (int) $image_height[$row['smiley_id']],
+					'smiley_description'	=> $image_description[$row['smiley_id']],
+					'smiley_code'			=> $image_code[$row['smiley_id']]
+				);
+
+				$sql = 'UPDATE '.CORE_SMILIES_TABLE.'
+					SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $img_sql) . " 
+					WHERE smiley_id = " . $row['smiley_id'];
+				$_CLASS['core_db']->query($sql);
+			}
+			$_CLASS['core_db']->free_result($result);
+			
+			break;
+		}
+
+		$sql = 'SELECT * 
+			FROM ' . CORE_SMILIES_TABLE .'
+			WHERE smiley_id ='.$smiley_id;
+		$result = $_CLASS['core_db']->query($sql);
+
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$_CLASS['core_template']->assign_vars_array('smilies', array(
+				'IMG'		=> $row['smiley_src'],
+				'IMG_SRC'	=> $_CORE_CONFIG['global']['path_smilies'] . '/' . $row['smiley_src'],
+
+				'CODE'		=> $row['smiley_code'],
+				'EMOTION'	=> $row['smiley_description'],
+
+				'ID'				=> $row['smiley_id'],
+				'WIDTH'				=> $row['smiley_width'],
+				'HEIGHT'			=> $row['smiley_height'],
+				'POSTING_CHECKED'	=> (!empty($row['display_on_posting']) || $mode === 'add') ? ' checked="checked"' : '')
+			);
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		$_CLASS['core_template']->assign_array(array(
+			'S_EDIT'		=> true,
+			'S_ADD'			=> false,
+			'ID'			=> $smiley_id,
+			'U_ACTION'		=> generate_link('smiles&amp;mode='.$mode, array('admin' => true)),
+		));
+
+		$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'admin/smiles/index.html');
+	break;
+	
+	case 'delete':
+		if (display_confirmation())
+		{
+			$sql = 'DELETE FROM '.CORE_SMILIES_TABLE.'
+				WHERE smiley_id = '.$smiley_id;
+			$_CLASS['core_db']->query($sql);
+	
+			$notice = $_CLASS['core_user']->lang['ICONS_DELETED'];
+	
+			$_CLASS['core_cache']->destroy('smiley_window');
+			$_CLASS['core_cache']->destroy('smiley_inline');
+		}
+	break;
+	
+	case 'move_up':
+	case 'move_down':
+		$image_order = get_variable('order', 'REQUEST', 0, 'int');
+		$order_total = $image_order * 2 + (($mode === 'move_up') ? -1 : 1);
+
+		$sql = 'UPDATE '.CORE_SMILIES_TABLE."
+			SET smiley_order = $order_total - smiley_order
+			WHERE smiley_order IN ($image_order, " . (($mode == 'move_up') ? $image_order - 1 : $image_order + 1) . ')';
+		$_CLASS['core_db']->query($sql);
+
+		$_CLASS['core_cache']->destroy('smiley_window');
+		$_CLASS['core_cache']->destroy('smiley_inline');
+	break;
+}
+
+$lang = 'ICONS';
+
+global $_CLASS, $_CORE_CONFIG;
+
+$_CLASS['core_template']->assign_array(array(
+	'S_EDIT'			=> false,
+	'L_NOT_DISPLAYED'	=> $_CLASS['core_user']->lang[$lang . '_NOT_DISPLAYED'],
+	'NOTICE'			=> $notice,
+	'U_ACTION'			=> generate_link('smiles&amp;mode='.$mode, array('admin' => true)),
+));
+
+
+$sql = 'SELECT * 
+	FROM '.CORE_SMILIES_TABLE.'
+	ORDER BY smiley_order ASC';
+$result = $_CLASS['core_db']->query($sql);
+
+while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+{
+	$_CLASS['core_template']->assign_vars_array('smilies', array(
+		'ALT_TEXT'		=> $row['smiley_code'],
+		'IMG_SRC'		=> $_CORE_CONFIG['global']['path_smilies'] . '/' . $row['smiley_src'],
+		'WIDTH'			=> $row['smiley_width'],
+		'HEIGHT'		=> $row['smiley_height'],
+		'CODE'			=> $row['smiley_code'],
+		'EMOTION'		=> $row['smiley_description'],
+		'U_EDIT'		=> generate_link('smiles&amp;mode=edit&amp;id=' . $row['smiley_id'], array('admin' => true)),
+		'U_DELETE'		=> generate_link('smiles&amp;mode=delete&amp;id=' . $row['smiley_id'], array('admin' => true)),
+		'U_MOVE_UP'		=> generate_link('smiles&amp;mode=move_up&amp;order=' . $row['smiley_order'], array('admin' => true)),
+		'U_MOVE_DOWN'	=> generate_link('smiles&amp;mode=move_down&amp;order=' . $row['smiley_order'], array('admin' => true))
+	));
+}
+$_CLASS['core_db']->free_result($result);
+
+$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'admin/smiles/index.html');
+
+?>
\ No newline at end of file

Modified: cms/trunk/admin/system.php
===================================================================
--- cms/trunk/admin/system.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin/system.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -28,7 +28,7 @@
 
 global $_CLASS, $_CORE_MODULE;
 
-$_CLASS['core_user']->add_lang('admin/system.php');
+$_CLASS['core_user']->add_lang('admin/system', null);
 
 $mode =	get_variable('mode', 'GET', false);
 

Modified: cms/trunk/admin.php
===================================================================
--- cms/trunk/admin.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/admin.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -13,14 +13,13 @@
 //																//
 //**************************************************************//
 define('VIPERAL', 'Admin');
-//define('NEED_SID', true);
 
 require_once 'core.php';
 
 $_CLASS['core_user']->user_setup(null);
 $_CLASS['core_display']->load_theme('viperal_admin', SITE_FILE_ROOT.'themes_admin/viperal_admin');
 
-$_CLASS['core_user']->add_lang('admin/common.php');
+$_CLASS['core_user']->add_lang('admin/common', null);
 $_CLASS['core_blocks']->blocks_loaded = true;
 
 if (!$_CLASS['core_user']->is_user)

Modified: cms/trunk/core.php
===================================================================
--- cms/trunk/core.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/core.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -62,9 +62,11 @@
 	}
 }
 
+define('SITE_ROOT', str_replace('\\','/', dirname(getenv('SCRIPT_FILENAME'))));
+
 if (!defined('SITE_FILE_ROOT'))
 {
-	define('SITE_FILE_ROOT', str_replace('\\','/', dirname(getenv('SCRIPT_FILENAME'))).'/');
+	define('SITE_FILE_ROOT', SITE_ROOT.'/');
 }
 
 if (!extension_loaded('mbstring'))

Modified: cms/trunk/includes/auth/auth.php
===================================================================
--- cms/trunk/includes/auth/auth.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/auth/auth.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -97,18 +97,24 @@
 			{
 				$this->_admin_permission[$row['admin_section']]['core']['status'] = $row['admin_status'];
 
-				if (trim($row['admin_options']) && is_array($row['admin_options'] = @unserialize($row['admin_options'])))
+				$row['admin_options'] = trim($row['admin_options']);
+
+				if ($row['admin_options'] === '_all_')
 				{
-					$this->_admin_permission[$row['admin_section']] += $row['options'];
+					$this->_admin_permission[$row['admin_section']]['_all_'] = true;
 				}
+				elseif ($row['admin_options'] && is_array($row['admin_options'] = @unserialize($row['admin_options'])))
+				{
+					$this->_admin_permission[$row['admin_section']] += $row['admin_options'];
+				}
 			}
 		}
+		$_CLASS['core_db']->free_result($result);
 
 		$this->_got_data = true;
-		$_CLASS['core_db']->free_result($result);
 	}
 
-	function admin_power($section, $option = false)
+	function admin_power($section, $option = false, $setting = true)
 	{
 		global $_CLASS;
 
@@ -124,12 +130,62 @@
 
 		if ($option)
 		{
+			if (isset($this->_admin_permission[$section]['_all_']))
+			{
+				return true;
+			}
+
 			return isset($this->_admin_permission[$section][$option]) ? false : $this->_admin_permission[$section][$option];
 		}
 
 		return $this->_admin_permission[$section]['core']['status'];
 	}
 
+	function list_admin_power($section, $option = false, $setting = true)
+	{
+		global $_CLASS;
+
+		$return = array();
+
+		$sql = 'SELECT * FROM ' . CORE_ADMIN_AUTH_TABLE ." 
+			WHERE admin_section IN ('_all_', '".$_CLASS['core_db']->escape($section)."')
+			admin_status = ".STATUS_ACTIVE;
+
+		if ($option)
+		{
+			$sql .= " AND (admin_options = '_all_' OR admin_options LIKE '%".$_CLASS['core_db']->escape($option)."%')";
+		}
+		$result = $_CLASS['core_db']->query($sql);
+
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$value = $row['admin_status'];
+
+			if ($option)
+			{
+				$row['admin_options'] = trim($row['admin_options']);
+
+				if ($row['admin_options'] === '_all_')
+				{
+					$value = true;
+				}
+				elseif(is_array($row['admin_options'] = @unserialize($row['admin_options'])))
+				{
+					$value = $row['admin_options'][$option];
+				}
+			}
+
+			if ($row['group_id'])
+			{
+				$holding[$row['group_id']] = $value;
+				continue;
+			}
+
+			$return[$row['user_id']] = $value;
+		}
+		$_CLASS['core_db']->free_result($result);
+	}
+
 	function auth_login($login_options = array(), $template = false)
 	{
 		global $_CLASS, $_CORE_CONFIG;

Modified: cms/trunk/includes/cache/cache.php
===================================================================
--- cms/trunk/includes/cache/cache.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/cache/cache.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -22,8 +22,7 @@
 class cache
 {
 	var $vars = array();
-	var $var_expires = array();
-	var $sql_rowset = array();
+	var $expires = array();
 	
 	/*
 		Get a cached value
@@ -48,8 +47,19 @@
 		{
 			unset($this->vars[$name]);
 		}
+	
+		if (!empty($this->expires[$name]))
+		{
+			unset($this->expires[$name]);
+		}
 	}
 
+	function reset() 
+	{
+		$this->vars = array();
+		$this->expires = array();
+	}
+
 	function save() 
 	{
 

Modified: cms/trunk/includes/cache/cache_eaccelerator.php
===================================================================
--- cms/trunk/includes/cache/cache_eaccelerator.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/cache/cache_eaccelerator.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -80,17 +80,18 @@
 		}
 
 		$key_list = eaccelerator_list_keys();
+		$key_length = strlen($this->key);
 
 		foreach ($key_list as $key)
 		{
 			if (strpos($key['name'], $this->key) === 0)
 			{
-				$name = substr($key['name'], strlen($this->key));
-
 				eaccelerator_rm($key['name']);
-				$this->remove($name);
+				$this->remove(substr($key['name'], $key_length));
 			}
 		}
+
+		$this->reset();
 	}
 }
 

Modified: cms/trunk/includes/cache/cache_file.php
===================================================================
--- cms/trunk/includes/cache/cache_file.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/cache/cache_file.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -124,8 +124,11 @@
 			if (strpos($file, 'cache_') === 0)
 			{
 				unlink($this->cache_dir . $file);
+				$this->remove(substr($file, 6));
 			} 
 		}
+
+		$this->reset();
 	}
 }
 

Modified: cms/trunk/includes/display/template.php
===================================================================
--- cms/trunk/includes/display/template.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/display/template.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -270,7 +270,7 @@
 
 			if (!$compile)
 			{
-				if (strtoupper(trim($tag_blocks[1][$loop])) == 'ENDIGNORE')
+				if (strtoupper(trim($tag_blocks[1][$loop])) === 'ENDIGNORE')
 				{
 					$compile = true;
 				}

Modified: cms/trunk/includes/forums/admin/admin_attachments.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_attachments.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_attachments.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -15,961 +15,712 @@
 	die; 
 }
 
-if (!$_CLASS['auth']->acl_get('a_attach'))
+if (!$_CLASS['forums_auth']->acl_get('a_attach'))
 {
 	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
 }
 
-require($site_file_root.'includes/forums/functions_posting.php');
+$_CLASS['core_user']->add_lang(array('posting', 'viewtopic', 'admin_attachments'));
 
-$_CLASS['core_user']->add_lang(array('posting', 'viewtopic'), 'forums');
-
-$mode = request_var('mode', '');
+$error = $notify = array();
 $submit = (isset($_POST['submit'])) ? true : false;
+$action = request_var('action', '');
+$mode = request_var('mode', 'attach');
+$u_action = 'forums&file=admin_attachments&mode='.$mode;
 
-$error = $notify = array();
-
 switch ($mode)
 {
 	case 'attach':
-		$l_title = 'ATTACHMENT_SETTINGS';
-		break;
+		$l_title = 'ACP_ATTACHMENT_SETTINGS';
+	break;
 
 	case 'extensions':
-		$l_title = 'MANAGE_EXTENSIONS';
-		break;
+		$l_title = 'ACP_MANAGE_EXTENSIONS';
+	break;
 
 	case 'ext_groups':
-		$l_title = 'EXTENSION_GROUPS_TITLE';
-		break;
-	
+		$l_title = 'ACP_EXTENSION_GROUPS';
+	break;
+
 	case 'orphan':
-		$l_title = 'ORPHAN_ATTACHMENTS';
-		break;
+		$l_title = 'ACP_ORPHAN_ATTACHMENTS';
+	break;
 
 	default:
-		trigger_error('NO_MODE');
+		trigger_error('NO_MODE', E_USER_ERROR);
+	break;
 }
 
-if ($mode == 'attach')
-{
-	$config_sizes = array('max_filesize' => 'size', 'attachment_quota' => 'quota_size', 'max_filesize_pm' => 'pm_size');
-	foreach ($config_sizes as $cfg_key => $var)
-	{
-		$$var = request_var($var, '');
-	}
+$page_title = $l_title;
 
-	// Pull all config data
-	$sql = 'SELECT *
-		FROM ' . FORUMS_CONFIG_TABLE;
-	$result = $_CLASS['core_db']->query($sql);
+$_CLASS['core_template']->assign_array(array(
+	'L_TITLE'			=> $_CLASS['core_user']->lang[$l_title],
+	'L_TITLE_EXPLAIN'	=> $_CLASS['core_user']->lang[$l_title . '_EXPLAIN'],
+	'U_ACTION'			=> generate_link($u_action, array('admin' => true)),
+	)
+);
 
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		$config_name = $row['config_name'];
-		$config_value = $row['config_value'];
+switch ($mode)
+{
+	case 'attach':
 
-		$default_config[$config_name] = $config_value;
-		$new[$config_name] = request_var($config_name, $default_config[$config_name]);
+		require_once SITE_FILE_ROOT.'includes/forums/functions_posting.php';
 
-		foreach ($config_sizes as $cfg_key => $var)
-		{
-			if (empty($$var) && !$submit && $config_name == $cfg_key)
-			{
-				$$var = (intval($default_config[$config_name]) >= 1048576) ? 'mb' : ((intval($default_config[$config_name]) >= 1024) ? 'kb' : 'b');
-			}
+		$sql = 'SELECT group_name, cat_id
+			FROM ' . FORUMS_EXTENSION_GROUPS_TABLE . '
+			WHERE cat_id > 0
+			ORDER BY cat_id';
+		$result = $_CLASS['core_db']->query($sql);
 
-			if (!$submit && $config_name == $cfg_key)
-			{
-				$new[$config_name] = ($new[$config_name] >= 1048576) ? round($new[$config_name] / 1048576 * 100) / 100 : (($new[$config_name] >= 1024) ? round($new[$config_name] / 1024 * 100) / 100 : $new[$config_name]);
-			}
-
-			if ($submit && $config_name == $cfg_key)
-			{
-				$old = $new[$config_name];
-				$new[$config_name] = ($$var == 'kb') ? round($new[$config_name] * 1024) : (($$var == 'mb') ? round($new[$config_name] * 1048576) : $new[$config_name]);
-			}
-		} 
-
-		if ($submit)
+		$s_assigned_groups = array();
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 		{
-			set_config($config_name, $new[$config_name]);
-	
-			if (in_array($config_name, array('max_filesize', 'attachment_quota', 'max_filesize_pm')))
-			{
-				$new[$config_name] = $old;
-			}
+			$s_assigned_groups[$row['cat_id']][] = $row['group_name'];
 		}
-	}
-	$_CLASS['core_db']->free_result($result);
+		$_CLASS['core_db']->free_result($result);
 
-	perform_site_list();
+		$l_legend_cat_images = $_CLASS['core_user']->lang['SETTINGS_CAT_IMAGES'] . ' [' . $_CLASS['core_user']->lang['ASSIGNED_GROUP'] . ': ' . ((sizeof($s_assigned_groups[ATTACHMENT_CATEGORY_IMAGE])) ? implode(', ', $s_assigned_groups[ATTACHMENT_CATEGORY_IMAGE]) : $_CLASS['core_user']->lang['NO_EXT_GROUP']) . ']';
 
-	if ($submit)
-	{
-		add_log('admin', 'LOG_' . strtoupper($mode) . '_CONFIG');
+		$display_vars = array(
+			'title'	=> 'ACP_ATTACHMENT_SETTINGS',
+			'vars'	=> array(
+				'img_max_width' => false, 'img_max_height' => false, 'img_link_width' => false, 'img_link_height' => false,
 
-		// Check Settings
-		test_upload($error, $new['upload_path'], false);
+				'legend1'				=> 'ACP_ATTACHMENT_SETTINGS',
+				'allow_attachments'		=> array('lang' => 'ALLOW_ATTACHMENTS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_pm_attach'		=> array('lang' => 'ALLOW_PM_ATTACHMENTS',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'upload_path'			=> array('lang' => 'UPLOAD_DIR',			'validate' => 'path',	'type' => 'text:25:100', 'explain' => true),
+				'display_order'			=> array('lang' => 'DISPLAY_ORDER',			'validate' => 'bool',	'type' => 'custom', 'method' => 'display_order', 'explain' => true),
+				'attachment_quota'		=> array('lang' => 'ATTACH_QUOTA',			'validate' => 'int',	'type' => 'custom', 'method' => 'max_filesize', 'explain' => true),
+				'max_filesize'			=> array('lang' => 'ATTACH_MAX_FILESIZE',	'validate' => 'int',	'type' => 'custom', 'method' => 'max_filesize', 'explain' => true),
+				'max_filesize_pm'		=> array('lang' => 'ATTACH_MAX_PM_FILESIZE','validate' => 'int',	'type' => 'custom', 'method' => 'max_filesize', 'explain' => true),
+				'max_attachments'		=> array('lang' => 'MAX_ATTACHMENTS',		'validate' => 'int',	'type' => 'text:3:3', 'explain' => false),
+				'max_attachments_pm'	=> array('lang' => 'MAX_ATTACHMENTS_PM',	'validate' => 'int',	'type' => 'text:3:3', 'explain' => false),
+				'secure_downloads'		=> array('lang' => 'SECURE_DOWNLOADS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'secure_allow_deny'		=> array('lang' => 'SECURE_ALLOW_DENY',		'validate' => 'int',	'type' => 'custom', 'method' => 'select_allow_deny', 'explain' => true),
+				'secure_allow_empty_referer' => array('lang' => 'SECURE_EMPTY_REFERRER', 'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
 
-		if (!sizeof($error))
-		{
-			trigger_error($_CLASS['core_user']->lang['CONFIG_UPDATED']);
-		}
-	}
-}
+				'legend2'					=> $l_legend_cat_images,
+				'img_display_inlined'		=> array('lang' => 'DISPLAY_INLINED',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'img_create_thumbnail'		=> array('lang' => 'CREATE_THUMBNAIL',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'img_max_thumb_width'		=> array('lang' => 'MAX_THUMB_WIDTH',		'validate' => 'int',	'type' => 'text:7:15', 'explain' => true, 'append' => ' px'),
+				'img_min_thumb_filesize'	=> array('lang' => 'MIN_THUMB_FILESIZE',	'validate' => 'int',	'type' => 'text:7:15', 'explain' => true, 'append' => ' ' . $_CLASS['core_user']->lang['BYTES']),
+				'img_imagick'				=> array('lang' => 'IMAGICK_PATH',			'validate' => 'string',	'type' => 'text:20:200', 'explain' => true, 'append' => '&nbsp;&nbsp;<span>[ <a href="' . generate_link($u_action . '&amp;action=imgmagick', array('admin' => true)).'">' . $_CLASS['core_user']->lang['SEARCH_IMAGICK'] . '</a> ]</span>'),
+				'img_max'					=> array('lang' => 'MAX_IMAGE_SIZE',		'validate' => 'int',	'type' => 'dimension:3:4', 'explain' => true),
+				'img_link'					=> array('lang' => 'IMAGE_LINK_SIZE',		'validate' => 'int',	'type' => 'dimension:3:4', 'explain' => true),
+			)
+		);
 
-adm_page_header($_CLASS['core_user']->lang[$l_title]);
+		$new_config = $config;
+		$cfg_array = (isset($_REQUEST['config'])) ? request_var('config', array('' => '')) : $new_config;
+		$error = array();
 
+		// We validate the complete config if whished
+		validate_config_vars($display_vars['vars'], $cfg_array, $error);
 
-if ($submit && $mode == 'extensions')
-{
-	// Change Extensions ?
-	$extension_change_list	= (isset($_POST['extension_change_list'])) ? array_map('intval', $_POST['extension_change_list']) : array();
-	$group_select_list		= (isset($_POST['group_select'])) ? array_map('intval', $_POST['group_select']) : array();
-
-	// Generate correct Change List
-	$extensions = array();
-
-	for ($i = 0; $i < count($extension_change_list); $i++)
-	{
-		$extensions[$extension_change_list[$i]]['group_id'] = $group_select_list[$i];
-	}
-
-	$sql = 'SELECT *
-		FROM ' . EXTENSIONS_TABLE . '
-		ORDER BY extension_id';
-	$result = $_CLASS['core_db']->query($sql);
-
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		if ($row['group_id'] != $extensions[$row['extension_id']]['group_id'])
+		// Do not write values if there is an error
+		if (sizeof($error))
 		{
-			$sql = 'UPDATE ' . EXTENSIONS_TABLE . ' 
-				SET group_id = ' . (int) $extensions[$row['extension_id']]['group_id'] . '
-				WHERE extension_id = ' . $row['extension_id'];
-			$_CLASS['core_db']->query($sql);	
-			add_log('admin', 'LOG_ATTACH_EXT_UPDATE', $row['extension']);
+			$submit = false;
 		}
-	}
-	$_CLASS['core_db']->free_result($result);
 
-	// Delete Extension ?
-	$extension_id_list = (isset($_POST['extension_id_list'])) ? array_map('intval', $_POST['extension_id_list']) : array();
-
-	if (sizeof($extension_id_list))
-	{
-		$sql = 'SELECT extension 
-			FROM ' . EXTENSIONS_TABLE . '
-			WHERE extension_id IN (' . implode(', ', $extension_id_list) . ')';
-		$result = $_CLASS['core_db']->query($sql);
-		
-		$extension_list = '';
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		// We go through the display_vars to make sure no one is trying to set variables he/she is not allowed to...
+		foreach ($display_vars['vars'] as $config_name => $null)
 		{
-			$extension_list .= ($extension_list == '') ? $row['extension'] : ', ' . $row['extension'];
-		}
-		$_CLASS['core_db']->free_result($result);
+			if (!isset($cfg_array[$config_name]) || strpos($config_name, 'legend') !== false)
+			{
+				continue;
+			}
 
-		$sql = 'DELETE 
-			FROM ' . EXTENSIONS_TABLE . '
-			WHERE extension_id IN (' . implode(', ', $extension_id_list) . ')';
-		$_CLASS['core_db']->query($sql);
+			$new_config[$config_name] = $config_value = $cfg_array[$config_name];
 
-		add_log('admin', 'LOG_ATTACH_EXT_DEL', $extension_list);
-	}
-		
-	// Add Extension ?
-	$add_extension			= strtolower(request_var('add_extension', ''));
-	$add_extension_group	= request_var('add_group_select', 0);
-	$add					= (isset($_POST['add_extension_check'])) ? true : false;
-
-	if ($add_extension != '' && $add)
-	{
-		if (!sizeof($error))
-		{
-			$sql = 'SELECT extension_id
-				FROM ' . EXTENSIONS_TABLE . "
-				WHERE extension = '" . $_CLASS['core_db']->sql_escape($add_extension) . "'";
-			$result = $_CLASS['core_db']->query($sql);
-			
-			if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			if (in_array($config_name, array('attachment_quota', 'max_filesize', 'max_filesize_pm')))
 			{
-				$error[] = sprintf($_CLASS['core_user']->lang['EXTENSION_EXIST'], $add_extension);
+				$size_var = request_var($config_name, '');
+				$new_config[$config_name] = $config_value = ($size_var == 'kb') ? round($config_value * 1024) : (($size_var == 'mb') ? round($config_value * 1048576) : $config_value);
 			}
-			$_CLASS['core_db']->free_result($result);
 
-			if (!sizeof($error))
+			if ($submit)
 			{
-				$sql_ary = array(
-					'group_id'	=>	$add_extension_group,
-					'extension'	=>	$add_extension
-				);
-				
-				$_CLASS['core_db']->query('INSERT INTO ' . EXTENSIONS_TABLE . ' ' . $_CLASS['core_db']->sql_build_array('INSERT', $sql_ary));
-				add_log('admin', 'LOG_ATTACH_EXT_ADD', $add_extension);
+				set_config($config_name, $config_value);
 			}
 		}
-	}
 
-	if (!sizeof($error))
-	{
-		$notify[] = $_CLASS['core_user']->lang['EXTENSIONS_UPDATED'];
-	}
-	$_CLASS['core_cache']->destroy('extensions');
-}
+		perform_site_list();
 
+		if ($submit)
+		{
+			add_log('admin', 'LOG_CONFIG_ATTACH');
 
-if ($submit && $mode == 'ext_groups')
-{
-	$action = request_var('action', '');
-	$group_id = request_var('g', 0);
-	
-	if ($action != 'add' && $action != 'edit')
-	{
-		trigger_error('WRONG_MODE');
-	}
+			// Check Settings
+			test_upload($error, $new_config['upload_path'], false);
 
-	if (!$group_id && $action == 'edit')
-	{
-		trigger_error('NO_EXT_GROUP_SPECIFIED');
-	}
+			if (!sizeof($error))
+			{
+				trigger_error($_CLASS['core_user']->lang['CONFIG_UPDATED'] . adm_back_link($u_action));
+			}
+		}
 
-	if ($group_id)
-	{
-		$sql = 'SELECT * FROM ' . EXTENSION_GROUPS_TABLE . "
-			WHERE group_id = $group_id";
-		$result = $_CLASS['core_db']->query($sql);
-		$ext_row = $_CLASS['core_db']->fetch_row_assoc($result);
-		$_CLASS['core_db']->free_result($result);
-	}
-	else
-	{
-		$ext_row = array();
-	}
+		$_CLASS['core_template']->assign('S_ATTACHMENT_SETTINGS', true);
 
-	$group_name = request_var('group_name', '');
-	$new_group_name = ($action == 'add') ? $group_name : (($ext_row['group_name'] != $group_name) ? $group_name : '');
-
-	if (!$group_name)
-	{
-		$error[] = $_CLASS['core_user']->lang['NO_EXT_GROUP_NAME'];
-	}
-
-	// Check New Group Name
-	if ($new_group_name)
-	{
-		$sql = 'SELECT group_id 
-			FROM ' . EXTENSION_GROUPS_TABLE . "
-			WHERE LOWER(group_name) = '" . $_CLASS['core_db']->sql_escape(strtolower($new_group_name)) . "'";
-		$result = $_CLASS['core_db']->query($sql);
-		if ($_CLASS['core_db']->fetch_row_assoc($result))
+		if ($action === 'imgmagick')
 		{
-			$error[] = sprintf($_CLASS['core_user']->lang['EXTENSION_GROUP_EXIST'], $new_group_name);
+			$new_config['img_imagick'] = search_imagemagick();
 		}
-		$_CLASS['core_db']->free_result($result);
-	}
 
-	if (!sizeof($error))
-	{
-		// Ok, build the update/insert array
-		$upload_icon	= request_var('upload_icon', 'no_image');
-		$size_select	= request_var('size_select', 'b');
-		$forum_select	= request_var('forum_select', false);
-		$allowed_forums	= isset($_POST['allowed_forums']) ? array_map('intval', array_values($_POST['allowed_forums'])) : array();
-		$allow_in_pm	= isset($_POST['allow_in_pm']) ? true : false;
-		$max_filesize	= request_var('max_filesize', 0);
-		$max_filesize	= ($size_select == 'kb') ? round($max_filesize * 1024) : (($size_select == 'mb') ? round($max_filesize * 1048576) : $max_filesize);
+		// We strip eventually manual added convert program, we only want the patch
+		$new_config['img_imagick'] = str_replace(array('convert', '.exe'), array('', ''), $new_config['img_imagick']);
 
-		if ($max_filesize == $config['max_filesize'])
-		{
-			$max_filesize = 0;
-		}	
+		$supported_types = get_supported_image_types();
 
-		if (!sizeof($allowed_forums))
+		// Check Thumbnail Support
+		if (!$new_config['img_imagick'] && (!isset($supported_types['format']) || !sizeof($supported_types['format'])))
 		{
-			$forum_select = false;
+			$new_config['img_create_thumbnail'] = 0;
 		}
 
-		$group_ary = array(
-			'group_name'	=> $group_name,
-			'cat_id'		=> request_var('special_category', ATTACHMENT_CATEGORY_NONE),
-			'allow_group'	=> (isset($_POST['allow_group'])) ? 1 : 0,
-			'download_mode'	=> request_var('download_mode', INLINE_LINK),
-			'upload_icon'	=> ($upload_icon == 'no_image') ? '' : $upload_icon,
-			'max_filesize'	=> $max_filesize,
-			'allowed_forums'=> ($forum_select) ? serialize($allowed_forums) : '',
-			'allow_in_pm'	=> ($allow_in_pm) ? 1 : 0
+		$_CLASS['core_template']->assign_array(array(
+			'U_SEARCH_IMAGICK'		=> generate_link($u_action . '&amp;action=imgmagick', array('admin' => true)),
+			'S_THUMBNAIL_SUPPORT'	=> (!$new_config['img_imagick'] && (!isset($supported_types['format']) || !sizeof($supported_types['format']))) ? false : true,
+			)
 		);
 
-		$sql = ($action == 'add') ? 'INSERT INTO ' . EXTENSION_GROUPS_TABLE . ' ' : 'UPDATE ' . EXTENSION_GROUPS_TABLE . ' SET ';
-		$sql .= $_CLASS['core_db']->sql_build_array((($action == 'add') ? 'INSERT' : 'UPDATE'), $group_ary);
-		$sql .= ($action == 'edit') ? " WHERE group_id = $group_id" : '';
+		// Secure Download Options - Same procedure as with banning
+		$allow_deny = ($new_config['secure_allow_deny']) ? 'ALLOWED' : 'DISALLOWED';
 
-		$_CLASS['core_db']->query($sql);
-		
-		if ($action == 'add')
+		$sql = 'SELECT *
+			FROM ' . FORUMS_SITELIST_TABLE;
+		$result = $_CLASS['core_db']->query($sql);
+
+		$defined_ips = '';
+		$ips = array();
+
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 		{
-			$group_id = $_CLASS['core_db']->sql_nextid();
+			$value = ($row['site_ip']) ? $row['site_ip'] : $row['site_hostname'];
+			if ($value)
+			{
+				$defined_ips .=  '<option' . (($row['ip_exclude']) ? ' class="sep"' : '') . ' value="' . $row['site_id'] . '">' . $value . '</option>';
+				$ips[$row['site_id']] = $value;
+			}
 		}
+		$_CLASS['core_db']->free_result($result);
 
-		add_log('admin', 'LOG_ATTACH_EXTGROUP_' . strtoupper($action), $group_name);
-	}
+		$_CLASS['core_template']->assign_array(array(
+			'S_SECURE_DOWNLOADS'	=> $new_config['secure_downloads'],
+			'S_DEFINED_IPS'			=> ($defined_ips != '') ? true : false,
+			'S_WARNING'				=> empty($error) ? false : true,
 
-	$extension_list = isset($_REQUEST['extensions']) ? array_map('intval', array_values($_REQUEST['extensions'])) : array();
+			'WARNING_MSG'			=> implode('<br />', $error),
+			'DEFINED_IPS'			=> $defined_ips,
 
-	if ($action == 'edit' && sizeof($extension_list))
-	{
-		$sql = 'UPDATE ' . EXTENSIONS_TABLE . "
-			SET group_id = 0
-			WHERE group_id = $group_id";
-		$_CLASS['core_db']->query($sql);
-	}
+			'L_SECURE_TITLE'		=> $_CLASS['core_user']->lang['DEFINE_' . $allow_deny . '_IPS'],
+			'L_IP_EXCLUDE'			=> $_CLASS['core_user']->lang['EXCLUDE_FROM_' . $allow_deny . '_IP'],
+			'L_REMOVE_IPS'			=> $_CLASS['core_user']->lang['REMOVE_' . $allow_deny . '_IPS'],
+			)
+		);
 
-	if (sizeof($extension_list))
-	{
-		$sql = 'UPDATE ' . EXTENSIONS_TABLE . " 
-			SET group_id = $group_id
-			WHERE extension_id IN (" . implode(', ', $extension_list) . ")";
-		$_CLASS['core_db']->query($sql);
-	}
-
-	rewrite_extensions();
-
-	if (!sizeof($error))
-	{
-		$notify[] = $_CLASS['core_user']->lang['SUCCESS_EXTENSION_GROUP_' . strtoupper($action)];
-	}
-}
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang[$l_title]; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang[$l_title . '_EXPLAIN']; ?></p>
-
-<?php
-
-if ($submit && $mode == 'orphan')
-{
-	$delete_files = (isset($_POST['delete'])) ? array_keys(request_var('delete', array('' => 0))) : array();
-	$add_files = (isset($_POST['add'])) ? array_keys(request_var('add', array('' => 0))) : array();
-	$post_ids = request_var('post_id', 0);
-
-	foreach ($delete_files as $delete)
-	{
-		phpbb_unlink($delete);
-		phpbb_unlink($delete, 'thumbnail');
-	}
-
-	if (sizeof($delete_files))
-	{
-		add_log('admin', sprintf($_CLASS['core_user']->lang['LOG_ATTACH_ORPHAN_DEL'], implode(', ', $delete_files)));
-		$notify[] = sprintf($_CLASS['core_user']->lang['LOG_ATTACH_ORPHAN_DEL'], implode(', ', $delete_files));
-	}
-
-	$upload_list = array();
-	foreach ($add_files as $file)
-	{
-		if (!in_array($file, $delete_files) && $post_ids[$file])
+		// Output relevant options
+		foreach ($display_vars['vars'] as $config_key => $vars)
 		{
-			$upload_list[$post_ids[$file]] = $file;
-		}
-	}
-	unset($add_files);
+			if (!is_array($vars) && strpos($config_key, 'legend') === false)
+			{
+				continue;
+			}
 
-	if (sizeof($upload_list))
-	{
-?>
-	<h2><?php echo $_CLASS['core_user']->lang['UPLOADING_FILES']; ?></h2>
-<?php
-		require($site_file_root.'includes/forums/message_parser.php');
-		$message_parser = new parse_message();
+			if (strpos($config_key, 'legend') !== false)
+			{
+				$_CLASS['core_template']->assign_vars_array('options', array(
+					'S_LEGEND'		=> true,
+					'LEGEND'		=> (isset($_CLASS['core_user']->lang[$vars])) ? $_CLASS['core_user']->lang[$vars] : $vars)
+				);
 
-		$sql = 'SELECT forum_id, forum_name
-			FROM ' . FORUMS_TABLE;
-		$result = $_CLASS['core_db']->query($sql);
-		
-		$forum_names = array();
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$forum_names[$row['forum_id']] = $row['forum_name'];
-		}
-		$_CLASS['core_db']->free_result($result);
+				continue;
+			}
 
-		$sql = 'SELECT forum_id, topic_id, post_id 
-			FROM ' . POSTS_TABLE . '
-			WHERE post_id IN (' . implode(', ', array_keys($upload_list)) . ')';
-		$result = $_CLASS['core_db']->query($sql);
+			$type = explode(':', $vars['type']);
 
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			echo sprintf($_CLASS['core_user']->lang['UPLOADING_FILE_TO'], $upload_list[$row['post_id']], $row['post_id']) . '<br />';
-			if (!$_CLASS['auth']->acl_gets('f_attach', 'u_attach', $row['forum_id']))
+			$l_explain = '';
+			if ($vars['explain'] && isset($vars['lang_explain']))
 			{
-				echo '<span style="color:red">' . sprintf($_CLASS['core_user']->lang['UPLOAD_DENIED_FORUM'], $forum_names[$row['forum_id']]) . '</span><br /><br />';
+				$l_explain = (isset($_CLASS['core_user']->lang[$vars['lang_explain']])) ? $_CLASS['core_user']->lang[$vars['lang_explain']] : $vars['lang_explain'];
 			}
-			else
+			else if ($vars['explain'])
 			{
-				upload_file($row['post_id'], $row['topic_id'], $row['forum_id'], $config['upload_path'], $upload_list[$row['post_id']]);
+				$l_explain = (isset($_CLASS['core_user']->lang[$vars['lang'] . '_EXPLAIN'])) ? $_CLASS['core_user']->lang[$vars['lang'] . '_EXPLAIN'] : '';
 			}
-		}
-		unset($message_parser);
-	}
-}
 
- 
-if (sizeof($error))
-{
-?>
+			$_CLASS['core_template']->assign_vars_array('options', array(
+				'KEY'			=> $config_key,
+				'TITLE'			=> $_CLASS['core_user']->lang[$vars['lang']],
+				'S_EXPLAIN'		=> $vars['explain'],
+				'TITLE_EXPLAIN'	=> $l_explain,
+				'CONTENT'		=> build_cfg_template($type, $config_key, $new_config, $config_key, $vars),
+			));
 
-<h2 style="color:red"><?php echo $_CLASS['core_user']->lang['WARNING']; ?></h2>
+			unset($display_vars['vars'][$config_key]);
+		}
 
-<p><?php echo implode('<br />', $error); ?></p>
+	break;
 
-<?php
-}
+	case 'extensions':
 
-if (sizeof($notify))
-{
-?>
+		if ($submit || isset($_POST['add_extension_check']))
+		{
+			if ($submit)
+			{
+				// Change Extensions ?
+				$extension_change_list	= (isset($_POST['extension_change_list'])) ? array_map('intval', $_POST['extension_change_list']) : array();
+				$group_select_list		= (isset($_POST['group_select'])) ? array_map('intval', $_POST['group_select']) : array();
 
-<h2 style="color:green"><?php echo $_CLASS['core_user']->lang['NOTIFY']; ?></h2>
+				// Generate correct Change List
+				$extensions = array();
 
-<p><?php echo implode('<br />', $notify); ?></p>
+				for ($i = 0, $size = sizeof($extension_change_list); $i < $size; $i++)
+				{
+					$extensions[$extension_change_list[$i]]['group_id'] = $group_select_list[$i];
+				}
 
-<?php
-}
+				$sql = 'SELECT *
+					FROM ' . FORUMS_EXTENSIONS_TABLE . '
+					ORDER BY extension_id';
+				$result = $_CLASS['core_db']->query($sql);
 
-$modes = array('extensions', 'ext_groups', 'orphan');
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					if ($row['group_id'] != $extensions[$row['extension_id']]['group_id'])
+					{
+						$sql = 'UPDATE ' . FORUMS_EXTENSIONS_TABLE . ' 
+							SET group_id = ' . (int) $extensions[$row['extension_id']]['group_id'] . '
+							WHERE extension_id = ' . $row['extension_id'];
+						$_CLASS['core_db']->query($sql);	
 
-$s_select_mode = '<select name="mode">';
-foreach ($modes as $_mode)
-{
-	$s_select_mode .= '<option value="' . $_mode . '"' . (($mode == $_mode) ? ' selected="selected"' : '') . '>' . $_CLASS['core_user']->lang['ATTACH_' . strtoupper($_mode) . '_URL'] . '</option>';
-}
-$s_select_mode .= '</select>';
-?>
-<form name="attachments" method="post" action="<?php echo generate_link("forums&amp;file=admin_attachments&amp;mode=$mode", array('admin' => true)); ?>">
-<?php
-if ($mode != 'attach')
-{
-?>
-	<table cellspacing="1" cellpadding="0" border="0" align="center" width="99%">
-	<tr>
-		<td align="right"><?php echo $s_select_mode; ?> &nbsp; <input type="submit" name="select_mode" class="btnlite" value="<?php echo $_CLASS['core_user']->lang['SELECT']; ?>" /></td>
-	</tr>
-	</table>
-<?php
-}
+						add_log('admin', 'LOG_ATTACH_EXT_UPDATE', $row['extension']);
+					}
+				}
+				$_CLASS['core_db']->free_result($result);
 
-// Attachment Settings
-if ($mode == 'attach')
-{
-	$action = request_var('action', '');
+				// Delete Extension?
+				$extension_id_list = (isset($_POST['extension_id_list'])) ? array_map('intval', $_POST['extension_id_list']) : array();
 
-	if ($action == 'imgmagick')
-	{
-		$new['img_imagick'] = search_imagemagick();
-	}
+				if (sizeof($extension_id_list))
+				{
+					$sql = 'SELECT extension 
+						FROM ' . FORUMS_EXTENSIONS_TABLE . '
+						WHERE ' . $db->sql_in_set('extension_id', $extension_id_list);
+					$result = $_CLASS['core_db']->query($sql);
+					
+					$extension_list = '';
+					while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+					{
+						$extension_list .= ($extension_list == '') ? $row['extension'] : ', ' . $row['extension'];
+					}
+					$_CLASS['core_db']->free_result($result);
 
-	// We strip eventually manual added convert program, we only want the patch
-	$new['img_imagick'] = str_replace(array('convert', '.exe'), array('', ''), $new['img_imagick']);
+					$sql = 'DELETE 
+						FROM ' . FORUMS_EXTENSIONS_TABLE . '
+						WHERE ' . $db->sql_in_set('extension_id', $extension_id_list);
+					$_CLASS['core_db']->query($sql);
 
-	$select_size_mode = size_select('size', $size);
-	$select_quota_size_mode = size_select('quota_size', $quota_size);
-	$select_pm_size_mode = size_select('pm_size', $pm_size);
+					add_log('admin', 'LOG_ATTACH_EXT_DEL', $extension_list);
+				}
+			}
 
-	$display_order_yes = ($new['display_order']) ? 'checked="checked"' : '';
-	$display_order_no = (!$new['display_order']) ? 'checked="checked"' : '';
+			// Add Extension?
+			$add_extension			= strtolower(request_var('add_extension', ''));
+			$add_extension_group	= request_var('add_group_select', 0);
+			$add					= (isset($_POST['add_extension_check'])) ? true : false;
 
-	$sql = 'SELECT group_name, cat_id
-		FROM ' . EXTENSION_GROUPS_TABLE . '
-		WHERE cat_id > 0
-		ORDER BY cat_id';
-	$result = $_CLASS['core_db']->query($sql);
+			if ($add_extension != '' && $add)
+			{
+				if (!sizeof($error))
+				{
+					$sql = 'SELECT extension_id
+						FROM ' . FORUMS_EXTENSIONS_TABLE . "
+						WHERE extension = '" . $db->sql_escape($add_extension) . "'";
+					$result = $_CLASS['core_db']->query($sql);
+					
+					if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+					{
+						$error[] = sprintf($_CLASS['core_user']->lang['EXTENSION_EXIST'], $add_extension);
+					}
+					$_CLASS['core_db']->free_result($result);
 
-	$s_assigned_groups = array();
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		$s_assigned_groups[$row['cat_id']][] = $row['group_name'];
-	}
-	$_CLASS['core_db']->free_result($result);
+					if (!sizeof($error))
+					{
+						$sql_ary = array(
+							'group_id'	=>	$add_extension_group,
+							'extension'	=>	$add_extension
+						);
+						
+						$_CLASS['core_db']->query('INSERT INTO ' . EXTENSIONS_TABLE . ' ' . $_CLASS['core_db']->sql_build_array('INSERT', $sql_ary));
+						add_log('admin', 'LOG_ATTACH_EXT_ADD', $add_extension);
+					}
+				}
+			}
 
-	$display_inlined_yes = ($new['img_display_inlined']) ? 'checked="checked"' : '';
-	$display_inlined_no = (!$new['img_display_inlined']) ? 'checked="checked"' : '';
+			if (!sizeof($error))
+			{
+				$notify[] = $_CLASS['core_user']->lang['EXTENSIONS_UPDATED'];
+			}
+			
+			$_CLASS['core_cache']->destroy('extensions');
+		}
 
-	$create_thumbnail_yes = ($new['img_create_thumbnail']) ? 'checked="checked"' : '';
-	$create_thumbnail_no = (!$new['img_create_thumbnail']) ? 'checked="checked"' : '';
+		$_CLASS['core_template']->assign_array(array(
+			'S_EXTENSIONS'			=> true,
+			'ADD_EXTENSION'			=> (isset($add_extension)) ? $add_extension : '',
+			'GROUP_SELECT_OPTIONS'	=> (isset($_POST['add_extension_check'])) ? group_select('add_group_select', $add_extension_group, 'extension_group') : group_select('add_group_select', false, 'extension_group'))
+		);
 
-	$secure_downloads_yes = ($new['secure_downloads']) ? 'checked="checked"' : '';
-	$secure_downloads_no = (!$new['secure_downloads']) ? 'checked="checked"' : '';
+		$sql = 'SELECT * 
+			FROM ' . FORUMS_EXTENSIONS_TABLE . ' 
+			ORDER BY group_id, extension';
+		$result = $_CLASS['core_db']->query($sql);
 
-	$secure_allow_deny_yes = ($new['secure_allow_deny']) ? 'checked="checked"' : '';
-	$secure_allow_deny_no = (!$new['secure_allow_deny']) ? 'checked="checked"' : '';
-	
-	$secure_allow_empty_referer_yes = ($new['secure_allow_empty_referer']) ? 'checked="checked"' : '';
-	$secure_allow_empty_referer_no = (!$new['secure_allow_empty_referer']) ? 'checked="checked"' : '';
+		if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$old_group_id = $row['group_id'];
+			do
+			{
+				$s_spacer = false;
 
-?>
+				$current_group_id = $row['group_id'];
+				if ($old_group_id != $current_group_id)
+				{
+					$s_spacer = true;
+					$old_group_id = $current_group_id;
+				}
 
-	<table class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center" width="99%">
-	<tr>
-		<th colspan="2"><?php echo $_CLASS['core_user']->lang[$l_title]; ?></th>
-	</tr>
-	<tr>
-		<td class="row1" width="40%"><b><?php echo $_CLASS['core_user']->lang['UPLOAD_DIR']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['UPLOAD_DIR_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="text" size="25" maxlength="100" name="upload_path" class="post" value="<?php echo $new['upload_path'] ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['DISPLAY_ORDER']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['DISPLAY_ORDER_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="display_order" value="0" <?php echo $display_order_no; ?> /> <?php echo $_CLASS['core_user']->lang['DESCENDING']; ?> &nbsp; <input type="radio" name="display_order" value="1" <?php echo $display_order_yes; ?> /> <?php echo $_CLASS['core_user']->lang['ASCENDING']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['ATTACH_QUOTA']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['ATTACH_QUOTA_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="text" size="8" maxlength="15" name="attachment_quota" class="post" value="<?php echo $new['attachment_quota']; ?>" /> <?php echo $select_quota_size_mode; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['ATTACH_MAX_FILESIZE']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['ATTACH_MAX_FILESIZE_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="text" size="8" maxlength="15" name="max_filesize" class="post" value="<?php echo $new['max_filesize']; ?>" /> <?php echo $select_size_mode; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['ATTACH_MAX_PM_FILESIZE']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['ATTACH_MAX_PM_FILESIZE_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="text" size="8" maxlength="15" name="max_filesize_pm" class="post" value="<?php echo $new['max_filesize_pm']; ?>" /> <?php echo $select_pm_size_mode; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['MAX_ATTACHMENTS'] ?>: </b></td>
-		<td class="row2"><input type="text" size="3" maxlength="3" name="max_attachments" class="post" value="<?php echo $new['max_attachments']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['MAX_ATTACHMENTS_PM'] ?>: </b></td>
-		<td class="row2"><input type="text" size="3" maxlength="3" name="max_attachments_pm" class="post" value="<?php echo $new['max_attachments_pm']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['SECURE_DOWNLOADS']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['SECURE_DOWNLOADS_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="secure_downloads" value="1" <?php echo $secure_downloads_yes ?> /> <?php echo $_CLASS['core_user']->lang['YES']; ?>&nbsp;&nbsp;<input type="radio" name="secure_downloads" value="0" <?php echo $secure_downloads_no ?> /> <?php echo $_CLASS['core_user']->lang['NO']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['SECURE_ALLOW_DENY']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['SECURE_ALLOW_DENY_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="secure_allow_deny" value="1" <?php echo $secure_allow_deny_yes ?> /> <?php echo $_CLASS['core_user']->lang['ORDER_ALLOW_DENY']; ?>&nbsp;&nbsp;<input type="radio" name="secure_allow_deny" value="0" <?php echo $secure_allow_deny_no ?> /> <?php echo $_CLASS['core_user']->lang['ORDER_DENY_ALLOW']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['SECURE_EMPTY_REFERER']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['SECURE_EMPTY_REFERER_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="secure_allow_empty_referer" value="1" <?php echo $secure_allow_empty_referer_yes ?> /> <?php echo $_CLASS['core_user']->lang['YES']; ?>&nbsp;&nbsp;<input type="radio" name="secure_allow_empty_referer" value="0" <?php echo $secure_allow_empty_referer_no ?> /> <?php echo $_CLASS['core_user']->lang['NO']; ?></td>
-	</tr>
-	<tr>
-	  <th align="center" colspan="2"><?php echo $_CLASS['core_user']->lang['SETTINGS_CAT_IMAGES']; ?></th>
-	</tr>
-	<tr>
-		<td class="row3" colspan="2" align="center"><?php echo $_CLASS['core_user']->lang['ASSIGNED_GROUP']; ?>: <?php echo (empty($s_assigned_groups[ATTACHMENT_CATEGORY_IMAGE]) ? $_CLASS['core_user']->lang['NONE'] : implode(', ', $s_assigned_groups[ATTACHMENT_CATEGORY_IMAGE])); ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['DISPLAY_INLINED']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['DISPLAY_INLINED_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="img_display_inlined" value="1" <?php echo $display_inlined_yes ?> /> <?php echo $_CLASS['core_user']->lang['YES']; ?>&nbsp;&nbsp;<input type="radio" name="img_display_inlined" value="0" <?php echo $display_inlined_no ?> /> <?php echo $_CLASS['core_user']->lang['NO']; ?></td>
-	</tr>
-<?php
-	$supported_types = get_supported_image_types();
-	
-	// Check Thumbnail Support
-	if (!$new['img_imagick'] && (!isset($supported_types['format']) || !sizeof($supported_types['format'])))
-	{
-		$new['img_create_thumbnail'] = '0';
-	}
-	else
-	{
+				$_CLASS['core_template']->assign_vars_array('extensions', array(
+					'S_SPACER'		=> $s_spacer,
+					'EXTENSION_ID'	=> $row['extension_id'],
+					'EXTENSION'		=> $row['extension'],
+					'GROUP_OPTIONS'	=> group_select('group_select[]', $row['group_id']))
+				);
+			}
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
+		}
+		$_CLASS['core_db']->free_result($result);
 
-?>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['CREATE_THUMBNAIL']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['CREATE_THUMBNAIL_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="img_create_thumbnail" value="1" <?php echo $create_thumbnail_yes; ?> /> <?php echo $_CLASS['core_user']->lang['YES']; ?>&nbsp;&nbsp;<input type="radio" name="img_create_thumbnail" value="0" <?php echo $create_thumbnail_no; ?> /> <?php echo $_CLASS['core_user']->lang['NO']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['MIN_THUMB_FILESIZE']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['MIN_THUMB_FILESIZE_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="text" size="7" maxlength="15" name="img_min_thumb_filesize" value="<?php echo $new['img_min_thumb_filesize']; ?>" class="post" /> <?php echo $_CLASS['core_user']->lang['BYTES']; ?></td>
-	</tr>
-<?php
+	break;
 
-	}
+	case 'ext_groups':
 
-?>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['IMAGICK_PATH']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['IMAGICK_PATH_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="text" size="20" maxlength="200" name="img_imagick" value="<?php echo $new['img_imagick']; ?>" class="post" />&nbsp;&nbsp;<span class="gensmall">[ <a href="<?php echo generate_link("forums&amp;file=admin_attachments&amp;mode=$mode&amp;action=imgmagick", array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['SEARCH_IMAGICK']; ?></a> ]</span></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['MAX_IMAGE_SIZE']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['MAX_IMAGE_SIZE_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="text" size="3" maxlength="4" name="img_max_width" value="<?php echo $new['img_max_width']; ?>" class="post" /> px X <input type="text" size="3" maxlength="4" name="img_max_height" value="<?php echo $new['img_max_height']; ?>" class="post" /> px</td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['IMAGE_LINK_SIZE']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['IMAGE_LINK_SIZE_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="text" size="3" maxlength="4" name="img_link_width" value="<?php echo $new['img_link_width']; ?>" class="post" /> px X <input type="text" size="3" maxlength="4" name="img_link_height" value="<?php echo $new['img_link_height']; ?>" class="post" /> px</td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><input type="submit" name="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp;&nbsp;<input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /></td>
-	</tr>
-	</table>
-<?php
-	// Secure Download Options - Same procedure as with banning
-	$allow_deny = ($new['secure_allow_deny']) ? 'ALLOWED' : 'DISALLOWED';
-		
-	$sql = 'SELECT *
-		FROM ' . FORUMS_SITELIST_TABLE;
-	$result = $_CLASS['core_db']->query($sql);
+		$_CLASS['core_template']->assign('S_EXTENSION_GROUPS', true);
 
-	$defined_ips = '';
-	$ips = array();
-
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		$value = ($row['site_ip']) ? $row['site_ip'] : $row['site_hostname'];
-		if ($value)
+		if ($submit)
 		{
-			$defined_ips .=  '<option' . (($row['ip_exclude']) ? ' class="sep"' : '') . ' value="' . $row['site_id'] . '">' . $value . '</option>';
-			$ips[$row['site_id']] = $value;
-		}
-	}
-	$_CLASS['core_db']->free_result($result);
+			$action = request_var('action', '');
+			$group_id = request_var('g', 0);
 
-	if (!$new['secure_downloads'])
-	{
-?>
-	<br />
-	<table cellspacing="1" cellpadding="4" border="0" align="center" width="99%">
-		<tr>
-			<td class="row3" align="center"><?php echo $_CLASS['core_user']->lang['SECURE_DOWNLOAD_NOTICE']; ?></td>
-		</tr>
-	</table>
+			if ($action != 'add' && $action != 'edit')
+			{
+				trigger_error('WRONG_MODE', E_USER_WARNING);
+			}
 
-<?php
-	}
-?>
+			if (!$group_id && $action == 'edit')
+			{
+				trigger_error('NO_EXT_GROUP_SPECIFIED', E_USER_WARNING);
+			}
 
-	<br />
-	<table class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center" width="99%">
-		<tr>
-			<th colspan="2"><?php echo $_CLASS['core_user']->lang['DEFINE_' . $allow_deny . '_IPS']; ?></th>
-		</tr>
-		<tr>
-			<td colspan="2" class="row3"><?php echo $_CLASS['core_user']->lang['DOWNLOAD_ADD_IPS_EXPLAIN']; ?></td>
-		<tr>
-			<td class="row1" width="45%"><b><?php echo $_CLASS['core_user']->lang['IP_HOSTNAME']; ?>: </b></td>
-			<td class="row2"><textarea cols="40" rows="3" name="ips"></textarea></td>
-		</tr>
-		<tr>
-			<td class="row1" width="45%"><b><?php echo $_CLASS['core_user']->lang['EXCLUDE_FROM_' . $allow_deny . '_IP']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['EXCLUDE_ENTERED_IP']; ?></span></td>
-			<td class="row2"><input type="radio" name="ipexclude" value="1" /> <?php echo $_CLASS['core_user']->lang['YES']; ?> &nbsp; <input type="radio" name="ipexclude" value="0" checked="checked" /> <?php echo $_CLASS['core_user']->lang['NO']; ?></td>
-		</tr>
-		<tr>
-			<td class="cat" colspan="2" align="center"> <input type="submit" name="securesubmit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp; <input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" />&nbsp; </td>
-		</tr>
-		<tr>
-			<th colspan="2"><?php echo $_CLASS['core_user']->lang['REMOVE_' . $allow_deny . '_IPS']; ?></th>
-		</tr>
-<?php
+			if ($group_id)
+			{
+				$sql = 'SELECT * FROM ' . FORUMS_EXTENSION_GROUPS_TABLE . "
+					WHERE group_id = $group_id";
+				$result = $_CLASS['core_db']->query($sql);
+				$ext_row = $_CLASS['core_db']->fetch_row_assoc($result);
+				$_CLASS['core_db']->free_result($result);
+			}
+			else
+			{
+				$ext_row = array();
+			}
 
-	if ($defined_ips != '')
-	{
+			$group_name = request_var('group_name', '', true);
+			$new_group_name = ($action == 'add') ? $group_name : (($ext_row['group_name'] != $group_name) ? $group_name : '');
 
-?>
-		<tr>
-			<td colspan="2" class="row3"><?php echo $_CLASS['core_user']->lang['DOWNLOAD_REMOVE_IPS_EXPLAIN']; ?></td>
-		<tr>
-		<tr>
-			<td class="row1" width="45%"><?php echo $_CLASS['core_user']->lang['IP_HOSTNAME']; ?>: <br /></td>
-			<td class="row2"> <select name="unip[]" multiple="multiple" size="10"><?php echo $defined_ips; ?></select></td>
-		</tr>
-		<tr>
-			<td class="cat" colspan="2" align="center"><input type="submit" name="unsecuresubmit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp; <input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /></td>
-		</tr>
-<?php
+			if (!$group_name)
+			{
+				$error[] = $_CLASS['core_user']->lang['NO_EXT_GROUP_NAME'];
+			}
 
-	}
-	else
-	{
+			// Check New Group Name
+			if ($new_group_name)
+			{
+				$sql = 'SELECT group_id 
+					FROM ' . FORUMS_EXTENSION_GROUPS_TABLE . "
+					WHERE LOWER(group_name) = '" . $db->sql_escape(strtolower($new_group_name)) . "'";
+				$result = $_CLASS['core_db']->query($sql);
 
-?>
-		<tr>
-			<td class="row1" colspan="2" align="center"><?php echo $_CLASS['core_user']->lang['NO_IPS_DEFINED']; ?></td>
-		</tr>
-<?php
-	}
-?>
-	</table>
-<?php
-}
+				if ($_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					$error[] = sprintf($_CLASS['core_user']->lang['EXTENSION_GROUP_EXIST'], $new_group_name);
+				}
+				$_CLASS['core_db']->free_result($result);
+			}
 
-// Extension Groups
-if ($mode == 'ext_groups')
-{
-	$cat_lang = array(
-		ATTACHMENT_CATEGORY_NONE	=> $_CLASS['core_user']->lang['NONE'],
-		ATTACHMENT_CATEGORY_IMAGE	=> $_CLASS['core_user']->lang['CAT_IMAGES'],
-		ATTACHMENT_CATEGORY_WM		=> $_CLASS['core_user']->lang['CAT_WM_FILES'],
-		ATTACHMENT_CATEGORY_RM		=> $_CLASS['core_user']->lang['CAT_RM_FILES']
-	);
+			if (!sizeof($error))
+			{
+				// Ok, build the update/insert array
+				$upload_icon	= request_var('upload_icon', 'no_image');
+				$size_select	= request_var('size_select', 'b');
+				$forum_select	= request_var('forum_select', false);
+				$allowed_forums	= isset($_POST['allowed_forums']) ? array_map('intval', array_values($_POST['allowed_forums'])) : array();
+				$allow_in_pm	= isset($_POST['allow_in_pm']) ? true : false;
+				$max_filesize	= request_var('max_filesize', 0);
+				$max_filesize	= ($size_select == 'kb') ? round($max_filesize * 1024) : (($size_select == 'mb') ? round($max_filesize * 1048576) : $max_filesize);
+				$allow_group	= (isset($_POST['allow_group'])) ? 1 : 0;
 
+				if ($max_filesize == $config['max_filesize'])
+				{
+					$max_filesize = 0;
+				}
 
-	$action = request_var('action', 'show');
-	$group_id = request_var('g', 0);
-	$action = (isset($_POST['add'])) ? 'add' : $action;
-	$action = (($action == 'add' || $action == 'edit') && $submit && !sizeof($error)) ? 'show' : $action;
+				if (!sizeof($allowed_forums))
+				{
+					$forum_select = false;
+				}
 
-	if (isset($_POST['select_mode']))
-	{
-		$action = 'show';
-	}
+				$group_ary = array(
+					'group_name'	=> $group_name,
+					'cat_id'		=> request_var('special_category', ATTACHMENT_CATEGORY_NONE),
+					'allow_group'	=> $allow_group,
+					'download_mode'	=> request_var('download_mode', INLINE_LINK),
+					'upload_icon'	=> ($upload_icon == 'no_image') ? '' : $upload_icon,
+					'max_filesize'	=> $max_filesize,
+					'allowed_forums'=> ($forum_select) ? serialize($allowed_forums) : '',
+					'allow_in_pm'	=> ($allow_in_pm) ? 1 : 0
+				);
 
-	if ($action == 'delete')
-	{
-		$confirm	= (isset($_POST['confirm'])) ? true : false;
-		$cancel		= (isset($_POST['cancel'])) ? true : false;
-		
-		if (!$cancel && !$confirm)
-		{
-			adm_page_confirm($_CLASS['core_user']->lang['CONFIRM'], $_CLASS['core_user']->lang['CONFIRM_OPERATION']);
-		}
-		else if ($confirm && !$cancel)
-		{
-			$sql = 'SELECT group_name 
-				FROM ' . EXTENSION_GROUPS_TABLE . "
-				WHERE group_id = $group_id";
-			$result = $_CLASS['core_db']->query($sql);
-			$group_name = $_CLASS['core_db']->sql_fetchfield('group_name', 0, $result);
-			$_CLASS['core_db']->free_result($result);
-			
-			$sql = 'DELETE 
-				FROM ' . EXTENSION_GROUPS_TABLE . " 
-				WHERE group_id = $group_id";
-			$_CLASS['core_db']->query($sql);
+				$sql = ($action === 'add') ? 'INSERT INTO ' . FORUMS_EXTENSION_GROUPS_TABLE . ' ' : 'UPDATE ' . FORUMS_EXTENSION_GROUPS_TABLE . ' SET ';
+				$sql .= $_CLASS['core_db']->sql_build_array((($action === 'add') ? 'INSERT' : 'UPDATE'), $group_ary);
+				$sql .= ($action === 'edit') ? " WHERE group_id = $group_id" : '';
 
-			// Set corresponding Extensions to a pending Group
-			$sql = 'UPDATE ' . EXTENSIONS_TABLE . "
-				SET group_id = 0
-				WHERE group_id = $group_id";
-			$_CLASS['core_db']->query($sql);
-	
-			add_log('admin', 'LOG_ATTACH_EXTGROUP_DEL', $group_name);
+				$_CLASS['core_db']->query($sql);
 
-			rewrite_extensions();
+				if ($action === 'add')
+				{
+					$group_id = $_CLASS['core_db']->insert_id(FORUMS_EXTENSION_GROUPS_TABLE, 'group_id');
+				}
 
-			trigger_error('EXTENSION_GROUP_DELETED');
-		}
-		else
-		{
-			$action = 'show';
-		}
-	}
+				add_log('admin', 'LOG_ATTACH_EXTGROUP_' . strtoupper($action), $group_name);
+			}
 
-	switch ($action)
-	{
-		case 'edit':
-		
-			if (!$group_id)
+			$extension_list = isset($_REQUEST['extensions']) ? array_map('intval', array_values($_REQUEST['extensions'])) : array();
+
+			if ($action == 'edit' && sizeof($extension_list))
 			{
-				trigger_error('NO_EXTENSION_GROUP');
+				$sql = 'UPDATE ' . FORUMS_EXTENSIONS_TABLE . "
+					SET group_id = 0
+					WHERE group_id = $group_id";
+				$_CLASS['core_db']->query($sql);
 			}
 
-			$sql = 'SELECT * FROM ' . EXTENSION_GROUPS_TABLE . "
-				WHERE group_id = $group_id";
-			$result = $_CLASS['core_db']->query($sql);
-			extract($_CLASS['core_db']->fetch_row_assoc($result));
-			$_CLASS['core_db']->free_result($result);
+			if (sizeof($extension_list))
+			{
+				$sql = 'UPDATE ' . FORUMS_EXTENSIONS_TABLE . " 
+					SET group_id = $group_id
+					WHERE extension_id IN (" . implode(', ', $extension_list) .')';
+				$_CLASS['core_db']->query($sql);
+			}
 
-			$forum_ids = (!$allowed_forums) ? array() : unserialize(trim($allowed_forums));
+			rewrite_extensions();
 
-		case 'add':
-			
-			if ($action == 'add')
+			if (!sizeof($error))
 			{
-				$group_name = request_var('group_name', '');
-				$cat_id = 0;
-				$allow_group = 1;
-				$allow_in_pm = 1;
-				$download_mode = 1;
-				$upload_icon = '';
-				$max_filesize = 0;
-				$forum_ids = array();
+				$notify[] = $_CLASS['core_user']->lang['SUCCESS_EXTENSION_GROUP_' . strtoupper($action)];
 			}
+		}
+	
+		$cat_lang = array(
+			ATTACHMENT_CATEGORY_NONE	=> $_CLASS['core_user']->lang['NO_FILE_CAT'],
+			ATTACHMENT_CATEGORY_IMAGE	=> $_CLASS['core_user']->lang['CAT_IMAGES'],
+			ATTACHMENT_CATEGORY_WM		=> $_CLASS['core_user']->lang['CAT_WM_FILES'],
+			ATTACHMENT_CATEGORY_RM		=> $_CLASS['core_user']->lang['CAT_RM_FILES']
+		);
 
-			$extensions = array();
+		$group_id = request_var('g', 0);
+		$action = (isset($_POST['add'])) ? 'add' : $action;
+//				$action = (($action == 'add' || $action == 'edit') && $submit && !sizeof($error)) ? 'show' : $action;
 
-			$sql = 'SELECT * FROM ' . EXTENSIONS_TABLE . "
-				WHERE group_id = $group_id OR group_id = 0
-				ORDER BY extension";
-			$result = $_CLASS['core_db']->query($sql);
-			$extensions = $_CLASS['core_db']->fetch_row_assocset($result);
-			$_CLASS['core_db']->free_result($result);
+		switch ($action)
+		{
+			case 'delete':
 
-			$img_path = $config['upload_icons_path'];
+				if (confirm_box(true))
+				{
+					$sql = 'SELECT group_name 
+						FROM ' . FORUMS_EXTENSION_GROUPS_TABLE . "
+						WHERE group_id = $group_id";
+					$result = $_CLASS['core_db']->query($sql);
+					$group_name = (string) $db->sql_fetchfield('group_name');
+					$_CLASS['core_db']->free_result($result);
 
-			$imglist = filelist($img_path);
-			$imglist = array_values($imglist);
-			$imglist = $imglist[0];
+					$sql = 'DELETE 
+						FROM ' . FORUMS_EXTENSION_GROUPS_TABLE . " 
+						WHERE group_id = $group_id";
+					$_CLASS['core_db']->query($sql);
 
-			$filename_list = '';
-			foreach ($imglist as $key => $img)
-			{
-				$filename_list .= '<option value="' . $img . '">' . htmlspecialchars($img) . '</option>';
-			}
+					// Set corresponding Extensions to a pending Group
+					$sql = 'UPDATE ' . FORUMS_EXTENSIONS_TABLE . "
+						SET group_id = 0
+						WHERE group_id = $group_id";
+					$_CLASS['core_db']->query($sql);
+			
+					add_log('admin', 'LOG_ATTACH_EXTGROUP_DEL', $group_name);
 
-			if ($max_filesize == 0)
-			{
-				$max_filesize = (int) $config['max_filesize'];
-			}
+					rewrite_extensions();
 
-			$size_format = ($max_filesize >= 1048576) ? 'mb' : (($max_filesize >= 1024) ? 'kb' : 'b');
+					trigger_error($_CLASS['core_user']->lang['EXTENSION_GROUP_DELETED'] . adm_back_link($u_action));
+				}
+				else
+				{
+					confirm_box(false, $_CLASS['core_user']->lang['CONFIRM_OPERATION'], build_hidden_fields(array(
+						'i'			=> $id,
+						'mode'		=> $mode,
+						'action'	=> $action,
+						'group_id'	=> $group_id,
+						'action'	=> 'delete',
+					)));
+				}
 
-			$max_filesize = ($max_filesize >= 1048576) ? round($max_filesize / 1048576 * 100) / 100 : (($max_filesize >= 1024) ? round($max_filesize / 1024 * 100) / 100 : $max_filesize);
+			break;
 
-			$s_allowed = ($allow_group) ? ' checked="checked"' : '';
-			$s_in_pm_allowed = ($allow_in_pm) ? ' checked="checked"' : '';
-
-			$filename_list = '';
-			$no_image_select = false;
-			foreach ($imglist as $key => $img)
-			{
-				if (!$upload_icon)
+			case 'edit':
+			
+				if (!$group_id)
 				{
-					$no_image_select = true;
-					$selected = '';
+					trigger_error($_CLASS['core_user']->lang['NO_EXTENSION_GROUP'] . adm_back_link($u_action), E_USER_WARNING);
 				}
-				else
+
+				$sql = 'SELECT *
+					FROM ' . FORUMS_EXTENSION_GROUPS_TABLE . "
+					WHERE group_id = $group_id";
+				$result = $_CLASS['core_db']->query($sql);
+				$ext_group_row = $_CLASS['core_db']->fetch_row_assoc($result);
+				$_CLASS['core_db']->free_result($result);
+
+				$forum_ids = (!$ext_group_row['allowed_forums']) ? array() : unserialize(trim($ext_group_row['allowed_forums']));
+
+			// no break;
+
+			case 'add':
+				
+				if ($action == 'add')
 				{
-					$selected = ($upload_icon == $img) ? ' selected="selected"' : '';
+					$ext_group_row = array(
+						'group_name'	=> request_var('group_name', '', true),
+						'cat_id'		=> 0,
+						'allow_group'	=> 1,
+						'allow_in_pm'	=> 1,
+						'download_mode'	=> 1,
+						'upload_icon'	=> '',
+						'max_filesize'	=> 0,
+					);
+					
+					$forum_ids = array();
 				}
 
-				$filename_list .= '<option value="' . htmlspecialchars($img) . '"' . $selected . '>' . htmlspecialchars($img) . '</option>';
-			}
+				$extensions = array();
 
-			// Show Edit Screen
-?>
-			<script language="javascript" type="text/javascript" defer="defer">
-			<!--
-
-			function update_image(newimage)
-			{
-				if (newimage == 'no_image')
+				$sql = 'SELECT *
+					FROM ' . FORUMS_EXTENSIONS_TABLE . "
+					WHERE group_id = $group_id
+						OR group_id = 0
+					ORDER BY extension";
+				$result = $_CLASS['core_db']->query($sql);
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 				{
-					document.image.src = "images/spacer.gif";
+					$extensions[] = $row;
 				}
-				else
+				$_CLASS['core_db']->free_result($result);
+
+				if ($ext_group_row['max_filesize'] == 0)
 				{
-					document.image.src = "<?php echo $img_path; ?>/" + newimage;
+					$ext_group_row['max_filesize'] = (int) $config['max_filesize'];
 				}
-			}
 
-			function show_extensions(elem)
-			{
-				var str = '';
+				$size_format = ($ext_group_row['max_filesize'] >= 1048576) ? 'mb' : (($ext_group_row['max_filesize'] >= 1024) ? 'kb' : 'b');
 
-				for (i = 0; i < elem.length; i++)
+				$ext_group_row['max_filesize'] = ($ext_group_row['max_filesize'] >= 1048576) ? round($ext_group_row['max_filesize'] / 1048576 * 100) / 100 : (($ext_group_row['max_filesize'] >= 1024) ? round($ext_group_row['max_filesize'] / 1024 * 100) / 100 : $ext_group_row['max_filesize']);
+
+				$img_path = $config['upload_icons_path'];
+
+				$filename_list = '';
+				$no_image_select = false;
+
+				$imglist = filelist($img_path);
+
+				if (sizeof($imglist))
 				{
-					var element = elem.options[i];
-					if (element.selected)
+					$imglist = array_values($imglist);
+					$imglist = $imglist[0];
+
+					foreach ($imglist as $key => $img)
 					{
-						if (str)
+						if (!$ext_group_row['upload_icon'])
 						{
-							str = str + ', ';
+							$no_image_select = true;
+							$selected = '';
 						}
+						else
+						{
+							$selected = ($ext_group_row['upload_icon'] == $img) ? ' selected="selected"' : '';
+						}
 
-						str = str + element.innerHTML;
+						$filename_list .= '<option value="' . htmlspecialchars($img) . '"' . $selected . '>' . htmlspecialchars($img) . '</option>';
 					}
 				}
 
-				if (document.all)
+				$i = 0;
+				$assigned_extensions = '';
+				foreach ($extensions as $num => $row)
 				{
-					document.all.ext.innerText = str;
+					if ($row['group_id'] == $group_id && $group_id)
+					{
+						$assigned_extensions .= ($i) ? ', ' . $row['extension'] : $row['extension'];
+						$i++;
+					}
 				}
-				else if (document.getElementById('ext').textContent)
+
+				$s_extension_options = '';
+				foreach ($extensions as $row)
 				{
-					document.getElementById('ext').textContent = str;
+					$s_extension_options .= '<option' . ((!$row['group_id']) ? ' class="disabled"' : '') . ' value="' . $row['extension_id'] . '"' . (($row['group_id'] == $group_id && $group_id) ? ' selected="selected"' : '') . '>' . $row['extension'] . '</option>';
 				}
-				else if (document.getElementById('ext').firstChild.nodeValue)
-				{
-					document.getElementById('ext').firstChild.nodeValue = str;
-				}
-			}
 
-			//-->
-			</script>
-		
-			<input type="hidden" name="action" value="<?php echo $action; ?>" />
-			<input type="hidden" name="g" value="<?php echo $group_id; ?>" />
+				$_CLASS['core_template']->assign_array(array(
+					'IMG_PATH'			=> $img_path,
+					'ACTION'			=> $action,
+					'GROUP_ID'			=> $group_id,
+					'GROUP_NAME'		=> $ext_group_row['group_name'],
+					'ALLOW_GROUP'		=> $ext_group_row['allow_group'],
+					'ALLOW_IN_PM'		=> $ext_group_row['allow_in_pm'],
+					'UPLOAD_ICON_SRC'	=> $img_path . '/' . $ext_group_row['upload_icon'],
+					'EXTGROUP_FILESIZE'	=> $ext_group_row['max_filesize'],
+					'ASSIGNED_EXTENSIONS'	=> $assigned_extensions,
 
-			<table class="tablebg" width="99%" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th colspan="2"><?php echo $_CLASS['core_user']->lang[strtoupper($action) . '_EXTENSION_GROUP']; ?></th>
-			</tr>
-			<tr>
-				<td class="row1" width="35%"><b><?php echo $_CLASS['core_user']->lang['GROUP_NAME']; ?>: </b></td>
-				<td class="row2"><input type="text" size="20" maxlength="100" name="group_name" class="post" value="<?php echo $group_name; ?>" /></td>
-			</tr>
-			<tr>
-				<td class="row1" width="35%"><b><?php echo $_CLASS['core_user']->lang['SPECIAL_CATEGORY']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['SPECIAL_CATEGORY_EXPLAIN']; ?></span></td>
-				<td class="row2"><?php echo category_select('special_category', $group_id); ?></td>
-			</tr>
-			<tr>
-				<td class="row1" width="35%"><b><?php echo $_CLASS['core_user']->lang['ALLOWED']; ?>: </b></td>
-				<td class="row2"><input type="checkbox" name="allow_group" value="<?php echo $group_id; ?>"<?php echo $s_allowed; ?> /></td>
-			</tr>
-			<tr>
-				<td class="row1" width="35%"><b><?php echo $_CLASS['core_user']->lang['ALLOW_IN_PM']; ?>: </b></td>
-				<td class="row2"><input type="checkbox" name="allow_in_pm" value="1"<?php echo $s_in_pm_allowed; ?> /></td>
-			</tr>
-			<tr>
-				<td class="row1" width="35%"><b><?php echo $_CLASS['core_user']->lang['DOWNLOAD_MODE']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['DOWNLOAD_MODE_EXPLAIN']; ?></span></td>
-				<td class="row2"><?php echo download_select('download_mode', $group_id); ?></td>
-			</tr>
-			<tr>
-				<td class="row1" width="35%"><b><?php echo $_CLASS['core_user']->lang['UPLOAD_ICON']; ?>: </b></td>
-				<td class="row2" align="left">
-					<table border="0" cellpadding="0" cellspacing="0">
-					<tr>
-						<td align="center"><select name="upload_icon" onChange="update_image(this.options[selectedIndex].value);"><option value="no_image"<?php echo (($no_image_select) ? ' selected="selected"' : ''); ?>><?php echo $_CLASS['core_user']->lang['NO_IMAGE']; ?></option><?php echo $filename_list ?></select></td>
-						<td width="50" align="center" valign="middle">&nbsp;<img src="<?php echo (($no_image_select) ? 'images/spacer.gif' : $img_path . '/' . $upload_icon) ?>" name="image" border="0" alt="" title="" />&nbsp;</td>
-					</tr>
-					</table>
-				</td>
-			</tr>
-			<tr>
-				<td class="row1" width="35%"><b><?php echo $_CLASS['core_user']->lang['MAX_EXTGROUP_FILESIZE']; ?>: </b></td>
-				<td class="row2"><input type="text" size="3" maxlength="15" name="max_filesize" class="post" value="<?php echo $max_filesize; ?>" /> <?php echo size_select('size_select', $size_format); ?></td>
-			</tr>
-			<tr>
-				<td class="row1" width="35%" valign="top"><table border="0" cellspacing="0" cellpadding="0" width="100%"><tr><td colspan="2"><b><?php echo $_CLASS['core_user']->lang['ASSIGNED_EXTENSIONS']; ?>: </b></td></tr>
-					<tr><td class="row1" width="20"> &#187; &nbsp;</td>
-					<td class="row1"><div id="ext" style="margin:0px; width:200px">&nbsp;<?php
-							$i = 0;
-							foreach ($extensions as $num => $row)
-							{
-								if ($row['group_id'] == $group_id && $group_id)
-								{
-									echo ($i) ? ', ' . $row['extension'] : $row['extension'];
-									$i++;
-								}
-							}
-					?></div></td></tr>
-					<tr><td class="row1">&nbsp;</td><td class="row1"><br />[ <a href="<?php echo generate_link('forums&amp;file=admin_attachments&amp;mode=extensions', array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['GO_TO_EXTENSIONS']; ?></a> ]</td></tr></table>
-				</td>
-				<td class="row2"><select name="extensions[]" onChange="show_extensions(this);" multiple="true" size="8" style="width:100px">
-<?php
-					foreach ($extensions as $row)
-					{
-						echo '<option' . ((!$row['group_id']) ? ' class="blue"' : '') . ' value="' . $row['extension_id'] . '"' . (($row['group_id'] == $group_id && $group_id) ? ' selected="selected"' : '') . '>' . $row['extension'] . '</option>';
-					}
-?>
-				</select></td>
-			</tr>
-			<tr>
-				<td class="row1" valign="top"><b><?php echo $_CLASS['core_user']->lang['ALLOWED_FORUMS']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['ALLOWED_FORUMS_EXPLAIN']; ?></span></td>
-				<td class="row2"><input type="radio" name="forum_select" value="0"<?php echo (!sizeof($forum_ids)) ? ' checked="checked"' : ''; ?> />&nbsp;<?php echo $_CLASS['core_user']->lang['ALLOW_ALL_FORUMS']; ?>&nbsp;&nbsp;<input type="radio" name="forum_select" value="1"<?php echo (sizeof($forum_ids)) ? ' checked="checked"' : ''; ?> />&nbsp;<?php echo $_CLASS['core_user']->lang['ALLOW_SELECTED_FORUMS']; ?><br /><br />
-				<select name="allowed_forums[]" multiple="true" size="8">
-<?php
+					'S_CATEGORY_SELECT'			=> category_select('special_category', $group_id, 'category'),
+					'S_DOWNLOAD_SELECT'			=> download_select('download_mode', $group_id, 'download_mode'),
+					'S_EXT_GROUP_SIZE_OPTIONS'	=> size_select_options($size_format),
+					'S_EXTENSION_OPTIONS'		=> $s_extension_options,
+					'S_FILENAME_LIST'			=> $filename_list,
+					'S_EDIT_GROUP'				=> true,
+					'S_NO_IMAGE'				=> $no_image_select,
+					'S_FORUM_IDS'				=> (sizeof($forum_ids)) ? true : false,
 
+					'U_EXTENSIONS'				=> generate_link($u_action, array('admin' => true)),
+					'L_LEGEND'					=> $_CLASS['core_user']->lang[strtoupper($action) . '_EXTENSION_GROUP'],
+					)
+				);
+
+				$s_forum_id_options = '';
+
 				$sql = 'SELECT forum_id, forum_name, parent_id, forum_type, left_id, right_id
-					FROM ' . FORUMS_TABLE . '
+					FROM ' . FORUMS_FORUMS_TABLE . '
 					ORDER BY left_id ASC';
-				$result = $_CLASS['core_db']->query($sql);
+				$result = $_CLASS['core_db']->query($sql, 600);
 
 				$right = $cat_right = $padding_inc = 0;
 				$padding = $forum_list = $holding = '';
@@ -982,7 +733,7 @@
 						continue;
 					}
 
-					if (!$_CLASS['auth']->acl_get('f_list', $row['forum_id']))
+					if (!$_CLASS['forums_auth']->acl_get('f_list', $row['forum_id']))
 					{
 						// if the user does not have permissions to list this forum skip
 						continue;
@@ -1015,279 +766,272 @@
 					}
 					else
 					{
-						echo $holding . '<option value="' . $row['forum_id'] . '"' . (($row['forum_type'] == FORUM_POST) ? ' class="blue"' : '') . $selected . '>' . $padding . $row['forum_name'] . '</option>';
+						$s_forum_id_options .= $holding . '<option value="' . $row['forum_id'] . '"' . (($row['forum_type'] == FORUM_POST) ? ' class="blue"' : '') . $selected . '>' . $padding . $row['forum_name'] . '</option>';
 						$holding = '';
 					}
 				}
 				$_CLASS['core_db']->free_result($result);
 				unset($padding_store);
-?>
-				</select></td>
-			</tr>
-			<tr>
-				<td class="cat" colspan="2" align="right"><input type="submit" name="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp;&nbsp;<input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /></td>
-			</tr>
-			</table>
-<?php
-		
+
+				$_CLASS['core_template']->assign_array(array(
+					'S_FORUM_ID_OPTIONS'	=> $s_forum_id_options)
+				);
+			
 			break;
 
-		case 'deactivate':
-		case 'activate':
-	
-			if (!$group_id)
-			{
-				trigger_error('NO_EXTENSION_GROUP');
-			}
+			case 'deactivate':
+			case 'activate':
 
-			$sql = 'UPDATE ' . EXTENSION_GROUPS_TABLE . '
-				SET allow_group = ' . (($action == 'activate') ? '1' : '0') . "
-				WHERE group_id = $group_id";
+				if (!$group_id)
+				{
+					trigger_error($_CLASS['core_user']->lang['NO_EXTENSION_GROUP'] . adm_back_link($u_action), E_USER_WARNING);
+				}
 
-			$_CLASS['core_db']->query($sql);
+				$sql = 'UPDATE ' . FORUMS_EXTENSION_GROUPS_TABLE . '
+					SET allow_group = ' . (($action == 'activate') ? '1' : '0') . "
+					WHERE group_id = $group_id";
+				$_CLASS['core_db']->query($sql);
 
-			rewrite_extensions();
+				rewrite_extensions();
 
-		case 'show':
-	
-	$sql = 'SELECT *
-		FROM ' . EXTENSION_GROUPS_TABLE . '
-		ORDER BY allow_group DESC, group_name';
-	$result = $_CLASS['core_db']->query($sql);
+			break;
+		}
 
-?>
+		$sql = 'SELECT *
+			FROM ' . FORUMS_EXTENSION_GROUPS_TABLE . '
+			ORDER BY allow_group DESC, group_name';
+		$result = $_CLASS['core_db']->query($sql);
 
-	<table class="tablebg" width="99%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th width="60%"><?php echo $_CLASS['core_user']->lang['EXTENSION_GROUP']; ?></th>
-		<th nowrap="nowrap"><?php echo $_CLASS['core_user']->lang['SPECIAL_CATEGORY']; ?></th>
-		<th colspan="3"><?php echo $_CLASS['core_user']->lang['OPTIONS']; ?></th>
-	</tr>
+		$act_deact = 'activate';
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$s_add_spacer = ($row['allow_group'] == 0 && $act_deact == 'deactivate') ? true : false;
 
-<?php
+			$act_deact = ($row['allow_group']) ? 'deactivate' : 'activate';
 
-	$row_class = 'row2';
+			$_CLASS['core_template']->assign_vars_array('groups', array(
+				'S_ADD_SPACER'		=> $s_add_spacer,
+				'S_ALLOWED_IN_PM'	=> ($row['allow_in_pm']) ? true : false,
+				'S_GROUP_ALLOWED'	=> ($row['allow_group']) ? true : false,
 
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		$row_class = ($row_class == 'row1') ? 'row2' : 'row1';
-		
-		if ($row['allow_group'] == 0 && $act_deact == 'deactivate')
-		{
-?>
+				'U_EDIT'		=> generate_link($u_action . "&amp;action=edit&amp;g={$row['group_id']}", array('admin' => true)),
+				'U_DELETE'		=> generate_link($u_action . "&amp;action=delete&amp;g={$row['group_id']}", array('admin' => true)),
+				'U_ACT_DEACT'	=> generate_link($u_action . "&amp;action=$act_deact&amp;g={$row['group_id']}", array('admin' => true)),
 
-		<tr>
-			<td class="spacer" colspan="5" height="1"><img src="../images/spacer.gif" alt="" width="1" height="1" /></td>
-		</tr>
+				'L_ACT_DEACT'	=> $_CLASS['core_user']->lang[strtoupper($act_deact)],
+				'GROUP_NAME'	=> $row['group_name'],
+				'CATEGORY'		=> $cat_lang[$row['cat_id']],
+				)
+			);
 
-<?php
-
 		}
-		
-		$act_deact = ($row['allow_group']) ? 'deactivate' : 'activate';
-?>
+		$_CLASS['core_db']->free_result($result);
 
-	<tr>
-		<td class="<?php echo $row_class; ?>"><a href="<?php echo generate_link("forums&amp;file=admin_attachments&amp;mode=$mode&amp;action=edit&amp;g={$row['group_id']}", array('admin' => true)); ?>"><?php echo $row['group_name']; ?></a></td>
-		<td class="<?php echo $row_class; ?>"><b><?php echo $cat_lang[$row['cat_id']]; ?></b></td>
-		<td class="<?php echo $row_class; ?>"><a href="<?php echo generate_link("forums&amp;file=admin_attachments&amp;mode=$mode&amp;action=$act_deact&amp;g={$row['group_id']}", array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang[strtoupper($act_deact)]; ?></a></td>
-		<td class="<?php echo $row_class; ?>"><a href="<?php echo generate_link("forums&amp;file=admin_attachments&amp;mode=$mode&amp;action=edit&amp;g={$row['group_id']}", array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['EDIT']; ?></a></td>
-		<td class="<?php echo $row_class; ?>"><a href="<?php echo generate_link("forums&amp;file=admin_attachments&amp;mode=$mode&amp;action=delete&amp;g={$row['group_id']}", array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['DELETE']; ?></a></td>
-	</tr>
+	break;
 
-<?php
-	}
-	$_CLASS['core_db']->free_result($result);
+	case 'orphan':
 
-?>
-	<td class="cat" colspan="5" align="right"><?php echo $_CLASS['core_user']->lang['CREATE_GROUP']; ?>: <input class="post" type="text" name="group_name" maxlength="30" /> <input class="btnmain" type="submit" name="add" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" /></td>
-	</table>
+		if ($submit)
+		{
+			$delete_files = (isset($_POST['delete'])) ? array_keys(request_var('delete', array('' => 0))) : array();
+			$add_files = (isset($_POST['add'])) ? array_keys(request_var('add', array('' => 0))) : array();
+			$post_ids = request_var('post_id', array('' => 0));
 
-<?php
+			if (sizeof($delete_files))
+			{
+				$sql = 'SELECT *
+					FROM ' . FORUMS_ATTACHMENTS_TABLE . '
+					WHERE ' . $db->sql_in_set('attach_id', $delete_files) . '
+						AND is_orphan = 1';
+				$result = $_CLASS['core_db']->query($sql);
 
-			break;
-	}
+				$delete_files = array();
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					phpbb_unlink($row['physical_filename']);
 
-}
+					if ($row['thumbnail'])
+					{
+						phpbb_unlink($row['physical_filename'], 'thumbnail');
+					}
 
-// Extensions
-if ($mode == 'extensions')
-{
-?>
-	<table class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center" width="99%">
-	<tr> 
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['EXTENSION']; ?>&nbsp;</th>
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['EXTENSION_GROUP']; ?>&nbsp;</th>
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['ADD_EXTENSION']; ?>&nbsp;</th>
-	</tr>
-	<tr>
-		<td class="row1" align="center" valign="middle"><input type="text" size="20" maxlength="100" name="add_extension" class="post" value="<?php echo (isset($add_extension)) ? $add_extension : ''; ?>" /></td>
-		<td class="row2" align="center" valign="middle"><?php echo (($submit) ? group_select('add_group_select', $add_extension_group) : group_select('add_group_select')) ?></td>
-		<td class="row1" align="center" valign="middle"><input type="checkbox" name="add_extension_check" /></td>
-	</tr>
-	<tr align="right">
-		<td class="cat" colspan="3"><input type="submit" name="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" /></td>
-	</tr>
-	<tr> 
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['EXTENSION']; ?>&nbsp;</th>
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['EXTENSION_GROUP']; ?>&nbsp;</th>
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['DELETE']; ?>&nbsp;</th>
-	</tr>
+					$delete_files[$row['attach_id']] = $row['real_filename'];
+				}
+				$_CLASS['core_db']->free_result($result);
+			}
 
-<?php
-	$sql = 'SELECT * 
-		FROM ' . EXTENSIONS_TABLE . ' 
-		ORDER BY group_id, extension';
-	$result = $_CLASS['core_db']->query($sql);
+			if (sizeof($delete_files))
+			{
+				$sql = 'DELETE FROM ' . FORUMS_ATTACHMENTS_TABLE . '
+					WHERE ' . $db->sql_in_set('attach_id', array_keys($delete_files));
+				$_CLASS['core_db']->query($sql);
 
-	if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		$old_group_id = $row['group_id'];
-		do
-		{
-			$current_group_id = $row['group_id'];
-			if ($old_group_id != $current_group_id)
+				add_log('admin', 'LOG_ATTACH_ORPHAN_DEL', implode(', ', $delete_files));
+				$notify[] = sprintf($_CLASS['core_user']->lang['LOG_ATTACH_ORPHAN_DEL'], implode(', ', $delete_files));
+			}
+
+			$upload_list = array();
+			foreach ($add_files as $attach_id)
 			{
-?>
-	<tr>
-		<td class="spacer" colspan="3" height="1"></td>
-	</tr>
-<?php
-				$old_group_id = $current_group_id;
+				if (!in_array($attach_id, array_keys($delete_files)) && !empty($post_ids[$attach_id]))
+				{
+					$upload_list[$attach_id] = $post_ids[$attach_id];
+				}
 			}
-?>
-	<tr> 
-		<input type="hidden" name="extension_change_list[]" value="<?php echo $row['extension_id']; ?>" />
-		<td class="row1" align="center" valign="middle"><b class="gen"><?php echo $row['extension']; ?></b></td>
-		<td class="row2" align="center" valign="middle"><?php echo group_select('group_select[]', $row['group_id']); ?></td>
-		<td class="row1" align="center" valign="middle"><input type="checkbox" name="extension_id_list[]" value="<?php echo $row['extension_id']; ?>" /></td>
-	</tr>
-<?
-		}
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-	}
-?>
-	<tr>
-		<td class="cat" colspan="3" align="right"><input type="submit" name="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp;&nbsp;<input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /></td>
-	</tr>
-	</table>
-<?
-}
+			unset($add_files);
 
-// Orphan Attachments
-if ($mode == 'orphan')
-{
-	$attach_filelist = array();
+			if (sizeof($upload_list))
+			{
+				$_CLASS['core_template']->assign('S_UPLOADING_FILES', true);
 
-	$dir = @opendir($config['upload_path']);
-	while ($file = @readdir($dir))
-	{
-		if (is_file($config['upload_path'] . '/' . $file) && filesize($config['upload_path'] . '/' . $file) && $file{0} != '.' && $file != 'index.htm' && !preg_match('#^thumb\_#', $file))
-		{
-			$attach_filelist[$file] = $file;
-		}
-	}
-	@closedir($dir);
+				$sql = 'SELECT forum_id, forum_name
+					FROM ' . FORUMS_FORUMS_TABLE;
+				$result = $_CLASS['core_db']->query($sql);
 
-?>
+				$forum_names = array();
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					$forum_names[$row['forum_id']] = $row['forum_name'];
+				}
+				$_CLASS['core_db']->free_result($result);
 
-<script language="Javascript" type="text/javascript">
-<!--
-function marklist(match, name, status)
-{
-	len = eval('document.' + match + '.length');
-	object = eval('document.' + match);
-	for (i = 0; i < len; i++)
-	{
-		result = eval('object.elements[' + i + '].name.search(/' + name + '.+/)');
-		if (result != -1)
-			object.elements[i].checked = status;
-	}
-}
-//-->
-</script>
+				$sql = 'SELECT forum_id, topic_id, post_id, poster_id
+					FROM ' . FORUMS_POSTS_TABLE . '
+					WHERE ' . $db->sql_in_set('post_id', $upload_list);
+				$result = $_CLASS['core_db']->query($sql);
 
-<?php
-	$sql = 'SELECT physical_filename 
-		FROM ' . ATTACHMENTS_TABLE;
-	$result = $_CLASS['core_db']->query($sql);
+				$post_info = array();
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					$post_info[$row['post_id']] = $row;
+				}
+				$_CLASS['core_db']->free_result($result);
 
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		unset($attach_filelist[$row['physical_filename']]);
-	}
-	$_CLASS['core_db']->free_result($result);
+				// Select those attachments we want to change...
+				$sql = 'SELECT *
+					FROM ' . FORUMS_ATTACHMENTS_TABLE . '
+					WHERE ' . $db->sql_in_set('attach_id', array_keys($upload_list)) . '
+						AND is_orphan = 1';
+				$result = $_CLASS['core_db']->query($sql);
 
-?>
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					$post_row = $post_info[$upload_list[$row['attach_id']]];
 
-	<table class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center" width="99%">
-	<tr> 
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['FILENAME']; ?>&nbsp;</th>
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['FILESIZE']; ?>&nbsp;</th>
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['ATTACH_POST_ID']; ?>&nbsp;</th>
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['ATTACH_TO_POST']; ?>&nbsp;</th>
-		<th>&nbsp;<?php echo $_CLASS['core_user']->lang['DELETE']; ?>&nbsp;</th>
-	</tr>
+					$_CLASS['core_template']->assign_vars_array('upload', array(
+						'FILE_INFO'		=> sprintf($_CLASS['core_user']->lang['UPLOADING_FILE_TO'], $row['real_filename'], $post_row['post_id']),
+						'S_DENIED'		=> (!$_CLASS['forums_auth']->acl_get('f_attach', $post_row['forum_id'])) ? true : false,
+						'L_DENIED'		=> (!$_CLASS['forums_auth']->acl_get('f_attach', $post_row['forum_id'])) ? sprintf($_CLASS['core_user']->lang['UPLOAD_DENIED_FORUM'], $forum_names[$row['forum_id']]) : '')
+					);
 
-<?php
-	$i = 0;
-	foreach ($attach_filelist as $file)
-	{
-		$row_class = (++$i % 2 == 0) ? 'row2' : 'row1';
-		$filesize = @filesize($config['upload_path'] . '/' . $file);
-		$size_lang = ($filesize >= 1048576) ? $_CLASS['core_user']->lang['MB'] : ( ($filesize >= 1024) ? $_CLASS['core_user']->lang['KB'] : $_CLASS['core_user']->lang['BYTES'] );
-		$filesize = ($filesize >= 1048576) ? round((round($filesize / 1048576 * 100) / 100), 2) : (($filesize >= 1024) ? round((round($filesize / 1024 * 100) / 100), 2) : $filesize);
-?>
-		<tr>
-			<td class="<?php echo $row_class; ?>"><a href="<?php echo $config['upload_path'] . '/' . $file; ?>" class="gen" target="file"><?php echo $file; ?></a></td>
-			<td class="<?php echo $row_class; ?>"><?php echo $filesize . ' ' . $size_lang; ?></td>
-			<td class="<?php echo $row_class; ?>"><b class="gen">ID: </b><input type="text" name="post_id[<?php echo $file; ?>]" class="post" size="7" maxlength="10" value="<?php echo (!empty($post_ids[$file])) ? $post_ids[$file] : ''; ?>" /></td>
-			<td class="<?php echo $row_class; ?>"><input type="checkbox" name="add[<?php echo $file; ?>]" /></td>
-			<td class="<?php echo $row_class; ?>"><input type="checkbox" name="delete[<?php echo $file; ?>]" /></td>
-		</tr>
-<?php
-	}
+					if (!$_CLASS['forums_auth']->acl_get('f_attach', $post_row['forum_id']))
+					{
+						continue;
+					}
 
-?>
-	<tr>
-		<td class="cat" colspan="3"><input type="submit" name="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp;&nbsp;<input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /></td>
-		<td class="cat" align="left"><b><span class="gensmall"><a href="javascript:marklist('attachments', 'add', true);" class="gensmall"><?php echo $_CLASS['core_user']->lang['MARK_ALL']; ?></a> :: <a href="javascript:marklist('attachments', 'add', false);" class="gensmall"><?php echo $_CLASS['core_user']->lang['UNMARK_ALL']; ?></a></span></b></td>
-		<td class="cat" align="left"><b><span class="gensmall"><a href="javascript:marklist('attachments', 'delete', true);" class="gensmall"><?php echo $_CLASS['core_user']->lang['MARK_ALL']; ?></a> :: <a href="javascript:marklist('attachments', 'delete', false);" class="gensmall"><?php echo $_CLASS['core_user']->lang['UNMARK_ALL']; ?></a></span></b></td>
-	</tr>
-</table>
-<?php
-}
+					// Adjust attachment entry
+					$sql_ary = array(
+						'in_message'	=> 0,
+						'is_orphan'		=> 0,
+						'poster_id'		=> $post_row['poster_id'],
+						'post_msg_id'	=> $post_row['post_id'],
+						'topic_id'		=> $post_row['topic_id'],
+					);
 
-?>
+					$sql = 'UPDATE ' . FORUMS_ATTACHMENTS_TABLE . '
+						SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql_ary) . '
+						WHERE attach_id = ' . $row['attach_id'];
+					$_CLASS['core_db']->query($sql);
 
-</form>
+					$sql = 'UPDATE ' . FORUMS_POSTS_TABLE . '
+						SET post_attachment = 1
+						WHERE post_id = ' . $post_row['post_id'];
+					$_CLASS['core_db']->query($sql);
 
-<br clear="all" />
+					$sql = 'UPDATE ' . FORUMS_TOPICS_TABLE . '
+						SET topic_attachment = 1
+						WHERE topic_id = ' . $post_row['topic_id'];
+					$_CLASS['core_db']->query($sql);
 
-<?php
+					add_log('admin', 'LOG_ATTACH_FILEUPLOAD', $post_row['post_id'], $row['real_filename']);
+				}
+				$_CLASS['core_db']->free_result($result);
+			}
+		}
 
-adm_page_footer();
+		$_CLASS['core_template']->assign_array(array(
+			'S_ORPHAN'		=> true)
+		);
 
-// Build Select for category items
-function category_select($select_name, $group_id = false)
+		// Just get the files with is_orphan set and older than 3 hours
+		$sql = 'SELECT *
+			FROM ' . FORUMS_ATTACHMENTS_TABLE . '
+			WHERE is_orphan = 1
+				AND filetime < ' . (time() - 3*60*60) . '
+			ORDER BY filetime DESC';
+		$result = $_CLASS['core_db']->query($sql);
+
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$size_lang = ($row['filesize'] >= 1048576) ? $_CLASS['core_user']->lang['MB'] : (($row['filesize'] >= 1024) ? $_CLASS['core_user']->lang['KB'] : $_CLASS['core_user']->lang['BYTES']);
+			$row['filesize'] = ($row['filesize'] >= 1048576) ? round((round($row['filesize'] / 1048576 * 100) / 100), 2) : (($row['filesize'] >= 1024) ? round((round($row['filesize'] / 1024 * 100) / 100), 2) : $row['filesize']);
+
+			$_CLASS['core_template']->assign_vars_array('orphan', array(
+				'FILESIZE'			=> $row['filesize'] . ' ' . $size_lang,
+				'FILETIME'			=> $_CLASS['core_user']->format_date($row['filetime']),
+				'REAL_FILENAME'		=> basename($row['real_filename']),
+				'PHYSICAL_FILENAME'	=> basename($row['physical_filename']),
+				'ATTACH_ID'			=> $row['attach_id'],
+				'POST_IDS'			=> (!empty($post_ids[$row['attach_id']])) ? $post_ids[$row['attach_id']] : '',
+				'U_FILE'			=> generate_link('forums&amp;file=download&amp;id=' . $row['attach_id'])
+			));
+		}
+		$_CLASS['core_db']->free_result($result);
+
+	break;
+}
+
+if (sizeof($error))
 {
+	$_CLASS['core_template']->assign_array(array(
+		'S_WARNING'		=> true,
+		'WARNING_MSG'	=> implode('<br />', $error))
+	);
+}
+
+if (sizeof($notify))
+{
+	$_CLASS['core_template']->assign_array(array(
+		'S_NOTIFY'		=> true,
+		'NOTIFY_MSG'	=> implode('<br />', $notify))
+	);
+}
+
+$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($l_title), 'modules/forums/admin/acp_attachments.html');
+
+/**
+* Build Select for category items
+*/
+function category_select($select_name, $group_id = false, $key = '')
+{
 	global $_CLASS;
 
 	$types = array(
-		ATTACHMENT_CATEGORY_NONE => $_CLASS['core_user']->lang['NONE'],
-		ATTACHMENT_CATEGORY_IMAGE => $_CLASS['core_user']->lang['CAT_IMAGES'],
-		ATTACHMENT_CATEGORY_WM => $_CLASS['core_user']->lang['CAT_WM_FILES'],
-		ATTACHMENT_CATEGORY_RM => $_CLASS['core_user']->lang['CAT_RM_FILES']
+		ATTACHMENT_CATEGORY_NONE	=> $_CLASS['core_user']->lang['NO_FILE_CAT'],
+		ATTACHMENT_CATEGORY_IMAGE	=> $_CLASS['core_user']->lang['CAT_IMAGES'],
+		ATTACHMENT_CATEGORY_WM		=> $_CLASS['core_user']->lang['CAT_WM_FILES'],
+		ATTACHMENT_CATEGORY_RM		=> $_CLASS['core_user']->lang['CAT_RM_FILES']
 	);
 	
 	if ($group_id)
 	{
 		$sql = 'SELECT cat_id
-			FROM ' . EXTENSION_GROUPS_TABLE . '
+			FROM ' . FORUMS_EXTENSION_GROUPS_TABLE . '
 			WHERE group_id = ' . (int) $group_id;
 		$result = $_CLASS['core_db']->query($sql);
-		
+
 		$cat_type = (!($row = $_CLASS['core_db']->fetch_row_assoc($result))) ? ATTACHMENT_CATEGORY_NONE : $row['cat_id'];
+
 		$_CLASS['core_db']->free_result($result);
 	}
 	else
@@ -1295,7 +1039,7 @@
 		$cat_type = ATTACHMENT_CATEGORY_NONE;
 	}
 	
-	$group_select = '<select name="' . $select_name . '">';
+	$group_select = '<select name="' . $select_name . '"' . (($key) ? ' id="' . $key . '"' : '') . '>';
 
 	foreach ($types as $type => $mode)
 	{
@@ -1308,15 +1052,17 @@
 	return $group_select;
 }
 
-// Extension group select
-function group_select($select_name, $default_group = false)
+/**
+* Extension group select
+*/
+function group_select($select_name, $default_group = false, $key = '')
 {
 	global $_CLASS;
 		
-	$group_select = '<select name="' . $select_name . '">';
+	$group_select = '<select name="' . $select_name . '"' . (($key) ? ' id="' . $key . '"' : '') . '>';
 
 	$sql = 'SELECT group_id, group_name
-		FROM ' . EXTENSION_GROUPS_TABLE . '
+		FROM ' . FORUMS_EXTENSION_GROUPS_TABLE . '
 		ORDER BY group_name';
 	$result = $_CLASS['core_db']->query($sql);
 
@@ -1350,23 +1096,25 @@
 	return $group_select;
 }
 
-// Build select for download modes
-function download_select($select_name, $group_id = false)
+/**
+* Build select for download modes
+*/
+function download_select($select_name, $group_id = false, $key = '')
 {
 	global $_CLASS;
 		
 	$types = array(
-		INLINE_LINK => $_CLASS['core_user']->lang['MODE_INLINE'],
-		PHYSICAL_LINK => $_CLASS['core_user']->lang['MODE_PHYSICAL']
+		INLINE_LINK		=> $_CLASS['core_user']->lang['MODE_INLINE'],
+		PHYSICAL_LINK	=> $_CLASS['core_user']->lang['MODE_PHYSICAL']
 	);
 	
 	if ($group_id)
 	{
 		$sql = "SELECT download_mode
-			FROM " . EXTENSION_GROUPS_TABLE . "
+			FROM " . FORUMS_EXTENSION_GROUPS_TABLE . "
 			WHERE group_id = " . (int) $group_id;
 		$result = $_CLASS['core_db']->query($sql);
-		
+
 		$download_mode = (!($row = $_CLASS['core_db']->fetch_row_assoc($result))) ? INLINE_LINK : $row['download_mode'];
 
 		$_CLASS['core_db']->free_result($result);
@@ -1376,7 +1124,7 @@
 		$download_mode = INLINE_LINK;
 	}
 
-	$group_select = '<select name="' . $select_name . '">';
+	$group_select = '<select name="' . $select_name . '"' . (($key) ? ' id="' . $key . '"' : '') . '>';
 
 	foreach ($types as $type => $mode)
 	{
@@ -1389,80 +1137,32 @@
 	return $group_select;
 }
 
-// Upload already uploaded file... huh? are you kidding?
-function upload_file($post_id, $topic_id, $forum_id, $upload_dir, $filename)
+/**
+* Search Imagick
+*/
+function search_imagemagick()
 {
-	global $message_parser, $_CLASS;
+	$imagick = '';
 
-	$message_parser->attachment_data = array();
+	$exe = ((defined('PHP_OS')) && (preg_match('#^win#i', PHP_OS))) ? '.exe' : '';
 
-	$message_parser->filename_data['filecomment'] = '';
-	$message_parser->filename_data['filename'] = $upload_dir . '/' . $filename;
+	$magic_home = getenv('MAGICK_HOME');
 
-	$filedata = upload_attachment('local', $forum_id, true, $upload_dir . '/' . basename($filename));
-
-	if ($filedata['post_attach'] && !sizeof($filedata['error']))
+	if (empty($magic_home))
 	{
-		$message_parser->attachment_data = array(
-			'post_msg_id'		=> $post_id,
-			'poster_id'			=> $_CLASS['core_user']->data['user_id'],
-			'topic_id'			=> $topic_id,
-			'in_message'		=> 0,
-			'physical_filename'	=> $filedata['physical_filename'],
-			'real_filename'		=> $filedata['real_filename'],
-			'comment'			=> $message_parser->filename_data['filecomment'],
-			'extension'			=> $filedata['extension'],
-			'mimetype'			=> $filedata['mimetype'],
-			'filesize'			=> $filedata['filesize'],
-			'filetime'			=> $filedata['filetime'],
-			'thumbnail'			=> $filedata['thumbnail']
-		);
-
-		$message_parser->filename_data['filecomment'] = '';
-		$filedata['post_attach'] = FALSE;
-
-		// Submit Attachment
-		$attach_sql = $message_parser->attachment_data;
-
-		$_CLASS['core_db']->sql_transaction();
-
-		$sql = 'INSERT INTO ' . ATTACHMENTS_TABLE . ' ' . $_CLASS['core_db']->sql_build_array('INSERT', $attach_sql);
-		$_CLASS['core_db']->query($sql);
-
-		$sql = 'UPDATE ' . POSTS_TABLE . "
-			SET post_attachment = 1
-			WHERE post_id = $post_id";
-		$_CLASS['core_db']->query($sql);
-
-		$sql = 'UPDATE ' . TOPICS_TABLE . "
-			SET topic_attachment = 1
-			WHERE topic_id = $topic_id";
-		$_CLASS['core_db']->query($sql);
-
-		$_CLASS['core_db']->sql_transaction('commit');
-
-		add_log('admin', sprintf($_CLASS['core_user']->lang['LOG_ATTACH_FILEUPLOAD'], $post_id, $filename));
-		echo '<span style="color:green">' . $_CLASS['core_user']->lang['SUCCESSFULLY_UPLOADED'] . '</span><br /><br />';
-	}
-	else if (sizeof($filedata['error']))
-	{
-		echo '<span style="color:red">' . sprintf($_CLASS['core_user']->lang['ADMIN_UPLOAD_ERROR'], implode("<br />\t", $filedata['error'])) . '</span><br /><br />';
-	}
-}
-
-// Search Imagick
-function search_imagemagick()
-{
-	$imagick = '';
-	
-	$exe = ((defined('PHP_OS')) && (preg_match('#win#i', PHP_OS))) ? '.exe' : '';
-
-	if (empty($_ENV['MAGICK_HOME']))
-	{
 		$locations = array('C:/WINDOWS/', 'C:/WINNT/', 'C:/WINDOWS/SYSTEM/', 'C:/WINNT/SYSTEM/', 'C:/WINDOWS/SYSTEM32/', 'C:/WINNT/SYSTEM32/', '/usr/bin/', '/usr/sbin/', '/usr/local/bin/', '/usr/local/sbin/', '/opt/', '/usr/imagemagick/', '/usr/bin/imagemagick/');
+		$path_locations = str_replace('\\', '/', (explode(($exe) ? ';' : ':', getenv('PATH'))));	
 
+		$locations = array_merge($path_locations, $locations);
+
 		foreach ($locations as $location)
 		{
+			// The path might not end properly, fudge it
+			if (substr($location, -1, 1) !== '/')
+			{
+				$location .= '/';
+			}
+
 			if (@is_readable($location . 'mogrify' . $exe) && @filesize($location . 'mogrify' . $exe) > 3000)
 			{
 				$imagick = str_replace('\\', '/', $location);
@@ -1472,13 +1172,15 @@
 	}
 	else
 	{
-		$imagick = str_replace('\\', '/', $_ENV['MAGICK_HOME']);
+		$imagick = str_replace('\\', '/', $magic_home);
 	}
 
 	return $imagick;
 }
 
-// Test Settings
+/**
+* Test Settings
+*/
 function test_upload(&$error, $upload_dir, $create_directory = false)
 {
 	global $_CLASS;
@@ -1498,13 +1200,13 @@
 		$error[] = sprintf($_CLASS['core_user']->lang['NO_UPLOAD_DIR'], $upload_dir);
 		return;
 	}
-	
+
 	if (!is_dir($upload_dir))
 	{
 		$error[] = sprintf($_CLASS['core_user']->lang['UPLOAD_NOT_DIR'], $upload_dir);
 		return;
 	}
-	
+
 	if (!is_writable($upload_dir))
 	{
 		$error[] = sprintf($_CLASS['core_user']->lang['NO_WRITE_UPLOAD'], $upload_dir);
@@ -1512,9 +1214,12 @@
 	}
 }
 
+/**
+* Perform operations on sites for external linking
+*/
 function perform_site_list()
 {
-	global $_CLASS;
+	global $db, $user;
 
 	if (isset($_REQUEST['securesubmit']))
 	{
@@ -1541,7 +1246,7 @@
 					$ip_2_counter = ($ip_1_counter == $ip_range_explode[1]) ? $ip_range_explode[2] : 0;
 					$ip_2_end = ($ip_1_counter < $ip_1_end) ? 254 : $ip_range_explode[6];
 
-					if($ip_2_counter == 0 && $ip_2_end == 254)
+					if ($ip_2_counter == 0 && $ip_2_end == 254)
 					{
 						$ip_2_counter = 256;
 						$ip_2_fragment = 256;
@@ -1620,7 +1325,7 @@
 				{
 					$hostlist_tmp[] = "'" . $row['site_hostname'] . "'";
 				}
-				break;
+				// break;
 			}
 			while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
 
@@ -1629,6 +1334,7 @@
 			unset($iplist_tmp);
 			unset($hostlist_tmp);
 		}
+		$_CLASS['core_db']->free_result($result);
 
 		if (sizeof($iplist))
 		{
@@ -1661,25 +1367,26 @@
 	}
 	else if (isset($_POST['unsecuresubmit']))
 	{
-		$unip_sql = implode(', ', array_map('intval', $_POST['unip']));
+		$unip_sql = array_map('intval', $_POST['unip']);
 
-		if ($unip_sql != '')
+		if (sizeof($unip_sql))
 		{
 			$l_unip_list = '';
-		
+
 			// Grab details of ips for logging information later
 			$sql = 'SELECT site_ip, site_hostname
-				FROM ' . FORUMS_SITELIST_TABLE . "
-				WHERE site_id IN ($unip_sql)";
+				FROM ' . FORUMS_SITELIST_TABLE . '
+				WHERE ' . $db->sql_in_set('site_id', $unip_sql);
 			$result = $_CLASS['core_db']->query($sql);
 
 			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 			{
 				$l_unip_list .= (($l_unip_list != '') ? ', ' : '') . (($row['site_ip']) ? $row['site_ip'] : $row['site_hostname']);
 			}
+			$_CLASS['core_db']->free_result($result);
 
-			$sql = 'DELETE FROM ' . FORUMS_SITELIST_TABLE . "
-				WHERE site_id IN ($unip_sql)";
+			$sql = 'DELETE FROM ' . SITELIST_TABLE . '
+				WHERE ' . $db->sql_in_set('site_id', $unip_sql);
 			$_CLASS['core_db']->query($sql);
 
 			add_log('admin', 'LOG_DOWNLOAD_REMOVE_IP', $l_unip_list);
@@ -1689,13 +1396,15 @@
 	}
 }
 
-// Re-Write extensions cache file
+/**
+* Re-Write extensions cache file
+*/
 function rewrite_extensions()
 {
 	global $_CLASS;
 
 	$sql = 'SELECT e.extension, g.*
-		FROM ' . EXTENSIONS_TABLE . ' e, ' . EXTENSION_GROUPS_TABLE . ' g
+		FROM ' . FORUMS_EXTENSIONS_TABLE . ' e, ' . FORUMS_EXTENSION_GROUPS_TABLE . ' g
 		WHERE e.group_id = g.group_id
 			AND g.allow_group = 1';
 	$result = $_CLASS['core_db']->query($sql);
@@ -1711,12 +1420,12 @@
 		$extensions[$extension]['max_filesize']	= (int) $row['max_filesize'];
 
 		$allowed_forums = ($row['allowed_forums']) ? unserialize(trim($row['allowed_forums'])) : array();
-			
+
 		if ($row['allow_in_pm'])
 		{
 			$allowed_forums = array_merge($allowed_forums, array(0));
 		}
-			
+
 		// Store allowed extensions forum wise
 		$extensions['_allowed_'][$extension] = (!sizeof($allowed_forums)) ? 0 : $allowed_forums;
 	}
@@ -1726,4 +1435,34 @@
 	$_CLASS['core_cache']->put('extensions', $extensions);
 }
 
-?>
\ No newline at end of file
+/**
+* Write display_order config field
+*/
+function display_order($value, $key = '')
+{
+	$radio_ary = array(0 => 'DESCENDING', 1 => 'ASCENDING');
+
+	return h_radio('config[display_order]', $radio_ary, $value, $key);
+}
+
+/**
+* Adjust all three max_filesize config vars for display
+*/
+function max_filesize($value, $key = '')
+{
+	// Determine size var and adjust the value accordingly
+	$size_var = ($value >= 1048576) ? 'mb' : (($value >= 1024) ? 'kb' : 'b');
+	$value = ($value >= 1048576) ? round($value / 1048576 * 100) / 100 : (($value >= 1024) ? round($value / 1024 * 100) / 100 : $value);
+
+	return '<input type="text" id="' . $key . '" size="8" maxlength="15" name="config[' . $key . ']" value="' . $value . '" /> <select name="' . $key . '">' . size_select_options($size_var) . '</select>';
+}
+
+/**
+* Write secure_allow_deny config field
+*/
+function select_allow_deny($value, $key = '')
+{
+	$radio_ary = array(1 => 'ORDER_ALLOW_DENY', 0 => 'ORDER_DENY_ALLOW');
+
+	return h_radio('config[' . $key . ']', $radio_ary, $value, $key);
+}

Modified: cms/trunk/includes/forums/admin/admin_bbcodes.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_bbcodes.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_bbcodes.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -15,314 +15,253 @@
 	die; 
 }
 
+global $_CLASS;
+
 // Do we have general permissions?
-if (!$_CLASS['auth']->acl_get('a_bbcode'))
+if (!$_CLASS['forums_auth']->acl_get('a_bbcode'))
 {
 	trigger_error('NO_ADMIN');
 }
 
+
+
+$_CLASS['core_user']->add_lang('admin_posting', 'forums');
+
 // Set up general vars
-$mode = request_var('mode', '');
+$action	= request_var('action', '');
 $bbcode_id = request_var('bbcode', 0);
+$u_action = '';
 
+$tpl_name = 'acp_bbcodes';
+$page_title = 'ACP_BBCODES';
+
 // Set up mode-specific vars
-switch ($mode)
+switch ($action)
 {
 	case 'add':
-		$bbcode_match = $bbcode_tpl = '';
+		$bbcode_match = $bbcode_tpl = $bbcode_helpline = '';
+		$display_on_posting = 0;
 	break;
 
 	case 'edit':
-		$sql = 'SELECT bbcode_match, bbcode_tpl
-			FROM ' . BBCODES_TABLE . '
+		$sql = 'SELECT bbcode_match, bbcode_tpl, display_on_posting, bbcode_helpline
+			FROM ' . FORUMS_BBCODES_TABLE . '
 			WHERE bbcode_id = ' . $bbcode_id;
-		$result = $_CLASS['core_db']->sql_query($sql);
-		if (!$row = $_CLASS['core_db']->sql_fetchrow($result))
+		$result = $_CLASS['core_db']->query($sql);
+		$row = $_CLASS['core_db']->fetch_row_assoc($result);
+		$_CLASS['core_db']->free_result($result);
+
+		if (!$row)
 		{
-			trigger_error('BBCODE_NOT_EXIST');
+			trigger_error('BBCODE_NOT_EXIST', E_USER_WARNING);
 		}
-		$_CLASS['core_db']->sql_freeresult($result);
 
 		$bbcode_match = $row['bbcode_match'];
 		$bbcode_tpl = htmlspecialchars($row['bbcode_tpl']);
+		$display_on_posting = $row['display_on_posting'];
+		$bbcode_helpline = html_entity_decode($row['bbcode_helpline']);
 	break;
 
 	case 'modify':
-		$sql = 'SELECT bbcode_id
-			FROM ' . BBCODES_TABLE . '
+		$sql = 'SELECT bbcode_id, bbcode_tag
+			FROM ' . FORUMS_BBCODES_TABLE . '
 			WHERE bbcode_id = ' . $bbcode_id;
-		$result = $_CLASS['core_db']->sql_query($sql);
-		if (!$row = $_CLASS['core_db']->sql_fetchrow($result))
+		$result = $_CLASS['core_db']->query($sql);
+		$row = $_CLASS['core_db']->fetch_row_assoc($result);
+		$_CLASS['core_db']->free_result($result);
+
+		if (!$row)
 		{
-			trigger_error('BBCODE_NOT_EXIST');
+			trigger_error('BBCODE_NOT_EXIST', E_USER_WARNING);
 		}
-		$_CLASS['core_db']->sql_freeresult($result);
 
-		// No break here
+	// No break here
 
 	case 'create':
-		$bbcode_match = htmlspecialchars(strip_slashes($_POST['bbcode_match']));
-		$bbcode_tpl = strip_slashes($_POST['bbcode_tpl']);
+		$display_on_posting = request_var('display_on_posting', 0);
+
+		$bbcode_match = request_var('bbcode_match', '');
+		$bbcode_tpl = html_entity_decode(request_var('bbcode_tpl', ''));
+		$bbcode_helpline = htmlspecialchars(request_var('bbcode_helpline', ''));
 	break;
 }
 
 // Do major work
-switch ($mode)
+switch ($action)
 {
 	case 'edit':
 	case 'add':
-		adm_page_header($_CLASS['core_user']->lang['BBCODES']);
 
-?>
+		$_CLASS['core_template']->assign_array(array(
+			'S_EDIT_BBCODE'		=> true,
+			'U_BACK'			=> $u_action,
+			'U_ACTION'			=> $u_action . '&amp;action=' . (($action == 'add') ? 'create' : 'modify') . (($bbcode_id) ? "&amp;bbcode=$bbcode_id" : ''),
 
-<h1><?php echo $_CLASS['core_user']->lang['BBCODES'] ?></h1>
+			'L_BBCODE_USAGE_EXPLAIN'=> sprintf($_CLASS['core_user']->lang['BBCODE_USAGE_EXPLAIN'], '<a href="#down">', '</a>'),
+			'BBCODE_MATCH'			=> $bbcode_match,
+			'BBCODE_TPL'			=> $bbcode_tpl,
+			'BBCODE_HELPLINE'		=> $bbcode_helpline,
+			'DISPLAY_ON_POSTING'	=> $display_on_posting)
+		);
 
-<p><?php echo $_CLASS['core_user']->lang['BBCODES_EXPLAIN'] ?></p>
-
-<form method="post" action="<?php echo generate_link('forums&amp;file=admin_bbcodes&amp;mode=' . (($mode == 'add') ? 'create' : 'modify') . (($bbcode_id) ? "&amp;bbcode=$bbcode_id" : ''), array('admin' => true)); ?>">
-<table cellspacing="1" cellpadding="0" border="0" align="center" width="90%">
-	<tr>
-		<td><table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th colspan="2"><?php echo $_CLASS['core_user']->lang['BBCODE_USAGE'] ?></th>
-			</tr>
-			<tr>
-				<td class="row3" colspan="2"><?php echo $_CLASS['core_user']->lang['BBCODE_USAGE_EXPLAIN'] ?></td>
-			</tr>
-			<tr valign="top">
-				<td class="row1" width="40%"><b><?php echo $_CLASS['core_user']->lang['EXAMPLES'] ?></b><br /><br /><?php echo $_CLASS['core_user']->lang['BBCODE_USAGE_EXAMPLE'] ?></td>
-				<td class="row2"><textarea name="bbcode_match" cols="60" rows="5"><?php echo $bbcode_match ?></textarea></td>
-			</tr>
-		</table></td>
-	</tr>
-</table>
-
-<br clear="all" />
-
-<table cellspacing="1" cellpadding="0" border="0" align="center" width="90%">
-	<tr>
-		<td><table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th colspan="2"><?php echo $_CLASS['core_user']->lang['HTML_REPLACEMENT'] ?></th>
-			</tr>
-			<tr>
-				<td class="row3" colspan="2"><?php echo $_CLASS['core_user']->lang['HTML_REPLACEMENT_EXPLAIN'] ?></td>
-			</tr>
-			<tr valign="top">
-				<td class="row1" width="40%"><b><?php echo $_CLASS['core_user']->lang['EXAMPLES'] ?></b><br /><br /><?php echo $_CLASS['core_user']->lang['HTML_REPLACEMENT_EXAMPLE'] ?></td>
-				<td class="row2"><textarea name="bbcode_tpl" cols="60" rows="8"><?php echo $bbcode_tpl ?></textarea></td>
-			</tr>
-			<tr>
-				<td class="cat" colspan="2" align="center"><input type="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT'] ?>" class="btnmain" /></td>
-			</tr>
-		</table></td>
-	</tr>
-</table>
-
-<br clear="all" />
-
-<table cellspacing="1" cellpadding="0" border="0" align="center" width="90%">
-	<tr>
-		<td><table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th colspan="2"><?php echo $_CLASS['core_user']->lang['TOKENS'] ?></th>
-			</tr>
-			<tr>
-				<td class="row3" colspan="2"><?php echo $_CLASS['core_user']->lang['TOKENS_EXPLAIN'] ?></td>
-			</tr>
-			<tr>
-				<th><?php echo $_CLASS['core_user']->lang['TOKEN'] ?></th>
-				<th><?php echo $_CLASS['core_user']->lang['TOKEN_DEFINITION'] ?></th>
-			</tr>
-<?php
-
 		foreach ($_CLASS['core_user']->lang['tokens'] as $token => $token_explain)
 		{
-			?><tr valign="top">
-				<td class="row1">{<?php echo $token ?>}</td>
-				<td class="row2"><?php echo $token_explain ?></td>
-			</tr><?php
+			$_CLASS['core_template']->assign_vars_array('token', array(
+				'TOKEN'		=> '{' . $token . '}',
+				'EXPLAIN'	=> $token_explain)
+			);
 		}
 
-?>
-		</table></td>
-	</tr>
-</table>
-</form>
+		return;
 
-<?php
-
-		adm_page_footer();
 	break;
 
 	case 'modify':
 	case 'create':
-		adm_page_header($_CLASS['core_user']->lang['BBCODES']);
 
 		$data = build_regexp($bbcode_match, $bbcode_tpl);
 
+		// Make sure the user didn't pick a "bad" name for the BBCode tag.
+		$hard_coded = array('code', 'quote', 'quote=', 'attachment', 'attachment=', 'b', 'i', 'url', 'url=', 'img', 'size', 'size=', 'color', 'color=', 'u', 'list', 'list=', 'email', 'email=', 'flash', 'flash=');
+
+		if (($action == 'modify' && $data['bbcode_tag'] !== $row['bbcode_tag']) || ($action == 'create'))
+		{
+			$sql = 'SELECT 1 as test
+				FROM ' . FORUMS_BBCODES_TABLE . "
+				WHERE LOWER(bbcode_tag) = '" . $db->sql_escape(strtolower($data['bbcode_tag'])) . "'";
+			$result = $_CLASS['core_db']->query($sql);
+			$info = $_CLASS['core_db']->fetch_row_assoc($result);
+			$_CLASS['core_db']->free_result($result);
+
+			if ($info['test'] === '1' || in_array(strtolower($data['bbcode_tag']), $hard_coded))
+			{
+				trigger_error('BBCODE_INVALID_TAG_NAME', E_USER_WARNING);
+			}
+		}
+
 		$sql_ary = array(
-			'bbcode_tag'					=>	$data['bbcode_tag'],
-			'bbcode_match'				=>	$bbcode_match,
-			'bbcode_tpl'					=>	$bbcode_tpl,
-			'first_pass_match'			=>	$data['first_pass_match'],
-			'first_pass_replace'		=>	$data['first_pass_replace'],
-			'second_pass_match'	=>	$data['second_pass_match'],
-			'second_pass_replace'	=>	$data['second_pass_replace']
+			'bbcode_tag'				=> $data['bbcode_tag'],
+			'bbcode_match'				=> $bbcode_match,
+			'bbcode_tpl'				=> $bbcode_tpl,
+			'display_on_posting'		=> $display_on_posting,
+			'bbcode_helpline'			=> $bbcode_helpline,
+			'first_pass_match'			=> $data['first_pass_match'],
+			'first_pass_replace'		=> $data['first_pass_replace'],
+			'second_pass_match'			=> $data['second_pass_match'],
+			'second_pass_replace'		=> $data['second_pass_replace']
 		);
 
-		if ($mode == 'create')
+		if ($action == 'create')
 		{
-			/* TODO: look for SQL incompatibilities
-			// NOTE: I'm sure there was another simpler (and obvious) way of finding a suitable bbcode_id
-			$sql = 'SELECT b1.bbcode_id
-				FROM ' . BBCODES_TABLE . ' b1, ' . BBCODES_TABLE . ' b2
-				WHERE b2.bbcode_id > b1.bbcode_id
-				GROUP BY b1.bbcode_id
-				HAVING MIN(b2.bbcode_id) > b1.bbcode_id + 1
-				ORDER BY b1.bbcode_id ASC';
-			$result = $_CLASS['core_db']->sql_query_limit($sql, 1);
-			$row = $_CLASS['core_db']->sql_fetchrow($result);
-			$_CLASS['core_db']->sql_freeresult($result);
-			*/
-			
-			$sql = 'SELECT MAX(bbcode_id) as bbcode_id
-				FROM ' . BBCODES_TABLE;
-			$result = $_CLASS['core_db']->sql_query($sql);
-			$row = $_CLASS['core_db']->sql_fetchrow($result);
-			$_CLASS['core_db']->sql_freeresult($result);
-			
+			$sql = 'SELECT MAX(bbcode_id) as max_bbcode_id
+				FROM ' . FORUMS_BBCODES_TABLE;
+			$result = $_CLASS['core_db']->query($sql);
+			$row = $_CLASS['core_db']->fetch_row_assoc($result);
+			$_CLASS['core_db']->free_result($result);
+
 			if ($row)
 			{
-				 $bbcode_id = $row['bbcode_id'] + 1;
-			}
-			else
-			{
-				$sql = 'SELECT MIN(bbcode_id) AS min_id, MAX(bbcode_id) AS max_id
-					FROM ' . BBCODES_TABLE;
-				$result = $_CLASS['core_db']->sql_query($sql);
-				$row = $_CLASS['core_db']->sql_fetchrow($result);
-				$_CLASS['core_db']->sql_freeresult($result);
+				$bbcode_id = $row['max_bbcode_id'] + 1;
 
-				if (empty($row['min_id']) || $row['min_id'] >= NUM_CORE_BBCODES)
+				// Make sure it is greater than the core bbcode ids...
+				if ($bbcode_id <= NUM_CORE_BBCODES)
 				{
 					$bbcode_id = NUM_CORE_BBCODES + 1;
 				}
-				else
-				{
-					$bbcode_id = $row['max_id'] + 1;
-				}
 			}
+			else
+			{
+				$bbcode_id = NUM_CORE_BBCODES + 1;
+			}
 
-			if ($bbcode_id > 31)
+			if ($bbcode_id > 1511)
 			{
-				trigger_error('TOO_MANY_BBCODES');
+				trigger_error('TOO_MANY_BBCODES', E_USER_WARNING);
 			}
 
 			$sql_ary['bbcode_id'] = (int) $bbcode_id;
 
-			$_CLASS['core_db']->sql_query('INSERT INTO ' . BBCODES_TABLE . $_CLASS['core_db']->sql_build_array('INSERT', $sql_ary));
+			$_CLASS['core_db']->query('INSERT INTO ' . BBCODES_TABLE . $db->sql_build_array('INSERT', $sql_ary));
+
 			$lang = 'BBCODE_ADDED';
 			$log_action = 'LOG_BBCODE_ADD';
 		}
 		else
 		{
-			$_CLASS['core_db']->sql_query('UPDATE ' . BBCODES_TABLE . ' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql_ary) . ' WHERE bbcode_id = ' . $bbcode_id);
+			$sql = 'UPDATE ' . FORUMS_BBCODES_TABLE . '
+				SET ' . $db->sql_build_array('UPDATE', $sql_ary) . '
+				WHERE bbcode_id = ' . $bbcode_id;
+			$_CLASS['core_db']->query($sql);
+
 			$lang = 'BBCODE_EDITED';
 			$log_action = 'LOG_BBCODE_EDIT';
 		}
 
 		add_log('admin', $log_action, $data['bbcode_tag']);
 
-		trigger_error($lang);
+		trigger_error($_CLASS['core_user']->lang[$lang] . adm_back_link($u_action));
+
 	break;
 
 	case 'delete':
+
 		$sql = 'SELECT bbcode_tag
-			FROM ' . BBCODES_TABLE . "
+			FROM ' . FORUMS_BBCODES_TABLE . "
 			WHERE bbcode_id = $bbcode_id";
-		$result = $_CLASS['core_db']->sql_query($sql);
-		$row = $_CLASS['core_db']->sql_fetchrow($result);
-		$_CLASS['core_db']->sql_freeresult($result);
-		
+		$result = $_CLASS['core_db']->query($sql);
+		$row = $_CLASS['core_db']->fetch_row_assoc($result);
+		$_CLASS['core_db']->free_result($result);
+
 		if ($row)
 		{
-			$_CLASS['core_db']->sql_query('DELETE FROM ' . BBCODES_TABLE . " WHERE bbcode_id = $bbcode_id");
+			$_CLASS['core_db']->query('DELETE FROM ' . FORUMS_BBCODES_TABLE . " WHERE bbcode_id = $bbcode_id");
 			add_log('admin', 'LOG_BBCODE_DELETE', $row['bbcode_tag']);
 		}
-		
 
-		// No break here
+	break;
+}
 
-	default:
+$_CLASS['core_template']->assign_array(array(
+	'U_ACTION'		=> $u_action . '&amp;action=add')
+);
 
-		adm_page_header($_CLASS['core_user']->lang['BBCODES']);
+$sql = 'SELECT *
+	FROM ' . FORUMS_BBCODES_TABLE . '
+	ORDER BY bbcode_id';
+$result = $_CLASS['core_db']->query($sql);
 
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang['BBCODES'] ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['BBCODES_EXPLAIN'] ?></p>
-
-
-<form method="post" action="<?php echo generate_link('forums&amp;file=admin_bbcodes&amp;mode=add', array('admin' => true)); ?>"><table cellspacing="1" cellpadding="0" border="0" align="center">
-	<tr>
-		<td><table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-			<tr>
-				<th><?php echo $_CLASS['core_user']->lang['BBCODE_TAG'] ?></th>
-				<th><?php echo $_CLASS['core_user']->lang['ACTION'] ?></th>
-			</tr><?php
-
-		$sql = 'SELECT *
-			FROM ' . BBCODES_TABLE . '
-			ORDER BY bbcode_id';
-		$result = $_CLASS['core_db']->sql_query($sql);
-
-		$row_class = '';
-		while ($row = $_CLASS['core_db']->sql_fetchrow($result))
-		{
-			$row_class = ($row_class == 'row1') ? 'row2' : 'row1';
-?>
-			<tr>
-				<td class="<?php echo $row_class ?>" align="center"><?php echo $row['bbcode_tag'] ?></td>
-				<td class="<?php echo $row_class ?>" align="center"><a href="<?php echo generate_link('forums&amp;file=admin_bbcodes&amp;mode=edit&amp;bbcode='.$row['bbcode_id'], array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['EDIT'] ?></a> | <a href="<?php echo generate_link('forums&amp;file=admin_bbcodes&amp;mode=delete&amp;bbcode='.$row['bbcode_id'], array('admin' => true)) ?>"><?php echo $_CLASS['core_user']->lang['DELETE'] ?></a></td>
-			</tr>
-<?php
-		}
-		$_CLASS['core_db']->sql_freeresult($result);
-?>
-
-			<tr>
-				<td class="cat" colspan="2" align="center"><input type="submit" value="<?php echo $_CLASS['core_user']->lang['ADD_BBCODE'] ?>" class="btnmain" /></td>
-			</tr>
-		</table></td>
-	</tr>
-</table></form>
-
-<?php
-
-	adm_page_footer();
+while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+{
+	$_CLASS['core_template']->assign_vars_array('bbcodes', array(
+		'BBCODE_TAG'		=> $row['bbcode_tag'],
+		'U_EDIT'			=> generate_link($u_action . '&amp;action=edit&amp;bbcode=' . $row['bbcode_id'], array('admin' => true)),
+		'U_DELETE'			=> generate_link($u_action . '&amp;action=delete&amp;bbcode=' . $row['bbcode_id'], array('admin' => true))
+	));
 }
+$_CLASS['core_db']->free_result($result);
 
-// -----------------------------
-// Functions
-function build_regexp($msg_bbcode, $msg_html)
+
+/*
+* Build regular expression for custom bbcode
+*/
+function build_regexp(&$bbcode_match, &$bbcode_tpl)
 {
-	$msg_bbcode = trim($msg_bbcode);
-	$msg_html = trim($msg_html);
+	$bbcode_match = trim($bbcode_match);
+	$bbcode_tpl = trim($bbcode_tpl);
 
-	$fp_match = preg_quote($msg_bbcode, '!');
-	$fp_replace = preg_replace('#^\[(.*?)\]#', '[$1:$uid]', $msg_bbcode);
+	$fp_match = preg_quote($bbcode_match, '!');
+	$fp_replace = preg_replace('#^\[(.*?)\]#', '[$1:$uid]', $bbcode_match);
 	$fp_replace = preg_replace('#\[/(.*?)\]$#', '[/$1:$uid]', $fp_replace);
 
-	$sp_match = preg_quote($msg_bbcode, '!');
+	$sp_match = preg_quote($bbcode_match, '!');
 	$sp_match = preg_replace('#^\\\\\[(.*?)\\\\\]#', '\[$1:$uid\]', $sp_match);
 	$sp_match = preg_replace('#\\\\\[/(.*?)\\\\\]$#', '\[/$1:$uid\]', $sp_match);
-	$sp_replace = $msg_html;
+	$sp_replace = $bbcode_tpl;
 
+	// @todo Make sure to change this too if something changed in message parsing
 	$tokens = array(
 		'URL'	 => array(
-			'!([a-z0-9]+://)?([^?].*?[^ \t\n\r<"]*)!ie'		=>	"(('\$1') ? '\$1\$2' : 'http://\$2')"
+			'!([a-z0-9]+://)?([^?].*?[^ \t\n\r<"]*)!ie'	=>	"(('\$1') ? '\$1\$2' : 'http://\$2')"
 		),
 		'LOCAL_URL'	 => array(
 			'!([^:]+/[^ \t\n\r<"]*)!'	=>	'$1'
@@ -331,32 +270,32 @@
 			'!([a-z0-9]+[a-z0-9\-\._]*@(?:(?:[0-9]{1,3}\.){3,5}[0-9]{1,3}|[a-z0-9]+[a-z0-9\-\._]*\.[a-z]+))!i'	=>	'$1'
 		),
 		'TEXT' => array(
-			'!(.*?)!es'	 =>	"str_replace('\\\"', '&quot;', str_replace('\\'', '&#39;', '\$1'))"
+			'!(.*?)!es'	 =>	"str_replace(\"\\r\\n\",\"\\n\", str_replace('\\\"', '\"', str_replace('\\'', '&#39;', trim('\$1'))))"
 		),
 		'COLOR' => array(
-			'!([a-z]+|#[0-9abcdef]+!i'	=>	'$1'
+			'!([a-z]+|#[0-9abcdef]+)!i'	=>	'$1'
 		),
 		'NUMBER' => array(
 			'!([0-9]+)!'	=>	'$1'
 		)
 	);
 
-	if (preg_match_all('/\{(' . implode('|', array_keys($tokens)) . ')[0-9]*\}/i', $msg_bbcode, $m))
-	{
-		$pad = 0;
-		$modifiers = 'i';
+	$pad = 0;
+	$modifiers = 'i';
 
+	if (preg_match_all('/\{(' . implode('|', array_keys($tokens)) . ')[0-9]*\}/i', $bbcode_match, $m))
+	{
 		foreach ($m[0] as $n => $token)
 		{
 			$token_type = $m[1][$n];
 
-			reset($tokens[$token_type]);
-			list($match, $replace) = each($tokens[$token_type]);
+			reset($tokens[strtoupper($token_type)]);
+			list($match, $replace) = each($tokens[strtoupper($token_type)]);
 
 			// Pad backreference numbers from tokens
 			if (preg_match_all('/(?<!\\\\)\$([0-9]+)/', $replace, $repad))
 			{
-				$repad = $pad + count(array_unique($repad[0]));
+				$repad = $pad + sizeof(array_unique($repad[0]));
 				$replace = preg_replace('/(?<!\\\\)\$([0-9]+)/e', "'\$' . (\$1 + \$pad)", $replace);
 				$pad = $repad;
 			}
@@ -365,9 +304,9 @@
 			$regex = preg_replace('/!(.*)!([a-z]*)/', '$1', $match);
 			$regex_modifiers = preg_replace('/!(.*)!([a-z]*)/', '$2', $match);
 
-			for ($i = 0; $i < strlen($regex_modifiers); ++$i)
+			for ($i = 0, $size = strlen($regex_modifiers); $i < $size; ++$i)
 			{
-				if (strpos($modifiers, $regex_modifiers[$i]) === FALSE)
+				if (strpos($modifiers, $regex_modifiers[$i]) === false)
 				{
 					$modifiers .= $regex_modifiers[$i];
 
@@ -393,7 +332,7 @@
 		$fp_match = '!' . $fp_match . '!' . $modifiers;
 		$sp_match = '!' . $sp_match . '!s';
 
-		if (strpos($fp_match, 'e') !== FALSE)
+		if (strpos($fp_match, 'e') !== false)
 		{
 			$fp_replace = str_replace("'.'", '', $fp_replace);
 			$fp_replace = str_replace(".''.", '.', $fp_replace);
@@ -409,20 +348,19 @@
 	}
 
 	// Lowercase tags
-	$bbcode_tag = preg_replace('/.*?\[([a-z]+).*/i', '$1', $msg_bbcode);
+	$bbcode_tag = preg_replace('/.*?\[([a-z0-9_-]+=?).*/i', '$1', $bbcode_match);
 	$fp_match = preg_replace('#\[/?' . $bbcode_tag . '#ie', "strtolower('\$0')", $fp_match);
 	$fp_replace = preg_replace('#\[/?' . $bbcode_tag . '#ie', "strtolower('\$0')", $fp_replace);
 	$sp_match = preg_replace('#\[/?' . $bbcode_tag . '#ie', "strtolower('\$0')", $sp_match);
 	$sp_replace = preg_replace('#\[/?' . $bbcode_tag . '#ie', "strtolower('\$0')", $sp_replace);
 
 	return array(
-		'bbcode_tag'					=>	$bbcode_tag,
-		'first_pass_match'			=>	$fp_match,
-		'first_pass_replace'		=>	$fp_replace,
-		'second_pass_match'	=>	$sp_match,
-		'second_pass_replace'	=>	$sp_replace
+		'bbcode_tag'				=> $bbcode_tag,
+		'first_pass_match'			=> $fp_match,
+		'first_pass_replace'		=> $fp_replace,
+		'second_pass_match'			=> $sp_match,
+		'second_pass_replace'		=> $sp_replace
 	);
 }
-// End Functions
-// -----------------------------
+
 ?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/admin/admin_board.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_board.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_board.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -15,179 +15,123 @@
 	die; 
 }
 
-// Get mode
-$mode	= request_var('mode', '');
+$_CLASS['core_user']->add_lang('admin_board', 'forums');
+
 $action	= request_var('action', '');
-$submit = isset($_POST['submit']);
+$mode	= request_var('mode', '');
+$submit = (isset($_POST['submit'])) ? true : false;
+$u_action = 'forums&amp;file=admin_board&amp;mode='.$mode;
 
-// Set config vars
-$display_vars = array(
-	'avatar' => array(
-		'auth'	=> 'a_board',
-		'title'	=> 'AVATAR_SETTINGS',
-		'vars'	=> array(
-			'avatar_min_height' => false, 'avatar_min_width' => false, 'avatar_max_height' => false, 'avatar_max_width' => false,
-			'allow_avatar_local'	=> array('lang' => 'ALLOW_LOCAL',	'type' => 'radio:yes_no', 'explain' => false),
-			'allow_avatar_remote'	=> array('lang' => 'ALLOW_REMOTE',	'type' => 'radio:yes_no', 'explain' => true),
-			'allow_avatar_upload'	=> array('lang' => 'ALLOW_UPLOAD',	'type' => 'radio:yes_no', 'explain' => false),
-			'avatar_filesize'		=> array('lang' => 'MAX_FILESIZE',	'type' => 'text:4:10', 'explain' => true, 'append' => ' ' . $_CLASS['core_user']->lang['BYTES']),
-			'avatar_min'			=> array('lang' => 'MIN_AVATAR_SIZE',	'type' => 'dimension:3:4', 'explain' => true),
-			'avatar_max'			=> array('lang' => 'MAX_AVATAR_SIZE',	'type' => 'dimension:3:4', 'explain' => true),
-			'avatar_path'			=> array('lang' => 'AVATAR_STORAGE_PATH',	'type' => 'text:20:255', 'explain' => true),
-			'avatar_gallery_path'	=> array('lang' => 'AVATAR_GALLERY_PATH',	'type' => 'text:20:255', 'explain' => true)
-		)
-	),
-	'email'	=> array(
-		'auth'	=> 'a_server',
-		'title'	=> 'EMAIL_SETTINGS',
-		'vars'	=> array(
-			'email_enable'			=> array('lang' => 'ENABLE_EMAIL',			'type' => 'radio:enabled_disabled', 'explain' => true),
-			'board_email_form'		=> array('lang' => 'BOARD_EMAIL_FORM',		'type' => 'radio:enabled_disabled', 'explain' => true),
-			'email_function_name'	=> array('lang' => 'EMAIL_FUNCTION_NAME',	'type' => 'text:20:50', 'explain' => true),
-			'email_package_size'	=> array('lang' => 'EMAIL_PACKAGE_SIZE',	'type' => 'text:5:5', 'explain' => true),
-			'board_contact'			=> array('lang' => 'CONTACT_EMAIL',			'type' => 'text:25:100', 'explain' => true),
-			'board_email'			=> array('lang' => 'ADMIN_EMAIL',			'type' => 'text:25:100', 'explain' => true),
-			'board_email_sig'		=> array('lang' => 'EMAIL_SIG',				'type' => 'textarea:5:30', 'explain' => true),
-			'smtp_delivery'			=> array('lang' => 'USE_SMTP',				'type' => 'radio:yes_no', 'explain' => true),
-			'smtp_host'				=> array('lang' => 'SMTP_SERVER',			'type' => 'text:25:50', 'explain' => false),
-			'smtp_port'				=> array('lang' => 'SMTP_PORT',				'type' => 'text:4:5', 'explain' => true),
-			'smtp_auth_method'		=> array('lang' => 'SMTP_AUTH_METHOD',		'type' => 'select', 'options' => 'mail_auth_select(\'{VALUE}\')', 'explain' => true),
-			'smtp_username'			=> array('lang' => 'SMTP_USERNAME',			'type' => 'text:25:255', 'explain' => true),
-			'smtp_password'			=> array('lang' => 'SMTP_PASSWORD',			'type' => 'password:25:255', 'explain' => true)
-		)
-	),
-	'load'	=> array(
-		'auth'	=> 'a_server',
-		'title'	=> 'SERVER_SETTINGS',
-		'vars'	=> array(
-			'load_db_track'		=> array('lang' => 'YES_POST_MARKING',	'type' => 'radio:yes_no', 'explain' => true),
-			'load_db_lastread'	=> array('lang' => 'YES_READ_MARKING',	'type' => 'radio:yes_no', 'explain' => true),
-			'load_online'		=> array('lang' => 'YES_ONLINE',		'type' => 'radio:yes_no', 'explain' => true),
-			'load_onlinetrack'	=> array('lang' => 'YES_ONLINE_TRACK',	'type' => 'radio:yes_no', 'explain' => true),
-			'load_online_time'	=> array('lang' => 'ONLINE_LENGTH',		'type' => 'text:4:3', 'explain' => true),
-			'load_birthdays'	=> array('lang' => 'YES_BIRTHDAYS',		'type' => 'radio:yes_no', 'explain' => false),
-			'load_moderators'	=> array('lang' => 'YES_MODERATORS',	'type' => 'radio:yes_no', 'explain' => false),
-			'load_jumpbox'		=> array('lang' => 'YES_JUMPBOX',		'type' => 'radio:yes_no', 'explain' => false),
-			'load_search'		=> array('lang' => 'YES_SEARCH',		'type' => 'radio:yes_no', 'explain' => true),
-			'search_interval'	=> array('lang' => 'SEARCH_INTERVAL',	'type' => 'text:3:4', 'explain' => true),
-			'min_search_chars'	=> array('lang' => 'MIN_SEARCH_CHARS',	'type' => 'text:3:3', 'explain' => true),
-			'max_search_chars'	=> array('lang' => 'MAX_SEARCH_CHARS',	'type' => 'text:3:3', 'explain' => true),
-			'load_search_upd'	=> array('lang' => 'YES_SEARCH_UPDATE',	'type' => 'radio:yes_no', 'explain' => true),
-//			'load_search_phr'	=> array('lang' => 'YES_SEARCH_PHRASE',	'type' => 'radio:yes_no', 'explain' => true),
-		)
-	),
-	'default' => array(
-		'auth'	=> 'a_defaults',
-		'title'	=> 'BOARD_DEFAULTS',
-		'vars'	=> array(
-			'allow_privmsg'			=> array('lang' => 'BOARD_PM',				'type' => 'radio:yes_no', 'explain' => true),
-			'allow_topic_notify'	=> array('lang' => 'ALLOW_TOPIC_NOTIFY',	'type' => 'radio:yes_no', 'explain' => false),
-			'allow_forum_notify'	=> array('lang' => 'ALLOW_FORUM_NOTIFY',	'type' => 'radio:yes_no', 'explain' => false),
-			'allow_attachments'		=> array('lang' => 'ALLOW_ATTACHMENTS',		'type' => 'radio:yes_no', 'explain' => false),
-			'allow_html'			=> array('lang' => 'ALLOW_HTML',			'type' => 'radio:yes_no', 'explain' => false),
-			'allow_html_tags'		=> array('lang' => 'ALLOWED_TAGS',			'type' => 'text:30:255', 'explain' => true),
-			'allow_bbcode'			=> array('lang' => 'ALLOW_BBCODE',			'type' => 'radio:yes_no', 'explain' => false),
-			'allow_smilies'			=> array('lang' => 'ALLOW_SMILIES',			'type' => 'radio:yes_no', 'explain' => false),
-			'allow_sig'				=> array('lang' => 'ALLOW_SIG',				'type' => 'radio:yes_no', 'explain' => false),
-			'max_sig_chars'			=> array('lang' => 'MAX_SIG_LENGTH',		'type' => 'text:5:4', 'explain' => true),
-			'allow_nocensors'		=> array('lang' => 'ALLOW_NO_CENSORS',		'type' => 'radio:yes_no', 'explain' => true),
-			'allow_bookmarks'		=> array('lang' => 'ALLOW_BOOKMARKS',		'type' => 'radio:yes_no', 'explain' => true)
-		)
-	),
-	'message' => array(
-		'auth'	=> 'a_defaults',
-		'title'	=> 'MESSAGE_SETTINGS',
-		'lang'	=> 'ucp',
-		'vars'	=> array(
-			'pm_max_boxes'			=> array('lang' => 'BOXES_MAX',				'type' => 'text:4:4', 'explain' => true),
-			'pm_max_msgs'			=> array('lang' => 'BOXES_LIMIT',			'type' => 'text:4:4', 'explain' => true),
-			'full_folder_action'	=> array('lang' => 'FULL_FOLDER_ACTION',	'type' => 'select', 'options' => 'full_folder_select(\'{VALUE}\')', 'explain' => true),
-			'pm_edit_time'			=> array('lang' => 'PM_EDIT_TIME',			'type' => 'text:3:3', 'explain' => true),
-			'allow_mass_pm'			=> array('lang' => 'ALLOW_MASS_PM',			'type' => 'radio:yes_no', 'explain' => false),
-			'auth_html_pm'			=> array('lang' => 'ALLOW_HTML_PM',			'type' => 'radio:yes_no', 'explain' => false),
-			'auth_bbcode_pm'		=> array('lang' => 'ALLOW_BBCODE_PM',		'type' => 'radio:yes_no', 'explain' => false),
-			'auth_smilies_pm'		=> array('lang' => 'ALLOW_SMILIES_PM',		'type' => 'radio:yes_no', 'explain' => false),
-			'allow_pm_attach'		=> array('lang' => 'ALLOW_PM_ATTACHMENTS',	'type' => 'radio:yes_no', 'explain' => false),
-			'auth_download_pm'		=> array('lang' => 'ALLOW_DOWNLOAD_PM',		'type' => 'radio:yes_no', 'explain' => false),
-			'allow_sig_pm'			=> array('lang' => 'ALLOW_SIG_PM',			'type' => 'radio:yes_no', 'explain' => false),
-			'auth_report_pm'		=> array('lang' => 'ALLOW_REPORT_PM',		'type' => 'radio:yes_no', 'explain' => false),
-			'auth_quote_pm'			=> array('lang' => 'ALLOW_QUOTE_PM',		'type' => 'radio:yes_no', 'explain' => false),
-			'print_pm'				=> array('lang' => 'ALLOW_PRINT_PM',		'type' => 'radio:yes_no', 'explain' => false),
-			'email_pm'				=> array('lang' => 'ALLOW_EMAIL_PM',		'type' => 'radio:yes_no', 'explain' => false),
-			'forward_pm'			=> array('lang' => 'ALLOW_FORWARD_PM',		'type' => 'radio:yes_no', 'explain' => false),
-			'auth_img_pm'			=> array('lang' => 'ALLOW_IMG_PM',			'type' => 'radio:yes_no', 'explain' => false),
-			'auth_flash_pm'			=> array('lang' => 'ALLOW_FLASH_PM',		'type' => 'radio:yes_no', 'explain' => false),
-			'enable_pm_icons'		=> array('lang' => 'ENABLE_PM_ICONS',		'type' => 'radio:yes_no', 'explain' => false)
-		)
-	),
-	'server' => array(
-		'auth'	=> 'a_server',
-		'title'	=> 'SERVER_SETTINGS',
-		'vars'	=> array(
-			'smilies_path'		=> array('lang' => 'SMILIES_PATH',	'type' => 'text:20:255', 'explain' => true),
-			'icons_path'		=> array('lang' => 'ICONS_PATH',	'type' => 'text:20:255', 'explain' => true),
-			'upload_icons_path'	=> array('lang' => 'UPLOAD_ICONS_PATH', 'type' => 'text:20:255', 'explain' => true),
-			'ranks_path'		=> array('lang' => 'RANKS_PATH',	'type' => 'text:20:255', 'explain' => true)
-		)
-	),
-	'setting' => array(
-		'auth'	=> 'a_board',
-		'title'	=> 'BOARD_SETTINGS',
-		'vars'	=> array(
-			'board_disable_msg'	=> false, 'max_name_chars' => false, 'max_pass_chars' => false, 'bump_type' => false,
-			'edit_time'			=> array('lang' => 'EDIT_TIME',			'type' => 'text:3:3', 'explain' => true),
-			'display_last_edited' => array('lang' => 'DISPLAY_LAST_EDITED', 'type' => 'radio:yes_no', 'explain' => true),
-			'flood_interval'	=> array('lang' => 'FLOOD_INTERVAL',	'type' => 'text:3:4', 'explain' => true),
-			'bump_interval'		=> array('lang' => 'BUMP_INTERVAL',		'type' => 'custom', 'options' => 'bump_interval(\'{VALUE}\')', 'explain' => true),
-			'topics_per_page'	=> array('lang' => 'TOPICS_PER_PAGE',	'type' => 'text:3:4', 'explain' => false),
-			'posts_per_page'	=> array('lang' => 'POSTS_PER_PAGE',	'type' => 'text:3:4', 'explain' => false),
-			'hot_threshold'		=> array('lang' => 'HOT_THRESHOLD',		'type' => 'text:3:4', 'explain' => false),
-			'max_poll_options'	=> array('lang' => 'MAX_POLL_OPTIONS',	'type' => 'text:4:4', 'explain' => false),
-			'max_post_chars'	=> array('lang' => 'CHAR_LIMIT',		'type' => 'text:4:6', 'explain' => true),
-			'max_post_smilies'	=> array('lang' => 'SMILIES_LIMIT',		'type' => 'text:4:4', 'explain' => true),
-			'max_quote_depth'	=> array('lang' => 'QUOTE_DEPTH_LIMIT',	'type' => 'text:4:4', 'explain' => true)
-		)
-	)
-);
+$new_config = array();
 
-if (!in_array($mode, array_keys($display_vars)))
+// Validation types are: string, int, bool, rpath, path
+switch ($mode)
 {
-	return;
-}
+	case 'features':
+		$display_vars = array(
+			'title'	=> 'ACP_BOARD_FEATURES',
+			'vars'	=> array(
+				'legend1'				=> 'ACP_BOARD_FEATURES',
+				'allow_topic_notify'	=> array('lang' => 'ALLOW_TOPIC_NOTIFY',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_forum_notify'	=> array('lang' => 'ALLOW_FORUM_NOTIFY',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_attachments'		=> array('lang' => 'ALLOW_ATTACHMENTS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_pm_attach'		=> array('lang' => 'ALLOW_PM_ATTACHMENTS',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_bbcode'			=> array('lang' => 'ALLOW_BBCODE',			'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_smilies'			=> array('lang' => 'ALLOW_SMILIES',			'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_sig'				=> array('lang' => 'ALLOW_SIG',				'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_nocensors'		=> array('lang' => 'ALLOW_NO_CENSORS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'allow_bookmarks'		=> array('lang' => 'ALLOW_BOOKMARKS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
 
-// Perform the current mode
-$display_vars = $display_vars[$mode];
+				'legend2'				=> 'ACP_LOAD_SETTINGS',
+				'load_birthdays'		=> array('lang' => 'YES_BIRTHDAYS',			'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'load_moderators'		=> array('lang' => 'YES_MODERATORS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'load_jumpbox'			=> array('lang' => 'YES_JUMPBOX',			'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+			)
+		);
+	break;
 
-// Check permissions
-if (!$_CLASS['auth']->acl_get($display_vars['auth']))
-{
-	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
+	case 'post':
+		$display_vars = array(
+			'title'	=> 'ACP_POST_SETTINGS',
+			'vars'	=> array(
+				'legend1'				=> 'GENERAL_OPTIONS',
+				'allow_topic_notify'	=> array('lang' => 'ALLOW_TOPIC_NOTIFY',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_forum_notify'	=> array('lang' => 'ALLOW_FORUM_NOTIFY',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_bbcode'			=> array('lang' => 'ALLOW_BBCODE',			'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_smilies'			=> array('lang' => 'ALLOW_SMILIES',			'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'allow_post_links'		=> array('lang' => 'ALLOW_POST_LINKS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'allow_nocensors'		=> array('lang' => 'ALLOW_NO_CENSORS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'allow_bookmarks'		=> array('lang' => 'ALLOW_BOOKMARKS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'enable_post_confirm'	=> array('lang' => 'VISUAL_CONFIRM_POST',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+
+				'legend2'				=> 'POSTING',
+				'bump_type'				=> false,
+				'edit_time'				=> array('lang' => 'EDIT_TIME',				'validate' => 'int',	'type' => 'text:3:3', 'explain' => true, 'append' => ' ' . $_CLASS['core_user']->lang['MINUTES']),
+				'display_last_edited'	=> array('lang' => 'DISPLAY_LAST_EDITED',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'flood_interval'		=> array('lang' => 'FLOOD_INTERVAL',		'validate' => 'int',	'type' => 'text:3:4', 'explain' => true),
+				'bump_interval'			=> array('lang' => 'BUMP_INTERVAL',			'validate' => 'int',	'type' => 'custom', 'method' => 'bump_interval', 'explain' => true),
+				'topics_per_page'		=> array('lang' => 'TOPICS_PER_PAGE',		'validate' => 'int',	'type' => 'text:3:4', 'explain' => false),
+				'posts_per_page'		=> array('lang' => 'POSTS_PER_PAGE',		'validate' => 'int',	'type' => 'text:3:4', 'explain' => false),
+				'hot_threshold'			=> array('lang' => 'HOT_THRESHOLD',			'validate' => 'int',	'type' => 'text:3:4', 'explain' => false),
+				'max_poll_options'		=> array('lang' => 'MAX_POLL_OPTIONS',		'validate' => 'int',	'type' => 'text:4:4', 'explain' => false),
+				'max_post_chars'		=> array('lang' => 'CHAR_LIMIT',			'validate' => 'int',	'type' => 'text:4:6', 'explain' => true),
+				'max_post_smilies'		=> array('lang' => 'SMILIES_LIMIT',			'validate' => 'int',	'type' => 'text:4:4', 'explain' => true),
+				'max_post_urls'			=> array('lang' => 'MAX_POST_URLS',			'validate' => 'int',	'type' => 'text:5:4', 'explain' => true),
+				'max_post_font_size'	=> array('lang' => 'MAX_POST_FONT_SIZE',	'validate' => 'int',	'type' => 'text:5:4', 'explain' => true),
+				'max_quote_depth'		=> array('lang' => 'QUOTE_DEPTH_LIMIT',		'validate' => 'int',	'type' => 'text:4:4', 'explain' => true),
+				'max_post_img_width'	=> array('lang' => 'MAX_POST_IMG_WIDTH',	'validate' => 'int',	'type' => 'text:5:4', 'explain' => true),
+				'max_post_img_height'	=> array('lang' => 'MAX_POST_IMG_HEIGHT',	'validate' => 'int',	'type' => 'text:5:4', 'explain' => true),
+			)
+		);
+	break;
+
+	case 'load':
+		$display_vars = array(
+			'title'	=> 'ACP_LOAD_SETTINGS',
+			'vars'	=> array(
+				'legend2'				=> 'GENERAL_OPTIONS',
+				'load_anon_lastread'	=> array('lang' => 'YES_ANON_READ_MARKING',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'load_online'			=> array('lang' => 'YES_ONLINE',			'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'load_online_guests'	=> array('lang' => 'YES_ONLINE_GUESTS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'load_onlinetrack'		=> array('lang' => 'YES_ONLINE_TRACK',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				'load_birthdays'		=> array('lang' => 'YES_BIRTHDAYS',			'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'load_moderators'		=> array('lang' => 'YES_MODERATORS',		'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'load_jumpbox'			=> array('lang' => 'YES_JUMPBOX',			'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => false),
+				'load_user_activity'	=> array('lang' => 'LOAD_USER_ACTIVITY',	'validate' => 'bool',	'type' => 'radio:yes_no', 'explain' => true),
+				
+				'legend3'				=> 'CUSTOM_PROFILE_FIELDS',
+			)
+		);
+	break;
+
+	default:
+		trigger_error('NO_MODE', E_USER_ERROR);
+	break;
 }
 
-if (isset($display_vars['lang']))
+$new_config = $config;
+$cfg_array = (isset($_REQUEST['config'])) ? request_var('config', array('' => ''), true) : $new_config;
+$error = array();
+
+// We validate the complete config if whished
+validate_config_vars($display_vars['vars'], $cfg_array, $error);
+
+// Do not write values if there is an error
+if (sizeof($error))
 {
-	$_CLASS['core_user']->add_lang($display_vars['lang'], 'forums');
+	$submit = false;
 }
 
-$new = $config;
-$cfg_array = (isset($_REQUEST['config'])) ? request_var('config', array('' => '')) : $new;
-
 // We go through the display_vars to make sure no one is trying to set variables he/she is not allowed to...
 foreach ($display_vars['vars'] as $config_name => $null)
 {
-	if (!isset($cfg_array[$config_name]))
+	if (!isset($cfg_array[$config_name]) || strpos($config_name, 'legend') !== false)
 	{
 		continue;
 	}
 
-	$config_value = $cfg_array[$config_name];
-	$new[$config_name] = $config_value;
+	$new_config[$config_name] = $config_value = $cfg_array[$config_name];
 
-	if ($config_name == 'email_function_name')
-	{
-		$new['email_function_name'] = (empty($new['email_function_name']) || !function_exists($new['email_function_name'])) ? 'mail' : str_replace(array('(', ')'), array('', ''), trim($new['email_function_name']));
-	}
-	
 	if ($submit)
 	{
 		set_config($config_name, $config_value);
@@ -196,251 +140,122 @@
 
 if ($submit)
 {
-	add_log('admin', 'LOG_' . strtoupper($mode) . '_CONFIG');
+	add_log('admin', 'LOG_CONFIG_' . strtoupper($mode));
 
-	trigger_error($_CLASS['core_user']->lang['CONFIG_UPDATED']);
+	trigger_error($_CLASS['core_user']->lang['CONFIG_UPDATED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 }
 
-adm_page_header($_CLASS['core_user']->lang[$display_vars['title']]);
+$page_title = $display_vars['title'];
 
-?>
+$_CLASS['core_template']->assign_array(array(
+	'L_TITLE'			=> $_CLASS['core_user']->lang[$display_vars['title']],
+	'L_TITLE_EXPLAIN'	=> $_CLASS['core_user']->lang[$display_vars['title'] . '_EXPLAIN'],
 
-<h1><?php echo $_CLASS['core_user']->lang[$display_vars['title']]; ?></h1>
+	'S_ERROR'			=> (sizeof($error)) ? true : false,
+	'ERROR_MSG'			=> implode('<br />', $error),
 
-<p><?php echo $_CLASS['core_user']->lang[$display_vars['title'] . '_EXPLAIN']; ?></p>
+	'U_ACTION'			=> generate_link($u_action, array('admin' => true))
+));
 
-<form action="<?php echo generate_link('forums&amp;file=admin_board&amp;mode='.$mode, array('admin' => true)); ?>" method="post"><table class="tablebg" width="95%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $_CLASS['core_user']->lang[$display_vars['title']]; ?></th>
-	</tr>
-<?php
-
 // Output relevant page
 foreach ($display_vars['vars'] as $config_key => $vars)
 {
-	if (!is_array($vars))
+	if (!is_array($vars) && strpos($config_key, 'legend') === false)
 	{
 		continue;
 	}
 
-	$type = explode(':', $vars['type']);
-
-?>
-
-	<tr>
-		<td class="row1" width="50%"><b><?php echo $_CLASS['core_user']->lang[$vars['lang']]; ?>: </b><?php echo ($vars['explain']) ? '<br /><span class="gensmall">' . $_CLASS['core_user']->lang[$vars['lang'] . '_EXPLAIN'] . '</span>' : ''; ?></td>
-		<td class="row2"><?php echo build_cfg_template($type, $config_key, ((isset($vars['options'])) ? $vars['options'] : '')) . ((isset($vars['append'])) ? str_replace('{VALUE}', $new[$config_key], $vars['append']) : ''); ?></td>
-	</tr>
-
-<?php
-	
-	unset($display_vars['vars'][$config_key]);
-}
-
-if ($mode == 'auth')
-{
-	$auth_plugins = array();
-
-	$dp = opendir($site_file_root.'includes/auth');
-	while ($file = readdir($dp))
+	if (strpos($config_key, 'legend') !== false)
 	{
-		if (preg_match('#^auth_(.*?)\.php$#', $file))
-		{
-			$auth_plugins[] = preg_replace('#^auth_(.*?)\.php$#', '\1', $file);
-		}
-	}
+		$_CLASS['core_template']->assign_vars_array('options', array(
+			'S_LEGEND'		=> true,
+			'LEGEND'		=> (isset($_CLASS['core_user']->lang[$vars])) ? $_CLASS['core_user']->lang[$vars] : $vars
+		));
 
-	sort($auth_plugins);
-
-	foreach ($auth_plugins as $method)
-	{
-		if ($method && file_exists($site_file_root.'includes/auth/auth_' . $method . '.php'))
-		{
-			include_once($site_file_root.'includes/auth/auth_' . $method . '.php');
-
-			$method = 'admin_' . $method;
-			if (function_exists($method))
-			{
-				if ($config_fields = $method($new))
-				{
-					// Check if we need to create config fields for this plugin
-					foreach($config_fields as $field)
-					{
-						if (!isset($config[$field]))
-						{
-							set_config($field, '');
-						}
-					}
-				}
-				unset($config_fields);
-			}
-		}
+		continue;
 	}
-}
 
-?>
-	<tr>
-		<td class="cat" colspan="2" align="center"><input type="submit" name="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp;&nbsp;<input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /></td>
-	</tr>
-</table></form>
+	$type = explode(':', $vars['type']);
 
-<?php
-
-adm_page_footer();
-
-function select_auth_method($selected_method)
-{
-	global $new, $site_file_root;
-
-	$auth_plugins = array();
-
-	$dp = opendir($site_file_root.'includes/auth');
-	while ($file = readdir($dp))
+	$l_explain = '';
+	if ($vars['explain'] && isset($vars['lang_explain']))
 	{
-		if (preg_match('#^auth_(.*?)\.php$#', $file))
-		{
-			$auth_plugins[] = preg_replace('#^auth_(.*?)\.php$#', '\1', $file);
-		}
+		$l_explain = (isset($_CLASS['core_user']->lang[$vars['lang_explain']])) ? $_CLASS['core_user']->lang[$vars['lang_explain']] : $vars['lang_explain'];
 	}
-
-	sort($auth_plugins);
-
-	$auth_select = '';
-	foreach ($auth_plugins as $method)
+	else if ($vars['explain'])
 	{
-		$selected = ($selected_method == $method) ? ' selected="selected"' : '';
-		$auth_select .= '<option value="' . $method . '"' . $selected . '>' . ucfirst($method) . '</option>';
+		$l_explain = (isset($_CLASS['core_user']->lang[$vars['lang'] . '_EXPLAIN'])) ? $_CLASS['core_user']->lang[$vars['lang'] . '_EXPLAIN'] : '';
 	}
 
-	return $auth_select;
-}
+	$_CLASS['core_template']->assign_vars_array('options', array(
+		'S_LEGEND'		=> false,
+		'KEY'			=> $config_key,
+		'TITLE'			=> (isset($_CLASS['core_user']->lang[$vars['lang']])) ? $_CLASS['core_user']->lang[$vars['lang']] : $vars['lang'],
+		'S_EXPLAIN'		=> $vars['explain'],
+		'TITLE_EXPLAIN'	=> $l_explain,
+		'CONTENT'		=> build_cfg_template($type, $config_key, $new_config, $config_key, $vars),
+	));
 
-function mail_auth_select($selected_method)
-{
-	global $_CLASS;
-
-	$auth_methods = array('PLAIN', 'LOGIN', 'CRAM-MD5', 'DIGEST-MD5', 'POP-BEFORE-SMTP');
-	$s_smtp_auth_options = '';
-
-	foreach ($auth_methods as $method)
-	{
-		$s_smtp_auth_options .= '<option value="' . $method . '"' . (($selected_method == $method) ? ' selected="selected"' : '') . '>' . $_CLASS['core_user']->lang['SMTP_' . str_replace('-', '_', $method)] . '</option>';
-	}
-
-	return $s_smtp_auth_options;
+	unset($display_vars['vars'][$config_key]);
 }
 
-function full_folder_select($value)
-{
-	global $_CLASS;
+$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'modules/forums/admin/acp_board.html');
 
-	return '<option value="1"' . (($value == 1) ? ' selected="selected"' : '') . '>' . $_CLASS['core_user']->lang['DELETE_OLDEST_MESSAGES'] . '</option><option value="2"' . (($value == 2) ? ' selected="selected"' : '') . '>' . $_CLASS['core_user']->lang['HOLD_NEW_MESSAGES'] . '</option>';
-}
-
-function select_ip_check($value)
+/**
+* Select bump interval
+*/
+function bump_interval($value, $key)
 {
-	global $_CLASS;
+	global $_CLASS, $new_config;
 
-	$ip_all = ($value == 4) ? ' checked="checked"' : '';
-	$ip_classc = ($value == 3) ? ' checked="checked"' : '';
-	$ip_classb = ($value == 2) ? ' checked="checked"' : '';
-	$ip_none = ($value == 0) ? ' checked="checked"' : '';
-
-	$options = <<<EOT
-	<input type="radio" name="config[ip_check]" value="4"$ip_all /> {$_CLASS['core_user']->lang['ALL']}&nbsp;&nbsp;<input type="radio" name="config[ip_check]" value="3"$ip_classc /> {$_CLASS['core_user']->lang['CLASS_C']}&nbsp;&nbsp;<input type="radio" name="config[ip_check]" value="2"$ip_classb /> {$_CLASS['core_user']->lang['CLASS_B']}&nbsp;&nbsp;<input type="radio" name="config[ip_check]" value="0"$ip_none /> {$_CLASS['core_user']->lang['NONE']}&nbsp;&nbsp;
-EOT;
-	
-	return $options;
-}
-
-function select_acc_activation($value)
-{
-	global $_CLASS, $config;
-
-	$activation_none	= ($value == USER_ACTIVATION_NONE) ? ' checked="checked"' : '';
-	$activation_user	= ($value == USER_ACTIVATION_SELF) ? ' checked="checked"' : '';
-	$activation_admin	= ($value == USER_ACTIVATION_ADMIN) ? ' checked="checked"' : '';
-	$activation_disable = ($value == USER_ACTIVATION_DISABLE) ? ' checked="checked"' : '';
-
-	$options = '<input type="radio" name="config[require_activation]" value="' . USER_ACTIVATION_NONE . '"' . $activation_none . ' /> ' . $_CLASS['core_user']->lang['ACC_NONE'];
-
-	if ($config['email_enable'])
+	$s_bump_type = '';
+	$types = array('m' => 'MINUTES', 'h' => 'HOURS', 'd' => 'DAYS');
+	foreach ($types as $type => $lang)
 	{
-		$options .= '&nbsp;&nbsp;<input type="radio" name="config[require_activation]" value="' . USER_ACTIVATION_SELF . '"' . $activation_user . ' /> ' . $_CLASS['core_user']->lang['ACC_USER'];
-		$options .= '&nbsp;&nbsp;<input type="radio" name="config[require_activation]" value="' . USER_ACTIVATION_ADMIN . '"' . $activation_admin . ' /> ' . $_CLASS['core_user']->lang['ACC_ADMIN'];
+		$selected = ($new_config['bump_type'] == $type) ? ' selected="selected"' : '';
+		$s_bump_type .= '<option value="' . $type . '"' . $selected . '>' . $_CLASS['core_user']->lang[$lang] . '</option>';
 	}
-	$options .= '&nbsp;&nbsp;<input type="radio" name="config[require_activation]" value="' . USER_ACTIVATION_DISABLE . '"' . $activation_disable . ' /> ' . $_CLASS['core_user']->lang['ACC_DISABLE'];
 
-	return $options;
+	return '<input id="' . $key . '" type="text" size="3" maxlength="4" name="config[bump_interval]" value="' . $value . '" />&nbsp;<select name="config[bump_type]">' . $s_bump_type . '</select>';
 }
 
-function username_length($value)
+/**
+* Board disable option and message
+*/
+function board_disable($value, $key)
 {
-	global $new, $_CLASS;
-
-	return '<input class="post" type="text" size="3" maxlength="3" name="config[min_name_chars]" value="' . $value . '" /> ' . $_CLASS['core_user']->lang['MIN_CHARS'] . '&nbsp;&nbsp;<input class="post" type="text" size="3" maxlength="3" name="config[max_name_chars]" value="' . $new['max_name_chars'] . '" /> ' . $_CLASS['core_user']->lang['MAX_CHARS'];
-}
-
-function select_username_chars($selected_value)
-{
 	global $_CLASS;
 
-	$user_char_ary = array('USERNAME_CHARS_ANY' => '.*', 'USERNAME_ALPHA_ONLY' => '[\w]+', 'USERNAME_ALPHA_SPACERS' => '[\w_\+\. \-\[\]]+');
-	$user_char_options = '';
-	foreach ($user_char_ary as $lang => $value)
-	{
-		$selected = ($selected_value == $value) ? ' selected="selected"' : '';
-		$user_char_options .= '<option value="' . $value . '"' . $selected . '>' . $_CLASS['core_user']->lang[$lang] . '</option>';
-	}
+	$radio_ary = array(1 => 'YES', 0 => 'NO');
 
-	return $user_char_options;
+	return h_radio('config[board_disable]', $radio_ary, $value) . '<br /><input id="' . $key . '" type="text" name="config[board_disable_msg]" maxlength="255" size="40" value="' . $new_config['board_disable_msg'] . '" />';
 }
 
-function password_length($value)
+/**
+* Select default dateformat
+*/
+function dateformat_select($value, $key)
 {
-	global $new, $_CLASS;
-
-	return '<input class="post" type="text" size="3" maxlength="3" name="config[min_pass_chars]" value="' . $value . '" /> ' . $_CLASS['core_user']->lang['MIN_CHARS'] . '&nbsp;&nbsp;<input class="post" type="text" size="3" maxlength="3" name="config[max_pass_chars]" value="' . $new['max_pass_chars'] . '" /> ' . $_CLASS['core_user']->lang['MAX_CHARS'];
-}
-
-function select_password_chars($selected_value)
-{
 	global $_CLASS;
 
-	$pass_type_ary = array('PASS_TYPE_ANY' => '.*', 'PASS_TYPE_CASE' => '[a-zA-Z]', 'PASS_TYPE_ALPHA' => '[a-zA-Z0-9]', 'PASS_TYPE_SYMBOL' => '[a-zA-Z\W]'); 
-	$pass_char_options = '';
-	foreach ($pass_type_ary as $lang => $value)
+	$dateformat_options = '';
+
+	foreach ($_CLASS['core_user']->lang['dateformats'] as $format => $null)
 	{
-		$selected = ($selected_value == $value) ? ' selected="selected"' : '';
-		$pass_char_options .= '<option value="' . $value . '"' . $selected . '>' . $_CLASS['core_user']->lang[$lang] . '</option>';
+		$dateformat_options .= '<option value="' . $format . '"' . (($format == $value) ? ' selected="selected"' : '') . '>';
+		$dateformat_options .= $_CLASS['core_user']->format_date(time(), $format, true) . ((strpos($format, '|') !== false) ? ' [' . $_CLASS['core_user']->lang['RELATIVE_DAYS'] . ']' : '');
+		$dateformat_options .= '</option>';
 	}
 
-	return $pass_char_options;
-}
-
-function bump_interval($value)
-{
-	global $new, $_CLASS;
-
-	$s_bump_type = '';
-	$types = array('m' => 'MINUTES', 'h' => 'HOURS', 'd' => 'DAYS');
-	foreach ($types as $type => $lang)
+	$dateformat_options .= '<option value="custom"';
+	if (!in_array($value, array_keys($_CLASS['core_user']->lang['dateformats'])))
 	{
-		$selected = ($new['bump_type'] == $type) ? 'selected="selected" ' : '';
-		$s_bump_type .= '<option value="' . $type . '" ' . $selected . '>' . $_CLASS['core_user']->lang[$lang] . '</option>';
+		$dateformat_options .= ' selected="selected"';
 	}
+	$dateformat_options .= '>' . $_CLASS['core_user']->lang['CUSTOM_DATEFORMAT'] . '</option>';
 
-	return '<input class="post" type="text" size="3" maxlength="4" name="config[bump_interval]" value="' . $value . '" />&nbsp;<select name="config[bump_type]">' . $s_bump_type . '</select>';
+	return "<select name=\"dateoptions\" id=\"dateoptions\" onchange=\"if (this.value == 'custom') { document.getElementById('$key').value = '$value'; } else { document.getElementById('$key').value = this.value; }\">$dateformat_options</select>
+	<input type=\"text\" name=\"config[$key]\" id=\"$key\" value=\"$value\" maxlength=\"30\" />";
 }
 
-function board_disable($value)
-{
-	global $new, $_CLASS;
-
-	$board_disable_yes = ($value) ? ' checked="checked"' : '';
-	$board_disable_no = (!$value) ? ' checked="checked"' : '';
-
-	return '<input type="radio" name="config[board_disable]" value="1"' . $board_disable_yes . ' /> ' . $_CLASS['core_user']->lang['YES'] . '&nbsp;&nbsp;<input type="radio" name="config[board_disable]" value="0"' . $board_disable_no . ' /> ' . $_CLASS['core_user']->lang['NO'] . '<br /><input class="post" type="text" name="config[board_disable_msg]" maxlength="255" size="40" value="' . $new['board_disable_msg'] . '" />';
-}
-
 ?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/admin/admin_database.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_database.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_database.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,995 +0,0 @@
-<?php
-// -------------------------------------------------------------
-//
-// $Id: admin_database.php,v 1.6 2004/05/02 13:05:36 acydburn Exp $
-//
-// FILENAME  : admin_database.php
-// STARTED   : Thu May 31, 2001
-// COPYRIGHT : ? 2003 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
-// 
-// -------------------------------------------------------------
-
-if (!empty($setmodules))
-{
-	$filename = basename(__FILE__);
-	$module['DB']['DB_BACKUP'] = ($auth->acl_get('a_backup')) ? $filename . "$SID&amp;mode=backup" : '';
-
-	$file_uploads = @ini_get('file_uploads');
-	/*if (!empty($file_uploads) && $file_uploads !== 0 && strtolower($file_uploads) != 'off' && $auth->acl_get('a_restore'))
-	{*/
-		$module['DB']['DB_RESTORE'] = "$filename$SID&amp;mode=restore";
-	/*}*/
-
-	return;
-}
-
-define('IN_PHPBB', 1);
-// Load default header
-$phpbb_root_path = '../';
-$phpEx = substr(strrchr(__FILE__, '.'), 1);
-require('pagestart.' . $phpEx);
-include($phpbb_root_path . 'includes/functions_compress.'.$phpEx);
-
- at set_time_limit(1200);
-
-
-// Get some vars
-$mode = (isset($_GET['mode'])) ? htmlspecialchars($_GET['mode']) : '';
-$action = (isset($_REQUEST['action'])) ? htmlspecialchars($_REQUEST['action']) : '';
-
-
-// --------------------
-// Begin program proper
-// --------------------
-switch($mode)
-{
-	case 'backup':
-		if (!$auth->acl_get('a_backup'))
-		{
-			trigger_error($user->lang['NO_ADMIN']);
-		}
-
-		$db_type = '';
-		switch (SQL_LAYER)
-		{
-			case 'oracle':
-				$db_type = 'Oracle';
-				break;
-			case 'odbc':
-				$db_type = 'ODBC';
-				break;
-			case 'mssql':
-				$db_type = 'MSSQL';
-				break;
-		}
-
-		if ($db_type)
-		{
-			trigger_error($user->lang['Backups_not_supported']);
-		}
-
-		$additional_tables	= (isset($_REQUEST['tables'])) ? htmlspecialchars($_REQUEST['tables']) : '';
-		$backup_type		= (isset($_REQUEST['type'])) ? intval($_REQUEST['type']) : false;
-		$search				= (!empty($_REQUEST['search'])) ? true : false;
-		$store				= (!empty($_REQUEST['store'])) ? true : false;
-		$compress			= (isset($_REQUEST['compress'])) ? htmlspecialchars($_REQUEST['compress']) : '';
-
-		if (!isset($_POST['backupstart']) && !isset($_GET['backupstart']))
-		{
-			adm_page_header($user->lang['DB_BACKUP']);
-
-?>
-
-<h1><?php echo $user->lang['DB_BACKUP']; ?></h1>
-
-<p><?php echo $user->lang['Backup_explain']; ?></p>
-
-<form method="post" action="<?php echo "admin_database.$phpEx$SID&amp;mode=$mode"; ?>"><table class="bg" width="95%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $user->lang['Backup_options']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1" width="40%"><b><?php echo $user->lang['Backup_type']; ?>: </b></td>
-		<td class="row2"><input type="radio" name="type" value="full"  checked="checked" /> <?php echo $user->lang['Full_backup']; ?>&nbsp;&nbsp;<input type="radio" name="type" value="structure" /> <?php echo $user->lang['Structure_only']; ?>&nbsp;&nbsp;<input type="radio" name="type" value="data" /> <?php echo $user->lang['Data_only']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['Additional_tables']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['Additional_tables_explain']; ?></span></td>
-		<td class="row2"><input class="post" type="text" name="tables" maxlength="255" size="40" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['INC_SEARCH_INDEX']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['INC_SEARCH_INDEX_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="search" value="1" checked="checked" /> <?php echo $user->lang['YES']; ?>&nbsp;&nbsp;<input type="radio" name="search" value="0" /> <?php echo $user->lang['NO']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['DOWNLOAD_STORE']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['DOWNLOAD_STORE_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="store" value="0" checked="checked" /> <?php echo $user->lang['EXPORT_DOWNLOAD']; ?>&nbsp;&nbsp;<input type="radio" name="store" value="1" /> <?php echo $user->lang['EXPORT_STORE']; ?></td>
-	</tr>
-<?php
-
-			if (@extension_loaded('zlib') || extension_loaded('bz2'))
-			{
-
-?>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['Compress_file']; ?>: </b></td>
-		<td class="row2"><input type="radio" name="compress" value="none" checked="checked" /> <?php echo $user->lang['NONE']; ?><?php
-
-				if (extension_loaded('zlib'))
-				{
-
-
-?>&nbsp;&nbsp;<input type="radio" name="compress" value="gzip" />.gz&nbsp;&nbsp;<input type="radio" name="compress" value="zip" />.zip<?php
-
-				}
-
-				if (extension_loaded('bz2'))
-				{
-
-?>&nbsp;&nbsp;<input type="radio" name="compress" value="bzip" />.bz2<?php
-
-				}
-
-?></td>
-	</tr>
-<?php
-
-			}
-
-?>
-	<tr>
-		<td class="cat" colspan="2" align="center"><input type="submit" name="backupstart" value="<?php echo $user->lang['Start_backup']; ?>" class="btnmain" /></td>
-	</tr>
-</table></form>
-
-<?php
-
-			break;
-		}
-		else if (!isset($_POST['startdownload']) && !isset($_GET['startdownload']))
-		{
-			$meta = "<meta http-equiv=\"refresh\" content=\"0;url=admin_database.$phpEx?mode=backup&amp;type=$backup_type&amp;tables=" . quotemeta($additional_tables) . "&amp;search=$search&amp;store=" . quotemeta($store_path) . "&amp;compress=$compress&amp;backupstart=1&amp;startdownload=1\">";
-
-			$message = (empty($store_path)) ? $user->lang['Backup_download'] : $user->lang['Backup_writing'];
-
-			adm_page_header($user->lang['DB_Backup'], $meta);
-			page_message($user->lang['DB_Backup'], $message);
-			adm_page_footer();
-		}
-
-		$tables = (SQL_LAYER != 'postgresql') ? mysql_get_tables() : pg_get_tables();
-		@sort($tables);
-
-		if (!empty($additional_tables))
-		{
-			$additional_tables = explode(',', $additional_tables);
-
-			for($i = 0; $i < count($additional_tables); $i++)
-			{
-				$tables[] = trim($additional_tables[$i]);
-			}
-			unset($additional_tables);
-		}
-
-		// Enable output buffering
-		@ob_start();
-		@ob_implicit_flush(0);
-
-		// Build the sql script file...
-		echo "#\n";
-		echo "# phpBB Backup Script\n";
-		echo "# Dump of tables for $dbname\n";
-		echo "#\n# DATE : " .  gmdate("d-m-Y H:i:s", time()) . " GMT\n";
-		echo "#\n";
-
-		if (SQL_LAYER == 'postgresql')
-		{
-			 echo "\n" . pg_get_sequences("\n", $backup_type);
-		}
-
-		for($i = 0; $i < count($tables); $i++)
-		{
-			$table_name = $tables[$i];
-
-			if (SQL_LAYER != 'mysql4')
-			{
-				$table_def_function = "get_table_def_" . SQL_LAYER;
-				$table_content_function = "get_table_content_" . SQL_LAYER;
-			}
-			else
-			{
-				$table_def_function = "get_table_def_mysql";
-				$table_content_function = "get_table_content_mysql";
-			}
-
-			if ($backup_type != 'data')
-			{
-				echo "#\n# TABLE: " . $table_name . "\n#\n";
-				echo $table_def_function($table_name, "\n") . "\n";
-			}
-
-			if ($backup_type != 'structure')
-			{
-				//
-				// Skip search table data?
-				//
-				if ($search || (!$search && !preg_match('/search_word/', $table_name)))
-				{
-					$table_content_function($table_name, "output_table_content");
-				}
-			}
-		}
-
-		// Flush the buffer, send the file
-		switch ($compress)
-		{/*
-			case 'gzip':
-				$extension = 'sql.gz';
-				$contents = gzencode(ob_get_contents());
-				ob_end_clean();
-				break;
-
-			case 'zip':
-				$extension = 'zip';
-				$zip = new zipfile;
-				$zip->add_file(ob_get_contents(), "phpbb_db_backup.sql", time());
-				ob_end_clean();
-				$contents = $zip->file();
-				break;
-
-			case 'bzip':
-				$extension = 'bz2';
-				$contents = bzcompress(ob_get_contents());
-				ob_end_clean();
-				break;*/
-
-			default:
-				$extension = 'sql';
-				$contents = ob_get_contents();
-				ob_end_clean();
-		}
-
-		add_log('admin', 'log_db_backup');
-
-		if (empty($store_path))
-		{
-			header("Pragma: no-cache");
-			header("Content-Type: text/x-delimtext; name=\"phpbb_db_backup.$extension\"");
-			header("Content-disposition: attachment; filename=phpbb_db_backup.$extension");
-
-			echo $contents;
-			unset($contents);
-		}
-		else
-		{
-			if (!($fp = fopen('./../' . $store_path . "/phpbb_db_backup.$extension", 'wb')))
-			{
-				message_die(ERROR, 'Could not open backup file');
-			}
-
-			if (!fwrite($fp, $contents))
-			{
-				message_die(ERROR, 'Could not write backup file content');
-			}
-
-			fclose($fp);
-			unset($contents);
-
-			trigger_error($user->lang['Backup_success']);
-		}
-
-		exit;
-		break;
-
-	case 'restore':
-		if (!$auth->acl_get('a_restore'))
-		{
-			trigger_error($user->lang['NO_ADMIN']);
-		}
-
-		if (isset($_POST['restorestart']))
-		{
-			// Handle the file upload ....
-			// If no file was uploaded report an error...
-			if (!empty($_POST['local']))
-			{
-				$file_tmpname = './../' . str_replace('\\\\', '/', $_POST['local']);
-				$filename = substr($file_tmpname, strrpos($file_tmpname, '/'));
-			}
-			else
-			{
-				$filename = (!empty($_POST['backup_file']['name'])) ? $HTTP_POST_FILES['backup_file']['name'] : '';
-				$file_tmpname = ($HTTP_POST_FILES['backup_file']['tmp_name'] != 'none') ? $HTTP_POST_FILES['backup_file']['tmp_name'] : '';
-			}
-
-			if ($file_tmpname == '' || $filename == '' || !file_exists($file_tmpname))
-			{
-				trigger_error($user->lang['Restore_Error_no_file']);
-			}
-
-			$ext = substr($filename, strrpos($filename, '.') + 1);
-
-			if (!preg_match('/^(sql|gz|bz2)$/', $ext))
-			{
-				trigger_error($user->lang['Restore_Error_filename']);
-			}
-
-			if ((!extension_loaded('zlib') && $ext == 'gz') || (!extension_loaded('zip') && $ext == 'zip') || ($ext == 'bz2' && !extension_loaded('bz2')))
-			{
-				trigger_error($user->lang['Compress_unsupported']);
-			}
-
-			$sql_query = '';
-			switch ($ext)
-			{
-				case 'gz':
-					$fp = gzopen($file_tmpname, 'rb');
-					while (!gzeof($fp))
-					{
-						$sql_query .= gzgets($fp, 100000);
-					}
-					gzclose($fp);
-					break;
-
-				case 'bz2':
-					$sql_query = bzdecompress(fread(fopen($file_tmpname, 'rb'), filesize($file_tmpname)));
-					break;
-
-				case 'zip':
-
-
-				default;
-					$sql_query = fread(fopen($file_tmpname, 'r'), filesize($file_tmpname));
-			}
-
-			if ($sql_query != '')
-			{
-				// Strip out sql comments...
-				$sql_query = remove_remarks($sql_query);
-				$pieces = split_sql_file($sql_query, ';');
-
-				$sql_count = count($pieces);
-				for($i = 0; $i < $sql_count; $i++)
-				{
-					$sql = trim($pieces[$i]);
-
-					if (!empty($sql) && $sql[0] != '#')
-					{
-						$db->sql_query($sql);
-					}
-				}
-			}
-
-			add_log('admin', 'log_db_restore');
-
-			trigger_error($user->lang['Restore_success']);
-		}
-
-		//
-		// Restore page
-		//
-		adm_page_header($user->lang['DB_RESTORE']);
-
-?>
-
-<h1><?php echo $user->lang['DB_RESTORE']; ?></h1>
-
-<p><?php echo $user->lang['Restore_explain']; ?></p>
-
-<form enctype="multipart/form-data" method="post" action="<?php echo "admin_database.$phpEx$SID&amp;mode=$mode"; ?>"><table class="bg" width="80%" cellspacing="1" cellpadding="4" border="0" align="center">
-		<th colspan="2"><?php echo $user->lang['Select_file']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $user->lang['Upload_file']; ?>: <br /><span class="gensmall"><?php
-
-		echo $user->lang['Supported_extensions'];
-
-		$types = ': <u>sql</u>';
-		if (extension_loaded('zlib'))
-		{
-			$types .= ', <u>sql.gz</u>';
-		}
-		if (extension_loaded('bz2'))
-		{
-			$types .= ', <u>bz2</u>';
-		}
-
-		echo $types;
-
-?></span></td>
-		<td class="row2"><input type="file" name="backup_file" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $user->lang['Local_backup_file']; ?>: <br /><span class="gensmall"><?php echo $user->lang['Local_backup_file_explain']; ?></span></td>
-		<td class="row2"><input type="text" name="local" size="40" /></td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><input type="submit" name="restorestart" value="<?php echo $user->lang['Start_Restore']; ?>" class="btnmain" /></td>
-	</tr>
-</table></form>
-
-<?php
-
-		break;
-
-	default:
-		trigger_error($user->lang['No_admin']);
-		exit;
-
-}
-
-adm_page_footer();
-
-// -----------------------------------------------
-// Begin Functions
-//
-
-//
-// Table defns (not from phpMyAdmin)
-//
-function mysql_get_tables()
-{
-	global $db, $table_prefix;
-
-	$tables = array();
-
-	$result = mysql_list_tables($db->dbname, $db->db_connect_id);
-	if ($row = $db->sql_fetchrow($result))
-	{
-		do
-		{
-			if (preg_match('/^' . $table_prefix . '/', $row[0]))
-			{
-				$tables[] = $row[0];
-			}
-		}
-		while ($row = $db->sql_fetchrow($result));
-	}
-
-	return $tables;
-}
-
-//
-// The following functions are adapted from phpMyAdmin and upgrade_20.php
-//
-// This function is used for grabbing the sequences for postgres...
-//
-function pg_get_sequences($crlf, $backup_type)
-{
-	global $db;
-
-	$get_seq_sql = "SELECT relname FROM pg_class WHERE NOT relname ~ 'pg_.*'
-		AND relkind = 'S' ORDER BY relname";
-
-	$seq = $db->sql_query($get_seq_sql);
-
-	if (!$num_seq = $db->sql_numrows($seq))
-	{
-
-		$return_val = "# No Sequences Found $crlf";
-
-	}
-	else
-	{
-		$return_val = "# Sequences $crlf";
-		$i_seq = 0;
-
-		while($i_seq < $num_seq)
-		{
-			$row = $db->sql_fetchrow($seq);
-			$sequence = $row['relname'];
-
-			$get_props_sql = "SELECT * FROM $sequence";
-			$seq_props = $db->sql_query($get_props_sql);
-
-			if ($db->sql_numrows($seq_props) > 0)
-			{
-				$row1 = $db->sql_fetchrow($seq_props);
-
-				if ($backup_type == 'structure')
-				{
-					$row['last_value'] = 1;
-				}
-
-				$return_val .= "CREATE SEQUENCE $sequence start " . $row['last_value'] . ' increment ' . $row['increment_by'] . ' maxvalue ' . $row['max_value'] . ' minvalue ' . $row['min_value'] . ' cache ' . $row['cache_value'] . "; $crlf";
-
-			}  // End if numrows > 0
-
-			if (($row['last_value'] > 1) && ($backup_type != 'structure'))
-			{
-				$return_val .= "SELECT NEXTVALE('$sequence'); $crlf";
-				unset($row['last_value']);
-			}
-
-			$i_seq++;
-
-		} // End while..
-
-	} // End else...
-
-	return $returnval;
-
-} // End function...
-
-//
-// The following functions will return the "CREATE TABLE syntax for the
-// varying DBMS's
-//
-// This function returns, will return the table def's for postgres...
-//
-function get_table_def_postgresql($table, $crlf)
-{
-	global $db;
-
-	$schema_create = "";
-	//
-	// Get a listing of the fields, with their associated types, etc.
-	//
-
-	$field_query = "SELECT a.attnum, a.attname AS field, t.typname as type, a.attlen AS length, a.atttypmod as lengthvar, a.attnotnull as notnull
-		FROM pg_class c, pg_attribute a, pg_type t
-		WHERE c.relname = '$table'
-			AND a.attnum > 0
-			AND a.attrelid = c.oid
-			AND a.atttypid = t.oid
-		ORDER BY a.attnum";
-	$result = $db->sql_query($field_query);
-
-	if (!$result)
-	{
-		message_die(GENERAL_ERROR, "Failed in get_table_def (show fields)", "", __LINE__, __FILE__, $field_query);
-	} // end if..
-
-	$schema_create .= "DROP TABLE $table;$crlf";
-
-	//
-	// Ok now we actually start building the SQL statements to restore the tables
-	//
-
-	$schema_create .= "CREATE TABLE $table($crlf";
-
-	while ($row = $db->sql_fetchrow($result))
-	{
-		//
-		// Get the data from the table
-		//
-		$sql_get_default = "SELECT d.adsrc AS rowdefault
-			FROM pg_attrdef d, pg_class c
-			WHERE (c.relname = '$table')
-				AND (c.oid = d.adrelid)
-				AND d.adnum = " . $row['attnum'];
-		$def_res = $db->sql_query($sql_get_default);
-
-		if (!$def_res)
-		{
-			unset($row['rowdefault']);
-		}
-		else
-		{
-			$row['rowdefault'] = @pg_result($def_res, 0, 'rowdefault');
-		}
-
-		if ($row['type'] == 'bpchar')
-		{
-			// Internally stored as bpchar, but isn't accepted in a CREATE TABLE statement.
-			$row['type'] = 'char';
-		}
-
-		$schema_create .= '	' . $row['field'] . ' ' . $row['type'];
-
-		if (eregi('char', $row['type']))
-		{
-			if ($row['lengthvar'] > 0)
-			{
-				$schema_create .= '(' . ($row['lengthvar'] -4) . ')';
-			}
-		}
-
-		if (eregi('numeric', $row['type']))
-		{
-			$schema_create .= '(';
-			$schema_create .= sprintf("%s,%s", (($row['lengthvar'] >> 16) & 0xffff), (($row['lengthvar'] - 4) & 0xffff));
-			$schema_create .= ')';
-		}
-
-		if (!empty($row['rowdefault']))
-		{
-			$schema_create .= ' DEFAULT ' . $row['rowdefault'];
-		}
-
-		if ($row['notnull'] == 't')
-		{
-			$schema_create .= ' NOT NULL';
-		}
-
-		$schema_create .= ",$crlf";
-
-	}
-	//
-	// Get the listing of primary keys.
-	//
-
-	$sql_pri_keys = "SELECT ic.relname AS index_name, bc.relname AS tab_name, ta.attname AS column_name, i.indisunique AS unique_key, i.indisprimary AS primary_key
-		FROM pg_class bc, pg_class ic, pg_index i, pg_attribute ta, pg_attribute ia
-		WHERE (bc.oid = i.indrelid)
-			AND (ic.oid = i.indexrelid)
-			AND (ia.attrelid = i.indexrelid)
-			AND	(ta.attrelid = bc.oid)
-			AND (bc.relname = '$table')
-			AND (ta.attrelid = i.indrelid)
-			AND (ta.attnum = i.indkey[ia.attnum-1])
-		ORDER BY index_name, tab_name, column_name ";
-	$result = $db->sql_query($sql_pri_keys);
-
-	if (!$result)
-	{
-		message_die(GENERAL_ERROR, "Failed in get_table_def (show fields)", "", __LINE__, __FILE__, $sql_pri_keys);
-	}
-
-	while ($row = $db->sql_fetchrow($result))
-	{
-		if ($row['primary_key'] == 't')
-		{
-			if (!empty($primary_key))
-			{
-				$primary_key .= ', ';
-			}
-
-			$primary_key .= $row['column_name'];
-			$primary_key_name = $row['index_name'];
-
-		}
-		else
-		{
-			//
-			// We have to store this all this info because it is possible to have a multi-column key...
-			// we can loop through it again and build the statement
-			//
-			$index_rows[$row['index_name']]['table'] = $table;
-			$index_rows[$row['index_name']]['unique'] = ($row['unique_key'] == 't') ? ' UNIQUE ' : '';
-			$index_rows[$row['index_name']]['column_names'] .= $row['column_name'] . ', ';
-		}
-	}
-
-	if (!empty($index_rows))
-	{
-		while(list($idx_name, $props) = each($index_rows))
-		{
-			$props['column_names'] = ereg_replace(", $", "" , $props['column_names']);
-			$index_create .= 'CREATE ' . $props['unique'] . " INDEX $idx_name ON $table (" . $props['column_names'] . ");$crlf";
-		}
-	}
-
-	if (!empty($primary_key))
-	{
-		$schema_create .= "	CONSTRAINT $primary_key_name PRIMARY KEY ($primary_key),$crlf";
-	}
-
-	//
-	// Generate constraint clauses for CHECK constraints
-	//
-	$sql_checks = "SELECT rcname as index_name, rcsrc
-		FROM pg_relcheck, pg_class bc
-		WHERE rcrelid = bc.oid
-			AND bc.relname = '$table'
-			AND NOT EXISTS (
-				SELECT *
-					FROM pg_relcheck as c, pg_inherits as i
-					WHERE i.inhrelid = pg_relcheck.rcrelid
-						AND c.rcname = pg_relcheck.rcname
-						AND c.rcsrc = pg_relcheck.rcsrc
-						AND c.rcrelid = i.inhparent
-			)";
-	$result = $db->sql_query($sql_checks);
-
-	if (!$result)
-	{
-		message_die(GENERAL_ERROR, "Failed in get_table_def (show fields)", "", __LINE__, __FILE__, $sql_checks);
-	}
-
-	//
-	// Add the constraints to the sql file.
-	//
-	while ($row = $db->sql_fetchrow($result))
-	{
-		$schema_create .= '	CONSTRAINT ' . $row['index_name'] . ' CHECK ' . $row['rcsrc'] . ",$crlf";
-	}
-
-	$schema_create = ereg_replace(',' . $crlf . '$', '', $schema_create);
-	$index_create = ereg_replace(',' . $crlf . '$', '', $index_create);
-
-	$schema_create .= "$crlf);$crlf";
-
-	if (!empty($index_create))
-	{
-		$schema_create .= $index_create;
-	}
-
-	//
-	// Ok now we've built all the sql return it to the calling function.
-	//
-	return (stripslashes($schema_create));
-
-}
-
-//
-// This function returns the "CREATE TABLE" syntax for mysql dbms...
-//
-function get_table_def_mysql($table, $crlf)
-{
-	global $db;
-
-	$schema_create = "";
-	$field_query = "SHOW FIELDS FROM $table";
-	$key_query = "SHOW KEYS FROM $table";
-
-	// If the user has selected to drop existing tables when doing a restore.
-	// Then we add the statement to drop the tables....
-	$schema_create .= "DROP TABLE IF EXISTS $table;$crlf";
-	$schema_create .= "CREATE TABLE $table($crlf";
-
-	// Ok lets grab the fields...
-	$result = $db->sql_query($field_query);
-
-	while ($row = $db->sql_fetchrow($result))
-	{
-		$schema_create .= '	' . $row['Field'] . ' ' . $row['Type'];
-
-		if (!empty($row['Default']))
-		{
-			$schema_create .= ' DEFAULT \'' . $row['Default'] . '\'';
-		}
-
-		if ($row['Null'] != "YES")
-		{
-			$schema_create .= ' NOT NULL';
-		}
-
-		if ($row['Extra'] != "")
-		{
-			$schema_create .= ' ' . $row['Extra'];
-		}
-
-		$schema_create .= ",$crlf";
-	}
-	//
-	// Drop the last ',$crlf' off ;)
-	//
-	$schema_create = ereg_replace(',' . $crlf . '$', "", $schema_create);
-
-	//
-	// Get any Indexed fields from the database...
-	//
-	$result = $db->sql_query($key_query);
-
-	while($row = $db->sql_fetchrow($result))
-	{
-		$kname = $row['Key_name'];
-
-		if (($kname != 'PRIMARY') && ($row['Non_unique'] == 0))
-		{
-			$kname = "UNIQUE|$kname";
-		}
-
-		if (!is_array($index[$kname]))
-		{
-			$index[$kname] = array();
-		}
-
-		$index[$kname][] = $row['Column_name'];
-	}
-
-	foreach ($index as $x => $columns)
-	{
-		$schema_create .= ", $crlf";
-
-		if ($x == 'PRIMARY')
-		{
-			$schema_create .= '	PRIMARY KEY (' . implode($columns, ', ') . ')';
-		}
-		elseif (substr($x,0,6) == 'UNIQUE')
-		{
-			$schema_create .= '	UNIQUE ' . substr($x,7) . ' (' . implode($columns, ', ') . ')';
-		}
-		else
-		{
-			$schema_create .= "	KEY $x (" . implode($columns, ', ') . ')';
-		}
-	}
-
-	$schema_create .= "$crlf);";
-
-	if (get_magic_quotes_runtime())
-	{
-		return(stripslashes($schema_create));
-	}
-	else
-	{
-		return($schema_create);
-	}
-
-} // End get_table_def_mysql
-
-
-//
-// This fuction will return a tables create definition to be used as an sql
-// statement.
-//
-//
-// The following functions Get the data from the tables and format it as a
-// series of INSERT statements, for each different DBMS...
-// After every row a custom callback function $handler gets called.
-// $handler must accept one parameter ($sql_insert);
-//
-//
-// Here is the function for postgres...
-//
-function get_table_content_postgresql($table, $handler)
-{
-	global $db;
-
-	// Grab all of the data from current table.
-	$result = $db->sql_query("SELECT * FROM $table");
-
-	$i_num_fields = $db->sql_numfields($result);
-
-	for ($i = 0; $i < $i_num_fields; $i++)
-	{
-		$aryType[] = $db->sql_fieldtype($i, $result);
-		$aryName[] = $db->sql_fieldname($i, $result);
-	}
-
-	$iRec = 0;
-
-	while ($row = $db->sql_fetchrow($result))
-	{
-		unset($schema_vals);
-		unset($schema_fields);
-		unset($schema_insert);
-
-		// Build the SQL statement to recreate the data.
-		for($i = 0; $i < $i_num_fields; $i++)
-		{
-			$strVal = $row[$aryName[$i]];
-			if (preg_match('#char|text|bool#i', $aryType[$i]))
-			{
-				$strQuote = "'";
-				$strEmpty = "";
-				$strVal = addslashes($strVal);
-			}
-			elseif (preg_match('#date|timestamp#i', $aryType[$i]))
-			{
-				if ($empty($strVal))
-				{
-					$strQuote = "";
-				}
-				else
-				{
-					$strQuote = "'";
-				}
-			}
-			else
-			{
-				$strQuote = "";
-				$strEmpty = "NULL";
-			}
-
-			if (empty($strVal) && $strVal != "0")
-			{
-				$strVal = $strEmpty;
-			}
-
-			$schema_vals .= " $strQuote$strVal$strQuote,";
-			$schema_fields .= " $aryName[$i],";
-		}
-
-		$schema_vals = preg_replace('#,$#', '', $schema_vals);
-		$schema_vals = preg_replace('#^ #', '', $schema_vals);
-		$schema_fields = preg_replace('#,$#', '', $schema_fields);
-		$schema_fields = preg_replace('#^ #', '', $schema_fields);
-
-		// Take the ordered fields and their associated data and build it
-		// into a valid sql statement to recreate that field in the data.
-		$schema_insert = "INSERT INTO $table ($schema_fields) VALUES($schema_vals);";
-
-		$handler(trim($schema_insert));
-	}
-
-	return(true);
-
-}// end function get_table_content_postgres...
-
-//
-// This function is for getting the data from a mysql table.
-//
-
-function get_table_content_mysql($table, $handler)
-{
-	global $db;
-
-	// Grab the data from the table.
-	$result = $db->sql_query("SELECT * FROM $table");
-
-	// Loop through the resulting rows and build the sql statement.
-	$schema_insert = "";
-	if ($row = $db->sql_fetchrow($result))
-	{
-		$schema_insert = "\n#\n# Table Data for $table\n#\n";
-
-		$handler($schema_insert);
-
-		do
-		{
-			$table_list = '(';
-			$num_fields = $db->sql_numfields($result);
-			//
-			// Grab the list of field names.
-			//
-			for ($j = 0; $j < $num_fields; $j++)
-			{
-				$table_list .= $db->sql_fieldname($j, $result) . ', ';
-			}
-			//
-			// Get rid of the last comma
-			//
-			$table_list = preg_replace('#, $#', '', $table_list);
-			$table_list .= ')';
-			//
-			// Start building the SQL statement.
-			//
-			$schema_insert = "INSERT INTO $table $table_list VALUES(";
-			//
-			// Loop through the rows and fill in data for each column
-			//
-			for ($j = 0; $j < $num_fields; $j++)
-			{
-				if (!isset($row[$j]))
-				{
-					//
-					// If there is no data for the column set it to null.
-					// There was a problem here with an extra space causing the
-					// sql file not to reimport if the last column was null in
-					// any table.  Should be fixed now :) JLH
-					//
-					$schema_insert .= ' NULL,';
-				}
-				elseif ($row[$j] != '')
-				{
-					$schema_insert .= ' \'' . addslashes($row[$j]) . '\',';
-				}
-				else
-				{
-					$schema_insert .= '\'\',';
-				}
-			}
-			//
-			// Get rid of the the last comma.
-			//
-			$schema_insert = preg_replace('#,$#', '', $schema_insert);
-			$schema_insert .= ');';
-			//
-			// Go ahead and send the insert statement to the handler function.
-			//
-			$handler(trim($schema_insert));
-		}
-		while ($row = $db->sql_fetchrow($result));
-	}
-
-	return true;
-}
-
-function output_table_content($content)
-{
-	global $tempfile;
-
-	//fwrite($tempfile, $content . "\n");
-	//$backup_sql .= $content . "\n";
-	echo $content ."\n";
-	return;
-}
-//
-// End Functions
-// -----------------------------------------------
-
-?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/admin/admin_disallow.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_disallow.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_disallow.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,150 +0,0 @@
-<?php
-/** 
-*
-* @package acp
-* @version $Id: admin_disallow.php,v 1.6 2005/04/09 12:26:28 acydburn Exp $
-* @copyright (c) 2005 phpBB Group 
-* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
-*
-*/
-
-/**
-*/
-if (!defined('VIPERAL') || VIPERAL != 'Admin')
-{
-	die; 
-}
-
-// Check permissions
-if (!$_CLASS['auth']->acl_get('a_names'))
-{
-	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
-}
-
-require($site_file_root . 'includes/forums/functions_user.php');
-
-if (isset($_POST['disallow']))
-{
-	$disallowed_user = (isset($_REQUEST['disallowed_user'])) ? htmlspecialchars($_REQUEST['disallowed_user']) : '';
-	$disallowed_user = str_replace('*', '%', $disallowed_user);
-
-	if (!$disallowed_user)
-	{
-		trigger_error('No_VALUE');
-	}
-	
-	if (validate_username($disallowed_user))
-	{
-		$message = $_CLASS['core_user']->lang['Disallowed_already'];
-	}
-	else
-	{
-		$sql = 'INSERT INTO ' . DISALLOW_TABLE . " (disallow_username)
-			VALUES('" . $_CLASS['core_db']->sql_escape(stripslashes($disallowed_user)) . "')";
-		$result = $_CLASS['core_db']->sql_query($sql);
-
-		$message = $_CLASS['core_user']->lang['Disallow_successful'];
-	}
-
-	add_log('admin', 'log_disallow_add', str_replace('%', '*', $disallowed_user));
-
-	trigger_error($message);
-}
-else if (isset($_POST['allow']))
-{
-	$disallowed_id = (isset($_REQUEST['disallowed_id'])) ? intval($_REQUEST['disallowed_id']) : '';
-
-	if (empty($disallowed_id))
-	{
-		trigger_error($_CLASS['core_user']->lang['No_user_selected']);
-	}
-
-	$sql = 'DELETE FROM ' . DISALLOW_TABLE . "
-		WHERE disallow_id = $disallowed_id";
-	$_CLASS['core_db']->sql_query($sql);
-
-	add_log('admin', 'log_disallow_delete');
-
-	trigger_error($_CLASS['core_user']->lang['Disallowed_deleted']);
-}
-
-// Grab the current list of disallowed usernames...
-$sql = 'SELECT *
-	FROM ' . DISALLOW_TABLE;
-$result = $_CLASS['core_db']->sql_query($sql);
-
-$disallow_select = '';
-if ($row = $_CLASS['core_db']->sql_fetchrow($result))
-{
-	do
-	{
-		$disallow_select .= '<option value="' . $row['disallow_id'] . '">' . str_replace('%', '*', $row['disallow_username']) . '</option>';
-	}
-	while ($row = $_CLASS['core_db']->sql_fetchrow($result));
-}
-
-// Output page
-adm_page_header($_CLASS['core_user']->lang['DISALLOW']);
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang['DISALLOW']; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['Disallow_explain']; ?></p>
-
-<form method="post" action="<?php echo generate_link('Forums&amp;file=admin_disallow', array('admin' => true)); ?>"><table class="tablebg" width="80%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $_CLASS['core_user']->lang['Add_disallow_title']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $_CLASS['core_user']->lang['USERNAME']; ?><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['Add_disallow_explain']; ?></span></td>
-		<td class="row2"><input class="post" type="text" name="disallowed_user" size="30" />&nbsp;</td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><input class="btnmain" type="submit" name="disallow" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" />&nbsp;&nbsp;<input class="btnlite" type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" />
-	</tr>
-</table>
-
-<h1><?php echo $_CLASS['core_user']->lang['Delete_disallow_title']; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['Delete_disallow_explain']; ?></p>
-
-<table class="tablebg" width="80%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $_CLASS['core_user']->lang['Delete_disallow_title']; ?></th>
-	</tr>
-<?php
-
-	if ($disallow_select != '')
-	{
-
-?>
-	<tr>
-		<td class="row1"><?php echo $_CLASS['core_user']->lang['USERNAME']; ?></td>
-		<td class="row2"><select class="post" name="disallowed_id"><?php echo $disallow_select; ?></select></td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><input class="btnmain" type="submit" name="allow" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" />&nbsp;&nbsp;<input class="btnlite" type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" />
-	</tr>
-<?php
-
-	}
-	else
-	{
-
-?>
-	<tr>
-		<td class="row1" colspan="2" align="center"><?php echo $_CLASS['core_user']->lang['No_disallowed']; ?></td>
-	</tr>
-<?php
-
-	}
-
-?>
-</table></form>
-
-<?php
-
-adm_page_footer();
-
-?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/admin/admin_email.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_email.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_email.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,266 +0,0 @@
-<?php
-/** 
-*
-* @package acp
-* @version $Id: admin_email.php,v 1.15 2005/04/09 12:26:28 acydburn Exp $
-* @copyright (c) 2005 phpBB Group 
-* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
-*
-*/
-
-/**
-*/
-if (!defined('VIPERAL') || VIPERAL != 'Admin')
-{
-	die; 
-}
-
-// Check permissions
-if (!$_CLASS['auth']->acl_get('a_email'))
-{
-	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
-}
-
-// Set some vars
-$message = $subject = $usernames = $group_id = '';
-$error = array();
-
-// Do the job ...
-if (isset($_POST['submit']))
-{
-	// Error checking needs to go here ... if no subject and/or no message then skip 
-	// over the send and return to the form
-	$group_id	= request_var('g', 0);
-	$usernames	= request_var('usernames', '');
-	$subject	= preg_replace('#&(\#[0-9]+;)#', '&\1', strtr(request_var('subject', ''), array_flip(get_html_translation_table(HTML_ENTITIES))));
-	$message	= preg_replace('#&(\#[0-9]+;)#', '&\1', strtr(request_var('message', ''), array_flip(get_html_translation_table(HTML_ENTITIES))));
-	$use_queue	= (isset($_POST['send_immediatly'])) ? false : true;
-	$priority	= request_var('mail_priority_flag', MAIL_NORMAL_PRIORITY);
-
-	// NOTE: Only temporary, i do not think this is a good idea for the final code, but i have to test this more than once. ;)
-	$log_session= (isset($_POST['log_session'])) ? true : false;
-
-	if (!$subject)
-	{
-		$error[] = $_CLASS['core_user']->lang['NO_EMAIL_SUBJECT'];
-	}
-
-	if (!$message)
-	{
-		$error[] = $_CLASS['core_user']->lang['NO_EMAIL_MESSAGE'];
-	}
-
-	if (!sizeof($error))	
-	{
-		if ($usernames)
-		{
-			$usernames = implode(', ', preg_replace('#^[\s]*?(.*?)[\s]*?$#e', "\"'\" . \$_CLASS['core_db']->sql_escape('\\1') . \"'\"", explode("\n", $usernames)));
-
-			$sql = 'SELECT username, user_email, user_jabber, user_notify_type, user_lang 
-				FROM ' . USERS_TABLE . " 
-				WHERE username IN ($usernames)
-					AND user_allow_massemail = 1
-				ORDER BY user_lang, user_notify_type, SUBSTRING(user_email FROM INSTR(user_email,'@'))";
-		}
-		else
-		{
-			$sql = ($group_id) ? 'SELECT u.user_email, u.username, u.user_lang, u.user_jabber, u.user_notify_type FROM ' . USERS_TABLE . ' u, ' . USER_GROUP_TABLE . " ug WHERE ug.group_id = $group_id AND ug.user_pending <> 1 AND u.user_id = ug.user_id AND u.user_allow_massemail = 1" : 'SELECT u.username, u.user_email, u.user_jabber, u.user_notify_type, u.user_lang FROM ' . USERS_TABLE . ' u WHERE u.user_allow_massemail = 1';
-
-			// TODO: different for other db servers?
-			$sql .= " ORDER BY u.user_lang, u.user_notify_type, SUBSTRING(u.user_email FROM INSTR(u.user_email,'@'))";
-		}
-		$result = $_CLASS['core_db']->sql_query($sql);
-
-		if (!($row = $_CLASS['core_db']->sql_fetchrow($result)))
-		{
-			trigger_error($_CLASS['core_user']->lang['NO_USER']);
-		}
-		$_CLASS['core_db']->sql_freeresult($result);
-	
-		$i = $j = 0;
-		// Send with BCC, no more than 50 recipients for one mail (to not exceed the limit)
-		$max_chunk_size = 50;
-		$email_list = array();
-		$old_lang = $row['user_lang'];
-		$old_notify_type = $row['user_notify_type'];
-
-		do
-		{
-			if (($row['user_notify'] == NOTIFY_EMAIL && $row['user_email']) ||
-				($row['user_notify'] == NOTIFY_IM && $row['user_jabber']) ||
-				($row['user_notify'] == NOTIFY_BOTH && $row['user_email'] && $row['user_jabber']))
-			{
-				if ($i == $max_chunk_size || $row['user_lang'] != $old_lang || $row['user_notify_type'] != $old_notify_type)
-				{
-					$i = 0;
-					$j++;
-					$old_lang = $row['user_lang'];
-					$old_notify_type = $row['user_notify_type'];
-				}
-
-				$email_list[$j][$i]['lang']		= $row['user_lang'];
-				$email_list[$j][$i]['method']	= $row['user_notify_type'];
-				$email_list[$j][$i]['email']	= $row['user_email'];
-				$email_list[$j][$i]['name']		= $row['username'];
-				$email_list[$j][$i]['jabber']	= $row['user_jabber'];
-				$i++;
-			}
-		} 
-		while ($row = $_CLASS['core_db']->sql_fetchrow($result));
-		$_CLASS['core_db']->sql_freeresult($result);
-
-		// Send the messages
-		include_once($site_file_root.'includes/forums/functions_messenger.php');
-		$messenger = new messenger($use_queue);
-
-		$errored = false;
-
-		for ($i = 0; $i < sizeof($email_list); $i++)
-		{
-			$used_lang = $email_list[$i][0]['lang'];
-			$used_method = $email_list[$i][0]['method'];
-
-			for ($j = 0; $j < sizeof($email_list[$i]); $j++)
-			{
-				$email_row = $email_list[$i][$j];
-
-				$messenger->{((sizeof($email_list[$i]) == 1) ? 'to' : 'bcc')}($email_row['email'], $email_row['name']);
-				$messenger->im($email_row['jabber'], $email_row['name']);
-			}
-
-			$messenger->template('admin_send_email', $used_lang);
-
-			$messenger->headers('X-AntiAbuse: Board servername - ' . $config['server_name']);
-			$messenger->headers('X-AntiAbuse: User_id - ' . $_CLASS['core_user']->data['user_id']);
-			$messenger->headers('X-AntiAbuse: Username - ' . $_CLASS['core_user']->data['username']);
-			$messenger->headers('X-AntiAbuse: User IP - ' . $_CLASS['core_user']->ip);
-			
-			$messenger->subject($subject);
-			$messenger->replyto($config['board_email']);
-			$messenger->set_mail_priority($priority);
-
-			$messenger->assign_vars(array(
-				'SITENAME'		=> $config['sitename'],
-				'CONTACT_EMAIL' => $config['board_contact'],
-				'MESSAGE'		=> $message)
-			);
-	
-			if (!($messenger->send($used_method, $log_session)))
-			{
-				$errored = true;
-			}
-		}
-		unset($email_list);
-
-		$messenger->save_queue();
-
-		if ($group_id)
-		{
-			$sql = 'SELECT group_name 
-				FROM ' . GROUPS_TABLE . " 
-				WHERE group_id = $group_id";
-			$result = $_CLASS['core_db']->sql_query($sql);
-
-			$row = $_CLASS['core_db']->sql_fetchrow($result);
-			$_CLASS['core_db']->sql_freeresult($result);
-			extract($row);
-		}
-		else
-		{
-			// Not great but the logging routine doesn't cope well with localising
-			// on the fly
-			$group_name = $_CLASS['core_user']->lang['ALL_USERS'];
-		}
-
-		add_log('admin', 'LOG_MASS_EMAIL', $group_name);
-		$message = (!$errored) ? $_CLASS['core_user']->lang['EMAIL_SENT'] : sprintf($_CLASS['core_user']->lang['EMAIL_SEND_ERROR'], '<a href="'.generate_link('Forums&amp;file=admin_viewlogs&amp;mode=critical', array('admin' => true)).'" class="gen">', '</a>');
-		trigger_error($message);
-	}
-}
-
-// Initial selection
-$sql = 'SELECT group_id, group_type, group_name
-	FROM ' . GROUPS_TABLE . ' 
-	ORDER BY group_type DESC, group_name ASC';
-$result = $_CLASS['core_db']->sql_query($sql);
-
-$select_list = '<option value="0"' . ((!$group_id) ? ' selected="selected"' : '') . '>' . $_CLASS['core_user']->lang['ALL_USERS'] . '</option>';
-if ($row = $_CLASS['core_db']->sql_fetchrow($result))
-{
-	do
-	{
-		$selected = ($group_id == $row['group_id']) ? ' selected="selected"' : '';
-		$select_list .= '<option value = "' . $row['group_id'] . '"' . (($row['group_type'] == GROUP_SPECIAL) ? ' class="blue"' : '') . $selected . '>' . (($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name']) . '</option>';
-	}
-	while ($row = $_CLASS['core_db']->sql_fetchrow($result));
-}
-$_CLASS['core_db']->sql_freeresult($result);
-
-$s_priority_options = '<option value="' . MAIL_LOW_PRIORITY . '">' . $_CLASS['core_user']->lang['MAIL_LOW_PRIORITY'] . '</option>';
-$s_priority_options .= '<option value="' . MAIL_NORMAL_PRIORITY . '" selected="selected">' . $_CLASS['core_user']->lang['MAIL_NORMAL_PRIORITY'] . '</option>';
-$s_priority_options .= '<option value="' . MAIL_HIGH_PRIORITY . '">' . $_CLASS['core_user']->lang['MAIL_HIGH_PRIORITY'] . '</option>';
-
-adm_page_header($_CLASS['core_user']->lang['MASS_EMAIL']);
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang['MASS_EMAIL']; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['MASS_EMAIL_EXPLAIN']; ?></p>
-
-<form method="post" action="<?php echo generate_link('Forums&amp;file=admin_email', array('admin' => true)); ?>" name="email"><table class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $_CLASS['core_user']->lang['COMPOSE']; ?></th>
-	</tr>
-<?php
-
-	if (sizeof($error))
-	{
-
-?>
-	<tr>
-		<td class="row3" colspan="2" align="center"><span class="error"><?php echo implode('<br />', $error); ?></span></td>
-	</tr>
-<?php
-
-	}
-
-?>
-	<tr>
-		<td class="row1" width="40%"><b><?php echo $_CLASS['core_user']->lang['SEND_TO_GROUP']; ?>: </b></td>
-		<td class="row2"><select name="g"><?php echo $select_list; ?></select></td>
-	</tr>
-	<tr>
-		<td class="row1" valign="top"><b><?php echo $_CLASS['core_user']->lang['SEND_TO_USERS']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['SEND_TO_USERS_EXPLAIN']; ?><br />[ <a href="" onclick="window.open('<?php echo generate_link('Members_List&amp;mode=searchuser&amp;form=email&amp;field=usernames'); ?>', '_phpbbsearch', 'HEIGHT=500,resizable=yes,scrollbars=yes,WIDTH=740');return false;"><?php echo $_CLASS['core_user']->lang['FIND_USERNAME']; ?></a> ]</span></td>
-		<td class="row2" align="left"><textarea name="usernames" rows="5" cols="40"><?php echo $usernames; ?></textarea></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['SUBJECT']; ?>: </b></td>
-		<td class="row2"><input class="post" type="text" name="subject" size="45" maxlength="100" tabindex="2" value="<?php echo $subject; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1" valign="top"><span class="gen"><b><?php echo $_CLASS['core_user']->lang['MASS_MESSAGE']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['MASS_MESSAGE_EXPLAIN']; ?></span></td>
-		<td class="row2"><textarea class="post" name="message" rows="10" cols="60" tabindex="3"><?php echo $message; ?></textarea></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['MAIL_PRIORITY']; ?>: </b></td>
-		<td class="row2"><select name="mail_priority_flag"><?php echo $s_priority_options; ?></select></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['SEND_IMMEDIATLY']; ?>: </b></td>
-		<td class="row2"><input type="checkbox" name="send_immediatly" class="text" checked="checked" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['LOG_SESSION']; ?>: </b></td>
-		<td class="row2"><input type="checkbox" name="log_session" class="text" /></td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><input type="submit" value="<?php echo $_CLASS['core_user']->lang['EMAIL']; ?>" name="submit" class="btnmain" /></td>
-	</tr>
-</table></form>
-
-<?php
-
-adm_page_footer();
-
-?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/admin/admin_forums.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_forums.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_forums.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -287,12 +287,12 @@
 		if ($update)
 		{
 			$forum_data['forum_flags'] = 0;
-			$forum_data['forum_flags'] += (request_var('forum_link_track', false)) ? 1 : 0;
-			$forum_data['forum_flags'] += (request_var('prune_old_polls', false)) ? 2 : 0;
-			$forum_data['forum_flags'] += (request_var('prune_announce', false)) ? 4 : 0;
-			$forum_data['forum_flags'] += (request_var('prune_sticky', false)) ? 8 : 0;
-			$forum_data['forum_flags'] += ($forum_data['show_active']) ? 16 : 0;
-			$forum_data['forum_flags'] += (request_var('enable_post_review', true)) ? 32 : 0;
+			$forum_data['forum_flags'] += (request_var('forum_link_track', false)) ? FORUM_FLAG_LINK_TRACK : 0;
+			$forum_data['forum_flags'] += (request_var('prune_old_polls', false)) ? FORUM_FLAG_PRUNE_POLL : 0;
+			$forum_data['forum_flags'] += (request_var('prune_announce', false)) ? FORUM_FLAG_PRUNE_ANNOUNCE : 0;
+			$forum_data['forum_flags'] += (request_var('prune_sticky', false)) ? FORUM_FLAG_PRUNE_STICKY : 0;
+			$forum_data['forum_flags'] += ($forum_data['show_active']) ? FORUM_FLAG_ACTIVE_TOPICS : 0;
+			$forum_data['forum_flags'] += (request_var('enable_post_review', true)) ? FORUM_FLAG_POST_REVIEW : 0;
 		}
 
 		// Show form to create/modify a forum
@@ -345,7 +345,6 @@
 					'forum_rules'			=> '',
 					'forum_rules_link'		=> '',
 					'forum_image'			=> '',
-					'forum_style'			=> 0,
 					'display_on_index'		=> false,
 					'forum_topics_per_page'	=> 0, 
 					'enable_indexing'		=> true, 
@@ -354,7 +353,7 @@
 					'prune_days'			=> 7,
 					'prune_viewed'			=> 7,
 					'prune_freq'			=> 1,
-					'forum_flags'			=> 0,
+					'forum_flags'			=> FORUM_FLAG_POST_REVIEW,
 					'forum_password'		=> '',
 					'forum_password_confirm'=> '',
 				);
@@ -504,12 +503,12 @@
 			'S_TOPIC_ICONS'				=> ($forum_data['enable_icons']) ? true : false,
 			'S_DISPLAY_ON_INDEX'		=> ($forum_data['display_on_index']) ? true : false,
 			'S_PRUNE_ENABLE'			=> ($forum_data['enable_prune']) ? true : false,
-			'S_FORUM_LINK_TRACK'		=> ($forum_data['forum_flags'] & 1) ? true : false,
-			'S_PRUNE_OLD_POLLS'			=> ($forum_data['forum_flags'] & 2) ? true : false,
-			'S_PRUNE_ANNOUNCE'			=> ($forum_data['forum_flags'] & 4) ? true : false,
-			'S_PRUNE_STICKY'			=> ($forum_data['forum_flags'] & 8) ? true : false,
-			'S_DISPLAY_ACTIVE_TOPICS'	=> ($forum_data['forum_flags'] & 16) ? true : false,
-			'S_ENABLE_POST_REVIEW'		=> ($forum_data['forum_flags'] & 32) ? true : false,
+			'S_FORUM_LINK_TRACK'		=> ($forum_data['forum_flags'] & FORUM_FLAG_LINK_TRACK) ? true : false,
+			'S_PRUNE_OLD_POLLS'			=> ($forum_data['forum_flags'] & FORUM_FLAG_PRUNE_POLL) ? true : false,
+			'S_PRUNE_ANNOUNCE'			=> ($forum_data['forum_flags'] & FORUM_FLAG_PRUNE_ANNOUNCE) ? true : false,
+			'S_PRUNE_STICKY'			=> ($forum_data['forum_flags'] & FORUM_FLAG_PRUNE_STICKY) ? true : false,
+			'S_DISPLAY_ACTIVE_TOPICS'	=> ($forum_data['forum_flags'] & FORUM_FLAG_ACTIVE_TOPICS) ? true : false,
+			'S_ENABLE_POST_REVIEW'		=> ($forum_data['forum_flags'] & FORUM_FLAG_POST_REVIEW) ? true : false,
 			)
 		);
 
@@ -748,12 +747,12 @@
 	// 16 = show active topics
 	// 32 = enable post review
 	$forum_data['forum_flags'] = 0;
-	$forum_data['forum_flags'] += ($forum_data['forum_link_track']) ? 1 : 0;
-	$forum_data['forum_flags'] += ($forum_data['prune_old_polls']) ? 2 : 0;
-	$forum_data['forum_flags'] += ($forum_data['prune_announce']) ? 4 : 0;
-	$forum_data['forum_flags'] += ($forum_data['prune_sticky']) ? 8 : 0;
-	$forum_data['forum_flags'] += ($forum_data['show_active']) ? 16 : 0;
-	$forum_data['forum_flags'] += ($forum_data['enable_post_review']) ? 32 : 0;
+	$forum_data['forum_flags'] += ($forum_data['forum_link_track']) ? FORUM_FLAG_LINK_TRACK : 0;
+	$forum_data['forum_flags'] += ($forum_data['prune_old_polls']) ? FORUM_FLAG_PRUNE_POLL : 0;
+	$forum_data['forum_flags'] += ($forum_data['prune_announce']) ? FORUM_FLAG_PRUNE_ANNOUNCE : 0;
+	$forum_data['forum_flags'] += ($forum_data['prune_sticky']) ? FORUM_FLAG_PRUNE_STICKY : 0;
+	$forum_data['forum_flags'] += ($forum_data['show_active']) ? FORUM_FLAG_ACTIVE_TOPICS : 0;
+	$forum_data['forum_flags'] += ($forum_data['enable_post_review']) ? FORUM_FLAG_POST_REVIEW : 0;
 
 	// Unset data that are not database fields
 	$forum_data_sql = $forum_data;

Modified: cms/trunk/includes/forums/admin/admin_icons.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_icons.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_icons.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,766 +1,579 @@
-<?php
-/** 
-*
-* @package acp
-* @version $Id: admin_icons.php,v 1.14 2005/04/30 14:12:20 acydburn Exp $
-* @copyright (c) 2005 phpBB Group 
-* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
-*
-*/
-
-/**
-*/
-if (!defined('VIPERAL') || VIPERAL != 'Admin')
-{
-	die; 
-}
-
-// Do we have general permissions?
-if (!$_CLASS['auth']->acl_get('a_icons'))
-{
-	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
-}
-
-// Grab some basic parameters
-$mode = request_var('mode', '');
-$action = request_var('action', '');
-$action = (isset($_POST['add'])) ? 'add' : $action;
-$action = (isset($_POST['edit'])) ? 'edit' : $action;
-$id = request_var('id', 0);
-
-// What are we working on?
-switch ($mode)
-{
-/*	case 'smilies':
-		$table = FORUMS_SMILIES_TABLE;
-		$lang = 'SMILIES';
-		$fields = 'smiley';
-		$img_path = $config['smilies_path'];
-	break;*/
-
-	//case 'icons':
-	default:
-		$table = FORUMS_ICONS_TABLE;
-		$lang = 'ICONS';
-		$fields = 'icons';
-		$img_path = $config['icons_path'];
-	break;
-}
-
-// Clear some arrays
-$_images = $_paks = array();
-$notice = '';
-
-
-// Grab file list of paks and images
-if ($action == 'edit' || $action == 'add' || $action == 'import')
-{
-	$imglist = filelist($img_path, '');
-	
-	foreach ($imglist as $path => $img_ary)
-	{
-		foreach ($img_ary as $img)
-		{
-			$img_size = @getimagesize($img_path . '/' . $path . $img);
-
-			$_images[$path.$img]['file'] = $path.$img;
-			$_images[$path.$img]['width'] = $img_size[0];
-			$_images[$path.$img]['height'] = $img_size[1];
-		}
-	}
-	unset($imglist);
-
-	$dir = @opendir($img_path);
-	while ($file = @readdir($dir))
-	{
-		if (is_file($img_path . '/' . $file) && preg_match('#\.pak$#i', $file))
-		{
-			$_paks[] = $file;
-		}
-	}
-	@closedir($dir);
-}
-
-$data = array();
-
-// What shall we do today? Oops, I believe that's trademarked ...
-switch ($action)
-{
-	case 'edit':
-		unset($_images);
-		$_images = array();
-
-	case 'add':
-
-		$order_list = '';
-
-		$sql = "SELECT * 
-			FROM $table 
-			ORDER BY {$fields}_order " . (($id || $action == 'add') ? 'DESC' : 'ASC');
-		$result = $_CLASS['core_db']->query($sql);
-
-		if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			do
-			{
-				if ($action == 'add')
-				{
-					unset($_images[$row[$fields . '_url']]);
-				}
-
-				if ($row[$fields . '_id'] == $id)
-				{
-					$after = TRUE;
-					$data[$row[$fields . '_url']] = $row;
-				}
-				else
-				{
-					if ($action == 'edit' && !$id)
-					{
-						$data[$row[$fields . '_url']] = $row;
-					}
-					
-					$selected = '';
-					if (!empty($after))
-					{
-						$selected = ' selected="selected"';
-						$after = FALSE;
-					}
-
-					$after_txt = ($mode == 'smilies') ? $row['code'] : $row['icons_url'];
-					$order_list = '<option value="' . ($row[$fields . '_order']) . '"' . $selected . '>' . sprintf($_CLASS['core_user']->lang['AFTER_' . $lang], ' -&gt; ' . htmlspecialchars($after_txt)) . '</option>' . $order_list;
-				}
-			}
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-		}
-		$_CLASS['core_db']->free_result($result);
-
-		$order_list = '<option value="1"' . ((!isset($after)) ? ' selected="selected"' : '') . '>' . $_CLASS['core_user']->lang['FIRST'] . '</option>' . $order_list;
-
-		if ($action == 'add')
-		{
-			$data = $_images;
-		}
-
-		$colspan = (($mode == 'smilies') ? '7' : '5');
-		$colspan += ($id) ? 1 : 0;
-		$colspan += ($action == 'add') ? 2 : 0;
-
-		adm_page_header($_CLASS['core_user']->lang[$lang]);
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang[$lang]; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang[$lang .'_EXPLAIN']; ?></p>
-
-<form method="post" action="<?php echo generate_link("Forums&amp;file=admin_icons&amp;mode=$mode&amp;action=" . (($action == 'add') ? 'create' : 'modify'), array('admin' => true)); ?>">
-<table class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center">
-<tr>
-	<th colspan="<?php echo $colspan; ?>"><?php echo $_CLASS['core_user']->lang[$lang . '_CONFIG'] ?></th>
-</tr>
-<tr>
-	<td class="cat"><?php echo $_CLASS['core_user']->lang[$lang . '_URL'] ?></td>
-	<td class="cat"><?php echo $_CLASS['core_user']->lang[$lang . '_LOCATION'] ?></td>
-<?php
-	if ($mode == 'smilies')
-	{
-?>
-	<td class="cat"><?php echo $_CLASS['core_user']->lang[$lang . '_CODE'] ?></td>
-	<td class="cat"><?php echo $_CLASS['core_user']->lang[$lang . '_EMOTION'] ?></td>
-<?php
-	}
-?>
-	<td class="cat"><?php echo $_CLASS['core_user']->lang[$lang . '_WIDTH'] ?></td>
-	<td class="cat"><?php echo $_CLASS['core_user']->lang[$lang . '_HEIGHT'] ?></td>
-	<td class="cat"><?php echo $_CLASS['core_user']->lang['DISPLAY_ON_POSTING'] ?></td>
-<?php
-	if ($id || $action == 'add')
-	{
-?>
-	<td class="cat"><?php echo $_CLASS['core_user']->lang[$lang . '_ORDER'] ?></td>
-<?php
-	}
-?>
-<?php
-	if ($action == 'add')
-	{
-?>
-	<td class="cat"><?php echo $_CLASS['core_user']->lang['ADD'] ?></td>
-<?php
-	}
-?>
-</tr>
-<?php
-	$row = 0;
-	
-	foreach ($data as $img => $img_row)
-	{
-		$row_class = (($row % 2) == 0) ? 'row1' : 'row2';
-?>
-<tr>
-	<td align="center" class="<?php echo $row_class; ?>"><img src="<?php echo $img_path . '/' . $img ?>" border="0" alt="" title="" /><input type="hidden" name="image[<?php echo $img; ?>]" value="1" /></td>
-	<td valign="top" class="<?php echo $row_class; ?>">[<?php echo $img; ?>]</td>
-<?php
-
-	if ($mode == 'smilies')
-	{
-
-?>
-		<td class="<?php echo $row_class; ?>"><input class="post" type="text" name="code[<?php echo $img; ?>]" value="<?php echo (!empty($img_row['code'])) ? $img_row['code'] : '' ?>" size="10" /></td>
-		<td class="<?php echo $row_class; ?>"><input class="post" type="text" name="emotion[<?php echo $img; ?>]" value="<?php echo (!empty($img_row['emotion'])) ? $img_row['emotion'] : '' ?>" size="10" /></td>
-<?php
-
-	}
-
-?>
-	<td class="<?php echo $row_class; ?>"><input class="post" type="text" size="3" name="width[<?php echo $img; ?>]" value="<?php echo (!empty($img_row[$fields .'_width'])) ? $img_row[$fields .'_width'] : $img_row['width'] ?>" /></td>
-	<td class="<?php echo $row_class; ?>"><input class="post" type="text" size="3" name="height[<?php echo $img; ?>]" value="<?php echo (!empty($img_row[$fields .'_height'])) ? $img_row[$fields .'_height'] : $img_row['height'] ?>" /></td>
-	<td class="<?php echo $row_class; ?>"><input type="checkbox" name="display_on_posting[<?php echo $img; ?>]"<?php echo (!empty($img_row['display_on_posting']) || $action == 'add') ? ' checked="checked"' : '' ?> /></td>
-<?php
-		if ($id || $action == 'add')
-		{
-?>
-			<td class="<?php echo $row_class; ?>"><select name="order[<?php echo $img; ?>]"><?php echo $order_list ?></select></td>
-<?php
-		}
-	
-		if ($action == 'add')
-		{
-?>
-			<td class="<?php echo $row_class; ?>"><input type="checkbox" name="add_img[<?php echo $img; ?>]" value="1" /><?php
-	
-	}
-?>
-</tr>
-<?php
-	if (isset($img_row[$fields . '_id']))
-	{
-
-?><input type="hidden" name="id[<?php echo $img; ?>]" value="<?php echo $img_row[$fields . '_id'] ?>" /><?php
-	
-	}
-	$row++;
-}
-?>
-<tr>
-	<td class="cat" colspan="<?php echo $colspan; ?>" align="center"><?php 
-			
-	
-?><input class="btnmain" type="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT'] ?>" /></td>
-	</tr>
-</table></form>
-<?php
-
-		adm_page_footer();
-		break;
-
-	case 'create':
-	case 'modify':
-
-		// Get items to create/modify
-		$images = (isset($_POST['image'])) ? array_keys($_POST['image']) : array();
-		
-		// Now really get the items
-		$image_id		= (isset($_POST['id'])) ? array_map('intval', $_POST['id']) : array();
-		$image_order	= (isset($_POST['order'])) ? array_map('intval', $_POST['order']) : array();
-		$image_width	= (isset($_POST['width'])) ? array_map('intval', $_POST['width']) : array();
-		$image_height	= (isset($_POST['height'])) ? array_map('intval', $_POST['height']) : array();
-		$image_add		= (isset($_POST['add_img'])) ? array_map('intval', $_POST['add_img']) : array();
-		$image_emotion	= request_var('emotion', '');
-		$image_code		= request_var('code', '');
-		$image_display_on_posting = (isset($_POST['display_on_posting'])) ? array_map('intval', $_POST['display_on_posting']) : array();
-
-		foreach ($images as $image)
-		{
-			if (($mode == 'smilies' && ($image_emotion[$image] == '' || $image_code[$image] == '')) ||
-				($action == 'create' && !isset($image_add[$image])))
-			{
-			}
-			else
-			{
-				if ($image_width[$image] == 0 || $image_height[$image] == 0)
-				{
-					$img_size = @getimagesize($img_path . '/' . $image);
-					$image_width[$image] = $img_size[0];
-					$image_height[$image] = $img_size[1];
-				}
-
-				$img_sql = array(
-					$fields . '_url'	=>	$image,
-					$fields . '_width'	=>	$image_width[$image],
-					$fields . '_height'	=>	$image_height[$image],
-					'display_on_posting'=>	(isset($image_display_on_posting[$image])) ? 1 : 0,
-				);
-
-				if ($mode == 'smilies')
-				{
-					$img_sql = array_merge($img_sql, array(
-						'emotion'	=>	$image_emotion[$image],
-						'code'		=>	$image_code[$image])
-					);
-				}
-				
-				if (!empty($image_order[$image]))
-				{
-					$img_sql = array_merge($img_sql, array(
-						$fields . '_order'	=>	$image_order[$image] . '.5')
-					);
-				}
-
-				if ($action == 'modify')
-				{
-					$sql = "UPDATE $table
-						SET " . $_CLASS['core_db']->sql_build_array('UPDATE', $img_sql) . " 
-						WHERE {$fields}_id = " . $image_id[$image];
-					$_CLASS['core_db']->query($sql);
-				}
-				else
-				{
-					$sql = "INSERT INTO $table " . $_CLASS['core_db']->sql_build_array('INSERT', $img_sql);
-					$_CLASS['core_db']->query($sql);
-				}
-
-				$update = FALSE;
-
-				if ($action == 'modify' && !empty($image_order[$image]))
-				{
-					$update = TRUE;
-
-					$result = $_CLASS['core_db']->query("SELECT {$fields}_order 
-						FROM $table
-						WHERE {$fields}_id = " . $image_id[$image]);
-					$order_old = $_CLASS['core_db']->sql_fetchfield($fields . '_order', 0, $result);
-
-					if ($order_old == $image_order[$image])
-					{
-						$update = FALSE;
-					}
-
-					if ($order_old > $image_order[$image])
-					{
-						$sign = '+';
-						$where = $fields . '_order >= ' . $image_order[$image] . " AND {$fields}_order < $order_old";
-					}
-					else if ($order_old < $image_order[$image])
-					{
-						$sign = '-';
-						$where = "{$fields}_order > $order_old AND {$fields}_order < " . $image_order[$image];
-						$sql[$fields . '_order'] = $image_order[$image] - 1;
-					}
-				}
-
-				if ($update)
-				{
-					$sql = "UPDATE $table
-						SET {$fields}_order = {$fields}_order $sign 1
-						WHERE $where";
-					$_CLASS['core_db']->query($sql);
-				}
-			
-			}
-		}
-		
-		$_CLASS['core_cache']->destroy('icons');
-
-		if ($action == 'modify')
-		{
-			trigger_error($_CLASS['core_user']->lang[$lang . '_EDITED']);
-		}
-		else
-		{
-			trigger_error($_CLASS['core_user']->lang[$lang . '_ADDED']);
-		}
-
-		break;
-
-	case 'import':
-
-		$pak = request_var('pak', '');
-		$current = request_var('current', '');
-
-		if ($pak != '')
-		{
-			$order = 0;
-
-			// The user has already selected a smilies_pak file
-			if ($current == 'delete')
-			{
-				$_CLASS['core_db']->query("TRUNCATE $table");
-
-				switch ($mode)
-				{
-					case 'smilies':
-						break;
-
-					case 'icons':
-						// Reset all icon_ids
-						$_CLASS['core_db']->query('UPDATE ' . TOPICS_TABLE . ' 
-							SET icon_id = 0');
-						$_CLASS['core_db']->query('UPDATE ' . POSTS_TABLE . ' 
-							SET icon_id = 0');
-						break;
-				}
-			}
-			else 
-			{
-				$cur_img = array();
-
-				$field_sql = ($mode == 'smilies') ? 'code' : 'icons_url';
-				$result = $_CLASS['core_db']->query("SELECT $field_sql FROM $table");
-
-				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-				{
-					++$order;
-					$cur_img[$row[$field_sql]] = 1;
-				}
-				$_CLASS['core_db']->free_result($result);
-			}
-
-			if (!($pak_ary = @file($img_path . '/' . $pak)))
-			{
-				trigger_error('Could not read pak file', E_USER_ERROR);
-			}
-
-			foreach ($pak_ary as $pak_entry)
-			{
-				$data = array();
-				if (preg_match_all("#'(.*?)', #", $pak_entry, $data))
-				{
-					if ((sizeof($data[1]) != 3 && $mode == 'icons') || 
-						(sizeof($data[1]) != 5 && $mode == 'smilies'))
-					{
-						trigger_error($_CLASS['core_user']->lang['WRONG_PAK_TYPE']);
-					}
-
-					$img = stripslashes($data[1][0]);
-					$width = stripslashes($data[1][1]);
-					$height = stripslashes($data[1][2]);
-					if (isset($data[1][3]) && isset($data[1][4]))
-					{
-						$emotion = stripslashes($data[1][3]);
-						$code = htmlentities(stripslashes($data[1][4]));
-					}
-
-					if ($current == 'replace' && 
-						(($mode == 'smilies' && !empty($cur_img[$code])) || 
-						($mode == 'icons' && !empty($cur_img[$img]))))
-					{
-						$replace_sql = ($mode == 'smilies') ? $code : $img;
-						$sql = array(
-							$fields . '_url'	=>	$img,
-							$fields . '_height'	=>	(int) $height,
-							$fields . '_width'	=>	(int) $width,
-						);
-						if ($mode == 'smilies')
-						{
-							$sql = array_merge($sql, array(
-								'emotion'	=>	$emotion
-							));
-						}
-
-						$_CLASS['core_db']->query("UPDATE $table SET " . $_CLASS['core_db']->sql_build_array('UPDATE', $sql) . " 
-							WHERE $field_sql = '" . $_CLASS['core_db']->sql_escape($replace_sql) . "'");
-					}
-					else
-					{
-						++$order;
-
-						$sql = array(
-							$fields . '_url'	=>	$img,
-							$fields . '_height'	=>	(int) $height,
-							$fields . '_width'	=>	(int) $width,
-							$fields . '_order'	=>	(int) $order,
-						);
-
-						if ($mode == 'smilies')
-						{
-							$sql = array_merge($sql, array(
-								'code'		=>	$code,
-								'emotion'	=>	$emotion
-							));
-						}
-						$_CLASS['core_db']->query("INSERT INTO $table " . $_CLASS['core_db']->sql_build_array('INSERT', $sql));
-					}
-
-				}
-			}
-
-			$_CLASS['core_cache']->destroy('icons');
-			trigger_error($_CLASS['core_user']->lang[$lang . '_IMPORT_SUCCESS']);
-		}
-		else
-		{
-			$pak_options = '';
-
-			foreach ($_paks as $pak)
-			{
-				$pak_options .= '<option value="' . $pak . '">' . htmlspecialchars($pak) . '</option>';
-			}
-
-			adm_page_header($_CLASS['core_user']->lang[$lang]);
-
-?>
-<h1><?php echo $_CLASS['core_user']->lang[$lang] ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang[$lang .'_EXPLAIN'] ?></p>
-
-<form method="post" action="<?php echo generate_link('Forums&amp;file=admin_icons&amp;mode=' . $mode . '&amp;action=import', array('admin' => true)); ?>">
-<table class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center">
-<tr>
-	<th colspan="2"><?php echo $_CLASS['core_user']->lang[$lang . '_IMPORT'] ?></th>
-</tr>
-<?php
-
-			if ($pak_options == '')
-			{
-
-?>
-<tr>
-	<td class="row1" colspan="2"><?php echo $_CLASS['core_user']->lang['NO_' . $lang . '_PAK']; ?></td>
-</tr>
-<?php
-
-			}
-			else
-			{
-
-?>
-<tr>
-	<td class="row2"><?php echo $_CLASS['core_user']->lang['SELECT_PACKAGE'] ?></td>
-	<td class="row1"><select name="pak"><?php echo $pak_options ?></select></td>
-</tr>
-<tr>
-	<td class="row2"><?php echo $_CLASS['core_user']->lang['CURRENT_' . $lang] ?><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['CURRENT_' . $lang . '_EXPLAIN'] ?></span></td>
-	<td class="row1"><input type="radio" name="current" value="keep" checked="checked" /> <?php echo $_CLASS['core_user']->lang['KEEP_ALL'] ?>&nbsp; &nbsp;<input type="radio" name="current" value="replace" /> <?php echo $_CLASS['core_user']->lang['REPLACE_MATCHES'] ?>&nbsp; &nbsp;<input type="radio" name="current" value="delete" /> <?php echo $_CLASS['core_user']->lang['DELETE_ALL'] ?>&nbsp;</td>
-	</tr>
-<tr>
-	<td class="cat" colspan="2" align="center"><input class="btnmain" name="import" type="submit" value="<?php echo $_CLASS['core_user']->lang['IMPORT_' . $lang] ?>" /></td>
-</tr>
-<?php
-
-			}
-
-?>
-</table></form>
-<?php
-			adm_page_footer();
-
-		}
-		break;
-
-	case 'export':
-
-		adm_page_header($_CLASS['core_user']->lang['EXPORT_' . $lang]);
-		trigger_error(sprintf($_CLASS['core_user']->lang['EXPORT_' . $lang . '_EXPLAIN'], '<a href="'.generate_link('Forums&amp;file=admin_icons&amp;mode=' . $mode . '&amp;action=send', array('admin' => true)).'">', '</a>'));
-		break;
-
-	case 'send':
-
-		$sql = "SELECT * 
-			FROM $table
-			ORDER BY {$fields}_order";
-		$result = $_CLASS['core_db']->query($sql);
-
-		$pak = '';
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$pak .= "'" . addslashes($row[$fields . '_url']) . "', ";
-			$pak .= "'" . addslashes($row[$fields . '_height']) . "', ";
-			$pak .= "'" . addslashes($row[$fields . '_width']) . "', ";
-			if ($mode == 'smilies')
-			{
-				$pak .= "'" . addslashes($row['emotion']) . "', ";
-				$pak .= "'" . addslashes($row['code']) . "', ";
-			}
-			$pak .= "\n";
-		}
-		$_CLASS['core_db']->free_result($result);
-
-		if ($pak != '')
-		{
-			$_CLASS['core_db']->sql_close();
-
-			header('Content-Type: text/x-delimtext; name="' . $fields . '.pak"');
-			header('Content-disposition: attachment; filename=' . $fields . '.pak"');
-			echo $pak;
-			exit;
-		}
-		else
-		{
-			trigger_error($_CLASS['core_user']->lang['NO_' . $fields . '_EXPORT']);
-		}
-		break;
-
-	case 'delete':
-
-		$_CLASS['core_db']->query("DELETE FROM $table 
-			WHERE {$fields}_id = $id");
-
-		switch ($mode)
-		{
-			case 'smilies':
-				break;
-
-			case 'icons':
-				// Reset appropriate icon_ids
-				$_CLASS['core_db']->query('UPDATE ' . TOPICS_TABLE . " 
-					SET icon_id = 0 
-					WHERE icon_id = $id");
-				$_CLASS['core_db']->query('UPDATE ' . POSTS_TABLE . " 
-					SET icon_id = 0 
-					WHERE icon_id = $id");
-				break;
-		}
-
-		$notice = $_CLASS['core_user']->lang[$lang . '_DELETED'];
-
-	case 'move_up':
-	case 'move_down':
-
-		if ($action != 'delete')
-		{
-			$image_order = intval($_GET['order']);
-			$order_total = $image_order * 2 + (($action == 'move_up') ? -1 : 1);
-
-			$sql = 'UPDATE ' . $table . '
-				SET ' . $fields . "_order = $order_total - " . $fields . '_order
-				WHERE ' . $fields . "_order IN ($image_order, " . (($action == 'move_up') ? $image_order - 1 : $image_order + 1) . ')';
-			$_CLASS['core_db']->query($sql);
-
-			$_CLASS['core_cache']->destroy('icons');
-
-		}
-		// No break; here, display the smilies admin back
-
-	default:
-
-		// By default, check that image_order is valid and fix it if necessary
-		$sql = "SELECT {$fields}_id AS order_id, {$fields}_order AS fields_order
-			FROM $table
-			ORDER BY {$fields}_order";
-		$result = $_CLASS['core_db']->query($sql);
-
-		if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$order = 0;
-			do
-			{
-				++$order;
-				if ($row['fields_order'] != $order)
-				{
-					$_CLASS['core_db']->query("UPDATE $table
-						SET {$fields}_order = $order
-						WHERE {$fields}_id = " . $row['order_id']);
-				}
-			}
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-		}
-		$_CLASS['core_db']->free_result($result);
-
-		// Output the page
-		adm_page_header($_CLASS['core_user']->lang[$lang]);
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang[$lang]; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang[$lang .'_EXPLAIN']; ?></p>
-
-<?php
-
-	if ($notice != '')
-	{
-
-?>
-		<b style="color:green"><?php echo $notice; ?></b>
-<?php
-	
-	}
-
-?>
-
-<form method="post" action="<?php echo generate_link('Forums&amp;file=admin_icons&amp;mode=' . $mode, array('admin' => true)); ?>">
-<table cellspacing="1" cellpadding="0" border="0" align="center">
-<tr>
-	<td align="right"> &nbsp;&nbsp; <a href="<?php echo generate_link('Forums&amp;file=admin_icons&amp;mode=' . $mode . '&amp;action=import', array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['IMPORT_' . $lang]; ?></a> | <a href="<?php echo generate_link('Forums&amp;file=admin_icons&amp;mode=' . $mode . '&amp;action=export', array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['EXPORT_' . $lang]; ?></a></td>
-</tr>
-<tr>
-	<td>
-		<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-		<tr>
-			<th><?php echo $_CLASS['core_user']->lang[$lang]; ?></th>
-<?php
-			if ($mode == 'smilies')
-			{
-?>
-				<th><?php echo $_CLASS['core_user']->lang['CODE']; ?></th>
-				<th><?php echo $_CLASS['core_user']->lang['EMOTION']; ?></th>
-<?php
-			}
-?>
-			<th><?php echo $_CLASS['core_user']->lang['ACTION']; ?></th>
-			<th><?php echo $_CLASS['core_user']->lang['REORDER']; ?></th>
-		</tr>
-<?php
-		$spacer = FALSE;
-
-		$sql = "SELECT * 
-			FROM $table
-			ORDER BY display_on_posting DESC, {$fields}_order ASC";
-		$result = $_CLASS['core_db']->query($sql);
-		
-		$row_class = 'row1';
-
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			if (!$spacer && !$row['display_on_posting'])
-			{
-				$spacer = TRUE;
-?>
-		<tr>
-			<td class="row3" colspan="<?php echo ($mode == 'smilies') ? 5 : 3; ?>" align="center"><?php echo $_CLASS['core_user']->lang[$lang . '_NOT_DISPLAYED'] ?></td>
-		</tr>
-<?php
-			}
-
-			$row_class = ($row_class != 'row1') ? 'row1' : 'row2';
-			$alt_text = ($mode == 'smilies') ? htmlspecialchars($row['code']) : '';
-?>
-		<tr>
-			<td class="<?php echo $row_class; ?>" align="center"><img src="<?php echo $img_path . '/' . $row[$fields . '_url']; ?>" width="<?php echo $row[$fields . '_width']; ?>" height="<?php echo $row[$fields . '_height']; ?>" alt="<?php echo $alt_text; ?>" title="<?php echo $alt_text; ?>" /></td>
-<?php
-
-			if ($mode == 'smilies')
-			{
-?>
-				<td class="<?php echo $row_class; ?>" align="center"><?php echo htmlspecialchars($row['code']); ?></td>
-				<td class="<?php echo $row_class; ?>" align="center"><?php echo $row['emotion']; ?></td>
-<?php
-			}
-?>
-			<td class="<?php echo $row_class; ?>" align="center"><a href="<?php echo generate_link("Forums&amp;file=admin_icons&amp;mode=$mode&amp;action=edit&amp;id=" . $row[$fields . '_id'], array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['EDIT']; ?></a> | <a href="<?php echo generate_link("Forums&amp;file=admin_icons&amp;mode=$mode&amp;action=delete&amp;id=" . $row[$fields . '_id'], array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['DELETE']; ?></a></td>
-			<td class="<?php echo $row_class; ?>" align="center"><a href="<?php echo generate_link("Forums&amp;file=admin_icons&amp;mode=$mode&amp;action=move_up&amp;order=" . $row[$fields . '_order'], array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['MOVE_UP']; ?></a> <br /> <a href="<?php echo generate_link("Forums&amp;file=admin_icons&amp;mode=$mode&amp;action=move_down&amp;order=" . $row[$fields . '_order'], array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['MOVE_DOWN']; ?></a></td>
-		</tr>
-<?php
-
-		}
-		$_CLASS['core_db']->free_result($result);
-
-?>
-		<tr>
-			<td class="cat" colspan="<?php echo ($mode == 'smilies') ? 5 : 3; ?>" align="center"><input type="submit" name="add" value="<?php echo $_CLASS['core_user']->lang['ADD_' . $lang]; ?>" class="btnmain" />&nbsp;<input type="submit" name="edit" value="<?php echo $_CLASS['core_user']->lang['EDIT_' . $lang]; ?>" class="btnmain" /></td>
-		</tr>
-		</table>
-	</td>
-</tr>
-</table>
-</form>
-
-<?php
-		adm_page_footer();
-
-		break;
-}
-
+<?php
+/** 
+*
+* @package acp
+* @version $Id: admin_icons.php,v 1.14 2005/04/30 14:12:20 acydburn Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+/**
+*/
+if (!defined('VIPERAL') || VIPERAL != 'Admin')
+{
+	die; 
+}
+
+// Do we have general permissions?
+if (!$_CLASS['forums_auth']->acl_get('a_icons'))
+{
+	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
+}
+
+$_CLASS['core_user']->add_lang('admin_posting', 'forums');
+
+// Set up general vars
+$action = request_var('action', '');
+$action = (isset($_POST['add'])) ? 'add' : $action;
+$action = (isset($_POST['edit'])) ? 'edit' : $action;
+$action = (isset($_POST['import'])) ? 'import' : $action;
+$icon_id = request_var('id', 0);
+
+$u_action = 'forums&file=admin_icons';
+
+$page_title = 'ACP_ICONS';
+
+// Clear some arrays
+$_images = $_paks = array();
+$notice = '';
+
+// Grab file list of paks and images
+if ($action == 'edit' || $action == 'add' || $action == 'import')
+{
+	$imglist = filelist($config['icons_path'], '');
+
+	foreach ($imglist as $path => $img_ary)
+	{
+		foreach ($img_ary as $img)
+		{
+			$img_size = @getimagesize($config['icons_path'] . '/' . $path . $img);
+
+			if (!$img_size[0] || !$img_size[1])
+			{
+				continue;
+			}
+
+			$_images[$path . $img]['file'] = $path . $img;
+			$_images[$path . $img]['width'] = $img_size[0];
+			$_images[$path . $img]['height'] = $img_size[1];
+		}
+	}
+	unset($imglist);
+
+	$dir = @opendir($config['icons_path']);
+	while (($file = @readdir($dir)) !== false)
+	{
+		if (is_file($config['icons_path'] . '/' . $file) && preg_match('#\.pak$#i', $file))
+		{
+			$_paks[] = $file;
+		}
+	}
+	@closedir($dir);
+}
+
+// What shall we do today? Oops, I believe that's trademarked ...
+switch ($action)
+{
+	case 'edit':
+		unset($_images);
+		$_images = array();
+
+	// no break;
+
+	case 'add':
+
+		$order_list = '';
+
+		$sql = 'SELECT * 
+			FROM '.FORUMS_ICONS_TABLE.'
+			ORDER BY icons_order ' . (($icon_id || $action == 'add') ? 'DESC' : 'ASC');
+		$result = $_CLASS['core_db']->query($sql);
+
+		$data = array();
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			if ($action == 'add')
+			{
+				unset($_images[$row['icons_url']]);
+			}
+
+			if ($row['icons_id'] == $icon_id)
+			{
+				$after = true;
+				$data[$row['icons_url']] = $row;
+			}
+			else
+			{
+				if ($action == 'edit' && !$icon_id)
+				{
+					$data[$row['icons_url']] = $row;
+				}
+
+				$selected = '';
+				if (!empty($after))
+				{
+					$selected = ' selected="selected"';
+					$after = false;
+				}
+
+				$after_txt = $row['icons_url'];
+				$order_list = '<option value="' . ($row['icons_order']) . '"' . $selected . '>' . sprintf($_CLASS['core_user']->lang['AFTER_ICONS'], ' -&gt; ' . htmlspecialchars($after_txt)) . '</option>' . $order_list;
+			}
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		$order_list = '<option value="1"' . ((!isset($after)) ? ' selected="selected"' : '') . '>' . $_CLASS['core_user']->lang['FIRST'] . '</option>' . $order_list;
+
+		if ($action === 'add')
+		{
+			$data = $_images;
+		}
+
+		$colspan = '5';
+		$colspan += ($icon_id) ? 1 : 0;
+		$colspan += ($action == 'add') ? 2 : 0;
+
+		$_CLASS['core_template']->assign_array(array(
+			'S_EDIT'		=> true,
+			'S_ADD'			=> ($action === 'add') ? true : false,
+			'S_ORDER_LIST'	=> $order_list,
+
+			'L_TITLE'		=> $_CLASS['core_user']->lang['ACP_ICONS'],
+			'L_EXPLAIN'		=> $_CLASS['core_user']->lang['ACP_ICONS_EXPLAIN'],
+			'L_CONFIG'		=> $_CLASS['core_user']->lang['ICONS_CONFIG'],
+			'L_URL'			=> $_CLASS['core_user']->lang['ICONS_URL'],
+			'L_LOCATION'	=> $_CLASS['core_user']->lang['ICONS_LOCATION'],
+			'L_WIDTH'		=> $_CLASS['core_user']->lang['ICONS_WIDTH'],
+			'L_HEIGHT'		=> $_CLASS['core_user']->lang['ICONS_HEIGHT'],
+			'L_ORDER'		=> $_CLASS['core_user']->lang['ICONS_ORDER'],
+
+			'COLSPAN'		=> $colspan,
+			'ID'			=> $icon_id,
+
+			'U_BACK'		=> generate_link($u_action, array('admin' => true)),
+			'U_ACTION'		=> generate_link($u_action . '&amp;action=' . (($action == 'add') ? 'create' : 'modify'), array('admin' => true)),
+		));
+
+		foreach ($data as $img => $img_row)
+		{
+			$_CLASS['core_template']->assign_vars_array('items', array(
+				'IMG'		=> $img,
+				'IMG_SRC'	=> $config['icons_path'] . '/' . $img,
+
+				'S_ID'				=> (isset($img_row['icons_id'])) ? true : false,
+				'ID'				=> (isset($img_row['icons_id'])) ? $img_row['icons_id'] : 0,
+				'WIDTH'				=> (!empty($img_row['icons_width'])) ? $img_row['icons_width'] : $img_row['width'],
+				'HEIGHT'			=> (!empty($img_row['icons_height'])) ? $img_row['icons_height'] : $img_row['height'],
+				'POSTING_CHECKED'	=> (!empty($img_row['display_on_posting']) || $action === 'add') ? ' checked="checked"' : '')
+			);
+		}
+
+		$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'modules/forums/admin/acp_icons.html');
+
+		return;
+
+	break;
+
+	case 'create':
+	case 'modify':
+
+		// Get items to create/modify
+		$images = (isset($_POST['image'])) ? array_keys(request_var('image', array('' => 0))) : array();
+		
+		// Now really get the items
+		$image_id		= (isset($_POST['id'])) ? array_map('intval', $_POST['id']) : array();
+		$image_order	= (isset($_POST['order'])) ? array_map('intval', $_POST['order']) : array();
+		$image_width	= (isset($_POST['width'])) ? array_map('intval', $_POST['width']) : array();
+		$image_height	= (isset($_POST['height'])) ? array_map('intval', $_POST['height']) : array();
+		$image_add		= (isset($_POST['add_img'])) ? array_map('intval', $_POST['add_img']) : array();
+		$image_emotion	= request_var('emotion', array('' => ''));
+		$image_code		= request_var('code', array('' => ''));
+		$image_display_on_posting = (isset($_POST['display_on_posting'])) ? array_map('intval', $_POST['display_on_posting']) : array();
+
+		foreach ($images as $image)
+		{
+			if ($action == 'create' && !isset($image_add[$image]))
+			{
+			}
+			else
+			{
+				if ($image_width[$image] == 0 || $image_height[$image] == 0)
+				{
+					$img_size = @getimagesize($config['icons_path'] . '/' . $image);
+					$image_width[$image] = $img_size[0];
+					$image_height[$image] = $img_size[1];
+				}
+
+				$img_sql = array(
+					'icons_url'				=> $image,
+					'icons_width'			=> $image_width[$image],
+					'icons_height'			=> $image_height[$image],
+					'display_on_posting'	=> (isset($image_display_on_posting[$image])) ? 1 : 0,
+				);
+
+				if (!empty($image_order[$image]))
+				{
+					$img_sql = array_merge($img_sql, array(
+						'icons_order'	=>	$image_order[$image] . '.5')
+					);
+				}
+
+				if ($action == 'modify')
+				{
+					$sql = 'UPDATE '.FORUMS_ICONS_TABLE.'
+						SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $img_sql) . " 
+						WHERE icons_id = " . $image_id[$image];
+					$_CLASS['core_db']->query($sql);
+				}
+				else
+				{
+					$sql = 'INSERT INTO '.FORUMS_ICONS_TABLE.' ' . $_CLASS['core_db']->sql_build_array('INSERT', $img_sql);
+					$_CLASS['core_db']->query($sql);
+				}
+
+				$update = false;
+
+				if ($action == 'modify' && !empty($image_order[$image]))
+				{
+					$update = true;
+
+					$sql = 'SELECT icons_order 
+						FROM '.FORUMS_ICONS_TABLE.'
+						WHERE icons_id = ' . $image_id[$image];
+					$result = $_CLASS['core_db']->query($sql);
+
+					$order_old = $_CLASS['core_db']->fetch_row_assoc($result);
+					$order_old = (int) $order_old['icons_order'];
+
+					$_CLASS['core_db']->free_result($result);
+
+					if ($order_old == $image_order[$image])
+					{
+						$update = false;
+					}
+
+					if ($order_old > $image_order[$image])
+					{
+						$sign = '+';
+						$where =  'icons_order >= ' . $image_order[$image] . " AND icons_order < $order_old";
+					}
+					else if ($order_old < $image_order[$image])
+					{
+						$sign = '-';
+						$where = "icons_order > $order_old AND icons_order < " . $image_order[$image];
+						$sql['icons_order'] = $image_order[$image] - 1;
+					}
+				}
+
+				if ($update)
+				{
+					$sql = 'UPDATE '.FORUMS_ICONS_TABLE."
+						SET icons_order = icons_order $sign 1
+						WHERE $where";
+					$_CLASS['core_db']->query($sql);
+				}
+			}
+		}
+		
+		$_CLASS['core_cache']->destroy('icons');
+
+		if ($action == 'modify')
+		{
+			trigger_error($_CLASS['core_user']->lang['ICONS_EDITED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
+		}
+		else
+		{
+			trigger_error($_CLASS['core_user']->lang['ICONS_ADDED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
+		}
+
+	break;
+
+	case 'import':
+
+		$pak = request_var('pak', '');
+		$current = request_var('current', '');
+
+		if ($pak != '')
+		{
+			$order = 0;
+
+			// The user has already selected a icon_pak file
+			if ($current == 'delete')
+			{
+				$_CLASS['core_db']->query('TRUNCATE TABLE '.FORUMS_ICONS_TABLE);
+
+				// Reset all icon_ids
+				$_CLASS['core_db']->query('UPDATE ' . FORUMS_TOPICS_TABLE . ' SET icon_id = 0');
+				$_CLASS['core_db']->query('UPDATE ' . FORUMS_POSTS_TABLE . ' SET icon_id = 0');
+			}
+			else 
+			{
+				$cur_img = array();
+
+				$sql = 'SELECT icons_url
+					FROM '.FORUMS_ICONS_TABLE;
+				$result = $_CLASS['core_db']->query($sql);
+
+				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+				{
+					++$order;
+					$cur_img[$row[$field_sql]] = 1;
+				}
+				$_CLASS['core_db']->free_result($result);
+			}
+
+			if (!($pak_ary = @file($config['icons_path'] . '/' . $pak)))
+			{
+				trigger_error($_CLASS['core_user']->lang['PAK_FILE_NOT_READABLE'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+			}
+
+			foreach ($pak_ary as $pak_entry)
+			{
+				$data = array();
+				if (preg_match_all("#'(.*?)', #", $pak_entry, $data))
+				{
+					if (sizeof($data[1]) != 4)
+					{
+						trigger_error($_CLASS['core_user']->lang['WRONG_PAK_TYPE'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+					}
+
+					// Stripslash here because it got addslashed before... (on export)
+					$img = stripslashes($data[1][0]);
+					$width = stripslashes($data[1][1]);
+					$height = stripslashes($data[1][2]);
+					$display_on_posting = stripslashes($data[1][3]);
+
+					if (isset($data[1][4]) && isset($data[1][5]))
+					{
+						$emotion = stripslashes($data[1][4]);
+						$code = stripslashes($data[1][5]);
+					}
+
+					if ($current == 'replace' && !empty($cur_img[$img]))
+					{
+						$replace_sql = $img;
+						$sql = array(
+							'icons_url'		=> $img,
+							'icons_height'		=> (int) $height,
+							'icons_width'		=> (int) $width,
+							'display_on_posting'	=> (int) $display_on_posting,
+						);
+
+						$sql = 'UPDATE '.FORUMS_ICONS_TABLE.' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql) . " 
+							WHERE $field_sql = '" . $_CLASS['core_db']->escape($replace_sql) . "'";
+						$_CLASS['core_db']->query($sql);
+					}
+					else
+					{
+						++$order;
+
+						$sql = array(
+							'icons_url'	=> $img,
+							'icons_height'	=> (int) $height,
+							'icons_width'	=> (int) $width,
+							'icons_order'	=> (int) $order,
+							'display_on_posting'=> (int) $display_on_posting,
+						);
+
+						$_CLASS['core_db']->query('INSERT INTO '.FORUMS_ICONS_TABLE.' ' . $_CLASS['core_db']->sql_build_array('INSERT', $sql));
+					}
+				}
+			}
+
+			$_CLASS['core_cache']->destroy('icons');
+
+			trigger_error($_CLASS['core_user']->lang['ICONS_IMPORT_SUCCESS'] . adm_back_link(generate_link($u_action, array('admin' => true))));
+		}
+		else
+		{
+			$pak_options = '';
+
+			foreach ($_paks as $pak)
+			{
+				$pak_options .= '<option value="' . $pak . '">' . htmlspecialchars($pak) . '</option>';
+			}
+
+			$_CLASS['core_template']->assign_array(array(
+				'S_CHOOSE_PAK'		=> true,
+				'S_PAK_OPTIONS'		=> $pak_options,
+
+				'L_TITLE'			=> $_CLASS['core_user']->lang['ACP_ICONS'],
+				'L_EXPLAIN'			=> $_CLASS['core_user']->lang['ACP_ICONS_EXPLAIN'],
+				'L_NO_PAK_OPTIONS'	=> $_CLASS['core_user']->lang['NO_ICONS_PAK'],
+				'L_CURRENT'			=> $_CLASS['core_user']->lang['CURRENT_ICONS'],
+				'L_CURRENT_EXPLAIN'	=> $_CLASS['core_user']->lang['CURRENT_ICONS_EXPLAIN'],
+				'L_IMPORT_SUBMIT'	=> $_CLASS['core_user']->lang['IMPORT_ICONS'],
+
+				'U_BACK'		=> generate_link($u_action, array('admin' => true)),
+				'U_ACTION'		=> generate_link($u_action . '&amp;action=import', array('admin' => true)),
+			));
+		}
+	break;
+
+	case 'export':
+
+		$page_title = 'EXPORT_ICONS';
+		$tpl_name = 'message_body';
+
+		$_CLASS['core_template']->assign_array(array(
+			'MESSAGE_TITLE'		=> $_CLASS['core_user']->lang['EXPORT_ICONS'],
+			'MESSAGE_TEXT'		=> sprintf($_CLASS['core_user']->lang['EXPORT_ICONS_EXPLAIN'], '<a href="' . generate_link($u_action . '&amp;action=send', array('admin' => true)).'">', '</a>'))
+		);
+
+		$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'modules/forums/admin/acp_icons.html');
+
+	break;
+
+	case 'send':
+
+		$sql = 'SELECT * 
+			FROM '.FORUMS_ICONS_TABLE.'
+			ORDER BY icons_order';
+		$result = $_CLASS['core_db']->query($sql);
+
+		$pak = '';
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$pak .= "'" . addslashes($row['icons_url']) . "', ";
+			$pak .= "'" . addslashes($row['icons_width']) . "', ";
+			$pak .= "'" . addslashes($row['icons_height']) . "', ";
+			$pak .= "'" . addslashes($row['display_on_posting']) . "', ";
+			$pak .= "\n";
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		if ($pak != '')
+		{
+			garbage_collection();
+
+			header('Pragma: public');
+
+			// Send out the Headers
+			header('Content-Type: text/x-delimtext; name="icons.pak"');
+			header('Content-Disposition: inline; filename="icons.pak"');
+			echo $pak;
+
+			flush();
+			exit;
+		}
+		else
+		{
+			trigger_error($_CLASS['core_user']->lang['NO_ICONS_EXPORT'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+		}
+
+	break;
+
+	case 'delete':
+		if (display_confirmation())
+		{
+			$sql = 'DELETE FROM '.FORUMS_ICONS_TABLE.'
+				WHERE icons_id = '.$icon_id;
+			$_CLASS['core_db']->query($sql);
+	
+			// Reset appropriate icon_ids
+			$_CLASS['core_db']->query('UPDATE ' . FORUMS_TOPICS_TABLE . " 
+				SET icon_id = 0 
+				WHERE icon_id = $icon_id");
+	
+			$_CLASS['core_db']->query('UPDATE ' . FORUMS_POSTS_TABLE . " 
+				SET icon_id = 0 
+				WHERE icon_id = $icon_id");
+	
+			$notice = $_CLASS['core_user']->lang['ICONS_DELETED'];
+	
+			$_CLASS['core_cache']->destroy('icons');
+		}
+
+	break;
+
+	case 'move_up':
+	case 'move_down':
+
+		$image_order = request_var('order', 0);
+		$order_total = $image_order * 2 + (($action == 'move_up') ? -1 : 1);
+
+		$sql = 'UPDATE '.FORUMS_ICONS_TABLE."
+			SET icons_order = $order_total - icons_order
+			WHERE icons_order IN ($image_order, " . (($action == 'move_up') ? $image_order - 1 : $image_order + 1) . ')';
+		$_CLASS['core_db']->query($sql);
+
+		$_CLASS['core_cache']->destroy('icons');
+
+	break;
+}
+
+// By default, check that image_order is valid and fix it if necessary
+$sql = 'SELECT icons_id AS order_id, icons_order AS fields_order
+	FROM '.FORUMS_ICONS_TABLE.'
+	ORDER BY display_on_posting DESC, icons_order';
+$result = $_CLASS['core_db']->query($sql);
+
+if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+{
+	$order = 0;
+	do
+	{
+		++$order;
+		if ($row['fields_order'] != $order)
+		{
+			$_CLASS['core_db']->query('UPDATE '.FORUMS_ICONS_TABLE."
+				SET icons_order = $order
+				WHERE icons_id = " . $row['order_id']);
+		}
+	}
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
+}
+$_CLASS['core_db']->free_result($result);
+
+$_CLASS['core_template']->assign_array(array(
+	'L_TITLE'			=> $_CLASS['core_user']->lang['ACP_ICONS'],
+	'L_EXPLAIN'			=> $_CLASS['core_user']->lang['ACP_' . 'ICONS_EXPLAIN'],
+	'L_IMPORT'			=> $_CLASS['core_user']->lang['IMPORT_ICONS'],
+	'L_EXPORT'			=> $_CLASS['core_user']->lang['EXPORT_ICONS'],
+	'L_NOT_DISPLAYED'	=> $_CLASS['core_user']->lang['ICONS_NOT_DISPLAYED'],
+	'L_ICON_ADD'		=> $_CLASS['core_user']->lang['ADD_ICONS'],
+	'L_ICON_EDIT'		=> $_CLASS['core_user']->lang['EDIT_ICONS'],
+
+	'NOTICE'			=> $notice,
+	'COLSPAN'			=> 3,
+
+	'U_ACTION'			=> generate_link($u_action, array('admin' => true)),
+	'U_IMPORT'			=> generate_link($u_action . '&amp;action=import', array('admin' => true)),
+	'U_EXPORT'			=> generate_link($u_action . '&amp;action=export', array('admin' => true)),
+));
+
+$spacer = false;
+
+$sql = 'SELECT * 
+	FROM '.FORUMS_ICONS_TABLE.'
+	ORDER BY icons_order ASC';
+$result = $_CLASS['core_db']->query($sql);
+
+while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+{
+
+	$_CLASS['core_template']->assign_vars_array('items', array(
+		'S_SPACER'		=> (!$spacer && !$row['display_on_posting']) ? true : false,
+		'ALT_TEXT'		=> '',
+		'IMG_SRC'		=> $config['icons_path'] . '/' . $row['icons_url'],
+		'WIDTH'			=> $row['icons_width'],
+		'HEIGHT'		=> $row['icons_height'],
+		'CODE'			=> (isset($row['code'])) ? $row['code'] : '',
+		'EMOTION'		=> (isset($row['emotion'])) ? $row['emotion'] : '',
+		'U_EDIT'		=> generate_link($u_action . '&amp;action=edit&amp;id=' . $row['icons_id'], array('admin' => true)),
+		'U_DELETE'		=> generate_link($u_action . '&amp;action=delete&amp;id=' . $row['icons_id'], array('admin' => true)),
+		'U_MOVE_UP'		=> generate_link($u_action . '&amp;action=move_up&amp;order=' . $row['icons_order'], array('admin' => true)),
+		'U_MOVE_DOWN'	=> generate_link($u_action . '&amp;action=move_down&amp;order=' . $row['icons_order'], array('admin' => true))
+	));
+
+	if (!$spacer && !$row['display_on_posting'])
+	{
+		$spacer = true;
+	}
+}
+$_CLASS['core_db']->free_result($result);
+
+$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'modules/forums/admin/acp_icons.html');
+
 ?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/admin/admin_jabber.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_jabber.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_jabber.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,196 +0,0 @@
-<?php
-/** 
-*
-* @package acp
-* @version $Id: admin_jabber.php,v 1.9 2005/04/09 12:26:30 acydburn Exp $
-* @copyright (c) 2005 phpBB Group 
-* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
-*
-* @todo Check/enter/update transport info
-*/
-if (!defined('VIPERAL') || VIPERAL != 'Admin')
-{
-	die; 
-}
-
-// Do we have general permissions?
-if (!$_CLASS['auth']->acl_get('a_server'))
-{
-	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
-}
-
-// Grab some basic parameters
-$submit = (isset($_POST['submit'])) ? true : false;
-
-$jab_enable		= request_var('jab_enable', $config['jab_enable']);
-$jab_host		= request_var('jab_host', $config['jab_host']);
-$jab_port		= request_var('jab_port', $config['jab_port']);
-$jab_username	= request_var('jab_username', $config['jab_username']);
-$jab_password	= request_var('jab_password', $config['jab_password']);
-$jab_resource	= request_var('jab_resource', $config['jab_resource']);
-
-include($site_file_root.'includes/forums/functions_jabber.php');
-
-$jabber = new jabber();
-$error = array();
-
-// Setup the basis vars for jabber connection
-$jabber->server		= $jab_host;
-$jabber->port		= ($jab_port) ? $jab_port : 5222;
-$jabber->username	= $jab_username;
-$jabber->password	= $jab_password;
-$jabber->resource	= $jab_resource;
-
-// Are changing (or initialising) a new host or username? If so run some checks and 
-// try to create account if it doesn't exist
-if ($jab_enable)
-{
-	if ($jab_host != $config['jab_host'] || $jab_username != $config['jab_username'])
-	{
-		if (!$jabber->connect())
-		{
-			trigger_error('Could not connect to Jabber server', E_USER_ERROR);
-		}
-		// First we'll try to authorise using this account, if that fails we'll
-		// try to create it.
-		if (!($result = $jabber->send_auth()))
-		{
-			if (($result = $jabber->account_registration($config['board_email'], $_CORE_CONFIG['global']['site_name'])) <> 2)
-			{
-				$error[] = ($result == 1) ? $_CLASS['core_user']->lang['ERR_JAB_USERNAME'] : sprintf($_CLASS['core_user']->lang['ERR_JAB_REGISTER'], $result);
-			}
-			else
-			{
-				$message = $_CLASS['core_user']->lang['JAB_REGISTERED'];
-				$log = 'JAB_REGISTER';
-			}
-		}
-		else
-		{
-			$message = $_CLASS['core_user']->lang['JAB_CHANGED'];
-			$log = 'JAB_CHANGED';
-		}
-
-		sleep(1);
-		$jabber->disconnect();
-	}
-	else if ($jab_password != $config['jab_password'])
-	{echo 'test';
-		
-		if (!$jabber->connect())
-		{
-			trigger_error('Could not connect to Jabber server', E_USER_ERROR);
-		}
-
-		if (!$jabber->send_auth())
-		{
-			trigger_error('Could not authorise on Jabber server', E_USER_ERROR);
-		}
-		$jabber->send_presence(NULL, NULL, 'online');
-
-		if (($result = $jabber->change_password($jab_password))  <> 2)
-		{
-			$error[] = ($result == 1) ? $_CLASS['core_user']->lang['ERR_JAB_PASSCHG'] : sprintf($_CLASS['core_user']->lang['ERR_JAB_PASSFAIL'], $result);
-		}
-		else
-		{
-			$message = $_CLASS['core_user']->lang['JAB_PASS_CHANGED'];
-			$log = 'JAB_PASSCHG';
-		}
-
-		sleep(1);
-		$jabber->disconnect();
-	}
-}
-
-// Pull relevant config data
-$sql = 'SELECT *
-	FROM ' . CONFIG_TABLE . "
-	WHERE config_name LIKE 'jab_%'";
-$result = $_CLASS['core_db']->sql_query($sql);
-
-while ($row = $_CLASS['core_db']->sql_fetchrow($result))
-{
-	$config_name = $row['config_name'];
-	$config_value = $row['config_value'];
-
-	$default_config[$config_name] = $config_value;
-	$new[$config_name] = (isset($_POST[$config_name])) ? request_var($config_name, '') : $default_config[$config_name];
-
-	if ($submit && !sizeof($error))
-	{
-		set_config($config_name, $new[$config_name]);
-	}
-}
-
-if ($submit && !sizeof($error))
-{
-	add_log('admin', 'LOG_' . $log);
-	trigger_error($message);
-}
-
-
-
-// Output the page
-adm_page_header($_CLASS['core_user']->lang['IM']);
-
-$jab_enable_yes		= ($new['jab_enable']) ? 'checked="checked"' : '';
-$jab_enable_no		= (!$new['jab_enable']) ? 'checked="checked"' : '';
-
-?>
-<h1><?php echo $_CLASS['core_user']->lang['IM']; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['IM_EXPLAIN']; ?></p>
-
-<form method="post" action="<?php echo generate_link('Forums&amp;file=admin_jabber', array('admin' => true)); ?>"><table class="tablebg" width="95%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $_CLASS['core_user']->lang['IM']; ?></th>
-	</tr>
-<?php
-
-	if (sizeof($error))
-	{
-
-?>
-	<tr>
-		<td class="row3" colspan="2" align="center"><span style="color:red"><?php echo implode('<br />', $error); ?></td>
-	</tr>
-<?php
-
-	}
-
-?>
-	<tr>
-		<td class="row1" width="40%"><b><?php echo $_CLASS['core_user']->lang['JAB_ENABLE']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['JAB_ENABLE_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="jab_enable" value="1"<?php echo $jab_enable_yes; ?> /><?php echo $_CLASS['core_user']->lang['ENABLED']; ?>&nbsp; &nbsp;<input type="radio" name="jab_enable" value="0"<?php echo $jab_enable_no; ?> /><?php echo $_CLASS['core_user']->lang['DISABLED']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1" width="40%"><b><?php echo $_CLASS['core_user']->lang['JAB_SERVER']; ?>: </b><br /><span class="gensmall"><?php echo sprintf($_CLASS['core_user']->lang['JAB_SERVER_EXPLAIN'], '<a href="http://www.jabber.org/user/publicservers.php" target="_blank">', '</a>'); ?></span></td>
-		<td class="row2"><input class="post" type="text" name="jab_host" value="<?php echo $new['jab_host']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1" width="40%"><b><?php echo $_CLASS['core_user']->lang['JAB_PORT']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['JAB_PORT_EXPLAIN']; ?></span></td>
-		<td class="row2"><input class="post" type="text" name="jab_port" value="<?php echo $new['jab_port']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['JAB_USERNAME']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['JAB_USERNAME_EXPLAIN']; ?></span></td>
-		<td class="row2"><input class="post" type="text" name="jab_username" value="<?php echo $new['jab_username']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['JAB_PASSWORD']; ?>: </b></td>
-		<td class="row2"><input class="post" type="text" name="jab_password" value="<?php echo $new['jab_password']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $_CLASS['core_user']->lang['JAB_RESOURCE']; ?>: </b><br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['JAB_RESOURCE_EXPLAIN']; ?></span></td>
-		<td class="row2"><input class="post" type="text" name="jab_resource" value="<?php echo $new['jab_resource']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><input class="btnmain" type="submit" name="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" />&nbsp;&nbsp;<input class="btnlite" type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" /></td>
-	</tr>
-</table></form>
-
-<?php
-
-	adm_page_footer();
-
-?>
\ No newline at end of file

Added: cms/trunk/includes/forums/admin/admin_logs.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_logs.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_logs.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -0,0 +1,138 @@
+<?php
+// -------------------------------------------------------------
+//
+// $Id: admin_viewlogs.php,v 1.13 2004/11/06 14:11:47 acydburn Exp $
+//
+// FILENAME  : admin_viewlogs.php 
+// STARTED   : Sat Feb 13, 2001
+// COPYRIGHT : ? 2001, 2003 phpBB Group
+// WWW       : http://www.phpbb.com/
+// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
+// 
+// -------------------------------------------------------------
+
+if (!$_CLASS['forums_auth']->acl_get('a_'))
+{
+	trigger_error('NO_ADMIN');
+}
+
+$_CLASS['core_user']->add_lang('mcp', 'forums');
+
+// Set up general vars
+$action		= request_var('action', '');
+$mode		= request_var('mode', '');
+$forum_id	= request_var('f', 0);
+$start		= request_var('start', 0);
+$deletemark = isset($_POST['delmarked']) ? true : false;
+$deleteall	= isset($_POST['delall']) ? true : false;
+$marked		= request_var('mark', array(0));
+
+$u_action = 'forums&file=admin_logs&mode='.$mode;
+
+// Sort keys
+$sort_days	= request_var('st', 0);
+$sort_key	= request_var('sk', 't');
+$sort_dir	= request_var('sd', 'd');
+
+$log_type = constant('LOG_' . strtoupper($mode));
+
+// Delete entries if requested and able
+if (($deletemark || $deleteall) && $_CLASS['forums_auth']->acl_get('a_clearlogs'))
+{
+	$where_sql = '';
+
+	if ($deletemark && sizeof($marked))
+	{
+		$sql_in = array();
+		foreach ($marked as $mark)
+		{
+			$sql_in[] = $mark;
+		}
+		$where_sql = ' AND log_id IN (' . implode(', ', $sql_in) . ')';
+		unset($sql_in);
+	}
+
+	if ($where_sql || $deleteall)
+	{
+		$sql = 'DELETE FROM ' . LOG_TABLE . "
+			WHERE log_type = $log_type
+			$where_sql";
+		$_CLASS['core_db']->query($sql);
+
+		add_log('admin', 'LOG_CLEAR_' . strtoupper($mode));
+	}
+}
+
+// Sorting
+$limit_days = array(0 => $_CLASS['core_user']->lang['ALL_ENTRIES'], 1 => $_CLASS['core_user']->lang['1_DAY'], 7 => $_CLASS['core_user']->lang['7_DAYS'], 14 => $_CLASS['core_user']->lang['2_WEEKS'], 30 => $_CLASS['core_user']->lang['1_MONTH'], 90 => $_CLASS['core_user']->lang['3_MONTHS'], 180 => $_CLASS['core_user']->lang['6_MONTHS'], 365 => $_CLASS['core_user']->lang['1_YEAR']);
+$sort_by_text = array('u' => $_CLASS['core_user']->lang['SORT_USERNAME'], 't' => $_CLASS['core_user']->lang['SORT_DATE'], 'i' => $_CLASS['core_user']->lang['SORT_IP'], 'o' => $_CLASS['core_user']->lang['SORT_ACTION']);
+$sort_by_sql = array('u' => 'u.username', 't' => 'l.log_time', 'i' => 'l.log_ip', 'o' => 'l.log_operation');
+
+$s_limit_days = $s_sort_key = $s_sort_dir = $u_sort_param = '';
+gen_sort_selects($limit_days, $sort_by_text, $sort_days, $sort_key, $sort_dir, $s_limit_days, $s_sort_key, $s_sort_dir, $u_sort_param);
+
+// Define where and sort sql for use in displaying logs
+$sql_where = ($sort_days) ? ($_CLASS['core_user']->time - ($sort_days * 86400)) : 0;
+$sql_sort = $sort_by_sql[$sort_key] . ' ' . (($sort_dir == 'd') ? 'DESC' : 'ASC');
+
+$l_title = $_CLASS['core_user']->lang['ACP_' . strtoupper($mode) . '_LOGS'];
+$l_title_explain = $_CLASS['core_user']->lang['ACP_' . strtoupper($mode) . '_LOGS_EXPLAIN'];
+
+// Define forum list if we're looking @ mod logs
+if ($mode == 'mod')
+{
+	$forum_box = '<option value="0">' . $_CLASS['core_user']->lang['ALL_FORUMS'] . '</option>' . make_forum_select($forum_id);
+	
+	$_CLASS['core_template']->assign_array(array(
+		'S_SHOW_FORUMS'			=> true,
+		'S_FORUM_BOX'			=> $forum_box
+	));
+}
+
+// Grab log data
+$log_data = array();
+$log_count = 0;
+view_log($mode, $log_data, $log_count, $config['topics_per_page'], $start, $forum_id, 0, 0, $sql_where, $sql_sort);
+
+$_CLASS['core_template']->assign_array(array(
+	'L_TITLE'		=> $l_title,
+	'L_EXPLAIN'		=> $l_title_explain,
+	'U_ACTION'		=> generate_link($u_action, array('admin' => true)),
+
+	'S_ON_PAGE'		=> on_page($log_count, $config['topics_per_page'], $start),
+	'PAGINATION'	=> generate_pagination($u_action . "&amp;$u_sort_param", $log_count, $config['topics_per_page'], $start, true),
+
+	'S_LIMIT_DAYS'	=> $s_limit_days,
+	'S_SORT_KEY'	=> $s_sort_key,
+	'S_SORT_DIR'	=> $s_sort_dir,
+	'S_CLEARLOGS'	=> true,//$_CLASS['forums_auth']->acl_get('a_clearlogs'),
+));
+
+foreach ($log_data as $row)
+{
+	$data = array();
+		
+	$checks = array('viewtopic', 'viewlogs', 'viewforum');
+	foreach ($checks as $check)
+	{
+		if (isset($row[$check]) && $row[$check])
+		{
+			$data[] = '<a href="' . $row[$check] . '">' . $_CLASS['core_user']->lang['LOGVIEW_' . strtoupper($check)] . '</a>';
+		}
+	}
+
+	$_CLASS['core_template']->assign_vars_array('log', array(
+		'USERNAME'			=> $row['username'],
+		'REPORTEE_USERNAME'	=> ($row['reportee_username'] && $row['user_id'] != $row['reportee_id']) ? $row['reportee_username'] : '',
+
+		'IP'				=> $row['ip'],
+		'DATE'				=> $_CLASS['core_user']->format_date($row['time']),
+		'ACTION'			=> $row['action'],
+		'DATA'				=> (sizeof($data)) ? implode(' | ', $data) : '',
+		'ID'				=> $row['id'],
+	));
+}
+
+$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($l_title), 'modules/forums/admin/acp_logs.html');
+
+?>
\ No newline at end of file

Added: cms/trunk/includes/forums/admin/admin_permission_roles.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_permission_roles.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_permission_roles.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -0,0 +1,534 @@
+<?php
+/** 
+*
+* @package acp
+* @version $Id: acp_permission_roles.php,v 1.12 2006/08/28 15:50:31 acydburn Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+/**
+* @package acp
+*/
+
+load_class(SITE_FILE_ROOT.'includes/forums/admin/auth.php', 'forums_auth_admin');
+
+$_CLASS['core_user']->add_lang('admin_permissions');
+$_CLASS['core_user']->add_lang('admin_permissions_phpbb');
+
+$submit = (isset($_POST['submit'])) ? true : false;
+$role_id = request_var('role_id', 0);
+$action = request_var('action', '');
+$action = (isset($_POST['add'])) ? 'add' : $action;
+$mode = request_var('mode', '');
+
+$u_action = 'forums&file=admin_permission_roles&mode='.$mode;
+
+switch ($mode)
+{
+	case 'admin_roles':
+		$permission_type = 'a_';
+		$page_title = 'ACP_ADMIN_ROLES';
+	break;
+
+	case 'user_roles':
+		$permission_type = 'u_';
+		$page_title = 'ACP_USER_ROLES';
+	break;
+
+	case 'mod_roles':
+		$permission_type = 'm_';
+		$page_title = 'ACP_MOD_ROLES';
+	break;
+
+	case 'forum_roles':
+		$permission_type = 'f_';
+		$page_title = 'ACP_FORUM_ROLES';
+	break;
+
+	default:
+		trigger_error('INVALID_MODE', E_USER_ERROR);
+	break;
+}
+
+$_CLASS['core_template']->assign_array(array(
+	'L_TITLE'		=> $_CLASS['core_user']->lang[$page_title],
+	'L_EXPLAIN'		=> $_CLASS['core_user']->lang[$page_title . '_EXPLAIN'])
+);
+
+// Take action... admin submitted something
+if ($submit || $action === 'remove')
+{
+	switch ($action)
+	{
+		case 'remove':
+
+			if (!$role_id)
+			{
+				trigger_error($_CLASS['core_user']->lang['NO_ROLE_SELECTED'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+			}
+
+			$sql = 'SELECT *
+				FROM ' . FORUMS_ACL_ROLES_TABLE . '
+				WHERE role_id = ' . $role_id;
+			$result = $_CLASS['core_db']->query($sql);
+			$role_row = $_CLASS['core_db']->fetch_row_assoc($result);
+			$_CLASS['core_db']->free_result($result);
+
+			if (!$role_row)
+			{
+				trigger_error($_CLASS['core_user']->lang['NO_ROLE_SELECTED'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+			}
+
+			$hidden_fields = generate_hidden_fields(array(
+				'i'			=> $id,
+				'mode'		=> $mode,
+				'role_id'	=> $role_id,
+				'action'	=> $action,
+			));
+
+			if (display_confirmation('DELETE_ROLE', $hidden_fields))
+			{
+				remove_role($role_id, $permission_type);
+
+				add_log('admin', 'LOG_' . strtoupper($permission_type) . 'ROLE_REMOVED', $role_row['role_name']);
+				trigger_error($_CLASS['core_user']->lang['ROLE_DELETED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
+			}
+
+		break;
+
+		case 'edit':
+			if (!$role_id)
+			{
+				trigger_error($_CLASS['core_user']->lang['NO_ROLE_SELECTED'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+			}
+
+			// Get role we edit
+			$sql = 'SELECT *
+				FROM ' . FORUMS_ACL_ROLES_TABLE . '
+				WHERE role_id = ' . $role_id;
+			$result = $_CLASS['core_db']->query($sql);
+			$role_row = $_CLASS['core_db']->fetch_row_assoc($result);
+			$_CLASS['core_db']->free_result($result);
+
+			if (!$role_row)
+			{
+				trigger_error($_CLASS['core_user']->lang['NO_ROLE_SELECTED'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+			}
+
+		// no break;
+
+		case 'add':
+
+			$role_name = request_var('role_name', '', true);
+			$role_description = request_var('role_description', '', true);
+			$auth_settings = request_var('setting', array('' => 0));
+
+			if (!$role_name)
+			{
+				trigger_error($_CLASS['core_user']->lang['NO_ROLE_NAME_SPECIFIED'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+			}
+
+			// if we add/edit a role we check the name to be unique among the settings...
+			$sql = 'SELECT role_id
+				FROM ' . FORUMS_ACL_ROLES_TABLE . "
+				WHERE role_type = '" . $_CLASS['core_db']->escape($permission_type) . "'
+					AND LOWER(role_name) = '" . $_CLASS['core_db']->escape(strtolower($role_name)) . "'";
+			$result = $_CLASS['core_db']->query($sql);
+			$row = $_CLASS['core_db']->fetch_row_assoc($result);
+			$_CLASS['core_db']->free_result($result);
+
+			// Make sure we only print out the error if we add the role or change it's name
+			if ($row && ($mode === 'add' || ($mode === 'edit' && strtolower($role_row['role_name']) != strtolower($role_name))))
+			{
+				trigger_error(sprintf($_CLASS['core_user']->lang['ROLE_NAME_ALREADY_EXIST'], $role_name) . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+			}
+
+			$sql_ary = array(
+				'role_name'			=> (string) $role_name,
+				'role_description'	=> (string) $role_description,
+				'role_type'			=> (string) $permission_type,
+			);
+
+			if ($action === 'edit')
+			{
+				$sql = 'UPDATE ' . FORUMS_ACL_ROLES_TABLE . ' 
+					SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql_ary) . ' 
+					WHERE role_id = ' . $role_id;
+				$_CLASS['core_db']->query($sql);
+			}
+			else
+			{
+				// Get maximum role order for inserting a new role...
+				$sql = 'SELECT MAX(role_order) as max_order
+					FROM ' . FORUMS_ACL_ROLES_TABLE . "
+					WHERE role_type = '" . $_CLASS['core_db']->escape($permission_type) . "'";
+				$result = $_CLASS['core_db']->query($sql);
+				$max_order = $_CLASS['core_db']->fetch_row_assoc($result);
+				$_CLASS['core_db']->free_result($result);
+
+				$max_order = (int) $max_order['max_order'];
+
+				$sql_ary['role_order'] = $max_order + 1;
+
+				$sql = 'INSERT INTO ' . FORUMS_ACL_ROLES_TABLE . ' ' . $_CLASS['core_db']->sql_build_array('INSERT', $sql_ary);
+				$_CLASS['core_db']->query($sql);
+
+				$role_id = $_CLASS['core_db']->insert_id(FORUMS_ACL_ROLES_TABLE, 'role_id');
+			}
+
+			// Now add the auth settings
+			$_CLASS['forums_auth_admin']->acl_set_role($role_id, $auth_settings);
+
+			add_log('admin', 'LOG_' . strtoupper($permission_type) . 'ROLE_' . strtoupper($action), $role_name);
+
+			trigger_error($_CLASS['core_user']->lang['ROLE_' . strtoupper($action) . '_SUCCESS'] . adm_back_link(generate_link($u_action, array('admin' => true))));
+
+		break;
+	}
+}
+
+// Display screens
+switch ($action)
+{
+	case 'add':
+
+		$options_from = request_var('options_from', 0);
+
+		$role_row = array(
+			'role_name'			=> request_var('role_name', '', true),
+			'role_description'	=> request_var('role_description', '', true),
+			'role_type'			=> $permission_type,
+		);
+
+		if ($options_from)
+		{
+			$sql = 'SELECT p.auth_option_id, p.auth_setting, o.auth_option
+				FROM ' . FORUMS_ACL_ROLES_DATA_TABLE . ' p, ' . FORUMS_ACL_OPTIONS_TABLE . ' o
+				WHERE o.auth_option_id = p.auth_option_id
+					AND p.role_id = ' . $options_from . '
+				ORDER BY p.auth_option_id';
+			$result = $_CLASS['core_db']->query($sql);
+
+			$auth_options = array();
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				$auth_options[$row['auth_option']] = $row['auth_setting'];
+			}
+			$_CLASS['core_db']->free_result($result);
+		}
+		else
+		{
+			$sql = 'SELECT auth_option_id, auth_option
+				FROM ' . FORUMS_ACL_OPTIONS_TABLE . "
+				WHERE auth_option LIKE '{$permission_type}%'
+					AND auth_option <> '{$permission_type}'
+				ORDER BY auth_option_id";
+			$result = $_CLASS['core_db']->query($sql);
+
+			$auth_options = array();
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				$auth_options[$row['auth_option']] = ACL_NO;
+			}
+			$_CLASS['core_db']->free_result($result);
+		}
+
+	// no break;
+
+	case 'edit':
+
+		if ($action == 'edit')
+		{
+			if (!$role_id)
+			{
+				trigger_error($_CLASS['core_user']->lang['NO_ROLE_SELECTED'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+			}
+			
+			$sql = 'SELECT *
+				FROM ' . FORUMS_ACL_ROLES_TABLE . '
+				WHERE role_id = ' . $role_id;
+			$result = $_CLASS['core_db']->query($sql);
+			$role_row = $_CLASS['core_db']->fetch_row_assoc($result);
+			$_CLASS['core_db']->free_result($result);
+
+			$sql = 'SELECT p.auth_option_id, p.auth_setting, o.auth_option
+				FROM ' . FORUMS_ACL_ROLES_DATA_TABLE . ' p, ' . FORUMS_ACL_OPTIONS_TABLE . ' o
+				WHERE o.auth_option_id = p.auth_option_id
+					AND p.role_id = ' . $role_id . '
+				ORDER BY p.auth_option_id';
+			$result = $_CLASS['core_db']->query($sql);
+
+			$auth_options = array();
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				$auth_options[$row['auth_option']] = $row['auth_setting'];
+			}
+			$_CLASS['core_db']->free_result($result);
+		}
+
+		if (!$role_row)
+		{
+			trigger_error($_CLASS['core_user']->lang['NO_ROLE_SELECTED'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+		}
+
+		$_CLASS['core_template']->assign_array(array(
+			'S_EDIT'			=> true,
+
+			'U_ACTION'			=> generate_link($u_action . "&amp;action={$action}&amp;role_id={$role_id}", array('admin' => true)),
+			'U_BACK'			=> generate_link($u_action, array('admin' => true)),
+
+			'ROLE_NAME'			=> $role_row['role_name'],
+			'ROLE_DESCRIPTION'	=> $role_row['role_description'],
+			'L_ACL_TYPE'		=> $_CLASS['core_user']->lang['ACL_TYPE_' . strtoupper($permission_type)],
+			)
+		);
+
+		// We need to fill the auth options array with ACL_NO options ;)
+		$sql = 'SELECT auth_option_id, auth_option
+			FROM ' . FORUMS_ACL_OPTIONS_TABLE . "
+			WHERE auth_option LIKE '{$permission_type}%'
+				AND auth_option <> '{$permission_type}'
+			ORDER BY auth_option_id";
+		$result = $_CLASS['core_db']->query($sql);
+
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			if (!isset($auth_options[$row['auth_option']]))
+			{
+				$auth_options[$row['auth_option']] = ACL_NO;
+			}
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		// Unset global permission option
+		unset($auth_options[$permission_type]);
+
+		// Display auth options
+		display_auth_options($auth_options);
+
+		// Get users/groups/forums using this preset...
+		if ($action == 'edit')
+		{
+			$hold_ary = $_CLASS['forums_auth_admin']->get_role_mask($role_id);
+
+			if (sizeof($hold_ary))
+			{
+				$_CLASS['core_template']->assign_array(array(
+					'S_DISPLAY_ROLE_MASK'	=> true,
+					'L_ROLE_ASSIGNED_TO'	=> sprintf($_CLASS['core_user']->lang['ROLE_ASSIGNED_TO'], $role_row['role_name']))
+				);
+
+				$_CLASS['forums_auth_admin']->display_role_mask($hold_ary);
+			}
+		}
+
+		$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'modules/forums/admin/acp_permission_roles.html');
+
+		return;
+	break;
+
+	case 'move_up':
+	case 'move_down':
+
+		$order = request_var('order', 0);
+		$order_total = $order * 2 + (($action == 'move_up') ? -1 : 1);
+
+		$sql = 'UPDATE ' . FORUMS_ACL_ROLES_TABLE . '
+			SET role_order = ' . $order_total  . " - role_order
+			WHERE role_type = '" . $_CLASS['core_db']->escape($permission_type) . "'
+				AND role_order IN ($order, " . (($action == 'move_up') ? $order - 1 : $order + 1) . ')';
+		$_CLASS['core_db']->query($sql);
+
+	break;
+}
+
+// By default, check that role_order is valid and fix it if necessary
+$sql = 'SELECT role_id, role_order
+	FROM ' . FORUMS_ACL_ROLES_TABLE . "
+	WHERE role_type = '" . $_CLASS['core_db']->escape($permission_type) . "'
+	ORDER BY role_order ASC";
+$result = $_CLASS['core_db']->query($sql);
+
+if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+{
+	$order = 0;
+	do
+	{
+		$order++;
+		if ($row['role_order'] != $order)
+		{
+			$_CLASS['core_db']->query('UPDATE ' . FORUMS_ACL_ROLES_TABLE . " SET role_order = $order WHERE role_id = {$row['role_id']}");
+		}
+	}
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
+}
+$_CLASS['core_db']->free_result($result);
+
+// Display assigned items?
+$display_item = request_var('display_item', 0);
+
+// Select existing roles
+$sql = 'SELECT *
+	FROM ' . FORUMS_ACL_ROLES_TABLE . "
+	WHERE role_type = '" . $_CLASS['core_db']->escape($permission_type) . "'
+	ORDER BY role_order ASC";
+$result = $_CLASS['core_db']->query($sql);
+
+$s_role_options = '';
+while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+{
+	$_CLASS['core_template']->assign_vars_array('roles', array(
+		'ROLE_NAME'				=> $row['role_name'],
+		'ROLE_DESCRIPTION'		=> (!empty($_CLASS['core_user']->lang[$row['role_description']])) ? $_CLASS['core_user']->lang[$row['role_description']] : nl2br($row['role_description']),
+
+		'U_EDIT'			=> generate_link($u_action . '&amp;action=edit&amp;role_id=' . $row['role_id'], array('admin' => true)),
+		'U_REMOVE'			=> generate_link($u_action . '&amp;action=remove&amp;role_id=' . $row['role_id'], array('admin' => true)),
+		'U_MOVE_UP'			=> generate_link($u_action . '&amp;action=move_up&amp;order=' . $row['role_order'], array('admin' => true)),
+		'U_MOVE_DOWN'		=> generate_link($u_action . '&amp;action=move_down&amp;order=' . $row['role_order'], array('admin' => true)),
+		'U_DISPLAY_ITEMS'	=> ($row['role_id'] == $display_item) ? '' : generate_link($u_action . '&amp;display_item=' . $row['role_id'] . '#assigned_to', array('admin' => true))
+	));
+
+	$s_role_options .= '<option value="' . $row['role_id'] . '">' . $row['role_name'] . '</option>';
+
+	if ($display_item == $row['role_id'])
+	{
+		$_CLASS['core_template']->assign_array(array(
+			'L_ROLE_ASSIGNED_TO'	=> sprintf($_CLASS['core_user']->lang['ROLE_ASSIGNED_TO'], $row['role_name']))
+		);
+	}
+}
+$_CLASS['core_db']->free_result($result);
+
+$_CLASS['core_template']->assign_array(array(
+	'S_ROLE_OPTIONS'		=> $s_role_options)
+);
+
+if ($display_item)
+{
+	$_CLASS['core_template']->assign_array(array(
+		'S_DISPLAY_ROLE_MASK'	=> true)
+	);
+
+	$hold_ary = $_CLASS['forums_auth_admin']->get_role_mask($display_item);
+	$_CLASS['forums_auth_admin']->display_role_mask($hold_ary);
+}
+
+$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'modules/forums/admin/acp_permission_roles.html');
+
+/**
+* Display permission settings able to be set
+*/
+function display_auth_options($auth_options)
+{
+	global $_CLASS;
+
+	$content_array = $categories = array();
+	$key_sort_array = array(0);
+	$auth_options = array(0 => $auth_options);
+
+	// Making use of auth_admin method here (we do not really want to change two similar code fragments)
+	$_CLASS['forums_auth_admin']->build_permission_array($auth_options, $content_array, $categories, $key_sort_array);
+
+	$content_array = $content_array[0];
+
+	$_CLASS['core_template']->assign('S_NUM_PERM_COLS', sizeof($categories));
+
+	// Assign to template
+	foreach ($content_array as $cat => $cat_array)
+	{
+		$auth = array(
+			'CAT_NAME'	=> $_CLASS['core_user']->lang['permission_cat'][$cat],
+
+			'S_YES'		=> ($cat_array['S_YES'] && !$cat_array['S_NEVER'] && !$cat_array['S_NO']) ? true : false,
+			'S_NEVER'	=> ($cat_array['S_NEVER'] && !$cat_array['S_YES'] && !$cat_array['S_NO']) ? true : false,
+			'S_NO'		=> ($cat_array['S_NO'] && !$cat_array['S_NEVER'] && !$cat_array['S_YES']) ? true : false
+		);
+
+		foreach ($cat_array['permissions'] as $permission => $allowed)
+		{
+			$auth['mask'][] = array(
+				'S_YES'		=> ($allowed == ACL_YES) ? true : false,
+				'S_NEVER'	=> ($allowed == ACL_NEVER) ? true : false,
+				'S_NO'		=> ($allowed == ACL_NO) ? true : false,
+
+				'FIELD_NAME'	=> $permission,
+				'PERMISSION'	=> $_CLASS['core_user']->lang['acl_' . $permission]['lang']
+			);
+		}
+		$_CLASS['core_template']->assign_vars_array('auth', $auth);
+	}
+}
+
+/**
+* Remove role
+*/
+function remove_role($role_id, $permission_type)
+{
+	global $_CLASS;
+
+	$auth_admin = new forums_auth_admin();
+
+	// Get complete auth array
+	$sql = 'SELECT auth_option, auth_option_id
+		FROM ' . FORUMS_ACL_OPTIONS_TABLE . "
+		WHERE auth_option LIKE '" . $_CLASS['core_db']->escape($permission_type) . "%'";
+	$result = $_CLASS['core_db']->query($sql);
+
+	$auth_settings = array();
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$auth_settings[$row['auth_option']] = ACL_NO;
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	// Get the role auth settings we need to re-set...
+	$sql = 'SELECT o.auth_option, r.auth_setting
+		FROM ' . FORUMS_ACL_ROLES_DATA_TABLE . ' r, ' . FORUMS_ACL_OPTIONS_TABLE . ' o
+		WHERE o.auth_option_id = r.auth_option_id
+			AND r.role_id = ' . $role_id;
+	$result = $_CLASS['core_db']->query($sql);
+
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$auth_settings[$row['auth_option']] = $row['auth_setting'];
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	// Get role assignments
+	$hold_ary = $auth_admin->get_role_mask($role_id);
+
+	// Re-assign permissions
+	foreach ($hold_ary as $forum_id => $forum_ary)
+	{
+		if (isset($forum_ary['users']))
+		{
+			$auth_admin->acl_set('user', $forum_id, $forum_ary['users'], $auth_settings, 0, false);
+		}
+
+		if (isset($forum_ary['groups']))
+		{
+			$auth_admin->acl_set('group', $forum_id, $forum_ary['groups'], $auth_settings, 0, false);
+		}
+	}
+
+	// Remove role from users and groups just to be sure (happens through acl_set)
+	$sql = 'DELETE FROM ' . FORUMS_ACL_TABLE . '
+		WHERE auth_role_id = ' . $role_id;
+	$_CLASS['core_db']->query($sql);
+
+	// Remove role data and role
+	$sql = 'DELETE FROM ' . FORUMS_ACL_ROLES_DATA_TABLE . '
+		WHERE role_id = ' . $role_id;
+	$_CLASS['core_db']->query($sql);
+
+	$sql = 'DELETE FROM ' . FORUMS_ACL_ROLES_TABLE . '
+		WHERE role_id = ' . $role_id;
+	$_CLASS['core_db']->query($sql);
+
+	$auth_admin->acl_clear_prefetch();
+}
+
+
+?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/admin/admin_permissions.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_permissions.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_permissions.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -15,9 +15,10 @@
 	die; 
 }
 
-$u_action = '';
 $permission_dropdown = '';
 $mode = request_var('mode', 'view_forum_local');
+
+$u_action = 'forums&file=admin_permissions&mode='.$mode;
 
 load_class(SITE_FILE_ROOT.'includes/forums/admin/auth.php', 'forums_auth_admin');
 
@@ -88,19 +89,21 @@
 {
 	$username = explode("\n", $usernames);
 }
-unset($usernames);
-
-if (sizeof($username) && !sizeof($user_id))
+unset($usernames);
+
+if (count($username) && !count($user_id))
 {
-	user_get_id_name($user_id, $username);
+	require_once SITE_FILE_ROOT.'includes/functions_user.php';
+
+	$user_id = user_get_id($username, $difference);
 
-	if (!sizeof($user_id))
+	if (count($username) === count($difference))
 	{
-		trigger_error($_CLASS['core_user']->lang['SELECTED_USER_NOT_EXIST'] . adm_back_link($u_action));
+		trigger_error($_CLASS['core_user']->lang['SELECTED_USER_NOT_EXIST'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 	}
 }
-unset($username);
-
+unset($username);
+	
 // Build forum ids (of all forums are checked or subforum listing used)
 if ($all_forums)
 {
@@ -216,7 +219,7 @@
 
 if (!in_array($permission_type, $permission_dropdown))
 {
-	trigger_error($_CLASS['core_user']->lang['WRONG_PERMISSION_TYPE'] . adm_back_link($u_action));
+	trigger_error($_CLASS['core_user']->lang['WRONG_PERMISSION_TYPE'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 }
 
 
@@ -250,14 +253,14 @@
 			}
 			else
 			{
-				trigger_error($_CLASS['core_user']->lang['NO_USER_GROUP_SELECTED'] . adm_back_link($u_action));
+				trigger_error($_CLASS['core_user']->lang['NO_USER_GROUP_SELECTED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 			}
 		break;
 
 		case 'apply_permissions':
 			if (!isset($_POST['setting']))
 			{
-				trigger_error($_CLASS['core_user']->lang['NO_AUTH_SETTING_FOUND'] . adm_back_link($u_action));
+				trigger_error($_CLASS['core_user']->lang['NO_AUTH_SETTING_FOUND'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 			}
 
 			set_permissions($mode, $permission_type, $_CLASS['forums_auth_admin'], $user_id, $group_id);
@@ -266,7 +269,7 @@
 		case 'apply_all_permissions':
 			if (!isset($_POST['setting']))
 			{
-				trigger_error($_CLASS['core_user']->lang['NO_AUTH_SETTING_FOUND'] . adm_back_link($u_action));
+				trigger_error($_CLASS['core_user']->lang['NO_AUTH_SETTING_FOUND'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 			}
 
 			set_all_permissions($mode, $permission_type, $_CLASS['forums_auth_admin'], $user_id, $group_id);
@@ -344,6 +347,7 @@
 			$_CLASS['core_template']->assign_array(array(
 				'S_SELECT_USER'			=> true,
 				'U_FIND_USERNAME'		=> generate_link('members_list&amp;mode=searchuser&amp;form=select_victim&amp;field=username')
+				'UA_FIND_USERNAME'		=> generate_link('members_list&amp;mode=searchuser&form=select_victim&field=username')
 			));
 
 		break;
@@ -406,16 +410,22 @@
 				'S_DEFINED_GROUP_OPTIONS'	=> $items['group_ids_options'],
 				'S_ADD_GROUP_OPTIONS'		=> group_select_options(false, $items['group_ids']),
 				'U_FIND_USERNAME'			=> generate_link('members_list&amp;mode=searchuser&amp;form=add_user&amp;field=username')
+				'UA_FIND_USERNAME'			=> generate_link('members_list&amp;mode=searchuser&form=add_user&field=username')
 			));
 
 		break;
-	}
+	}
+	
+	// The S_ALLOW_SELECT parameter below is a measure to lower memory usage.
+	// If there are more than 5 forums selected the admin is not able to select all users/groups too.
+	// We need to see if the number of forums can be increased or need to be decreased.
 
 	$_CLASS['core_template']->assign_array(array(
-		'U_ACTION'				=> $u_action,
+		'U_ACTION'				=> generate_link($u_action, array('admin' => true)),
 		'ANONYMOUS_USER_ID'		=> ANONYMOUS,
 
-		'S_SELECT_VICTIM'		=> true,
+		'S_SELECT_VICTIM'		=> true,
+		'S_ALLOW_ALL_SELECT'	=> (sizeof($forum_id) > 5) ? false : true,
 		'S_CAN_SELECT_USER'		=> ($_CLASS['forums_auth']->acl_get('a_authusers')) ? true : false,
 		'S_CAN_SELECT_GROUP'	=> ($_CLASS['forums_auth']->acl_get('a_authgroups')) ? true : false,
 		'S_HIDDEN_FIELDS'		=> $s_hidden_fields
@@ -451,14 +461,14 @@
 // Do not allow forum_ids being set and no other setting defined (will bog down the server too much)
 if (sizeof($forum_id) && !sizeof($user_id) && !sizeof($group_id))
 {
-	trigger_error($_CLASS['core_user']->lang['ONLY_FORUM_DEFINED'] . adm_back_link($u_action));
+	trigger_error($_CLASS['core_user']->lang['ONLY_FORUM_DEFINED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 }
 
 $_CLASS['core_template']->assign_array(array(
 	'S_PERMISSION_DROPDOWN'		=> (sizeof($permission_dropdown) > 1) ? build_permission_dropdown($permission_dropdown, $permission_type) : false,
 	'L_PERMISSION_TYPE'			=> $_CLASS['core_user']->get_lang('ACL_TYPE_' . strtoupper($permission_type)),
 
-	'U_ACTION'					=> $u_action,
+	'U_ACTION'					=> generate_link($u_action, array('admin' => true)),
 	'S_HIDDEN_FIELDS'			=> $s_hidden_fields
 ));
 
@@ -583,7 +593,7 @@
 
 	if (!sizeof($ids))
 	{
-		trigger_error($_CLASS['core_user']->lang['SELECTED_' . strtoupper($mode) . '_NOT_EXIST'] . adm_back_link($u_action));
+		trigger_error($_CLASS['core_user']->lang['SELECTED_' . strtoupper($mode) . '_NOT_EXIST'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 	}
 }
 
@@ -602,7 +612,7 @@
 	// Check the permission setting again
 	if (!$_CLASS['forums_auth']->acl_get('a_' . str_replace('_', '', $permission_type) . 'auth') || !$_CLASS['forums_auth']->acl_get('a_auth' . $ug_type . 's'))
 	{
-		trigger_error($_CLASS['core_user']->lang['NO_ADMIN'] . adm_back_link($u_action));
+		trigger_error($_CLASS['core_user']->lang['NO_ADMIN'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 	}
 	
 	$ug_id = $forum_id = 0;
@@ -665,7 +675,7 @@
 
 	log_action($mode, 'add', $permission_type, $ug_type, $ug_id, $forum_id);
 
-	trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED'] . adm_back_link($u_action));
+	trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 }
 
 /** 
@@ -681,7 +691,7 @@
 	// Check the permission setting again
 	if (!$_CLASS['forums_auth']->acl_get('a_' . str_replace('_', '', $permission_type) . 'auth') || !$_CLASS['forums_auth']->acl_get('a_auth' . $ug_type . 's'))
 	{
-		trigger_error($_CLASS['core_user']->lang['NO_ADMIN'] . adm_back_link($u_action));
+		trigger_error($_CLASS['core_user']->lang['NO_ADMIN'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 	}
 
 	$auth_settings = (isset($_POST['setting'])) ? $_POST['setting'] : array();
@@ -732,7 +742,7 @@
 
 	log_action($mode, 'add', $permission_type, $ug_type, $ug_ids, $forum_ids);
 
-	trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED'] . adm_back_link($u_action));
+	trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 }
 
 /**
@@ -786,7 +796,7 @@
 	// Check the permission setting again
 	if (!$_CLASS['forums_auth']->acl_get('a_' . str_replace('_', '', $permission_type) . 'auth') || !$_CLASS['forums_auth']->acl_get('a_auth' . $ug_type . 's'))
 	{
-		trigger_error($_CLASS['core_user']->lang['NO_ADMIN'] . adm_back_link($u_action));
+		trigger_error($_CLASS['core_user']->lang['NO_ADMIN'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 	}
 
 	$forums_auth_admin->acl_delete($ug_type, (($ug_type == 'user') ? $user_id : $group_id), (sizeof($forum_id) ? $forum_id : false), $permission_type);
@@ -799,7 +809,7 @@
 
 	log_action($mode, 'del', $permission_type, $ug_type, (($ug_type == 'user') ? $user_id : $group_id), (sizeof($forum_id) ? $forum_id : array(0 => 0)));
 
-	trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED'] . adm_back_link($u_action));
+	trigger_error($_CLASS['core_user']->lang['AUTH_UPDATED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 }
 
 /**
@@ -857,32 +867,6 @@
 }
 
 /**
-* Update foes - remove moderators and administrators from foe lists...
-*/
-function update_foes()
-{
-	global $_CLASS;
-
-	$perms = array();
-	foreach ($_CLASS['forums_auth']->acl_get_list(false, array('a_', 'm_'), false) as $forum_id => $forum_ary)
-	{
-		foreach ($forum_ary as $auth_option => $user_ary)
-		{
-			$perms = array_merge($perms, $user_ary);
-		}
-	}
-
-	if (sizeof($perms))
-	{
-		$sql = 'DELETE FROM ' . ZEBRA_TABLE . ' 
-			WHERE zebra_id IN (' . implode(', ', array_unique($perms)) . ')
-				AND foe = 1';
-		$_CLASS['core_db']->query($sql);
-	}
-	unset($perms);
-}
-
-/**
 * Display a complete trace tree for the selected permission to determine where settings are set/unset
 */
 function permission_trace($user_id, $forum_id, $permission)
@@ -929,7 +913,7 @@
 		'U_BACK'				=> ($back) ? build_url(array('f', 'back')) . "&amp;f=$back" : '')
 	);
 
-	$template->assign_block_vars('trace', array(
+	$_CLASS['core_template']->assign_vars_array('trace', array(
 		'WHO'			=> $_CLASS['core_user']->lang['DEFAULT'],
 		'INFORMATION'	=> $_CLASS['core_user']->lang['TRACE_DEFAULT'],
 
@@ -986,7 +970,7 @@
 				break;
 			}
 
-			$template->assign_block_vars('trace', array(
+			$_CLASS['core_template']->assign_vars_array('trace', array(
 				'WHO'			=> $row['group_name'],
 				'INFORMATION'	=> $information,
 
@@ -1022,7 +1006,7 @@
 		break;
 	}
 
-	$template->assign_block_vars('trace', array(
+	$_CLASS['core_template']->assign_vars_array('trace', array(
 		'WHO'			=> $userdata['username'],
 		'INFORMATION'	=> $information,
 
@@ -1058,9 +1042,9 @@
 			$information = $_CLASS['core_user']->lang['TRACE_USER_GLOBAL_NEVER_TOTAL_KEPT'];
 		}
 
-		$template->assign_block_vars('trace', array(
+		$_CLASS['core_template']->assign_vars_array('trace', array(
 			'WHO'			=> sprintf($_CLASS['core_user']->lang['TRACE_GLOBAL_SETTING'], $userdata['username']),
-			'INFORMATION'	=> sprintf($information, '<a href="' . $u_action . "&amp;u=$user_id&amp;f=0&amp;auth=$permission&amp;back=$forum_id\">", '</a>'),
+			'INFORMATION'	=> sprintf($information, '<a href="' . generate_link("$u_action&amp;u=$user_id&amp;f=0&amp;auth=$permission&amp;back=$forum_id", array('admin' => true)) . '">', '</a>'),
 
 			'S_SETTING_NO'		=> false,
 			'S_SETTING_YES'		=> $auth_setting,
@@ -1074,7 +1058,7 @@
 	// Take founder status into account, overwriting the default values
 	if ($userdata['user_type'] == USER_FOUNDER && strpos($permission, 'a_') === 0)
 	{
-		$template->assign_block_vars('trace', array(
+		$_CLASS['core_template']->assign_vars_array('trace', array(
 			'WHO'			=> $userdata['username'],
 			'INFORMATION'	=> $_CLASS['core_user']->lang['TRACE_USER_FOUNDER'],
 

Deleted: cms/trunk/includes/forums/admin/admin_phpinfo.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_phpinfo.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_phpinfo.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,80 +0,0 @@
-<?php
-/** 
-*
-* @package acp
-* @version $Id: admin_phpinfo.php,v 1.6 2005/04/09 12:26:30 acydburn Exp $
-* @copyright (c) 2005 phpBB Group 
-* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
-*
-*/
-
-/**
-*/
-if (!defined('VIPERAL') || VIPERAL != 'Admin')
-{
-	die; 
-}
-
-// Check permissions
-if (!$_CLASS['auth']->acl_get('a_server'))
-{
-	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
-}
-
-ob_start(); 
-phpinfo(INFO_GENERAL | INFO_CONFIGURATION);
-//Make a seperat option to display the others
-//phpinfo(INFO_GENERAL | INFO_CONFIGURATION | INFO_MODULES | INFO_VARIABLES); 
-
-$phpinfo = ob_get_contents(); 
-ob_end_clean(); 
-
-// Get used layout
-$layout = (preg_match('#bgcolor#i', $phpinfo)) ? 'old' : 'new';
-
-// Here we play around a little with the PHP Info HTML to try and stylise
-// it along phpBB's lines ... hopefully without breaking anything. The idea
-// for this was nabbed from the PHP annotated manual
-preg_match_all('#<body[^>]*>(.*)</body>#siU', $phpinfo, $output); 
-
-switch ($layout)
-{
-	case 'old':
-		$output = preg_replace('#<table#', '<table class="tablebg"', $output[1][0]);
-		$output = preg_replace('# bgcolor="\#(\w){6}"#', '', $output);
-		$output = preg_replace('#(\w),(\w)#', '\1, \2', $output);
-		$output = preg_replace('#border="0" cellpadding="3" cellspacing="1" width="600"#', 'border="0" cellspacing="1" cellpadding="4" width="95%"', $output);
-		$output = preg_replace('#<tr valign="top"><td align="left">(.*?<a .*?</a>)(.*?)</td></tr>#s', '<tr class="row1"><td style="{background-color: #9999cc;}"><table width="100%" cellspacing="0" cellpadding="0" border="0"><tr><td style="{background-color: #9999cc;}">\2</td><td style="{background-color: #9999cc;}">\1</td></tr></table></td></tr>', $output);
-		$output = preg_replace('#<tr valign="baseline"><td[ ]{0,1}><b>(.*?)</b>#', '<tr><td class="row1" nowrap="nowrap">\1', $output);
-		$output = preg_replace('#<td align="(center|left)">#', '<td class="row2">', $output);
-		$output = preg_replace('#<td>#', '<td class="row2">', $output);
-		$output = preg_replace('#valign="middle"#', '', $output);
-		$output = preg_replace('#<tr >#', '<tr>', $output);
-		$output = preg_replace('#<hr(.*?)>#', '', $output);
-		$output = preg_replace('#<h1 align="center">#i', '<h1>', $output);
-		$output = preg_replace('#<h2 align="center">#i', '<h2>', $output);
-		break;
-	case 'new':
-		$output = preg_replace('#<table#', '<table class="tablebg" align="center"', $output[1][0]);
-		$output = preg_replace('#(\w),(\w)#', '\1, \2', $output);
-		$output = preg_replace('#border="0" cellpadding="3" width="600"#', 'border="0" cellspacing="1" cellpadding="4" width="95%"', $output);
-		$output = preg_replace('#<tr class="v"><td>(.*?<a .*?</a>)(.*?)</td></tr>#s', '<tr class="row1"><td><table width="100%" cellspacing="0" cellpadding="0" border="0"><tr><td>\2</td><td>\1</td></tr></table></td></tr>', $output);
-		$output = preg_replace('#<td>#', '<td style="{background-color: #9999cc;}">', $output);
-		$output = preg_replace('#class="e"#', 'class="row1" nowrap="nowrap"', $output);
-		$output = preg_replace('#class="v"#', 'class="row2"', $output);
-		$output = preg_replace('# class="h"#', '', $output);
-		$output = preg_replace('#<hr />#', '', $output);
-		preg_match_all('#<div class="center">(.*)</div>#siU', $output, $output); 
-		$output = $output[1][0];
-		break;
-}
-
-adm_page_header($_CLASS['core_user']->lang['PHP_INFO']);
-
-echo '<h1>' . $_CLASS['core_user']->lang['PHP_INFO'] . '</h1>';
-echo '<p>' . $_CLASS['core_user']->lang['PHP_INFO_EXPLAIN'] . '</p>';
-echo $output; 
-
-adm_page_footer();
-
-?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/admin/admin_profile.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_profile.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_profile.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,1265 +0,0 @@
-<?php
-// -------------------------------------------------------------
-//
-// $Id: admin_profile.php,v 1.7 2004/09/19 20:40:19 acydburn Exp $
-//
-// FILENAME  : admin_profile.php
-// STARTED   : Sun Apr 20, 2003
-// COPYRIGHT : ? 2001, 2003 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
-// 
-// -------------------------------------------------------------
-
-/*
-	Remind if...
-	... one or more language entries are missing
-	
-	Taking into consideration
-	... admin is NOT able to change the field type later
-
-	Admin is able to preview/test the input and output of a profile field at any time.
-
-	If the admin adds a field, he have to enter at least the default board language params. Without doing so, he
-	is not able to activate the field.
-	
-	If the default board language is changed, a check has to be made if the profile field language entries are
-	still valid.
-
-	TODO:
-	* Show at profile view (yes/no)
-	* Viewtopic Integration (Load Switch, Able to show fields with additional template vars populated if enabled)
-	* Custom Validation (Regex) - not in 2.2
-	* Able to use bbcode/smilies/urls - not in 2.2
-*/
-
-
-if (!empty($setmodules))
-{
-	$filename = basename(__FILE__);
-	$module['USER']['CUSTOM_PROFILE_FIELDS'] = ($auth->acl_get('a_user')) ? "$filename$SID&amp;mode=manage" : '';
-
-	return;
-}
-
-define('IN_PHPBB', 1);
-// Include files
-$phpbb_root_path = './../';
-$phpEx = substr(strrchr(__FILE__, '.'), 1);
-require('pagestart.' . $phpEx);
-include($phpbb_root_path . 'includes/functions_posting.' . $phpEx);
-include($phpbb_root_path . 'includes/functions_user.' . $phpEx);
-include($phpbb_root_path . 'includes/functions_profile_fields.' . $phpEx);
-
-if (!$auth->acl_get('a_user'))
-{
-	trigger_error($user->lang['NO_ADMIN']);
-}
-
-$user->add_lang('ucp');
-
-$mode = (isset($_POST['add'])) ? 'create' : request_var('mode', '');
-$submit = (isset($_POST['submit'])) ? TRUE : FALSE;
-$create = (isset($_POST['create'])) ? TRUE : FALSE;
-$error = $notify = array();
-
-adm_page_header($user->lang['CUSTOM_PROFILE_FIELDS']);
-
-// Define some default values for each field type
-$default_values = array(
-	FIELD_STRING	=> array('field_length' => 10, 'field_minlen' => 0, 'field_maxlen' => 20, 'field_validation' => '.*', 'field_novalue' => '', 'field_default_value' => ''),
-	FIELD_TEXT		=> array('field_length' => '5|80', 'field_minlen' => 0, 'field_maxlen' => 1000, 'field_validation' => '.*', 'field_novalue' => '', 'field_default_value' => ''),
-	FIELD_INT		=> array('field_length' => 5, 'field_minlen' => 0, 'field_maxlen' => 100, 'field_validation' => '', 'field_novalue' => 0, 'field_default_value' => 0),
-	FIELD_DATE		=> array('field_length' => 10, 'field_minlen' => 10, 'field_maxlen' => 10, 'field_validation' => '', 'field_novalue' => ' 0- 0-   0', 'field_default_value' => ' 0- 0-   0'),
-	FIELD_BOOL		=> array('field_length' => 1, 'field_minlen' => 0, 'field_maxlen' => 0, 'field_validation' => '', 'field_novalue' => 0, 'field_default_value' => 0),
-	FIELD_DROPDOWN	=> array('field_length' => 0, 'field_minlen' => 0, 'field_maxlen' => 5, 'field_validation' => '', 'field_novalue' => 1, 'field_default_value' => 1),
-);
-
-$cp = new custom_profile_admin();
-
-// Build Language array
-// Based on this, we decide which elements need to be edited later and which language items are missing
-$lang_defs = array();
-
-$sql = 'SELECT lang_id, lang_iso
-	FROM ' . LANG_TABLE;
-$result = $db->sql_query($sql);
-
-while ($row = $db->sql_fetchrow($result))
-{
-	$lang_defs['id'][] = $row['lang_id'];
-	$lang_defs['iso'][$row['lang_iso']] = $row['lang_id'];
-}
-$db->sql_freeresult($result);
-
-$sql = 'SELECT field_id, lang_id
-	FROM ' . PROFILE_LANG_TABLE . '
-		ORDER BY lang_id';
-$result = $db->sql_query($sql);
-	
-while ($row = $db->sql_fetchrow($result))
-{
-	$lang_defs['entry'][$row['field_id']][] = $row['lang_id'];
-}
-$db->sql_freeresult($result);
-
-if (isset($lang_defs['entry']))
-{
-	foreach ($lang_defs['entry'] as $field_id => $field_ary)
-	{
-		$lang_defs['diff'][$field_id] = array_diff($lang_defs['id'], $field_ary);
-	}
-}
-
-if ($mode == '')
-{
-	trigger_error('INVALID_MODE');
-}
-
-if ($mode == 'create' || $mode == 'edit')
-{
-	$field_id = request_var('field_id', 0);
-	$step = request_var('step', 1);
-	$error = array();
-	
-	$submit = (isset($_REQUEST['next']) || isset($_REQUEST['prev'])) ? true : false;
-	$update = (isset($_REQUEST['update'])) ? true : false;
-	$save = (isset($_REQUEST['save'])) ? true : false;
-
-	// We are editing... we need to grab basic things
-	if ($mode == 'edit')
-	{
-		if (!$field_id)
-		{
-			trigger_error('No field id specified');
-		}
-
-		$sql = 'SELECT l.*, f.*
-			FROM ' . PROFILE_LANG_TABLE . ' l, ' . PROFILE_FIELDS_TABLE . ' f 
-			WHERE l.lang_id = ' . $lang_defs['iso'][$config['default_lang']] . "
-				AND f.field_id = $field_id
-				AND l.field_id = f.field_id";
-		$result = $db->sql_query($sql);
-		$field_row = $db->sql_fetchrow($result);
-		$db->sql_freeresult($result);
-
-		if (!$field_row)
-		{
-			trigger_error('Profile field not found');
-		}
-		$field_type = $field_row['field_type'];
-
-		// Get language entries
-		$sql = 'SELECT * FROM ' . PROFILE_FIELDS_LANG_TABLE . ' 
-			WHERE lang_id = ' . $lang_defs['iso'][$config['default_lang']] . "
-				AND field_id = $field_id
-				ORDER BY option_id ASC";
-		$result = $db->sql_query($sql);
-
-		$lang_options = array();
-		while ($row = $db->sql_fetchrow($result))
-		{
-			$lang_options[$row['option_id']] = $row['value'];
-		}
-		$db->sql_freeresult($result);
-
-		$field_row['pf_preview'] = '';
-
-		$s_hidden_fields = '<input type="hidden" name="field_id" value="' . $field_id . '" />';
-	}
-	else
-	{
-		// We are adding a new field, define basic params
-		$lang_options = array();
-		$field_row = array();
-	
-		$field_type = request_var('field_type', 0);
-		
-		if (!$field_type)
-		{
-			trigger_error('NO_FIELD_TYPE');
-		}
-
-		$field_row = array_merge($default_values[$field_type], array(
-			'field_name'		=> request_var('field_name', ''),
-			'field_required'	=> 0,
-			'field_hide'		=> 0,
-			'field_show_on_reg'	=> 0,
-			'lang_name'			=> '',
-			'lang_explain'		=> '',
-			'lang_default_value'=> '',
-			'pf_preview'		=> '')
-		);
-
-		$s_hidden_fields = '<input type="hidden" name="field_type" value="' . $field_type . '" />';
-	}
-
-	// Get all relevant informations about entered values within all steps
-	$exclude = array(
-		1	=> array('lang_name', 'lang_explain', 'field_name'),
-		2	=> array('field_length', 'pf_preview', 'field_maxlen', 'field_minlen', 'field_validation', 'field_novalue', 'field_default_value', 'field_required', 'field_show_on_reg', 'field_hide'),
-		3	=> array('l_lang_name', 'l_lang_explain', 'l_lang_default_value', 'l_lang_options')
-	);
-
-	// Text-based fields require lang_default_value to be excluded
-	if ($field_type == FIELD_STRING || $field_type == FIELD_TEXT)
-	{
-		$exclude[1][] = 'lang_default_value';
-	}
-
-	// option-specific fields require lang_options to be excluded
-	if ($field_type == FIELD_BOOL || $field_type == FIELD_DROPDOWN)
-	{
-		$exclude[1][] = 'lang_options';
-	}
-
-	$cp->vars['field_name']			= request_var('field_name', $field_row['field_name']);
-	$cp->vars['lang_name']			= request_var('lang_name', $field_row['lang_name']);
-	$cp->vars['lang_explain']		= request_var('lang_explain', $field_row['lang_explain']);
-	$cp->vars['lang_default_value']	= request_var('lang_default_value', $field_row['lang_default_value']);
-
-	$options = request_var('lang_options', '');
-	if ($options)
-	{	
-		if (sizeof(explode("\n", $options)) == sizeof($lang_options))
-		{
-			$cp->vars['lang_options']	= explode("\n", $options);
-		}
-		else
-		{
-			$cp->vars['lang_options']	= $lang_options;
-			$error[] = 'You are not allowed to remove or add options within already existing profile fields';
-		}
-	}
-	else
-	{
-		$cp->vars['lang_options']	= $lang_options;
-	}
-
-	// step 2
-	foreach ($exclude[2] as $key)
-	{
-		if ($key == 'field_required' || $key == 'field_show_on_reg' || $key == 'field_hide')
-		{
-			$var = (!$submit && $step == 1) ? $field_row[$key] : request_var($key, 0);
-			
-			// Damn checkboxes...
-			if (!$submit && $step == 1)
-			{
-				$_REQUEST[$key] = $var;
-			}
-		}
-		else
-		{
-			$var = request_var($key, $field_row[$key]);
-		}
-
-		// Manipulate the intended variables a little bit if needed
-		if ($field_type == FIELD_DROPDOWN && $key == 'field_maxlen')
-		{
-			$var = sizeof(explode("\n", request_var('lang_options', '')));
-		}
-
-		if ($field_type == FIELD_TEXT && $key == 'field_length')
-		{
-			if (isset($_REQUEST['rows']))
-			{
-				$cp->vars['rows'] = request_var('rows', 0);
-				$cp->vars['columns'] = request_var('columns', 0);
-				$var = $cp->vars['rows'] . '|' . $cp->vars['columns'];
-			}
-			else
-			{
-				$row_col = explode('|', $var);
-				$cp->vars['rows'] = $row_col[0];
-				$cp->vars['columns'] = $row_col[1];
-			}
-		}
-
-		if ($field_type == FIELD_DATE && $key == 'field_default_value')
-		{
-			if (isset($_REQUEST['always_now']) || $var == 'now')
-			{
-				$now = getdate();
-
-				$cp->vars['field_default_value_day'] = $now['mday'];
-				$cp->vars['field_default_value_month'] = $now['mon'];
-				$cp->vars['field_default_value_year'] = $now['year'];
-				$var = $_POST['field_default_value'] = 'now';
-			}
-			else
-			{
-				if (isset($_REQUEST['field_default_value_day']))
-				{
-					$cp->vars['field_default_value_day'] = request_var('field_default_value_day', 0);
-					$cp->vars['field_default_value_month'] = request_var('field_default_value_month', 0);
-					$cp->vars['field_default_value_year'] = request_var('field_default_value_year', 0);
-					$var = $_POST['field_default_value'] = sprintf('%2d-%2d-%4d', $cp->vars['field_default_value_day'], $cp->vars['field_default_value_month'], $cp->vars['field_default_value_year']);
-				}
-				else
-				{
-					list($cp->vars['field_default_value_day'], $cp->vars['field_default_value_month'], $cp->vars['field_default_value_year']) = explode('-', $var);
-				}
-			}	
-		}
-
-		$cp->vars[$key] = $var;
-	}
-
-	// step 3 - all arrays
-	if ($mode == 'edit')
-	{
-		// Get language entries
-		$sql = 'SELECT * FROM ' . PROFILE_FIELDS_LANG_TABLE . ' 
-			WHERE lang_id <> ' . $lang_defs['iso'][$config['default_lang']] . "
-				AND field_id = $field_id
-			ORDER BY option_id ASC";
-		$result = $db->sql_query($sql);
-
-		$l_lang_options = array();
-		while ($row = $db->sql_fetchrow($result))
-		{
-			$l_lang_options[$row['lang_id']][$row['option_id']] = $row['value'];
-		}
-		$db->sql_freeresult($result);
-
-	
-		$sql = 'SELECT lang_id, lang_name, lang_explain, lang_default_value FROM ' . PROFILE_LANG_TABLE . ' 
-			WHERE lang_id <> ' . $lang_defs['iso'][$config['default_lang']] . "
-				AND field_id = $field_id
-			ORDER BY lang_id ASC";
-		$result = $db->sql_query($sql);
-
-		$l_lang_name = $l_lang_explain = $l_lang_default_value = array();
-		while ($row = $db->sql_fetchrow($result))
-		{
-			$l_lang_name[$row['lang_id']] = $row['lang_name'];
-			$l_lang_explain[$row['lang_id']] = $row['lang_explain'];
-			$l_lang_default_value[$row['lang_id']] = $row['lang_default_value'];
-		}
-		$db->sql_freeresult($result);
-	}
-	
-	foreach ($exclude[3] as $key)
-	{
-		$cp->vars[$key] = request_var($key, '');
-
-		if (!$cp->vars[$key] && $mode == 'edit')
-		{
-			$cp->vars[$key] = $$key;
-		}
-		else if ($key == 'l_lang_options')
-		{
-			foreach ($cp->vars[$key] as $lang_id => $options)
-			{
-				$cp->vars[$key][$lang_id] = explode("\n", $options);
-			}
-		}
-	}
-
-	if ($submit && $step == 1)
-	{
-		// Check values for step 1
-		if ($cp->vars['field_name'] == '')
-		{
-			$error[] = $user->lang['EMPTY_FIELD_NAME'];
-		}
-		if ($cp->vars['lang_name'] == '')
-		{
-			$error[] = $user->lang['EMPTY_USER_FIELD_NAME'];
-		}
-
-		if ($field_type == FIELD_BOOL || $field_type == FIELD_DROPDOWN)
-		{
-			if (!sizeof($cp->vars['lang_options']))
-			{
-				$error[] = 'No Entries defined';
-			}
-		}	
-	}
-
-	$user_error = false;
-	if ($update && $step == 2)
-	{
-		// Validate Field
-		$user_error = $cp->validate_profile_field($field_type, $cp->vars['pf_preview'], $cp->vars);
-	}
-
-	$step = (isset($_REQUEST['next'])) ? $step + 1 : ((isset($_REQUEST['prev'])) ? $step - 1 : $step);
-
-	if (sizeof($error))
-	{
-		$step--;
-		$submit = false;
-	}
-
-	if (isset($_REQUEST['prev']) || isset($_REQUEST['next']))
-	{
-		$update = false;
-		$pf_preview = '';
-		unset($_REQUEST['pf_preview']);
-	}
-
-	// Build up the specific hidden fields
-	foreach ($exclude as $num => $key_ary)
-	{
-		if ($num == $step)
-		{
-			continue;
-		}
-
-		$s_hidden_fields .= build_hidden_fields($key_ary);
-	}
-
-	if (!sizeof($error))
-	{
-		if ($step == 3 && (sizeof($lang_defs['iso']) == 1 || $save))
-		{
-			save_profile_field($field_type, $mode);
-		}
-	}
-
-?>
-	
-	<p><?php echo $user->lang['STEP_' . $step . '_EXPLAIN_' . strtoupper($mode)]; ?></p>
-
-	<form name="add_profile_field" method="post" action="admin_profile.<?php echo "$phpEx$SID&amp;mode=$mode&amp;step=$step"; ?>">
-	<table class="bg" cellspacing="1" cellpadding="4" border="0" align="center" width="99%">
-	<tr>
-		<th align="center" colspan="2"><?php echo $user->lang['STEP_' . $step . '_TITLE_' . strtoupper($mode)]; ?></th>
-	</tr>
-<?php
-
-	if (sizeof($error))
-	{
-
-?>
-	<tr>
-		<td class="row3" colspan="2" align="center"><span style="color:red"><?php echo implode('<br />', $error); ?></span></td>
-	</tr>
-<?php
-
-	}
-
-	// Now go through the steps
-	switch ($step)
-	{
-		// Create basic options - only small differences between field types
-		case 1: 
-	
-			// Build common create options
-?>
-			<tr>
-				<td class="row1"><b><?php echo $user->lang['FIELD_TYPE']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['FIELD_TYPE_EXPLAIN']; ?></span></td>
-				<td class="row2"><b><?php echo $user->lang['FIELD_' . strtoupper($cp->profile_types[$field_type])]; ?></b></td>
-			</tr>
-			<tr>
-				<td class="row1"><b><?php echo $user->lang['FIELD_NAME']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['FIELD_NAME_EXPLAIN']; ?></span></td>
-				<td class="row2"><input class="post" type="text" name="field_name" size="20" value="<?php echo $cp->vars['field_name']; ?>" /></td>
-			</tr>
-			<tr>
-				<th align="center" colspan="2"><?php echo sprintf($user->lang['LANG_SPECIFIC_OPTIONS'], $config['default_lang']); ?></th>
-			</tr>
-			<tr>
-				<td class="row1"><b><?php echo $user->lang['USER_FIELD_NAME']; ?>: </b></td>
-				<td class="row2"><input class="post" type="text" name="lang_name" size="20" value="<?php echo $cp->vars['lang_name']; ?>" /></td>
-			</tr>
-			<tr>
-				<td class="row1"><b><?php echo $user->lang['FIELD_DESCRIPTION']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['FIELD_DESCRIPTION_EXPLAIN']; ?></span></td>
-				<td class="row2"><textarea name="lang_explain" rows="3" cols="80"><?php echo $cp->vars['lang_explain']; ?></textarea></td>
-			</tr>
-<?php
-			// String and Text needs to set default values here...
-			if ($field_type == FIELD_STRING || $field_type == FIELD_TEXT)
-			{
-?>
-				<tr>
-					<td class="row1"><b><?php echo $user->lang['DEFAULT_VALUE']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang[strtoupper($cp->profile_types[$field_type]) . '_DEFAULT_VALUE_EXPLAIN']; ?></span></td>
-					<td class="row2"><?php echo ($field_type == FIELD_STRING) ? '<input class="post" type="text" name="lang_default_value" size="20" value="' . $cp->vars['lang_default_value'] . '" />' : '<textarea name="lang_default_value" rows="5" cols="80">' . $cp->vars['lang_default_value'] . '</textarea>'; ?></td>
-				</tr>
-<?php
-			}
-			
-			if ($field_type == FIELD_BOOL || $field_type == FIELD_DROPDOWN)
-			{
-				if ($field_type == FIELD_BOOL && !sizeof($cp->vars['lang_options']))
-				{
-					$cp->vars['lang_options'][0] = '';
-					$cp->vars['lang_options'][1] = '';
-				}
-?>
-				<tr>
-					<td class="row1"><b><?php echo $user->lang['ENTRIES']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang[strtoupper($cp->profile_types[$field_type]) . '_ENTRIES_EXPLAIN']; ?></span></td>
-					<td class="row2"><?php echo ($field_type == FIELD_DROPDOWN) ? '<textarea name="lang_options" rows="5" cols="80">' . implode("\n", $cp->vars['lang_options']) . '</textarea>' : '<table border=0><tr><td><input name="lang_options[0]" size="20" value="' . $cp->vars['lang_options'][0] . '" class="post" /></td><td>[ ' . $user->lang['FIRST_OPTION'] . ' ]</td></tr><tr><td><input name="lang_options[1]" size="20" value="' . $cp->vars['lang_options'][1] . '" class="post" /></td><td>[ ' . $user->lang['SECOND_OPTION'] . ' ]</td></tr></table>'; ?></td>
-				</tr>
-<?php
-			}
-?>
-			<tr>
-				<td width="100%" colspan="2" class="cat" align="right"><input class="btnlite" type="submit" name="next" value="<?php echo $user->lang['PROFILE_TYPE_OPTIONS']; ?>" /></td>
-			</tr>
-			<?php echo $s_hidden_fields; ?>
-			</table>
-			</form>
-<?php
-			break;
-
-		case 2:
-?>
-			<tr>
-				<td class="row1"><b><?php echo $user->lang['REQUIRED_FIELD']; ?></b><br /><span class="gensmall"><?php echo $user->lang['REQUIRED_FIELD_EXPLAIN']; ?></span></td>
-				<td class="row2"><input type="checkbox" name="field_required" value="1"<?php echo (($cp->vars['field_required']) ? ' checked="checked"' : ''); ?> /></td>
-			</tr>
-			<tr>
-				<td class="row1"><b><?php echo $user->lang['DISPLAY_AT_REGISTRATION']; ?></b></td>
-				<td class="row2"><input type="checkbox" name="field_show_on_reg" value="1"<?php echo (($cp->vars['field_show_on_reg']) ? ' checked="checked"' : ''); ?> /></td>
-			</tr>
-			<tr>
-				<td class="row1"><b><?php echo $user->lang['HIDE_PROFILE_FIELD']; ?></b><br /><span class="gensmall"><?php echo $user->lang['HIDE_PROFILE_FIELD_EXPLAIN']; ?></span></td>
-				<td class="row2"><input type="checkbox" name="field_hide" value="1"<?php echo (($cp->vars['field_hide']) ? ' checked="checked"' : ''); ?> /></td>
-			</tr>
-			
-<?php
-			// Build options based on profile type
-			$function = 'get_' . $cp->profile_types[$field_type] . '_options';
-			$options = $cp->$function();
-			foreach ($options as $num => $option_ary)
-			{
-?>
-				<tr>
-					<td class="row1"><b><?php echo $option_ary['TITLE']; ?>: </b><?php echo (isset($option_ary['EXPLAIN'])) ? '<br /><span class="gensmall">' . $option_ary['EXPLAIN'] . '</span>' : ''; ?></td>
-					<td class="row2"><?php echo $option_ary['FIELD']; ?></td>
-				</tr>
-<?php
-			}
-?>
-			<tr>
-				<td width="100%" colspan="2" class="cat"><table border="0" width="100%"><tr><td align="left"><input class="btnlite" type="submit" name="prev" value="<?php echo $user->lang['PROFILE_BASIC_OPTIONS']; ?>" /></td><td align="right"><input class="btnlite" type="submit" name="update" value="<?php echo $user->lang['UPDATE_PREVIEW']; ?>" />&nbsp;<input class="btnmain" type="submit" name="next" value="<?php echo (sizeof($lang_defs['iso']) == 1) ? $user->lang['SAVE'] : $user->lang['PROFILE_LANG_OPTIONS']; ?>" /></td></tr></table></td>
-			</tr>
-			<?php echo $s_hidden_fields; ?>
-			</table>
-
-			<br /><br />
-			<table class="bg" cellspacing="1" cellpadding="4" border="0" align="center" width="99%">
-			<tr>
-				<th align="center" colspan="2"><?php echo $user->lang['PREVIEW_PROFILE_FIELD']; ?></th>
-			</tr>
-<?php 
-			if (!empty($user_error) || $update) 
-			{
-				// If not and only showing common error messages, use this one
-				switch ($user_error)
-				{
-					case 'FIELD_INVALID_DATE':
-					case 'FIELD_REQUIRED':
-						$user_error = sprintf($user->lang[$user_error], $cp->vars['lang_name']);
-						break;
-					case 'FIELD_TOO_SHORT':
-					case 'FIELD_TOO_SMALL':
-						$user_error = sprintf($user->lang[$user_error], $cp->vars['lang_name'], $cp->vars['field_minlen']);
-						break;
-					case 'FIELD_TOO_LONG':
-					case 'FIELD_TOO_LARGE':
-						$user_error = sprintf($user->lang[$user_error], $cp->vars['lang_name'], $cp->vars['field_maxlen']);
-						break;
-					case 'FIELD_INVALID_CHARS':
-						switch ($cp->vars['field_validation'])
-						{
-							case '[0-9]+':
-								$user_error = sprintf($user->lang[$user_error . '_NUMBERS_ONLY'], $cp->vars['lang_name']);
-								break;
-							case '[\w]+':
-								$user_error = sprintf($user->lang[$user_error . '_ALPHA_ONLY'], $cp->vars['lang_name']);
-								break;
-							case '[\w_\+\. \-\[\]]+':
-								$user_error = sprintf($user->lang[$user_error . '_SPACERS_ONLY'], $cp->vars['lang_name']);
-								break;
-						}
-
-					default:
-						$user_error = '';
-				}
-
-?>				<tr>
-					<td class="row3" colspan="2"><?php echo (!empty($user_error)) ? '<span style="color:red">' . $user_error . '</span>' : '<span style="color:green">' . $user->lang['EVERYTHING_OK'] . '</span>'; ?></td>
-				</tr>
-<?php
-			}
-			
-			$field_data = array(
-				'lang_name'		=> $cp->vars['lang_name'],
-				'lang_explain'	=> $cp->vars['lang_explain'],
-				'lang_id'		=> $lang_defs['iso'][$config['default_lang']],
-				'field_id'		=> 1,
-
-				'lang_default_value'	=> $cp->vars['lang_default_value'],
-				'field_default_value'	=> $cp->vars['field_default_value'],
-				'field_ident'			=> 'preview',
-				'field_type'			=> $field_type,
-
-				'field_length'	=> $cp->vars['field_length'],
-				'field_maxlen'	=> $cp->vars['field_maxlen'],
-				'lang_options'	=> $cp->vars['lang_options']
-			);
-
-			preview_field($field_data);
-?>			
-			<tr>
-				<td width="100%" colspan="2" class="cat"><input class="btnlite" type="submit" name="update" value="<?php echo $user->lang['SUBMIT']; ?>" /></td>
-			</tr>
-			</table>
-			</form>
-<?php
-			break;
-
-		// Define remaining language variables
-		case 3: 
-			$options = build_language_options($field_type, $mode);
-
-			foreach ($options as $lang_id => $lang_ary)
-			{
-?>
-				<tr>
-					<td align="center" class="row3" colspan="2"><?php echo ($lang_ary['lang_iso'] == $config['default_lang']) ? sprintf($user->lang['DEFAULT_ISO_LANGUAGE'], $config['default_lang']) : sprintf($user->lang['ISO_LANGUAGE'], $lang_ary['lang_iso']) ?></td>
-				</tr>
-<?php
-				foreach ($lang_ary['fields'] as $field_name => $field_ary)
-				{
-?>
-				<tr>
-					<td class="row1"><b><?php echo $field_ary['TITLE']; ?>: </b><?php echo (isset($field_ary['EXPLAIN'])) ? '<br /><span class="gensmall">' . $field_ary['EXPLAIN'] . '</span>' : ''; ?></td>
-					<td class="row2"><?php echo $field_ary['FIELD']; ?></td>
-				</tr>
-<?php			
-				}
-			}
-?>
-			<tr>
-				<td width="100%" colspan="2" class="cat"><table border="0" width="100%"><tr><td align="left"><input class="btnlite" type="submit" name="prev" value="<?php echo $user->lang['PROFILE_TYPE_OPTIONS']; ?>" /></td><td align="right"><div style="align:right"><input type="submit" name="save" class="btnmain" value="<?php echo $user->lang['SAVE']; ?>" /></td></tr></table></td>
-			</tr>
-			<?php echo $s_hidden_fields; ?>
-			</table>
-			</form>
-<?php
-			break;
-	}
-}
-
-// Delete field
-if ($mode == 'delete')
-{
-	$confirm = (isset($_POST['confirm'])) ? true : false;
-	$cancel = (isset($_POST['cancel'])) ? true : false;
-	$field_id = request_var('field_id', 0);
-
-	if (!$field_id)
-	{
-		trigger_error('INVALID_MODE');
-	}
-
-	if ($confirm)
-	{
-		$sql = 'SELECT field_ident 
-			FROM ' . PROFILE_FIELDS_TABLE . " 
-			WHERE field_id = $field_id";
-		$result = $db->sql_query($sql);
-		$field_ident = $db->sql_fetchfield('field_ident', 0, $result);
-		$db->sql_freeresult($result);
-
-		$db->sql_query('DELETE FROM ' . PROFILE_FIELDS_TABLE . " WHERE field_id = $field_id");
-		$db->sql_query('DELETE FROM ' . PROFILE_FIELDS_LANG_TABLE . " WHERE field_id = $field_id");
-		$db->sql_query('DELETE FROM ' . PROFILE_LANG_TABLE . " WHERE field_id = $field_id");
-		$db->sql_query('ALTER TABLE ' . PROFILE_DATA_TABLE . " DROP $field_ident");
-
-		$order = 0;
-
-		$sql = 'SELECT *
-			FROM ' . PROFILE_FIELDS_TABLE . '
-			ORDER BY field_order';
-		$result = $db->sql_query($sql);
-
-		while ($row = $db->sql_fetchrow($result))
-		{
-			$order++;
-			if ($row['field_order'] != $order)
-			{
-				$sql = 'UPDATE ' . 
-					PROFILE_FIELDS_TABLE . " 
-					SET field_order = $order 
-					WHERE field_id = {$row['field_id']}";
-				$db->sql_query($sql);
-			}
-		}
-
-		// TODO: add_log
-		trigger_error($user->lang['DELETED_PROFILE_FIELD']);
-	}
-	else if (!$cancel)
-	{
-		$l_message = '<form method="post" action="admin_profile.' . $phpEx . $SID . '&amp;mode=delete&amp;field_id=' . $field_id . '">' . $user->lang['CONFIRM_DELETE_PROFILE_FIELD'] . '<br /><br /><input class="btnlite" type="submit" name="confirm" value="' . $user->lang['YES'] . '" />&nbsp;&nbsp;<input class="btnlite" type="submit" name="cancel" value="' . $user->lang['NO'] . '" /></form>';
-
-		adm_page_message($user->lang['CONFIRM'], $l_message, false, false);
-
-		adm_page_footer();
-	}
-	
-	$mode = 'manage';
-}
-
-if ($mode == 'activate')
-{
-	$field_id = request_var('field_id', 0);
-
-	if (!$field_id)
-	{
-		trigger_error('INVALID_MODE');
-	}
-	
-	$sql = 'SELECT lang_id 
-		FROM ' . LANG_TABLE . " 
-		WHERE lang_iso = '{$config['default_lang']}'";
-	$result = $db->sql_query($sql);
-	$default_lang_id = (int) $db->sql_fetchfield('lang_id', 0, $result);
-	$db->sql_freeresult($result);
-
-	if (!in_array($default_lang_id, $lang_defs['entry'][$field_id]))
-	{
-		trigger_error('DEFAULT_LANGUAGE_NOT_FILLED');
-	}
-
-	$sql = 'UPDATE ' . PROFILE_FIELDS_TABLE . " 
-		SET field_active = 1 
-		WHERE field_id = $field_id";
-	$db->sql_query($sql);
-
-	// TODO: add_log
-	trigger_error($user->lang['PROFILE_FIELD_ACTIVATED']);
-}
-
-if ($mode == 'deactivate')
-{
-	$field_id = request_var('field_id', 0);
-
-	if (!$field_id)
-	{
-		trigger_error('INVALID_MODE');
-	}
-	
-	$sql = 'UPDATE ' . PROFILE_FIELDS_TABLE . "
-		SET field_active = 0 
-		WHERE field_id = $field_id";
-	$db->sql_query($sql);
-
-	// TODO: add_log
-	trigger_error($user->lang['PROFILE_FIELD_DEACTIVATED']);
-}
-
-if ($mode == 'move_up' || $mode == 'move_down')
-{
-	$field_order = request_var('order', 0);
-	$order_total = $field_order * 2 + (($mode == 'move_up') ? -1 : 1);
-
-	$sql = 'UPDATE ' . PROFILE_FIELDS_TABLE . "
-		SET field_order = $order_total - field_order
-		WHERE field_order IN ($field_order, " . (($mode == 'move_up') ? $field_order - 1 : $field_order + 1) . ')';
-	$db->sql_query($sql);
-
-	$mode = 'manage';
-}
-
-if ($mode == 'manage')
-{
-?>
-	<form name="profile_fields" method="post" action="admin_profile.<?php echo "$phpEx$SID"; ?>">
-	<table class="bg" cellspacing="1" cellpadding="4" border="0" align="center" width="99%">
-	<tr> 
-		<th nowrap="nowrap">Name</th>
-		<th nowrap="nowrap">Template Variable</th>
-		<th nowrap="nowrap">Type</th>
-		<th colspan="3" nowrap="nowrap">Options</th>
-		<th nowrap="nowrap">Reorder</th>
-	</tr>
-<?php
-	$sql = 'SELECT *
-		FROM ' . PROFILE_FIELDS_TABLE . '
-		ORDER BY field_order';
-	$result = $db->sql_query($sql);
-
-	$row_class = '';
-	while ($row = $db->sql_fetchrow($result))
-	{
-		$row_class = ($row_class == 'row1') ? 'row2' : 'row1';
-
-		$active_lang = (!$row['field_active']) ? 'ACTIVATE' : 'DEACTIVATE';
-		$active_value = (!$row['field_active']) ? 'activate' : 'deactivate';
-		$id = $row['field_id'];
-?>
-	<tr>
-		<td class="<?php echo $row_class; ?>"><?php echo $row['field_name']; ?></td>
-		<td class="<?php echo $row_class; ?>"><?php echo $row['field_ident']; ?></td>
-		<td class="<?php echo $row_class; ?>"><?php echo $user->lang['FIELD_' . strtoupper($cp->profile_types[$row['field_type']])]; ?></td>
-		<td class="<?php echo $row_class; ?>"><a href="admin_profile.<?php echo $phpEx . $SID; ?>&amp;mode=<?php echo $active_value; ?>&amp;field_id=<?php echo $id; ?>"><?php echo $user->lang[$active_lang]; ?></a></td>
-		<td class="<?php echo $row_class; ?>"><a href="admin_profile.<?php echo $phpEx . $SID; ?>&amp;mode=edit&amp;field_id=<?php echo $id; ?>"><?php echo ((sizeof($lang_defs['diff'][$row['field_id']])) ? '<span style="color:red">' . $user->lang['EDIT'] . '</span>' : $user->lang['EDIT']) . '</a>' . ((sizeof($lang_defs['diff'][$row['field_id']])) ? '</span>' : ''); ?></td>
-		<td class="<?php echo $row_class; ?>"><a href="admin_profile.<?php echo $phpEx . $SID; ?>&amp;mode=delete&amp;field_id=<?php echo $id; ?>"><?php echo $user->lang['DELETE']; ?></a></td>
-		<td class="<?php echo $row_class; ?>" align="center"><a href="admin_profile.<?php echo $phpEx . $SID; ?>&amp;mode=move_up&amp;order=<?php echo $row['field_order']; ?>"><?php echo $user->lang['MOVE_UP']; ?></a> | <a href="admin_profile.<?php echo $phpEx . $SID; ?>&amp;mode=move_down&amp;order=<?php echo $row['field_order']; ?>"><?php echo $user->lang['MOVE_DOWN']; ?></a></td>
-	</tr>
-<?php
-	}
-	$db->sql_freeresult($result);
-
-	$s_select_type = '';
-	foreach ($cp->profile_types as $key => $value)
-	{
-		$s_select_type .= '<option value="' . $key . '">' . $user->lang['FIELD_' . strtoupper($value)] . '</option>';
-	}
-?>
-	<tr>
-		<td class="cat" colspan="7"><input class="post" type="text" name="field_name" size="20" /> <select name="field_type"><?php echo $s_select_type; ?></select> <input class="btnlite" type="submit" name="add" value="<?php echo $user->lang['CREATE_NEW_FIELD']; ?>" /></td>
-	</tr>
-	</table>
-	</form>
-<?php
-}
-
-adm_page_footer();
-
-
-function preview_field($field_data)
-{
-	global $cp;
-
-	$field = $cp->process_field_row('preview', $field_data);
-?>
-	<tr> 
-		<td class="row1"><b><?php echo $field_data['lang_name']; ?>: </b><?php echo (!empty($field_data['lang_explain'])) ? '<br /><span class="gensmall">' . $field_data['lang_explain'] . '</span>' : ''; ?></td> 
-		<td class="row2"><?php echo $field; ?></td> 
-	</tr>
-<?php
-}
-
-// Build all Language specific options
-function build_language_options($field_type, $mode = 'create')
-{
-	global $user, $config, $db, $cp;
-
-	$sql = 'SELECT lang_id, lang_iso 
-		FROM ' . LANG_TABLE . "
-		WHERE lang_iso <> '" . $config['default_lang'] . "'";
-	$result = $db->sql_query($sql);
-
-	$languages = array();
-	while ($row = $db->sql_fetchrow($result))
-	{
-		$languages[$row['lang_id']] = $row['lang_iso'];
-	}
-	$db->sql_freeresult($result);
-		
-	$options = array();
-	$options['lang_name'] = 'string';
-	if (!empty($cp->vars['lang_explain']))
-	{
-		$options['lang_explain'] = 'text';
-	}
-	
-	switch ($field_type)
-	{
-		case FIELD_BOOL:
-			$options['lang_options'] = 'two_options';
-			break;
-		case FIELD_DROPDOWN:
-			$options['lang_options'] = 'optionfield';
-			break;
-		case FIELD_TEXT:
-		case FIELD_STRING:
-			if (!empty($cp->vars['lang_default_value']))
-			{
-				$options['lang_default_value'] = ($field_type == FIELD_STRING) ? 'string' : 'text';
-			}
-			break;
-	}
-	
-	$lang_options = array();
-
-	foreach ($options as $field => $field_type)
-	{
-		$lang_options[1]['lang_iso'] = $config['default_lang'];
-		$lang_options[1]['fields'][$field] = array(
-			'TITLE'		=> $user->lang['CP_' . strtoupper($field)],
-			'FIELD'		=> '<b>' . ((is_array($cp->vars[$field])) ? implode('<br />', $cp->vars[$field]) : str_replace("\n", '<br />', $cp->vars[$field])) . '</b>'
-		);
-
-		if (isset($user->lang['CP_' . strtoupper($field) . '_EXPLAIN']))
-		{
-			$lang_options[1]['fields'][$field]['EXPLAIN'] = $user->lang['CP_' . strtoupper($field) . '_EXPLAIN'];
-		}
-	}
-
-	foreach ($languages as $lang_id => $lang_iso)
-	{
-		$lang_options[$lang_id]['lang_iso'] = $lang_iso;
-		foreach ($options as $field => $field_type)
-		{
-			$value = ($mode == 'create') ? request_var('l_' . $field, '') : $cp->vars['l_' . $field];
-				 
-			if ($field == 'lang_options')
-			{
-				$var = ($mode == 'create') ? $cp->vars['lang_options'] : $cp->vars['lang_options'][$lang_id];
-					
-				switch ($field_type)
-				{
-					case 'two_options':
-
-						$lang_options[$lang_id]['fields'][$field] = array(
-							'TITLE'		=> $user->lang['CP_' . strtoupper($field)],
-							'FIELD'		=> '<table border=0><tr><td><span class="genmed">' . $user->lang['FIRST_OPTION'] . ': </span></td><td><input name="l_' . $field . '[' . $lang_id . '][]" size="20" value="' . ((isset($value[$lang_id][0])) ? $value[$lang_id][0] : $var[0]) . '" class="post" /></td></tr><tr><td><span class="genmed">' . $user->lang['SECOND_OPTION'] . ': </span></td><td><input name="l_' . $field . '[' . $lang_id . '][]" size="20" value="' . ((isset($value[$lang_id][1])) ? $value[$lang_id][1] : $var[1]) . '" class="post" /></td></tr></table>'
-						);
-						break;
-
-					case 'optionfield':
-
-						$lang_options[$lang_id]['fields'][$field] = array(
-							'TITLE'		=> $user->lang['CP_' . strtoupper($field)],
-							'FIELD'		=> '<textarea name="l_' . $field . '[' . $lang_id . ']" rows="7" cols="80">' . ((isset($value[$lang_id])) ? implode("\n", $value[$lang_id]) : implode("\n", $var)) . '</textarea>'
-						);
-						break;
-				}
-				
-				if (isset($user->lang['CP_' . strtoupper($field) . '_EXPLAIN']))
-				{
-					$lang_options[$lang_id]['fields'][$field]['EXPLAIN'] = $user->lang['CP_' . strtoupper($field) . '_EXPLAIN'];
-				}
-			}
-			else
-			{
-				$var = ($mode == 'create') ? $cp->vars[$field] : $cp->vars[$field][$lang_id];
-
-				$lang_options[$lang_id]['fields'][$field] = array(
-					'TITLE'		=> $user->lang['CP_' . strtoupper($field)],
-					'FIELD'		=> ($field_type == 'string') ? '<input class="post" type="text" name="l_' . $field . '[' . $lang_id . ']" value="' . ((isset($value[$lang_id])) ? $value[$lang_id] : $var) . '" size="20" />' : '<textarea name="l_' . $field . '[' . $lang_id . ']" rows="3" cols="80">' . ((isset($value[$lang_id])) ? $value[$lang_id] : $var) . '</textarea>'
-				);
-		
-				if (isset($user->lang['CP_' . strtoupper($field) . '_EXPLAIN']))
-				{
-					$lang_options[$lang_id]['fields'][$field]['EXPLAIN'] = $user->lang['CP_' . strtoupper($field) . '_EXPLAIN'];
-				}
-			}
-		}
-	}
-
-	return $lang_options;
-}
-
-function save_profile_field($field_type, $mode = 'create')
-{
-	global $cp, $db, $config, $user, $lang_defs;
-
-	$field_id = request_var('field_id', 0);
-
-	// Collect all informations, if something is going wrong, abort the operation
-	$profile_sql = $profile_lang = $empty_lang = $profile_lang_fields = array();
-
-	$default_lang_id = $lang_defs['iso'][$config['default_lang']];
-
-	if ($mode == 'create')
-	{
-		$result = $db->sql_query('SELECT MAX(field_order) as max_field_order FROM ' . PROFILE_FIELDS_TABLE);
-		$new_field_order = (int) $db->sql_fetchfield('max_field_order', 0, $result);
-		$db->sql_freeresult($result);
-
-		// We do not use a stripped down field name as identifier in order to retain sql compatibility, of course it would be nice to not have to look up the identifier and instead having a descriptive name, but this would produce more errors than needed, and do you want to have a totally crypted name just because of stripped characters? ;)
-		$field_ident = 'field_' . ($new_field_order + 1);
-	}
-
-	// Save the field
-	$profile_fields = array(
-		'field_name'		=> $cp->vars['field_name'],
-		'field_length'		=> $cp->vars['field_length'],
-		'field_minlen'		=> $cp->vars['field_minlen'],
-		'field_maxlen'		=> $cp->vars['field_maxlen'],
-		'field_novalue'		=> $cp->vars['field_novalue'],
-		'field_default_value'	=> $cp->vars['field_default_value'],
-		'field_validation'	=> $cp->vars['field_validation'],
-		'field_required'	=> $cp->vars['field_required'],
-		'field_show_on_reg'	=> $cp->vars['field_show_on_reg'],
-		'field_hide'		=> $cp->vars['field_hide']
-	);
-
-	if ($mode == 'create')
-	{
-		$profile_fields += array(
-			'field_type'		=> $field_type,
-			'field_ident'		=> $field_ident,
-			'field_order'		=> $new_field_order + 1,
-			'field_active'		=> 1
-		);
-
-		$db->sql_query('INSERT INTO ' . PROFILE_FIELDS_TABLE . ' ' . $db->sql_build_array('INSERT', $profile_fields));
-
-		$field_id = $db->sql_nextid();
-	}
-	else
-	{
-		$db->sql_query('UPDATE ' . PROFILE_FIELDS_TABLE . ' SET ' . $db->sql_build_array('UPDATE', $profile_fields) . "
-			WHERE field_id = $field_id");
-	}
-		
-	if ($mode == 'create')
-	{
-		// We are defining the biggest common value, because of the possibility to edit the min/max values of each field.
-		$sql = 'ALTER TABLE ' . PROFILE_DATA_TABLE . " ADD $field_ident ";
-		switch ($field_type)
-		{
-			case FIELD_STRING:
-				$sql .= ' VARCHAR(255) DEFAULT NULL NULL';
-				break;
-
-			case FIELD_DATE:
-				$sql .= 'VARCHAR(10) DEFAULT NULL NULL';
-				break;
-
-			case FIELD_TEXT:
-				$sql .= 'TEXT NULL';
-				break;
-
-			case FIELD_BOOL:
-				$sql .= 'TINYINT(2) DEFAULT NULL NULL';
-				break;
-		
-			case FIELD_DROPDOWN:
-				$sql .= 'MEDIUMINT(8) DEFAULT NULL NULL';
-				break;
-
-			case FIELD_INT:
-				$sql .= 'BIGINT(20) DEFAULT NULL NULL';
-				break;
-		}
-		$profile_sql[] = $sql;
-	}
-
-	$sql_ary = array(
-		'lang_name'		=> $cp->vars['lang_name'],
-		'lang_explain'	=> $cp->vars['lang_explain'],
-		'lang_default_value'	=> $cp->vars['lang_default_value']
-	);
-
-	if ($mode == 'create')
-	{
-		$sql_ary['field_id'] = $field_id;
-		$sql_ary['lang_id'] = $default_lang_id;
-	
-		$profile_sql[] = 'INSERT INTO ' . PROFILE_LANG_TABLE . ' ' . $db->sql_build_array('INSERT', $sql_ary);
-	}
-	else
-	{
-		update_insert(PROFILE_LANG_TABLE, $sql_ary, array('field_id' => $field_id, 'lang_id' => $default_lang_id));
-	}
-
-	if (sizeof($cp->vars['l_lang_name']))
-	{
-		foreach ($cp->vars['l_lang_name'] as $lang_id => $data)
-		{
-			if (($cp->vars['lang_name'] != '' && $cp->vars['l_lang_name'][$lang_id] == '')
-				|| ($cp->vars['lang_explain'] != '' && $cp->vars['l_lang_explain'][$lang_id] == '')
-				|| ($cp->vars['lang_default_value'] != '' && $cp->vars['l_lang_default_value'][$lang_id] == ''))
-			{
-				$empty_lang[$lang_id] = true;
-				break;
-			}
-				
-			if (!isset($empty_lang[$lang_id]))
-			{
-				$profile_lang[] = array(
-					'field_id'		=> $field_id,
-					'lang_id'		=> $lang_id,
-					'lang_name'		=> $cp->vars['l_lang_name'][$lang_id],
-					'lang_explain'	=> $cp->vars['l_lang_explain'][$lang_id],
-					'lang_default_value'	=> $cp->vars['l_lang_default_value'][$lang_id]
-				);
-			}
-		}
-	}
-
-	$cp->vars['l_lang_name']			= request_var('l_lang_name', '');
-	$cp->vars['l_lang_explain']			= request_var('l_lang_explain', '');
-	$cp->vars['l_lang_default_value']	= request_var('l_lang_default_value', '');
-	$cp->vars['l_lang_options']			= request_var('l_lang_options', '');
-
-	if (!empty($cp->vars['lang_options']))
-	{
-		if (!is_array($cp->vars['lang_options']))
-		{
-			$cp->vars['lang_options'] = explode("\n", $cp->vars['lang_options']);
-		}
-
-		foreach ($cp->vars['lang_options'] as $option_id => $value)
-		{
-			$sql_ary = array(
-				'field_type'	=> (int) $field_type,
-				'value'			=> $value
-			);
-
-			if ($mode == 'create')
-			{
-				$sql_ary['field_id'] = $field_id;
-				$sql_ary['lang_id'] = $default_lang_id;
-				$sql_ary['option_id'] = (int) $option_id;
-
-				$profile_sql[] = 'INSERT INTO ' . PROFILE_FIELDS_LANG_TABLE . ' ' . $db->sql_build_array('INSERT', $sql_ary);
-			}
-			else
-			{
-				update_insert(PROFILE_FIELDS_LANG_TABLE, $sql_ary, array(
-					'field_id' => $field_id,
-					'lang_id' => (int) $default_lang_id,
-					'option_id' => (int) $option_id)
-				);
-			}
-		}
-	}
-
-	if (sizeof($cp->vars['l_lang_options']))
-	{
-		foreach ($cp->vars['l_lang_options'] as $lang_id => $lang_ary)
-		{
-			if (!is_array($lang_ary))
-			{
-				$lang_ary = explode("\n", $lang_ary);
-			}
-
-			if (sizeof($lang_ary) != sizeof($cp->vars['lang_options']))
-			{
-				$empty_lang[$lang_id] = true;
-			}
-
-			if (!isset($empty_lang[$lang_id]))
-			{
-				foreach ($lang_ary as $option_id => $value)
-				{
-					$profile_lang_fields[] = array(
-						'field_id'		=> (int) $field_id,
-						'lang_id'		=> (int) $lang_id,
-						'option_id'		=> (int) $option_id,
-						'field_type'	=> (int) $field_type,
-						'value'			=> $value
-					);
-				}
-			}
-		}
-	}
-
-	foreach ($profile_lang as $sql)
-	{
-		if ($mode == 'create')
-		{
-			$profile_sql[] = 'INSERT INTO ' . PROFILE_LANG_TABLE . ' ' . $db->sql_build_array('INSERT', $sql);
-		}
-		else
-		{
-			$lang_id = $sql['lang_id'];
-			unset($sql['lang_id'], $sql['field_id']);
-			update_insert(PROFILE_LANG_TABLE, $sql, array('lang_id' => (int) $lang_id, 'field_id' => $field_id));
-		}
-	}
-
-	if (sizeof($profile_lang_fields))
-	{
-		foreach ($profile_lang_fields as $sql)
-		{
-			if ($mode == 'create')
-			{
-				$profile_sql[] = 'INSERT INTO ' . PROFILE_FIELDS_LANG_TABLE . ' ' . $db->sql_build_array('INSERT', $sql);
-			}
-			else
-			{
-				$lang_id = $sql['lang_id'];
-				$option_id = $sql['option_id'];
-				unset($sql['lang_id'], $sql['field_id'], $sql['option_id']);
-				update_insert(PROFILE_FIELDS_LANG_TABLE, $sql, array(
-					'lang_id'	=> $lang_id, 
-					'field_id'	=> $field_id,
-					'option_id'	=> $option_id)
-				);
-			}
-		}
-	}
-
-//		$db->sql_transaction();
-	if ($mode == 'create')
-	{
-		foreach ($profile_sql as $sql)
-		{
-			$db->sql_query($sql);
-		}
-	}
-//	$db->sql_transaction('commit');
-
-	// TODO: add_log
-	trigger_error($user->lang['ADDED_PROFILE_FIELD']);
-}
-
-// Update, then insert if not successfull
-function update_insert($table, $sql_ary, $where_fields)
-{
-	global $db;
-
-	$where_sql = array();
-	foreach ($where_fields as $key => $value)
-	{
-		$where_sql[] = $key . ' = ' . ((is_string($value)) ? "'" . $db->sql_escape($value) . "'" : $value);
-	}
-
-	$db->sql_return_on_error(true);
-	
-	$sql = "UPDATE $table SET " . $db->sql_build_array('UPDATE', $sql_ary) . ' 
-		WHERE ' . implode(' AND ', $where_sql);
-	$result = $db->sql_query($sql);
-
-	$db->sql_return_on_error(false);
-	
-	if (!$result)
-	{
-		$sql_ary = array_merge($where_fields, $sql_ary);
-		$db->sql_query("INSERT INTO $table " . $db->sql_build_array('INSERT', $sql_ary));
-	}
-
-}
-
-function build_hidden_fields($key_ary)
-{
-	$hidden_fields = '';
-
-	foreach ($key_ary as $key)
-	{
-		$var = isset($_REQUEST[$key]) ? $_REQUEST[$key] : false;
-
-		if ($var === false)
-		{
-			continue;
-		}
-
-		if (is_array($var))
-		{
-			foreach ($var as $num => $__var)
-			{
-				if (is_array($__var))
-				{
-					foreach ($__var as $_num => $___var)
-					{
-						$hidden_fields .= '<input type="hidden" name="' . $key . '[' . $num . '][' . $_num . ']" value="' . stripslashes(htmlspecialchars($___var)) . '" />' . "\n";
-					}
-				}
-				else
-				{
-					$hidden_fields .= '<input type="hidden" name="' . $key . '[' . $num . ']" value="' . stripslashes(htmlspecialchars($__var)) . '" />' . "\n";
-				}
-			}
-		}
-		else
-		{
-			$hidden_fields .= '<input type="hidden" name="' . $key . '" value="' . stripslashes(htmlspecialchars($var)) . '" />' . "\n";
-		}
-	}
-	return $hidden_fields;
-}
-
-?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/admin/admin_prune.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_prune.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_prune.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -16,226 +16,155 @@
 }
 
 // Do we have permission?
-if (!$_CLASS['auth']->acl_get('a_prune'))
+if (!$_CLASS['forums_auth']->acl_get('a_prune'))
 {
-	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
+	trigger_error('NO_ADMIN');
 }
-
-// Get the forum ID for pruning
-$forum_id = (isset($_REQUEST['f'])) ? array_map('intval', $_REQUEST['f']) : array();
-
-// Check for submit to be equal to Prune. If so then proceed with the pruning.
-if (isset($_POST['submit']))
-{
-	$prune_posted = (isset($_POST['prune_days'])) ? intval($_POST['prune_days']) : 0;
-	$prune_viewed = (isset($_POST['prune_vieweddays'])) ? intval($_POST['prune_vieweddays']) : 0;
-	$prune_all = !$prune_posted && !$prune_viewed;
-	
-	$prune_flags = 0;
-	$prune_flags += (!empty($_POST['prune_old_polls'])) ? 2 : 0;
-	$prune_flags += (!empty($_POST['prune_announce'])) ? 4 : 0;
-	$prune_flags += (!empty($_POST['prune_sticky'])) ? 8 : 0;
-
-	// Convert days to seconds for timestamp functions...
-	$prunedate_posted = time() - ($prune_posted * 86400);
-	$prunedate_viewed = time() - ($prune_viewed * 86400);
-
-	adm_page_header($_CLASS['core_user']->lang['PRUNE']);
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang['PRUNE']; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['PRUNE_SUCCESS']; ?></p>
-
-<table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th><?php echo $_CLASS['core_user']->lang['FORUM']; ?></th>
-		<th><?php echo $_CLASS['core_user']->lang['TOPICS_PRUNED']; ?></th>
-		<th><?php echo $_CLASS['core_user']->lang['POSTS_PRUNED']; ?></th>
-	</tr>
-<?php
-
-	$sql_forum = (sizeof($forum_id)) ? ' AND forum_id IN (' . implode(', ', $forum_id) . ')' : '';
-
-	// Get a list of forum's or the data for the forum that we are pruning.
-	$sql = 'SELECT forum_id, forum_name 
-		FROM ' . FORUMS_TABLE . '
-		WHERE forum_type = ' . FORUM_POST . "
-			$sql_forum 
-		ORDER BY left_id ASC";
-	$result = $_CLASS['core_db']->sql_query($sql);
-
-	if ($row = $_CLASS['core_db']->sql_fetchrow($result))
-	{
-		$prune_ids = array();
-		$p_result['topics'] = 0;
-		$p_result['posts'] = 0;
-		$log_data = '';
-		do
-		{
-			if ($_CLASS['auth']->acl_get('f_list', $row['forum_id']))
-			{
-				if ($prune_all)
-				{
-					$p_result = prune($row['forum_id'], 'posted', time(), $prune_flags, false);
-				}
-				else
-				{
-					if ($prune_posted)
-					{
-						$return = prune($row['forum_id'], 'posted', $prunedate_posted, $prune_flags, false);
-						$p_result['topics'] += $return['topics'];
-						$p_result['posts'] += $return['posts'];
-					}
-					if ($prune_viewed)
-					{
-						$return = prune($row['forum_id'], 'viewed', $prunedate_viewed, $prune_flags, false);
-						$p_result['topics'] += $return['topics'];
-						$p_result['posts'] += $return['posts'];
-					}
-				}
-
-				
-				$prune_ids[] = $row['forum_id'];
-
-				$row_class = ($row_class == 'row1') ? 'row2' : 'row1';
-
-?>
-	<tr>
-		<td class="<?php echo $row_class; ?>" align="center"><?php echo $row['forum_name']; ?></td>
-		<td class="<?php echo $row_class; ?>" align="center"><?php echo $p_result['topics']; ?></td>
-		<td class="<?php echo $row_class; ?>" align="center"><?php echo $p_result['posts']; ?></td>
-	</tr>
-<?php
-	
-				$log_data .= (($log_data != '') ? ', ' : '') . $row['forum_name'];
-			}
-		}
-		while ($row = $_CLASS['core_db']->sql_fetchrow($result));
-
-		// Sync all pruned forums at once
-		sync('forum', 'forum_id', $prune_ids, TRUE);
-
-		add_log('admin', 'LOG_PRUNE', $log_data);
-	}
-	else
-	{
-
-?>
-	<tr>
-		<td class="row1" align="center"><?php echo $_CLASS['core_user']->lang['NO_PRUNE']; ?></td>
-	</tr>
-<?php
-
-	}
-	$_CLASS['core_db']->sql_freeresult($result);
-
-?>
-</table>
-
-<br clear="all" />
-
-<?php
-
-	adm_page_footer();
-
+
+$_CLASS['core_user']->add_lang('admin_prune', 'forums');
+
+$tpl_name = 'acp_prune_forums';
+$page_title = 'ACP_PRUNE_FORUMS';
+$u_action = 'forums&amp;file=admin_prune';
+
+global $_CLASS, $config;
+
+$forum_id = request_var('f', array(0));
+$submit = (isset($_POST['submit'])) ? true : false;
+
+$_CLASS['core_template']->assign_array(array(
+	'S_PRUNED'			=> false,
+	'S_SELECT_FORUM'	=> false,
+));
+	
+if ($submit)
+{
+	$prune_posted = request_var('prune_days', 0);
+	$prune_viewed = request_var('prune_vieweddays', 0);
+	$prune_all = !$prune_posted && !$prune_viewed;
+
+	$prune_flags = 0;
+	$prune_flags += (request_var('prune_old_polls', 0)) ? 2 : 0;
+	$prune_flags += (request_var('prune_announce', 0)) ? 4 : 0;
+	$prune_flags += (request_var('prune_sticky', 0)) ? 8 : 0;
+
+	// Convert days to seconds for timestamp functions...
+	$prunedate_posted = time() - ($prune_posted * 86400);
+	$prunedate_viewed = time() - ($prune_viewed * 86400);
+
+	$_CLASS['core_template']->assign_array(array(
+		'S_PRUNED'		=> true)
+	);
+
+	$sql_forum = (sizeof($forum_id)) ? ' AND forum_id IN (' . implode(', ', $forum_id) .')' : '';
+
+	// Get a list of forum's or the data for the forum that we are pruning.
+	$sql = 'SELECT forum_id, forum_name 
+		FROM ' . FORUMS_FORUMS_TABLE . '
+		WHERE forum_type = ' . FORUM_POST . "
+			$sql_forum 
+		ORDER BY left_id ASC";
+	$result = $_CLASS['core_db']->query($sql);
+
+	if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$prune_ids = array();
+		$p_result['topics'] = 0;
+		$p_result['posts'] = 0;
+		$log_data = '';
+
+		do
+		{
+			if (!$_CLASS['forums_auth']->acl_get('f_list', $row['forum_id']))
+			{
+				continue;
+			}
+
+			if ($prune_all)
+			{
+				$p_result = prune($row['forum_id'], 'posted', time(), $prune_flags, false);
+			}
+			else
+			{
+				if ($prune_posted)
+				{
+					$return = prune($row['forum_id'], 'posted', $prunedate_posted, $prune_flags, false);
+					$p_result['topics'] += $return['topics'];
+					$p_result['posts'] += $return['posts'];
+				}
+
+				if ($prune_viewed)
+				{
+					$return = prune($row['forum_id'], 'viewed', $prunedate_viewed, $prune_flags, false);
+					$p_result['topics'] += $return['topics'];
+					$p_result['posts'] += $return['posts'];
+				}
+			}
+
+			$prune_ids[] = $row['forum_id'];
+
+			$_CLASS['core_template']->assign_vars_array('pruned', array(
+				'FORUM_NAME'	=> $row['forum_name'],
+				'NUM_TOPICS'	=> $p_result['topics'],
+				'NUM_POSTS'		=> $p_result['posts'])
+			);
+
+			$log_data .= (($log_data != '') ? ', ' : '') . $row['forum_name'];
+		}
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
+
+		// Sync all pruned forums at once
+		sync('forum', 'forum_id', $prune_ids, true);
+		add_log('admin', 'LOG_PRUNE', $log_data);
+	}
+	$_CLASS['core_db']->free_result($result);
+}
+
+// If they haven't selected a forum for pruning yet then
+// display a select box to use for pruning.
+if (!sizeof($forum_id))
+{
+	$_CLASS['core_template']->assign_array(array(
+		'U_ACTION'			=> generate_link($u_action, array('admin' => true)),
+		'S_SELECT_FORUM'	=> true,
+		'S_FORUM_OPTIONS'	=> make_forum_select(false, false, false))
+	);
+}
+else
+{
+	$sql = 'SELECT forum_id, forum_name 
+		FROM ' . FORUMS_FORUMS_TABLE . ' 
+		WHERE forum_id IN (' . implode(', ', $forum_id).')';
+	$result = $_CLASS['core_db']->query($sql);
+	$row = $_CLASS['core_db']->fetch_row_assoc($result);
+
+	if (!$row)
+	{
+		$_CLASS['core_db']->free_result($result);
+		trigger_error($_CLASS['core_user']->lang['NO_FORUM'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+	}
+
+	$forum_list = $s_hidden_fields = '';
+	do
+	{
+		$forum_list .= (($forum_list != '') ? ', ' : '') . '<b>' . $row['forum_name'] . '</b>';
+		$s_hidden_fields .= '<input type="hidden" name="f[]" value="' . $row['forum_id'] . '" />';
+	}
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
+
+	$_CLASS['core_db']->free_result($result);
+
+	$l_selected_forums = (sizeof($forum_id) == 1) ? 'SELECTED_FORUM' : 'SELECTED_FORUMS';
+
+	$_CLASS['core_template']->assign_array(array(
+		'L_SELECTED_FORUMS'		=> $_CLASS['core_user']->get_lang($l_selected_forums),
+		'U_ACTION'				=> generate_link($u_action, array('admin' => true)),
+		'U_BACK'				=> generate_link($u_action, array('admin' => true)),
+		'FORUM_LIST'			=> $forum_list,
+		'S_HIDDEN_FIELDS'		=> $s_hidden_fields
+	));
 }
+
+$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'modules/forums/admin/acp_prune.html');
 
-adm_page_header($_CLASS['core_user']->lang['PRUNE']);
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang['PRUNE']; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['FORUM_PRUNE_EXPLAIN']; ?></p>
-
-<?php
-
-// If they haven't selected a forum for pruning yet then
-// display a select box to use for pruning.
-if (!$forum_id)
-{
-
-?>
-
-<form method="post" action="<?php echo generate_link('Forums&amp;file=admin_prune', array('admin' => true)); ?>"><table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th align="center"><?php echo $_CLASS['core_user']->lang['SELECT_FORUM']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1" align="center"><select style="width:280px" name="f[]" multiple="true" size="5"><?php echo make_forum_select(false, false, false); ?></select></td>
-	</tr>
-	<tr>
-		<td class="cat" align="center"><input class="btnmain" type="submit" value="<?php echo $_CLASS['core_user']->lang['LOOK_UP_FORUM']; ?>" />&nbsp; <input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /></td>
-	</tr>
-</table></form>
-
-<?php
-
-}
-else
-{
-	$sql = 'SELECT forum_id, forum_name 
-		FROM ' . FORUMS_TABLE . ' 
-		WHERE forum_id IN (' . implode(', ', $forum_id) . ')';
-	$result = $_CLASS['core_db']->sql_query($sql);
-
-	if (!($row = $_CLASS['core_db']->sql_fetchrow($result)))
-	{
-		trigger_error($_CLASS['core_user']->lang['NO_FORUM']);
-	}
-
-	$forum_list = $s_hidden_fields = '';
-	do
-	{
-		$forum_list .= (($forum_list != '') ? ', ' : '') . '<b>' . $row['forum_name'] . '</b>';
-		$s_hidden_fields .= '<input type="hidden" name="f[]" value="' . $row['forum_id'] . '" />';
-	}
-	while ($row = $_CLASS['core_db']->sql_fetchrow($result));
-	$_CLASS['core_db']->sql_freeresult($result);
-
-	$l_selected_forums = (sizeof($forum_id) == 1) ? 'SELECTED_FORUM' : 'SELECTED_FORUMS';
-
-?>
-
-<h2><?php echo $_CLASS['core_user']->lang['FORUM']; ?></h2>
-
-<p><?php echo $_CLASS['core_user']->lang[$l_selected_forums] . ': ' . $forum_list; ?></p>
-
-<form method="post"	action="<?php echo generate_link('Forums&amp;file=admin_prune', array('admin' => true)); ?>"><table class="tablebg" width="100%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $_CLASS['core_user']->lang['FORUM_PRUNE']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $_CLASS['core_user']->lang['PRUNE_NOT_POSTED']; ?></td>
-		<td class="row2"><input type="text" name="prune_days" size="4" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $_CLASS['core_user']->lang['PRUNE_NOT_VIEWED']; ?></td>
-		<td class="row2"><input type="text" name="prune_vieweddays" size="4" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $_CLASS['core_user']->lang['PRUNE_OLD_POLLS'] ?>: <br /><span class="gensmall"><?php echo $_CLASS['core_user']->lang['PRUNE_OLD_POLLS_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="prune_old_polls" value="1" /> <?php echo $_CLASS['core_user']->lang['YES']; ?> &nbsp; <input type="radio" name="prune_old_polls" value="0" checked="checked" /> <?php echo $_CLASS['core_user']->lang['NO']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $_CLASS['core_user']->lang['PRUNE_ANNOUNCEMENTS'] ?>: </td>
-		<td class="row2"><input type="radio" name="prune_announce" value="1" /> <?php echo $_CLASS['core_user']->lang['YES']; ?> &nbsp; <input type="radio" name="prune_announce" value="0" checked="checked" /> <?php echo $_CLASS['core_user']->lang['NO']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $_CLASS['core_user']->lang['PRUNE_STICKY'] ?>: </td>
-		<td class="row2"><input type="radio" name="prune_sticky" value="1" /> <?php echo $_CLASS['core_user']->lang['YES']; ?> &nbsp; <input type="radio" name="prune_sticky" value="0" checked="checked" /> <?php echo $_CLASS['core_user']->lang['NO']; ?></td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><?php echo $s_hidden_fields; ?><input type="submit" name="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain"></td>
-	</tr>
-</table></form>
-
-<?php
-
-}
-
-adm_page_footer();
-
 ?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/admin/admin_prune_users.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_prune_users.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_prune_users.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,261 +0,0 @@
-<?php
-/***************************************************************************
- *                           admin_prune_users.php
- *                            -------------------
- *   begin                : Saturday, Feb 13, 2001
- *   copyright            : (C) 2001 The phpBB Group
- *   email                : support at phpbb.com
- *
- *   $Id: admin_prune_users.php,v 1.6 2004/05/02 13:05:36 acydburn Exp $
- *
- ***************************************************************************/
-
-/***************************************************************************
- *
- *   This program is free software; you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation; either version 2 of the License, or
- *   (at your option) any later version.
- *
- ***************************************************************************/
-
-if (!empty($setmodules))
-{
-	if (!$auth->acl_get('a_userdel'))
-	{
-		return;
-	}
-
-	$module['USER']['PRUNE_USERS'] = basename(__FILE__) . $SID;
-
-	return;
-}
-
-define('IN_PHPBB', 1);
-
-require('pagestart.' . $phpEx);
-
-// Do we have forum admin permissions?
-if (!$auth->acl_get('a_userdel'))
-{
-	trigger_error($user->lang['NO_ADMIN']);
-}
-
-// Set mode
-$mode = (isset($_REQUEST['mode'])) ? htmlspecialchars($_REQUEST['mode']) : '';
-
-// Do prune
-if (isset($_POST['prune']))
-{
-	if (empty($_POST['confirm']))
-	{
-		$values = array('prune', 'deactivate', 'delete', 'users', 'username', 'email', 'joined_select', 'active_select', 'count_select', 'joined', 'active', 'count', 'deleteposts');
-
-		$l_message = '<form method="post" action="admin_prune_users.' . $phpEx . $SID . '">' . $user->lang['Confirm_prune_users'] . '<br /><br /><input class="btnlite" type="submit" name="confirm" value="' . $user->lang['Yes'] . '" />&nbsp;&nbsp;<input class="btnlite" type="submit" name="cancel" value="' . $user->lang['No'] . '" />';
-
-		foreach ($values as $field)
-		{
-			$l_message .= (!empty($_POST[$field])) ? '<input type="hidden" name="' . $field . '" value="' . urlencode($_POST[$field]) . '" />' : '';
-		}
-
-		$l_message .= '</form>';
-
-		adm_page_header($user->lang['Prune_users']);
-
-?>
-
-<h1><?php echo $user->lang['PRUNE_USERS']; ?></h1>
-
-<p><?php echo $user->lang['PRUNE_USERS_EXPLAIN']; ?></p>
-
-<?php
-
-		page_message($user->lang['CONFIRM'], $l_message, false);
-		adm_page_footer();
-
-	}
-	else if (isset($_POST['confirm']))
-	{
-		if (!empty($_POST['users']))
-		{
-			$users = explode("\n", urldecode($_POST['users']));
-
-			$where_sql = '';
-			foreach ($users as $username)
-			{
-				$where_sql .= (($where_sql != '') ? ', ' : '') . '\'' . trim($username) . '\'';
-			}
-			$where_sql = " AND username IN ($where_sql)";
-		}
-		else
-		{
-			$username = (!empty($_POST['username'])) ? urldecode($_POST['username']) : '';
-			$email = (!empty($_POST['email'])) ? urldecode($_POST['email']) : '';
-
-			$joined_select = (!empty($_POST['joined_select'])) ? $_POST['joined_select'] : 'lt';
-			$active_select = (!empty($_POST['active_select'])) ? $_POST['active_select'] :'lt';
-			$count_select = (!empty($_POST['count_select'])) ? $_POST['count_select'] : 'eq';
-			$joined = (!empty($_POST['joined'])) ? explode('-', $_POST['joined']) : array();
-			$active = (!empty($_POST['active'])) ? explode('-', $_POST['active']) :array();
-			$count = (!empty($_POST['count'])) ? intval($_POST['count']) : '';
-
-			$key_match = array('lt' => '<', 'gt' => '>', 'eq' => '=');
-			$sort_by_types = array('username', 'user_email', 'user_posts', 'user_regdate', 'user_lastvisit');
-
-			$where_sql = '';
-			$where_sql .= ($username) ? " AND username LIKE '" . str_replace('*', '%', $username) ."'" : '';
-			$where_sql .= ($email) ? " AND user_email LIKE '" . str_replace('*', '%', $email) ."' " : '';
-			$where_sql .= ($joined) ? " AND user_regdate " . $key_match[$joined_select] . " " . gmmktime(0, 0, 0, intval($joined[1]), intval($joined[2]), intval($joined[0])) : '';
-			$where_sql .= ($count) ? " AND user_posts " . $key_match[$count_select] . " $count " : '';
-			$where_sql .= ($active) ? " AND user_lastvisit " . $key_match[$active_select] . " " . gmmktime(0, 0, 0, $active[1], intval($active[2]), intval($active[0])) : '';
-		}
-
-		$sql = 'SELECT username, user_id FROM ' . USERS_TABLE . '
-			WHERE user_id <> ' . ANONYMOUS . "
-			$where_sql";
-		$result = $db->sql_query($sql);
-
-		$where_sql = '';
-		$user_ids = array();
-		$usernames = array();
-		if ($row = $db->sql_fetchrow($result))
-		{
-			do
-			{
-				$where_sql .= (($where_sql != '') ? ', ' : '') . $row['user_id'];
-				$user_ids[] = $row['user_id'];
-				$usernames[] = $row['username'];
-			}
-			while ($row = $db->sql_fetchrow($result));
-
-			$where_sql = " AND user_id IN ($where_sql)";
-		}
-		$db->sql_freeresult($result);
-
-		if ($where_sql != '')
-		{
-			$sql = '';
-			if (!empty($_POST['delete']))
-			{
-				if (!empty($_POST['deleteposts']))
-				{
-					// Call unified post deletion routine?
-
-					$l_log = 'LOG_PRUNE_USER_DEL_DEL';
-				}
-				else
-				{
-					for($i = 0; $i < sizeof($user_ids); $i++)
-					{
-						$sql = 'UPDATE ' . POSTS_TABLE . '
-							SET poster_id = ' . ANONYMOUS . ", post_username = '" . $usernames[$i] . "'
-							WHERE user_id = " . $userids[$i];
-//						$db->sql_query($sql);
-					}
-
-					$l_log = 'LOG_PRUNE_USER_DEL_ANON';
-				}
-
-				$sql = 'DELETE FROM ' . USERS_TABLE;
-			}
-			else if (!empty($_POST['deactivate']))
-			{
-				$sql = 'UPDATE ' . USERS_TABLE . " 
-					SET user_active = 0";
-
-				$l_log = 'LOG_PRUNE_USER_DEAC';
-			}
-
-			$sql .= ' WHERE user_id <> ' . ANONYMOUS . "
-				$where_sql";
-//			$db->sql_query($sql);
-
-			add_log('admin', $l_log, implode(', ', $usernames));
-
-			unset($user_ids);
-			unset($usernames);
-		}
-
-		trigger_error($user->lang['SUCCESS_USER_PRUNE']);
-	}
-}
-
-
-// Front end
-$find_count = array('lt' => $user->lang['LESS_THAN'], 'eq' => $user->lang['EQUAL_TO'], 'gt' => $user->lang['MORE_THAN']);
-$s_find_count = '';
-foreach ($find_count as $key => $value)
-{
-	$selected = ($key == 'eq') ? ' selected="selected"' : '';
-	$s_find_count .= '<option value="' . $key . '"' . $selected . '>' . $value . '</option>';
-}
-
-$find_time = array('lt' => $user->lang['BEFORE'], 'gt' => $user->lang['AFTER']);
-$s_find_join_time = '';
-foreach ($find_time as $key => $value)
-{
-	$s_find_join_time .= '<option value="' . $key . '">' . $value . '</option>';
-}
-$s_find_active_time = '';
-foreach ($find_time as $key => $value)
-{
-	$s_find_active_time .= '<option value="' . $key . '">' . $value . '</option>';
-}
-
-//
-//
-//
-adm_page_header($user->lang['PRUNE_USERS']);
-
-?>
-
-<h1><?php echo $user->lang['PRUNE_USERS']; ?></h1>
-
-<p><?php echo $user->lang['PRUNE_USERS_EXPLAIN']; ?></p>
-
-<form method="post" name="post" action="<?php echo "admin_prune_users.$phpEx$SID"; ?>"><table class="bg" width="95%" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $user->lang['PRUNE_USERS']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1" width="40%"><b><?php echo $user->lang['USERNAME']; ?>: </b></td>
-		<td class="row2"><input class="post" type="text" name="username" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['EMAIL']; ?>: </b></td>
-		<td class="row2"><input class="post" type="text" name="email" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['JOINED']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['Joined_explain']; ?></span></td>
-		<td class="row2"><select name="joined_select"><?php echo $s_find_join_time; ?></select> <input class="post" type="text" name="joined" maxlength="10" size="10" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['LAST_ACTIVE']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['Last_active_explain']; ?></span></td>
-		<td class="row2"><select name="active_select"><?php echo $s_find_active_time; ?></select> <input class="post" type="text" name="active" maxlength="10" size="10" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['POSTS']; ?>: </b></td>
-		<td class="row2"><select name="count_select"><?php echo $s_find_count; ?></select> <input class="post" type="text" name="count" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['PRUNE_USERS']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['SELECT_USERS_EXPLAIN']; ?></span></td>
-		<td class="row2"><textarea name="users" cols="40" rows="5"></textarea></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['DELETE_USER_POSTS']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['DELETE_USER_POSTS_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="deleteposts" value="1" /> <?php echo $user->lang['YES']; ?>&nbsp;&nbsp;<input type="radio" name="deleteposts" value="0" checked="checked" /> <?php echo $user->lang['NO']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['DEACTIVATE_DELETE']; ?>: </b><br /><span class="gensmall"><?php echo $user->lang['DEACTIVATE_DELETE_EXPLAIN']; ?></span></td>
-		<td class="row2"><input type="radio" name="action" value="delete" /> <?php echo $user->lang['DELETE_USERS']; ?>&nbsp;&nbsp;<input type="radio" name="action" value="deactivate" checked="checked" /> <?php echo $user->lang['DEACTIVATE']; ?></td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><input class="btnlite" type="submit" name="update" value="<?php echo $user->lang['SUBMIT']; ?>" />&nbsp;&nbsp;<input type="submit" name="usersubmit" value="<?php echo $user->lang['FIND_USERNAME']; ?>" class="btnlite" onClick="window.open('<?php echo "../search.$phpEx$SID&amp;mode=searchuser&amp;field=users"; ?>', '_phpbbsearch', 'HEIGHT=500,resizable=yes,scrollbars=yes,WIDTH=650');return false;" /><input type="hidden" name="prune" value="1" /></td>
-	</tr>
-</table></form>
-
-<?php
-
-adm_page_footer();
-
-?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/admin/admin_ranks.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_ranks.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_ranks.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -22,303 +22,189 @@
 // needs work
 
 // Do we have permission?
-if (!$_CLASS['auth']->acl_get('a_ranks'))
+if (!$_CLASS['forums_auth']->acl_get('a_ranks'))
 {
 	trigger_error('NO_ADMIN');
 }
 
-// Check mode
-if (isset($_REQUEST['mode']))
-{
-	$mode = $_REQUEST['mode'];
-}
-else
-{
-	// These could be entered via a form button
-	if (isset($_POST['add']))
-	{
-		$mode = 'add';
-	}
-	elseif (isset($_POST['save']))
-	{
-		$mode = 'save';
-	}
-	else
-	{
-		$mode = '';
-	}
-}
 
-$rank_id = (isset($_GET['id'])) ? intval($_GET['id']) : 0;
+$u_action = 'forums&amp;file=admin_ranks';
 
+$_CLASS['core_user']->add_lang('admin_posting', 'forums');
 
-//
-switch ($mode)
-{
-	case 'edit':
-	case 'add':
+// Set up general vars
+$action = request_var('action', '');
+$action = (isset($_POST['add'])) ? 'add' : $action;
+$action = (isset($_POST['save'])) ? 'save' : $action;
+$rank_id = request_var('id', 0);
 
-		$data = $ranks = $existing_imgs = array();
+$page_title = 'ACP_MANAGE_RANKS';
 
-		$result = $_CLASS['core_db']->query('SELECT * 
-			FROM ' . FORUMS_RANKS_TABLE . ' 
-			ORDER BY rank_special DESC, rank_min DESC');
-
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$existing_imgs[] = $row['rank_image'];
-
-			if ($mode == 'edit' && $rank_id == $row['rank_id'])
-			{
-				$ranks = $row;
-			}
-		}
-// temp stuff
-if (empty($ranks))
+switch ($action)
 {
-$ranks['rank_title'] = $ranks['rank_image'] = $ranks['rank_special'] = $ranks['rank_min'] = '';
-}
-		$_CLASS['core_db']->free_result($result);
-
-		$imglist = filelist($config['ranks_path'], '');
-
-		$edit_img = $filename_list = '';
-		foreach ($imglist as $path => $img_ary)
-		{
-			foreach ($img_ary as $img)
-			{
-				$img = substr($path, 1) . (($path != '') ? '/' : '') . $img; 
-
-				if (!in_array($img, $existing_imgs) || $mode == 'edit')
-				{
-					if ($ranks && $img == $ranks['rank_image'])
-					{
-						$selected = ' selected="selected"';
-						$edit_img = $img;
-					}
-					else
-					{
-						$selected = '';
-					}
-
-					$filename_list .= '<option value="' . htmlspecialchars($img) . '"' . $selected . '>' . $img . '</option>';
-				}
-			}
-		}
-		$filename_list = '<option value=""' . (($edit_img == '') ? ' selected="selected"' : '') . '>----------</option>' . $filename_list;
-		unset($existing_imgs);
-		unset($imglist);
-
-		// They want to add a new rank, show the form.
-		$s_hidden_fields = '<input type="hidden" name="mode" value="save" />';
-
-		adm_page_header($_CLASS['core_user']->lang['RANKS']);
-
-?>
-
-<script language="javascript" type="text/javascript" defer="defer">
-<!--
-
-function update_image(newimage)
-{
-	document.image.src = (newimage) ? "<?php echo $config['ranks_path']; ?>/" + newimage : "../images/spacer.gif";
-}
-
-function update_image_dimensions()
-{
-	if (document.image.height && document.forms[0].height)
-	{
-		document.forms[0].height.value = document.image.height;
-		document.forms[0].width.value = document.image.width;
-	}
-}
-
-//-->
-</script>
-
-<h1><?php echo $_CLASS['core_user']->lang['RANKS']; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['RANKS_EXPLAIN']; ?></p>
-
-<form method="post" action="<?php echo generate_link('forums&amp;file=admin_ranks&amp;id='.$rank_id, array('admin' => true)); ?>"><table class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $_CLASS['core_user']->lang['RANKS']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1" width="40%"><?php echo $_CLASS['core_user']->lang['RANK_TITLE']; ?>: </td>
-		<td class="row2"><input class="post" type="text" name="title" size="25" maxlength="40" value="<?php echo $ranks['rank_title']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1" width="40%"><?php echo $_CLASS['core_user']->lang['RANK_IMAGE']; ?>:</td>
-		<td class="row2"><table width="100%" cellspacing="0" cellpadding="0" border="0">
-			<tr>
-				<td valign="middle"><select name="rank_image" onchange="update_image(this.options[selectedIndex].value);"><?php echo $filename_list ?></select></td>
-				<td>&nbsp;&nbsp;</td>
-				<td valign="middle"><img src="<?php echo ($edit_img) ? $config['ranks_path'] . '/' . $edit_img : '../images/spacer.gif' ?>" name="image" border="0" alt="" title="" onload="update_image_dimensions()" /></td>
-			</tr>
-		</table></td>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $_CLASS['core_user']->lang['RANK_SPECIAL']; ?>: </td>
-		<td class="row2"><input type="radio" name="special_rank" value="1"<?php echo ($ranks['rank_special']) ? ' checked="checked"' : ''; ?> /><?php echo $_CLASS['core_user']->lang['YES']; ?> &nbsp;&nbsp;<input type="radio" name="special_rank" value="0"<?php echo (!$ranks['rank_special']) ? ' checked="checked"' : ''; ?> /> <?php echo $_CLASS['core_user']->lang['NO']; ?></td>
-	</tr>
-	<tr>
-		<td class="row1"><?php echo $_CLASS['core_user']->lang['RANK_MINIMUM']; ?>: </td>
-		<td class="row2"><input class="post" type="text" name="min_posts" size="5" maxlength="10" value="<?php echo ($ranks['rank_special']) ? '' : $ranks['rank_min']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><?php echo $s_hidden_fields; ?><input type="submit" name="submit" value="<?php echo $_CLASS['core_user']->lang['SUBMIT']; ?>" class="btnmain" />&nbsp;&nbsp;<input type="reset" value="<?php echo $_CLASS['core_user']->lang['RESET']; ?>" class="btnlite" /></td>
-	</tr>
-</table></form>
-
-<?php
-
-		adm_page_footer();
-
-		break;
-
 	case 'save':
+		
+		$rank_title = request_var('title', '', true);
+		$special_rank = request_var('special_rank', 0);
+		$min_posts = ($special_rank) ? 0 : request_var('min_posts', 0);
+		$rank_image = request_var('rank_image', '');
 
-		//
-		// Ok, they sent us our info, let's update it.
-		//
-
-		$rank_id = (isset($_REQUEST['id'])) ? intval($_REQUEST['id']) : 0;
-		$rank_title = (isset($_POST['title'])) ? trim($_POST['title']) : '';
-		$special_rank = (!empty($_POST['special_rank'])) ? 1 : 0;
-		$min_posts = (isset($_POST['min_posts'])) ? intval($_POST['min_posts']) : -1;
-		$rank_image = (isset($_POST['rank_image'])) ? trim(htmlspecialchars($_POST['rank_image'])) : '';
-
-		if ($special_rank == 1)
-		{
-			$min_posts = -1;
-		}
-
 		// The rank image has to be a jpg, gif or png
 		if ($rank_image != '' && !preg_match('#(\.gif|\.png|\.jpg|\.jpeg)$#i', $rank_image))
 		{
 			$rank_image = '';
 		}
 
-		if ($rank_id)
+		if (!$rank_title)
 		{
-			$sql = "UPDATE " . FORUMS_RANKS_TABLE . "
-				SET rank_title = '" . $_CLASS['core_db']->escape($rank_title) . "', rank_special = $special_rank, rank_min = $min_posts, rank_image = '" . $_CLASS['core_db']->escape($rank_image) . "'
-				WHERE rank_id = $rank_id";
+			trigger_error($_CLASS['core_user']->lang['NO_RANK_TITLE'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
+		}
 
+		$sql_ary = array(
+			'rank_title'		=> $rank_title,
+			'rank_special'		=> $special_rank,
+			'rank_min'			=> $min_posts,
+			'rank_image'		=> html_entity_decode($rank_image)
+		);
+		
+		if ($rank_id)
+		{
+			$sql = 'UPDATE ' . FORUMS_RANKS_TABLE . ' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql_ary) . " WHERE rank_id = $rank_id";
 			$message = $_CLASS['core_user']->lang['RANK_UPDATED'];
 		}
 		else
 		{
-			$sql = "INSERT INTO " . FORUMS_RANKS_TABLE . " (rank_title, rank_special, rank_min, rank_image)
-				VALUES ('" . $_CLASS['core_db']->escape($rank_title) . "', $special_rank, $min_posts, '" . $_CLASS['core_db']->escape($rank_image) . "')";
-
+			$sql = 'INSERT INTO ' . FORUMS_RANKS_TABLE . ' ' . $_CLASS['core_db']->sql_build_array('INSERT', $sql_ary);
 			$message = $_CLASS['core_user']->lang['RANK_ADDED'];
 		}
 		$_CLASS['core_db']->query($sql);
 
 		$_CLASS['core_cache']->destroy('ranks');
 
-		trigger_error($message);
+		trigger_error($message . adm_back_link(generate_link($u_action, array('admin' => true))));
 
-		break;
+	break;
 
 	case 'delete':
 
 		// Ok, they want to delete their rank
-		$rank_id = (isset($_REQUEST['id'])) ? intval($_REQUEST['id']) : 0;
-
 		if ($rank_id)
 		{
-			$sql = "DELETE FROM " . FORUMS_RANKS_TABLE . "
+			$sql = 'DELETE FROM ' . FORUMS_RANKS_TABLE . "
 				WHERE rank_id = $rank_id";
 			$_CLASS['core_db']->query($sql);
 
-			$sql = "UPDATE " . USERS_TABLE . "
+			$sql = 'UPDATE ' . CORE_USERS_TABLE . "
 				SET user_rank = 0
 				WHERE user_rank = $rank_id";
 			$_CLASS['core_db']->query($sql);
 
 			$_CLASS['core_cache']->destroy('ranks');
 
-			trigger_error($_CLASS['core_user']->lang['RANK_REMOVED']);
+			trigger_error($_CLASS['core_user']->lang['RANK_REMOVED'] . adm_back_link(generate_link($u_action, array('admin' => true))));
 		}
 		else
 		{
-			trigger_error($_CLASS['core_user']->lang['MUST_SELECT_RANK']);
+			trigger_error($_CLASS['core_user']->lang['MUST_SELECT_RANK'] . adm_back_link(generate_link($u_action, array('admin' => true))), E_USER_WARNING);
 		}
 
-		break;
+	break;
 
-	default:
+	case 'edit':
+	case 'add':
 
-		adm_page_header($_CLASS['core_user']->lang['RANKS']);
+		$data = $ranks = $existing_imgs = array();
+		
+		$sql = 'SELECT * 
+			FROM ' . FORUMS_RANKS_TABLE . ' 
+			ORDER BY rank_min ASC, rank_special ASC';
+		$result = $_CLASS['core_db']->query($sql);
 
-?>
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			$existing_imgs[] = $row['rank_image'];
 
-<h1><?php echo $_CLASS['core_user']->lang['RANKS']; ?></h1>
+			if ($action === 'edit' && $rank_id == $row['rank_id'])
+			{
+				$ranks = $row;
+			}
+		}
+		$_CLASS['core_db']->free_result($result);
 
-<p><?php echo $_CLASS['core_user']->lang['RANKS_EXPLAIN']; ?></p>
+		$imglist = filelist($config['ranks_path'], '');
 
-<form method="post" action="<?php echo generate_link('forums&amp;file=admin_ranks', array('admin' => true)); ?>"><table class="tablebg" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th><?php echo $_CLASS['core_user']->lang['RANK_IMAGE']; ?></th>
-		<th><?php echo $_CLASS['core_user']->lang['RANK_TITLE']; ?></th>
-        <th><?php echo $_CLASS['core_user']->lang['RANK_MINIMUM']; ?></th>
-		<th><?php echo $_CLASS['core_user']->lang['ACTION']; ?></th>
-	</tr>
-<?php
+		$edit_img = $filename_list = '';
 
-		// Show the default page
-		$sql = "SELECT * FROM " . FORUMS_RANKS_TABLE . "
-			ORDER BY rank_min ASC, rank_special ASC";
-		$result = $_CLASS['core_db']->query($sql);
-
-		if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		foreach ($imglist as $path => $img_ary)
 		{
-			$row_class = 'row2';
-			
-			do
+			foreach ($img_ary as $img)
 			{
-				$row_class = ($row_class != 'row1') ? 'row1' : 'row2';
+				$img = $path . $img; 
 
-?>
-	<tr>
-		<td class="<?php echo $row_class; ?>" align="center"><?php
-	
-				if ($row['rank_image'])
+				if (!in_array($img, $existing_imgs) || $action == 'edit')
 				{
-		
-?><img src="<?php echo $config['ranks_path'] . '/' . $row['rank_image']; ?>"" border="0" alt="<?php echo $row['rank_title']; ?>" title="<?php echo $row['rank_title']; ?>" /><?php
+					if ($ranks && $img == $ranks['rank_image'])
+					{
+						$selected = ' selected="selected"';
+						$edit_img = $img;
+					}
+					else
+					{
+						$selected = '';
+					}
 
+					$filename_list .= '<option value="' . htmlspecialchars($img) . '"' . $selected . '>' . $img . '</option>';
 				}
-				else
-				{
-					echo '-';
-				}
-
-?></td>
-		<td class="<?php echo $row_class; ?>" align="center"><?php echo $row['rank_title']; ?></td>
-        <td class="<?php echo $row_class; ?>" align="center"><?php echo ($row['rank_special']) ? '-' : $row['rank_min']; ?></td>
-		<td class="<?php echo $row_class; ?>" align="center">&nbsp;<a href="<?php echo generate_link('forums&amp;file=admin_ranks&amp;mode=edit&amp;id=' . $row['rank_id'], array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['EDIT']; ?></a> | <a href="<?php echo generate_link('forums&amp;file=admin_ranks&amp;mode=delete&amp;id=' . $row['rank_id'], array('admin' => true)); ?>"><?php echo $_CLASS['core_user']->lang['DELETE']; ?></a>&nbsp;</td>
-	</tr>
-<?php
-
 			}
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
 		}
 
-?>
-	<tr>
-		<td class="cat" colspan="5" align="center"><input type="submit" class="btnmain" name="add" value="<?php echo $_CLASS['core_user']->lang['ADD_RANK']; ?>" /></td>
-	</tr>
-</table></form>
+		$filename_list = '<option value=""' . (($edit_img == '') ? ' selected="selected"' : '') . '>----------</option>' . $filename_list;
+		unset($existing_imgs, $imglist);
 
-<?php
+		$_CLASS['core_template']->assign_array(array(
+			'S_EDIT'			=> true,
+			'U_BACK'			=> generate_link($u_action, array('admin' => true)),
+			'RANKS_PATH'		=> $config['ranks_path'],
+			'U_ACTION'			=> generate_link($u_action . '&amp;id=' . $rank_id, array('admin' => true)),
 
-		adm_page_footer();
+			'RANK_TITLE'		=> (isset($ranks['rank_title'])) ? $ranks['rank_title'] : '',
+			'S_FILENAME_LIST'	=> $filename_list,
+			'RANK_IMAGE'		=> ($edit_img) ? $config['ranks_path'] . '/' . $edit_img : 'images/spacer.gif',
+			'S_SPECIAL_RANK'	=> (!isset($ranks['rank_special']) || $ranks['rank_special']) ? true : false,
+			'MIN_POSTS'			=> (isset($ranks['rank_min']) && !$ranks['rank_special']) ? $ranks['rank_min'] : 0)
+		);
+				
+		$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'modules/forums/admin/acp_ranks.html');
+		return;
 
-		break;
+	break;
 }
 
+$_CLASS['core_template']->assign_array(array(
+	'U_ACTION'		=> generate_link($u_action, array('admin' => true))
+));
+
+$sql = 'SELECT *
+	FROM ' . FORUMS_RANKS_TABLE . '
+	ORDER BY rank_min ASC, rank_special ASC, rank_title ASC';
+$result = $_CLASS['core_db']->query($sql);
+
+while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+{
+	$_CLASS['core_template']->assign_vars_array('ranks', array(
+		'S_RANK_IMAGE'		=> ($row['rank_image']) ? true : false,
+		'S_SPECIAL_RANK'	=> ($row['rank_special']) ? true : false,
+
+		'RANK_IMAGE'		=> $config['ranks_path'] . '/' . $row['rank_image'],
+		'RANK_TITLE'		=> $row['rank_title'],
+		'MIN_POSTS'			=> $row['rank_min'],
+
+		'U_EDIT'			=> generate_link($u_action . '&amp;action=edit&amp;id=' . $row['rank_id'], array('admin' => true)),
+		'U_DELETE'			=> generate_link($u_action . '&amp;action=delete&amp;id=' . $row['rank_id'], array('admin' => true))
+	));	
+}
+$_CLASS['core_db']->free_result($result);
+
+$_CLASS['core_display']->display($_CLASS['core_user']->get_lang($page_title), 'modules/forums/admin/acp_ranks.html');
+
 ?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/admin/admin_search.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_search.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_search.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,140 +0,0 @@
-<?php
-/*
-||**************************************************************||
-||  Viperal CMS ?? :												||
-||**************************************************************||
-||																||
-||	Copyright (C) 2004, 2005									||
-||  By Ryan Marshall ( Viperal )								||
-||																||
-||  Email: viperal1 at gmail.com									||
-||  Site: http://www.viperal.com								||
-||																||
-||**************************************************************||
-||	LICENSE: ( http://www.gnu.org/licenses/gpl.txt )			||
-||**************************************************************||
-||  Viperal CMS is released under the terms and conditions		||
-||  of the GNU General Public License version 2					||
-||																||
-||**************************************************************||
-
-$Id$
-*/
-
-// Check permissions
-if (!$_CLASS['auth']->acl_get('a_search'))
-{
-	trigger_error('NO_ADMIN');
-}
-
-// Start indexing
-if (isset($_POST['start']) || isset($_GET['position']))
-{
-	$limit = 5000; // Process this many posts per batch
-	$start = get_variable('position', 'REQUEST', 0, 'int');
-
-	$count = 0;
-
-	if (!$start)
-	{
-		switch ($_CLASS['core_db']->db_layer)
-		{
-			case 'sqlite':
-			case 'sqlite_pdo':
-				$_CLASS['core_db']->query('DELETE FROM ' . FORUMS_SEARCH_TABLE);
-				$_CLASS['core_db']->query('DELETE FROM ' . FORUMS_SEARCH_WORD_TABLE);
-				$_CLASS['core_db']->query('DELETE FROM ' . FORUMS_SEARCH_MATCH_TABLE);
-			break;
-			
-			default:
-				$_CLASS['core_db']->query('TRUNCATE ' . FORUMS_SEARCH_TABLE);
-				$_CLASS['core_db']->query('TRUNCATE ' . FORUMS_SEARCH_WORD_TABLE);
-				$_CLASS['core_db']->query('TRUNCATE ' . FORUMS_SEARCH_MATCH_TABLE);
-			break;
-		}
-	}
-
-	// Fetch a batch of posts_text entries
-	$result = $_CLASS['core_db']->query('SELECT COUNT(*) AS total FROM ' . FORUMS_POSTS_TABLE);
-	$row = $_CLASS['core_db']->fetch_row_assoc($result);
-	$_CLASS['core_db']->free_result($result);
-
-	if ($total_posts = $row['total'])
-	{
-		require_once(SITE_FILE_ROOT . 'includes/forums/message_parser.php');
-		$fulltext = new fulltext_search();
-
-		$sql = 'SELECT post_id, post_subject, post_text
-			FROM ' . FORUMS_POSTS_TABLE . '
-			ORDER BY post_id';
-		$result = $_CLASS['core_db']->query_limit($sql, $limit, $start);
-	
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$fulltext->add('admin', $row['post_id'], $row['post_text'], $row['post_subject']);
-			$count++;
-		}
-		$_CLASS['core_db']->free_result($result);
-
-		if (($start + $count) < $total_posts)
-		{
-			redirect(generate_link('Forums&amp;file=admin_search&position=' . ($start + $count), array('admin' => true)), 3);
-		}
-		else
-		{
-			// search tidy
-			$fulltext->search_tidy();
-			$_CLASS['core_db']->optimize_tables();
-		}
-	}
-
-	adm_page_header($_CLASS['core_user']->get_lang('SEARCH_INDEX'));
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->get_lang('SEARCH_INDEX'); ?></h1>
-
-<p><?php echo $_CLASS['core_user']->get_lang('SEARCH_INDEX_COMPLETE'); ?></p>
-
-<?php
-
-	adm_page_footer();
-
-	die;
-}
-else if (isset($_POST['cancel']))
-{
-	adm_page_header($_CLASS['core_user']->lang['SEARCH_INDEX']);
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang['SEARCH_INDEX']; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['SEARCH_INDEX_CANCEL']; ?></p>
-
-<?php
-
-	adm_page_footer();
-	die;
-
-}
-
-adm_page_header($_CLASS['core_user']->lang['SEARCH_INDEX']);
-
-?>
-
-<h1><?php echo $_CLASS['core_user']->lang['SEARCH_INDEX']; ?></h1>
-
-<p><?php echo $_CLASS['core_user']->lang['SEARCH_INDEX_EXPLAIN']; ?></p>
-
-<form method="post" action="<?php echo generate_link('Forums&amp;file=admin_search', array('admin' => true)); ?>"><table cellspacing="1" cellpadding="4" border="0" align="center" bgcolor="#98AAB1">
-	<tr>
-		<td class="cat" height="28" align="center">&nbsp;<input type="submit" name="start" value="<?php echo $_CLASS['core_user']->lang['START']; ?>" class="btnmain" /> &nbsp; <input type="submit" name="cancel" value="<?php echo $_CLASS['core_user']->lang['CANCEL']; ?>" class="btnmain" />&nbsp;</td>
-	</tr>
-</table></form>
-
-<?php
-
-adm_page_footer();
-
-?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/admin/admin_viewlogs.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_viewlogs.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_viewlogs.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,230 +0,0 @@
-<?php
-// -------------------------------------------------------------
-//
-// $Id: admin_viewlogs.php,v 1.13 2004/11/06 14:11:47 acydburn Exp $
-//
-// FILENAME  : admin_viewlogs.php 
-// STARTED   : Sat Feb 13, 2001
-// COPYRIGHT : ? 2001, 2003 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
-// 
-// -------------------------------------------------------------
-
-// Do we have styles admin permissions?
-if (!$_CLASS['auth']->acl_get('a_'))
-{
-	trigger_error($_CLASS['core_user']->lang['NO_ADMIN']);
-}
-
-// Set some variables
-$mode		= request_var('mode', 'admin');
-$forum_id	= request_var('f', 0);
-$start		= request_var('start', 0);
-$deletemark = (isset($_POST['delmarked'])) ? true : false;
-$deleteall	= (isset($_POST['delall'])) ? true : false;
-$marked		= request_var('mark', array('' => ''));
-
-// Sort keys
-$sort_days	= request_var('st', 0);
-$sort_key	= request_var('sk', 't');
-$sort_dir	= request_var('sd', 'd');
-
-// Define some vars depending on which logs we're looking at
-$log_type = ($mode == 'admin') ? LOG_ADMIN : (($mode == 'mod') ? LOG_MOD : LOG_CRITICAL);
-
-$_CLASS['core_user']->add_lang('mcp');
-
-// Delete entries if requested and able
-if (($deletemark || $deleteall) && $_CLASS['auth']->acl_get('a_clearlogs'))
-{
-	$where_sql = '';
-	if ($deletemark && $marked)
-	{
-		$sql_in = array();
-		foreach ($marked as $mark)
-		{
-			$sql_in[] =  $mark;
-		}
-		$where_sql = ' AND log_id IN (' . implode(', ', $sql_in) . ')';
-		unset($sql_in);
-	}
-
-	$sql = 'DELETE FROM ' . LOG_TABLE . "
-		WHERE log_type = $log_type 
-			$where_sql";
-	$_CLASS['core_db']->sql_query($sql);
-
-	add_log('admin', 'LOG_' . strtoupper($mode) . '_CLEAR');
-}
-
-// Sorting
-$limit_days = array(0 => $_CLASS['core_user']->lang['ALL_ENTRIES'], 1 => $_CLASS['core_user']->lang['1_DAY'], 7 => $_CLASS['core_user']->lang['7_DAYS'], 14 => $_CLASS['core_user']->lang['2_WEEKS'], 30 => $_CLASS['core_user']->lang['1_MONTH'], 90 => $_CLASS['core_user']->lang['3_MONTHS'], 180 => $_CLASS['core_user']->lang['6_MONTHS'], 364 => $_CLASS['core_user']->lang['1_YEAR']);
-$sort_by_text = array('u' => $_CLASS['core_user']->lang['SORT_USERNAME'], 't' => $_CLASS['core_user']->lang['SORT_DATE'], 'i' => $_CLASS['core_user']->lang['SORT_IP'], 'o' => $_CLASS['core_user']->lang['SORT_ACTION']);
-$sort_by_sql = array('u' => 'l.user_id', 't' => 'l.log_time', 'i' => 'l.log_ip', 'o' => 'l.log_operation');
-
-$s_limit_days = $s_sort_key = $s_sort_dir = $u_sort_param = '';
-gen_sort_selects($limit_days, $sort_by_text, $sort_days, $sort_key, $sort_dir, $s_limit_days, $s_sort_key, $s_sort_dir, $u_sort_param);
-
-// Define where and sort sql for use in displaying logs
-$sql_where = ($sort_days) ? (time() - ($sort_days * 86400)) : 0;
-$sql_sort = $sort_by_sql[$sort_key] . ' ' . (($sort_dir == 'd') ? 'DESC' : 'ASC');
-
-$l_title = $_CLASS['core_user']->lang[strtoupper($mode) . '_LOGS'];
-$l_title_explain = $_CLASS['core_user']->lang[strtoupper($mode) . '_LOGS_EXPLAIN'];
-
-// Output page
-adm_page_header($l_title);
-
-?>
-
-<h1><?php echo $l_title; ?></h1>
-
-<p><?php echo $l_title_explain; ?></p>
-
-<form name="list" method="post" action="<?php echo generate_link('Forums&amp;file=admin_viewlogs&amp;mode='.$mode, array('admin' => true)); ?>">
-<?php
-
-// Define forum list if we're looking @ mod logs
-if ($mode == 'mod')
-{
-
-	$forum_box = '<option value="0">' . $_CLASS['core_user']->lang['ALL_FORUMS'] . '</option>' . make_forum_select($forum_id);
-
-?>
-<table width="100%" cellpadding="1" cellspacing="1" border="0">
-	<tr>
-		<td align="right"><?php echo $_CLASS['core_user']->lang['SELECT_FORUM']; ?>: <select name="f" onchange="if(this.options[this.selectedIndex].value != -1){ this.form.submit() }"><?php echo $forum_box; ?></select> <input class="btnlite" type="submit" value="<?php echo $_CLASS['core_user']->lang['GO']; ?>" /></td>
-	</tr>
-</table>
-<?php
-
-}
-
-//
-// Grab log data
-//
-$log_data = array();
-$log_count = 0;
-view_log($mode, $log_data, $log_count, $config['topics_per_page'], $start, $forum_id, 0, 0, $sql_where, $sql_sort);
-
-?>
-<table width="100%" cellspacing="2" cellpadding="2" border="0" align="center">
-<tr>
-	<td align="left" valign="top">&nbsp;<span class="nav"><?php echo on_page($log_count, $config['topics_per_page'], $start); ?></span></td>
-	<td align="right" valign="top" nowrap="nowrap">
-		<span class="nav"><?php	echo generate_pagination("admin_viewlogs&amp;mode=$mode&amp;$u_sort_param", $log_count, $config['topics_per_page'], $start, true); ?></span>
-	</td>
-</tr>
-</table>
-
-<table class="tablebg" width="100%" cellpadding="4" cellspacing="1" border="0">
-	<tr>
-		<td class="cat" colspan="5" height="28" align="center"><?php echo $_CLASS['core_user']->lang['DISPLAY_LOG']; ?>: &nbsp;<?php echo $s_limit_days; ?>&nbsp;<?php echo $_CLASS['core_user']->lang['SORT_BY']; ?>: <?php echo $s_sort_key; ?> <?php echo $s_sort_dir; ?>&nbsp;<input class="btnlite" type="submit" value="<?php echo $_CLASS['core_user']->lang['GO']; ?>" name="sort" /></td>
-	</tr>
-	<tr>
-		<th width="15%" height="25" nowrap="nowrap"><?php echo $_CLASS['core_user']->lang['USERNAME']; ?></th>
-		<th width="15%" nowrap="nowrap"><?php echo $_CLASS['core_user']->lang['IP']; ?></th>
-		<th width="20%" nowrap="nowrap"><?php echo $_CLASS['core_user']->lang['TIME']; ?></th>
-		<th width="45%" nowrap="nowrap"><?php echo $_CLASS['core_user']->lang['ACTION']; ?></th>
-		<th nowrap="nowrap"><?php echo $_CLASS['core_user']->lang['MARK']; ?></th>
-	</tr>
-<?php
-
-if ($log_count)
-{
-	for($i = 0; $i < sizeof($log_data); $i++)
-	{
-		$row_class = ($row_class == 'row1') ? 'row2' : 'row1';
-		
-?>
-	<tr>
-		<td class="<?php echo $row_class; ?>" nowrap="nowrap"><?php echo $log_data[$i]['username']; ?></td>
-		<td class="<?php echo $row_class; ?>" align="center" nowrap="nowrap"><?php echo $log_data[$i]['ip']; ?></td>
-		<td class="<?php echo $row_class; ?>" align="center" nowrap="nowrap"><?php echo $_CLASS['core_user']->format_date($log_data[$i]['time']); ?></td>
-		<td class="<?php echo $row_class; ?>"><?php 
-			echo $log_data[$i]['action']; 
-
-			$data = array();
-				
-			foreach (array('viewtopic', 'viewlogs', 'viewforum') as $check)
-			{
-				if ($log_data[$i][$check])
-				{
-					$data[] = '<a href="' . $log_data[$i][$check] . '">' . $_CLASS['core_user']->lang['LOGVIEW_' . strtoupper($check)] . '</a>';
-				}
-			}
-
-			if (sizeof($data))
-			{
-				echo '<br />&#187; <span class="gensmall">[ ' . implode(' | ', $data) . ' ]</span>';
-			}
-?>
-		</td>
-		<td class="<?php echo $row_class; ?>" align="center" nowrap="nowrap"><input type="checkbox" name="mark[]" value="<?php echo $log_data[$i]['id']; ?>" /></td>
-	</tr>
-<?php
-
-	}
-
-	if ($_CLASS['auth']->acl_get('a_clearlogs'))
-	{
-
-?>
-	<tr>
-		<td class="cat" colspan="5" height="28" align="right"><input class="btnlite" type="submit" name="delmarked" value="<?php echo $_CLASS['core_user']->lang['DELETE_MARKED']; ?>" />&nbsp; <input class="btnlite" type="submit" name="delall" value="<?php echo $_CLASS['core_user']->lang['DELETE_ALL']; ?>" />&nbsp;</td>
-	</tr>
-<?php
-
-	}
-}
-else
-{
-?>
-	<tr>
-		<td class="row1" colspan="5" align="center" nowrap="nowrap"><?php echo $_CLASS['core_user']->lang['NO_ENTRIES']; ?></td>
-	</tr>
-<?php
-
-}
-
-?>
-</table>
-
-<table width="100%" cellspacing="2" cellpadding="2" border="0" align="center">
-	<tr>
-		<td align="left" valign="top">&nbsp;<span class="nav"><?php echo on_page($log_count, $config['topics_per_page'], $start); ?></span></td>
-		<td align="right" valign="top" nowrap="nowrap"><span class="nav"><?php
-
-	if ($_CLASS['auth']->acl_get('a_clearlogs'))
-	{
-
-
-?><b><a href="javascript:marklist('list', true);"><?php echo $_CLASS['core_user']->lang['MARK_ALL']; ?></a> :: <a href="javascript:marklist('list', false);"><?php echo $_CLASS['core_user']->lang['UNMARK_ALL']; ?></a></b>&nbsp;<br /><br /><?php
-
-	}
-
-	echo generate_pagination("Forums&amp;file=admin_viewlogs&amp;mode=$mode&amp;$u_sort_param", $log_count, $config['topics_per_page'], $start, true);
-	
-?></span></td>
-	</tr>
-</table></form>
-
-<script language="Javascript" type="text/javascript">
-<!--
-function marklist(match, status)
-{
-	len = eval('document.' + match + '.length');
-	for (i = 0; i < len; i++)
-	{
-		eval('document.' + match + '.elements[i].checked = ' + status);
-	}
-}
-//-->
-</script>
-
-<?php
-
-adm_page_footer();
-
-?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/admin/admin_words.php
===================================================================
--- cms/trunk/includes/forums/admin/admin_words.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/admin_words.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,205 +0,0 @@
-<?php
-// -------------------------------------------------------------
-//
-// $Id: admin_words.php,v 1.8 2004/05/30 19:24:48 acydburn Exp $
-//
-// FILENAME  : admin_words.php 
-// STARTED   : Thu Jul 12, 2001
-// COPYRIGHT : ? 2001, 2003 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
-// 
-// -------------------------------------------------------------
-if (!defined('VIPERAL') || VIPERAL != 'Admin')
-{
-	die; 
-}
-
-if (!empty($setmodules))
-{
-	if (!$auth->acl_get('a_words'))
-	{
-		return;
-	}
-
-	$module['POST']['WORD_CENSOR'] = basename(__FILE__) . $SID;
-	return;
-}
-
-define('IN_PHPBB', 1);
-// Include files
-$phpbb_root_path = './../';
-$phpEx = substr(strrchr(__FILE__, '.'), 1);
-require('pagestart.' . $phpEx);
-
-// Do we have forum admin permissions?
-if (!$auth->acl_get('a_words'))
-{
-	trigger_error($user->lang['NO_ADMIN']);
-}
-
-$mode = request_var('mode', '');
-$mode = (isset($_POST['add'])) ? 'add' : ((isset($_POST['save'])) ? 'save' : $mode);
-
-$s_hidden_fields = '';
-$word_info = array();
-
-switch ($mode)
-{
-	case 'edit':
-		$word_id = request_var('id', 0);
-		
-		if (!$word_id)
-		{
-			trigger_error($user->lang['NO_WORD']);
-		}
-
-		$sql = 'SELECT *
-			FROM ' . WORDS_TABLE . "
-			WHERE word_id = $word_id";
-		$result = $db->sql_query_limit($sql, 1);
-
-		$word_info = $db->sql_fetchrow($result);
-		$db->sql_freeresult($result);
-
-		$s_hidden_fields .= '<input type="hidden" name="id" value="' . $word_id . '" />';
-
-	case 'add':
-
-		adm_page_header($user->lang['WORDS_TITLE']);
-?>
-
-<h1><?php echo $user->lang['WORDS_TITLE']; ?></h1>
-
-<p><?php echo $user->lang['WORDS_EXPLAIN']; ?></p>
-
-<form method="post" action="<?php echo "admin_words.$phpEx$SID"; ?>"><table class="bg" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th colspan="2"><?php echo $user->lang['EDIT_WORD']; ?></th>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['WORD']; ?>: </b></td>
-		<td class="row2"><input class="post" type="text" name="word" value="<?php echo $word_info['word']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="row1"><b><?php echo $user->lang['REPLACEMENT']; ?>: </b></td>
-		<td class="row2"><input class="post" type="text" name="replacement" value="<?php echo $word_info['replacement']; ?>" /></td>
-	</tr>
-	<tr>
-		<td class="cat" colspan="2" align="center"><?php echo $s_hidden_fields; ?><input class="btnmain" type="submit" name="save" value="<?php echo $user->lang['SUBMIT']; ?>" /></td>
-	</tr>
-</table></form>
-
-<?php
-
-			adm_page_footer();
-			break;
-
-		case 'save':
-			$word_id = request_var('id', 0);
-			$word = request_var('word', '');
-			$replacement = request_var('replacement', '');
-
-			if (!$word || !$replacement)
-			{
-				trigger_error($user->lang['ENTER_WORD']);
-			}
-
-			$sql = ($word_id) ? "UPDATE " . WORDS_TABLE . " SET word = '" . $db->sql_escape($word) . "', replacement = '" . $db->sql_escape($replacement) . "' WHERE word_id = $word_id" : "INSERT INTO " . WORDS_TABLE . " (word, replacement) VALUES ('" . $db->sql_escape($word) . "', '" . $db->sql_escape($replacement) . "')";
-			$db->sql_query($sql);
-
-			$cache->destroy('word_censors');
-
-			$log_action = ($word_id) ? 'LOG_EDIT_WORD' : 'LOG_ADD_WORD';
-			add_log('admin', $log_action, $word);
-
-			$message = ($word_id) ? $user->lang['WORD_UPDATED'] : $user->lang['WORD_ADDED'];
-			trigger_error($message);
-			break;
-
-		case 'delete':
-
-			$word_id = request_var('id', 0);
-
-			if (!$word_id)
-			{
-				trigger_error($user->lang['NO_WORD']);
-			}
-
-			$sql = 'SELECT word
-				FROM ' . WORDS_TABLE . "
-				WHERE word_id = $word_id";
-			$result = $db->sql_query($sql);
-			$deleted_word = $db->sql_fetchfield('word', 0, $result);
-			$db->sql_freeresult($result);
-
-			$sql = 'DELETE FROM ' . WORDS_TABLE . "
-				WHERE word_id = $word_id";
-			$db->sql_query($sql);
-
-			$cache->destroy('word_censors');
-
-			add_log('admin', 'LOG_DELETE_WORD', $deleted_word);
-
-			$message = $user->lang['WORD_REMOVE'];
-			trigger_error($message);
-		
-			break;
-
-		default:
-
-			adm_page_header($user->lang['WORDS_TITLE']);
-?>
-
-<h1><?php echo $user->lang['WORDS_TITLE']; ?></h1>
-
-<p><?php echo $user->lang['WORDS_EXPLAIN']; ?></p>
-
-<form method="post" action="admin_words.<?php echo $phpEx . $SID; ?>"><table class="bg" cellspacing="1" cellpadding="4" border="0" align="center">
-	<tr>
-		<th><?php echo $user->lang['WORD']; ?></th>
-		<th><?php echo $user->lang['REPLACEMENT']; ?></th>
-		<th colspan="2"><?php echo $user->lang['ACTION']; ?></th>
-	</tr>
-
-<?php
-
-		$sql = 'SELECT *
-			FROM ' . WORDS_TABLE . '
-			ORDER BY word';
-		$result = $db->sql_query($sql);
-
-		$row_class = '';
-		if ($row = $db->sql_fetchrow($result))
-		{
-			do
-			{
-				$row_class = ($row_class == 'row1') ? 'row2' : 'row1';
-
-?>
-	<tr>
-		<td class="<?php echo $row_class; ?>" align="center"><?php echo $row['word']; ?></td>
-		<td class="<?php echo $row_class; ?>" align="center"><?php echo $row['replacement']; ?></td>
-		<td class="<?php echo $row_class; ?>">&nbsp;<a href="<?php echo "admin_words.$phpEx$SID&amp;mode=edit&amp;id=" . $row['word_id']; ?>"><?php echo $user->lang['EDIT']; ?></a>&nbsp;</td>
-		<td class="<?php echo $row_class; ?>">&nbsp;<a href="<?php echo "admin_words.$phpEx$SID&amp;mode=delete&amp;id=" . $row['word_id']; ?>"><?php echo $user->lang['DELETE']; ?></a>&nbsp;</td>
-	</tr>
-<?php
-
-			}
-			while ($row = $db->sql_fetchrow($result));
-		}
-		$db->sql_freeresult($result);
-
-?>
-	<tr>
-		<td class="cat" colspan="5" height="28" align="center"><?php echo $s_hidden_fields; ?><input class="btnmain" type="submit" name="add" value="<?php echo $user->lang['ADD_WORD']; ?>" /></td>
-	</tr>
-</table></form>
-
-<?php
-
-		adm_page_footer();
-		break;
-}
-
-?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/admin/auth.php
===================================================================
--- cms/trunk/includes/forums/admin/auth.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/auth.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -95,14 +95,14 @@
 		global $_CLASS;
 
 		$hold_ary = array();
-		$view_user_mask = ($mode == 'view' && $group_id === false) ? true : false;
+		$view_user_mask = ($mode === 'view' && $group_id === false) ? true : false;
 
 		if ($auth_option === false || $scope === false)
 		{
 			return array();
 		}
 
-		$acl_user_function = ($mode == 'set') ? 'acl_user_raw_data' : 'acl_raw_data';
+		$acl_user_function = ($mode === 'set') ? 'acl_user_raw_data' : 'acl_raw_data';
 
 		if (!$view_user_mask)
 		{
@@ -112,7 +112,7 @@
 			}
 			else
 			{
-				$hold_ary = ($group_id !== false) ? $this->acl_group_raw_data($group_id, $auth_option . '%', ($scope == 'global') ? 0 : false) : $this->$acl_user_function($user_id, $auth_option . '%', ($scope == 'global') ? 0 : false);
+				$hold_ary = ($group_id !== false) ? $this->acl_group_raw_data($group_id, $auth_option . '%', ($scope === 'global') ? 0 : false) : $this->$acl_user_function($user_id, $auth_option . '%', ($scope === 'global') ? 0 : false);
 			}
 		}
 
@@ -308,7 +308,7 @@
 		$ug_names_ary = array();
 		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 		{
-			$ug_names_ary[$row['ug_id']] = ($user_mode == 'user') ? $row['ug_name'] : (($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['ug_name']] : $row['ug_name']);
+			$ug_names_ary[$row['ug_id']] = ($user_mode === 'user') ? $row['ug_name'] : (($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['ug_name']] : $row['ug_name']);
 		}
 		$_CLASS['core_db']->free_result($result);
 
@@ -384,38 +384,31 @@
 
 		// Now obtain memberships
 		$user_groups_default = $user_groups_custom = array();
-		if ($user_mode == 'user' && $group_display)
+		if ($user_mode === 'user' && $group_display)
 		{
-			$sql = 'SELECT group_id, group_name, group_type
-				FROM ' . CORE_GROUPS_TABLE . '
-				ORDER BY group_type DESC, group_name ASC';
-			$result = $_CLASS['core_db']->query($sql);
+			require_once SITE_FILE_ROOT.'includes/functions_user.php';
 
-			$groups = array();
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-			{
-				$groups[$row['group_id']] = $row;
-			}
-			$_CLASS['core_db']->free_result($result);
+			$memberships = group_membership(array_keys($hold_ary));
 
-			$memberships = group_memberships(false, array_keys($hold_ary), false);
-
 			// User is not a member of any group? Bad admin, bad bad admin...
 			if ($memberships)
 			{
-				foreach ($memberships as $row)
+				foreach ($memberships as $user_id => $group_array)
 				{
-					if ($groups[$row['group_id']]['group_type'] == GROUP_SPECIAL)
+					foreach ($group_array as $row)
 					{
-						$user_groups_default[$row['user_id']][] = $_CLASS['core_user']->lang['G_' . $groups[$row['group_id']]['group_name']];
+						if ($row['group_type'] == GROUP_SYSTEM)
+						{
+							$user_groups_default[$row['user_id']][] = $_CLASS['core_user']->get_lang('G_' . $row['group_name']);
+						}
+						else
+						{
+							$user_groups_custom[$row['user_id']][] = $_CLASS['core_user']->get_lang('G_' . $row['group_name']);
+						}
 					}
-					else
-					{
-						$user_groups_custom[$row['user_id']][] = $groups[$row['group_id']]['group_name'];
-					}
 				}
 			}
-			unset($memberships, $groups);
+			unset($memberships);
 		}
 
 		// If we only have one forum id to display or being in local mode and more than one user/group to display, 
@@ -615,13 +608,16 @@
 		}
 		$_CLASS['core_db']->free_result($result);
 
+		$count = 0;
+
 		foreach ($hold_ary as $forum_id => $auth_ary)
 		{
-			$_CLASS['core_template']->assign_vars_array('role_mask', array(
+			$role_mask[$count] = array(
 				'NAME'				=> ($forum_id == 0) ? $_CLASS['core_user']->lang['GLOBAL_MASK'] : $forum_names[$forum_id],
-				'FORUM_ID'			=> $forum_id)
+				'FORUM_ID'			=> $forum_id
 			);
 
+
 			if (isset($auth_ary['users']) && sizeof($auth_ary['users']))
 			{
 				$sql = 'SELECT user_id, username
@@ -632,10 +628,10 @@
 
 				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 				{
-					$_CLASS['core_template']->assign_vars_array('role_mask.users', array(
+					$role_mask[$count]['users'][] = array(
 						'USER_ID'		=> $row['user_id'],
 						'USERNAME'		=> $row['username'],
-						'U_PROFILE'		=> append_sid("{$phpbb_root_path}memberlist.$phpEx", "mode=viewprofile&amp;u={$row['user_id']}"))
+						'U_PROFILE'		=> generate_link("members_list&amp;mode=viewprofile&amp;u={$row['user_id']}")
 					);
 				}
 				$_CLASS['core_db']->free_result($result);
@@ -651,15 +647,17 @@
 
 				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 				{
-					$_CLASS['core_template']->assign_vars_array('role_mask.groups', array(
+					$role_mask[$count]['groups'][] = array(
 						'GROUP_ID'		=> $row['group_id'],
-						'GROUP_NAME'	=> ($row['group_type'] == GROUP_SPECIAL) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name'],
-						'U_PROFILE'		=> append_sid("{$phpbb_root_path}memberlist.$phpEx", "mode=group&amp;g={$row['group_id']}"))
+						'GROUP_NAME'	=> isset($_CLASS['core_user']->lang['G_' . $row['group_name']]) ? $_CLASS['core_user']->lang['G_' . $row['group_name']] : $row['group_name'],
+						'U_PROFILE'		=> generate_link("members_list&amp;mode=group&amp;g={$row['group_id']}")
 					);
 				}
 				$_CLASS['core_db']->free_result($result);
 			}
+			$count++;
 		}
+		$_CLASS['core_template']->assign('role_mask', $role_mask);
 	}
 
 	/**

Modified: cms/trunk/includes/forums/admin/links.php
===================================================================
--- cms/trunk/includes/forums/admin/links.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/links.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -4,47 +4,38 @@
 	die; 
 }
 
-//Need to be in the admin menu look into making a new one or using this one :-)
-/*if ($_CLASS['forums_auth']->acl_get('a_ban'))
-{
-	$module['USER']['BAN_USERS'] = generate_link('forums&amp;file=admin_ban'..'&amp;mode=user');
-	$module['USER']['BAN_EMAILS'] = generate_link('forums&amp;file=admin_ban'..'&amp;mode=email');
-	$module['USER']['BAN_IPS'] = generate_link('forums&amp;file=admin_ban'..'&amp;mode=ip');
-}*/
 
-$module['LOG']['ADMIN_LOGS']			 =  ($_CLASS['forums_auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_viewlogs&amp;mode=admin', array('admin' => true)) : false;
-$module['LOG']['MOD_LOGS']				 = ($_CLASS['forums_auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_viewlogs&amp;mode=mod', array('admin' => true)) : false;
-$module['LOG']['CRITICAL_LOGS']			 = ($_CLASS['forums_auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_viewlogs&amp;mode=critical', array('admin' => true)) : false;
-	
-$module['DB']['SEARCH_INDEX'] 				= ($_CLASS['forums_auth']->acl_get('a_search')) ? generate_link('forums&amp;file=admin_search', array('admin' => true)) : false;
+$module['ACP_LOGGING']['ACP_ADMIN_LOGS']			 =  ($_CLASS['forums_auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_logs&amp;mode=admin', array('admin' => true)) : false;
+$module['ACP_LOGGING']['ACP_MOD_LOGS']				 = ($_CLASS['forums_auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_logs&amp;mode=mod', array('admin' => true)) : false;
+$module['ACP_LOGGING']['ACP_CRITICAL_LOGS']			 = ($_CLASS['forums_auth']->acl_get('a_')) ? generate_link('forums&amp;file=admin_logs&amp;mode=critical', array('admin' => true)) : false;
 
-$module['USER']['RANKS']					= ($_CLASS['forums_auth']->acl_get('a_ranks')) ? generate_link('forums&amp;file=admin_ranks', array('admin' => true)) : '';
-$module['USER']['DISALLOW']					= ($_CLASS['forums_auth']->acl_get('a_names')) ? generate_link('forums&amp;file=admin_disallow', array('admin' => true)) : '';
+$module['ACP_MANAGE_FORUMS']['ACP_MANAGE_FORUMS']		= ($_CLASS['forums_auth']->acl_gets('a_forum', 'a_forumadd', 'a_forumdel')) ? generate_link('forums&amp;file=admin_forums', array('admin' => true)) : false;
+$module['ACP_MANAGE_FORUMS']['ACP_PRUNE_FORUMS']   		= ($_CLASS['forums_auth']->acl_get('a_prune')) ? generate_link('forums&amp;file=admin_prune&amp;mode=forums', array('admin' => true)) : false;
 
-$module['FORUM']['MANAGE']					= ($_CLASS['forums_auth']->acl_gets('a_forum', 'a_forumadd', 'a_forumdel')) ? generate_link('forums&amp;file=admin_forums', array('admin' => true)) : false;
-$module['FORUM']['PRUNE']   				= ($_CLASS['forums_auth']->acl_get('a_prune')) ? generate_link('forums&amp;file=admin_prune&amp;mode=forums', array('admin' => true)) : false;
+$module['ACP_PERMISSION_MASKS']['ACP_FORUM_PERMISSIONS']		= ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups') || $_CLASS['forums_auth']->acl_get('a_viewauth')) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_forum_local', array('admin' => true)) : false;
+$module['ACP_PERMISSION_MASKS']['ACP_FORUM_MODERATORS'] 		= ($_CLASS['forums_auth']->acl_get('a_mauth') && ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_mod_local', array('admin' => true)) : false;
+$module['ACP_PERMISSION_MASKS']['ACP_USERS_FORUM_PERMISSIONS']	= ($_CLASS['forums_auth']->acl_get('a_authusers') && ($_CLASS['forums_auth']->acl_get('a_mauth') || $_CLASS['forums_auth']->acl_get('a_fauth'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_user_local', array('admin' => true)) : false;
+$module['ACP_PERMISSION_MASKS']['ACP_GROUPS_FORUM_PERMISSIONS']	= ($_CLASS['forums_auth']->acl_get('a_authgroups') && ($_CLASS['forums_auth']->acl_get('a_mauth') || $_CLASS['forums_auth']->acl_get('a_fauth'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_group_local', array('admin' => true)) : false;
+$module['ACP_PERMISSION_MASKS']['ACP_ADMINISTRATORS']			= ($_CLASS['forums_auth']->acl_get('a_aauth') && ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_admin_global', array('admin' => true)) : false;
+$module['ACP_PERMISSION_MASKS']['ACP_GLOBAL_MODERATORS']		= ($_CLASS['forums_auth']->acl_get('a_mauth') && ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_mod_global', array('admin' => true)) : false;
 
-$module['PERM']['ACP_FORUM_PERMISSIONS']		= ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups') || $_CLASS['forums_auth']->acl_get('a_viewauth')) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_forum_local', array('admin' => true)) : '';
-$module['PERM']['ACP_FORUM_MODERATORS'] 		= ($_CLASS['forums_auth']->acl_get('a_mauth') && ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_mod_local', array('admin' => true)) : '';
-$module['PERM']['ACP_USERS_FORUM_PERMISSIONS']	= ($_CLASS['forums_auth']->acl_get('a_authusers') && ($_CLASS['forums_auth']->acl_get('a_mauth') || $_CLASS['forums_auth']->acl_get('a_fauth'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_user_local', array('admin' => true)) : '';
-$module['PERM']['ACP_GROUPS_FORUM_PERMISSIONS']	= ($_CLASS['forums_auth']->acl_get('a_authgroups') && ($_CLASS['forums_auth']->acl_get('a_mauth') || $_CLASS['forums_auth']->acl_get('a_fauth'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_group_local', array('admin' => true)) : '';
-$module['PERM']['ACP_ADMINISTRATORS']			= ($_CLASS['forums_auth']->acl_get('a_aauth') && ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_admin_global', array('admin' => true)) : '';
-$module['PERM']['ACP_GLOBAL_MODERATORS']		= ($_CLASS['forums_auth']->acl_get('a_mauth') && ($_CLASS['forums_auth']->acl_get('a_authusers') || $_CLASS['forums_auth']->acl_get('a_authgroups'))) ? generate_link('forums&amp;file=admin_permissions&amp;mode=setting_mod_global', array('admin' => true)) : '';
+$module['ACP_PERMISSION_ROLES']['ACP_ADMIN_ROLES']		= ($_CLASS['forums_auth']->acl_get('a_roles') && $_CLASS['forums_auth']->acl_get('a_aauth')) ? generate_link('forums&amp;file=admin_permission_roles&amp;mode=admin_roles', array('admin' => true)) : false;
+$module['ACP_PERMISSION_ROLES']['ACP_USER_ROLES']		= ($_CLASS['forums_auth']->acl_get('a_roles') && $_CLASS['forums_auth']->acl_get('a_uauth')) ? generate_link('forums&amp;file=admin_permission_roles&amp;mode=user_roles', array('admin' => true)) : false;
+$module['ACP_PERMISSION_ROLES']['ACP_MOD_ROLES']		= ($_CLASS['forums_auth']->acl_get('a_roles') && $_CLASS['forums_auth']->acl_get('a_mauth')) ? generate_link('forums&amp;file=admin_permission_roles&amp;mode=mod_roles', array('admin' => true)) : false;
+$module['ACP_PERMISSION_ROLES']['ACP_FORUM_ROLES']		= ($_CLASS['forums_auth']->acl_get('a_roles') && $_CLASS['forums_auth']->acl_get('a_fauth')) ? generate_link('forums&amp;file=admin_permission_roles&amp;mode=forum_roles', array('admin' => true)) : false;
 
-$module['GENERAL']['AVATAR_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_board')) ? generate_link('forums&amp;file=admin_board&amp;mode=avatar', array('admin' => true)) : '';
-$module['GENERAL']['BOARD_DEFAULTS']		= ($_CLASS['forums_auth']->acl_get('a_defaults')) ? generate_link('forums&amp;file=admin_board&amp;mode=default', array('admin' => true)) : '';
-$module['GENERAL']['BOARD_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_board')) ? generate_link('forums&amp;file=admin_board&amp;mode=setting', array('admin' => true)) : '';
-$module['GENERAL']['EMAIL_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=email', array('admin' => true)) : '';
-$module['GENERAL']['LOAD_SETTINGS']			= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=load', array('admin' => true)) : '';
-$module['GENERAL']['SERVER_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=server', array('admin' => true)) : '';
-$module['GENERAL']['MESSAGE_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_defaults')) ? generate_link('forums&amp;file=admin_board&amp;mode=message', array('admin' => true)) : '';
-$module['GENERAL']['ATTACHMENT_SETTINGS'] 	= ($_CLASS['forums_auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=attach', array('admin' => true)) : '';
-$module['GENERAL']['IM'] 					= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_jabber', array('admin' => true)) : '';
-$module['GENERAL']['PHP_INFO'] 				= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_phpinfo', array('admin' => true)) : '';
-$module['GENERAL']['MASS_EMAIL']			= ($_CLASS['forums_auth']->acl_get('a_email')) ? generate_link('forums&amp;file=admin_email', array('admin' => true)) : '';
 
-$module['POST']['ATTACHMENTS'] 				= ($_CLASS['forums_auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=ext_groups', array('admin' => true)) : '';
-$module['POST']['BBCODES']					= ($_CLASS['forums_auth']->acl_get('a_bbcode')) ? generate_link('forums&amp;file=admin_bbcodes', array('admin' => true)) : '';
-$module['POST']['ICONS']					= ($_CLASS['forums_auth']->acl_get('a_icons')) ? generate_link('forums&amp;file=admin_icons&amp;mode=icons', array('admin' => true)) : '';
+$module['ACP_GENERAL_CONFIGURATION']['ACP_BOARD_FEATURES']		= ($_CLASS['forums_auth']->acl_get('a_board')) ? generate_link('forums&amp;file=admin_board&amp;mode=features', array('admin' => true)) : false;
+$module['ACP_GENERAL_CONFIGURATION']['ACP_POST_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_board')) ? generate_link('forums&amp;file=admin_board&amp;mode=post', array('admin' => true)) : false;
+$module['ACP_GENERAL_CONFIGURATION']['ACP_LOAD_SETTINGS']		= ($_CLASS['forums_auth']->acl_get('a_server')) ? generate_link('forums&amp;file=admin_board&amp;mode=load', array('admin' => true)) : false;
 
+$module['ATTACHMENTS']['ACP_ATTACHMENT_SETTINGS'] 	= ($_CLASS['forums_auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=attach', array('admin' => true)) : false;
+$module['ATTACHMENTS']['ACP_MANAGE_EXTENSIONS'] 	= ($_CLASS['forums_auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=extensions', array('admin' => true)) : false;
+$module['ATTACHMENTS']['ACP_ORPHAN_ATTACHMENTS'] 	= ($_CLASS['forums_auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=orphan', array('admin' => true)) : false;
+$module['ATTACHMENTS']['ACP_EXTENSION_GROUPS'] 		= ($_CLASS['forums_auth']->acl_get('a_attach')) ? generate_link('forums&amp;file=admin_attachments&amp;mode=ext_groups', array('admin' => true)) : false;
+
+$module['ACP_CAT_POSTING']['ACP_RANKS']		= ($_CLASS['forums_auth']->acl_get('a_ranks')) ? generate_link('forums&amp;file=admin_ranks', array('admin' => true)) : false;
+$module['ACP_CAT_POSTING']['ACP_BBCODES']	= ($_CLASS['forums_auth']->acl_get('a_bbcode')) ? generate_link('forums&amp;file=admin_bbcodes', array('admin' => true)) : false;
+$module['ACP_CAT_POSTING']['ACP_ICONS']		= ($_CLASS['forums_auth']->acl_get('a_icons')) ? generate_link('forums&amp;file=admin_icons&amp;mode=icons', array('admin' => true)) : false;
+
 ?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/admin/main.php
===================================================================
--- cms/trunk/includes/forums/admin/main.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/admin/main.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -82,7 +82,8 @@
 		set_config('num_topics', (int) $row['stat'], true);
 
 		$sql = 'SELECT COUNT(attach_id) as stat
-			FROM ' . FORUMS_ATTACHMENTS_TABLE;
+			FROM ' . FORUMS_ATTACHMENTS_TABLE.'
+			WHERE is_orphan = 0';
 		$result = $_CLASS['core_db']->query($sql);
 		$row = $_CLASS['core_db']->fetch_row_assoc($result);
 	
@@ -90,7 +91,8 @@
 		$_CLASS['core_db']->free_result($result);
 
 		$sql = 'SELECT SUM(filesize) as stat
-			FROM ' . FORUMS_ATTACHMENTS_TABLE;
+			FROM ' . FORUMS_ATTACHMENTS_TABLE.'
+			WHERE is_orphan = 0';
 		$result = $_CLASS['core_db']->query($sql);
 		$row = $_CLASS['core_db']->fetch_row_assoc($result);
 
@@ -183,6 +185,14 @@
 	$files_per_day = $total_files;
 }
 
+$sql = 'SELECT COUNT(attach_id) AS total_orphan
+			FROM ' . FORUMS_ATTACHMENTS_TABLE . '
+			WHERE is_orphan = 1';
+$result = $_CLASS['core_db']->query($sql);
+$total_orphan = $_CLASS['core_db']->fetch_row_assoc($result))
+$total_orphan = (int) $total_orphan['total_orphan'];
+$_CLASS['core_db']->free_result($result);
+
 // Remove
 $dbsize = $_CLASS['core_user']->lang['NOT_AVAILABLE'];
 $s_action_options = build_select(array('online' => 'RESET_ONLINE', 'date' => 'RESET_DATE', 'stats' => 'RESYNC_STATS', 'user' => 'RESYNC_POSTCOUNTS'));
@@ -195,6 +205,7 @@
 	'TOTAL_USERS'		=> $total_users,
 	'USERS_PER_DAY'		=> $users_per_day,
 	'TOTAL_FILES'		=> $total_files,
+	'TOTAL_ORPHAN'		=> $total_orphan,
 	'FILES_PER_DAY'		=> $files_per_day,
 	'START_DATE'		=> $start_date,
 	'AVATAR_DIR_SIZE'	=> $avatar_dir_size,

Modified: cms/trunk/includes/forums/auth.php
===================================================================
--- cms/trunk/includes/forums/auth.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/auth.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -458,51 +458,42 @@
 	{
 		global $_CLASS;
 
-		$sql_user = ($user_id) ? (is_array($user_id) ? 'user_id IN (' . implode(', ', $user_id) . ')' : 'user_id = '.$user_id) : '';
-		$sql_forum = ($forum_id) ? (is_array($forum_id) ? 'AND a.forum_id IN (' . implode(', ', $forum_id) . ')' : 'AND a.forum_id = '.$forum_id) : '';
+		$sql_user = ($user_id !== false) ? (is_array($user_id) ? 'a.user_id IN (' . implode(', ', $user_id) . ')' : 'user_id = '.$user_id) : '';
+		$sql_forum = ($forum_id !== false) ? (is_array($forum_id) ? 'AND a.forum_id IN (' . implode(', ', $forum_id) . ')' : 'AND a.forum_id = '.$forum_id) : '';
 
-		$sql_opts = '';
+		$sql_opts = $sql_escape = '';
 
 		if ($opts !== false)
 		{
-			if (!is_array($opts))
-			{
-				$sql_opts = (strpos($opts, '%') !== false) ? "AND ao.auth_option LIKE '" . $_CLASS['core_db']->escape($opts) . "'" : "AND ao.auth_option = '" . $_CLASS['core_db']->escape($opts) . "'";
-			}
-			else
-			{
-				$sql_opts = "AND ao.auth_option IN ('" . implode("' ,'", $_CLASS['core_db']->escape_array($opts)) . "')";
-			}
+			$this->build_auth_option_statement('ao.auth_option', $opts, $sql_opts, $sql_escape);
 		}
 
 		$groups = $group_id_array = $group_members = $hold_ary = array();
 
 		if ($sql_user)
 		{
-			$sql = 'SELECT group_id, user_id FROM ' . CORE_USER_GROUP_TABLE ." WHERE $sql_user AND member_status <> ".STATUS_PENDING;
+			$sql = 'SELECT group_id, user_id FROM ' . CORE_USER_GROUP_TABLE ." WHERE $sql_user AND member_status IN (".STATUS_ACTIVE.', '.STATUS_LEADER.')';
 
 			$result = $_CLASS['core_db']->query($sql);
 	
 			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 			{
-				$groups[$row['group_id']] = true;
+				$groups[] = $row['group_id'];
 				$group_members[$row['group_id']][] = $row['user_id'];
 			}
 			$_CLASS['core_db']->free_result($result);
 
-			$sql_user = empty($groups) ? ' AND a.' . $sql_user :  'AND (a.'.$sql_user.' OR a.group_id IN ('.implode(', ', array_keys($groups)).'))';
+			$sql_user = empty($groups) ? ' AND '.$sql_user :  'AND ('.$sql_user.' OR a.group_id IN ('.implode(', ', $groups).'))';
 			unset($groups);
 		}
 
-		// Sort by group_id since we want user setting to over right grp..  specific > broad
 		$sql = 'SELECT ao.auth_option, a.auth_role_id, r.auth_setting as role_auth_setting, a.user_id, a.group_id, a.forum_id, a.auth_setting
 					FROM ' . FORUMS_ACL_OPTIONS_TABLE . ' ao, ' . FORUMS_ACL_TABLE . ' a
-					LEFT JOIN '.FORUMS_ACL_ROLES_DATA_TABLE." r ON a.auth_role_id = r.role_id
+					LEFT JOIN '.FORUMS_ACL_ROLES_DATA_TABLE." r ON (a.auth_role_id = r.role_id)
 					WHERE (ao.auth_option_id = a.auth_option_id OR ao.auth_option_id = r.auth_option_id)
-						$sql_user $sql_forum $sql_opts
-						ORDER BY a.group_id, ao.auth_option";
+						$sql_user $sql_forum $sql_opts";
 
-		$result = $_CLASS['core_db']->query($sql);
+		$result = $_CLASS['core_db']->query($sql . $sql_escape);
 
 		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 		{
@@ -514,34 +505,18 @@
 
 			if ($row['group_id'])
 			{
+
 				$group_id_array[$row['group_id']][] = $row;
 
 				continue;
 			}
-
 			$hold_ary[$row['user_id']][$row['forum_id']][$row['auth_option']] = $auth_setting;
-
-			/*	// Check for existence of ACL_YES if an option got set to ACL_NEVER
-				if ($setting == ACL_NEVER)
-				{
-					$flag = substr($row['auth_option'], 0, strpos($row['auth_option'], '_') + 1);
-
-					if (isset($hold_ary[$row['user_id']][$row['forum_id']][$flag]) && $hold_ary[$row['user_id']][$row['forum_id']][$flag] == ACL_YES)
-					{
-						unset($hold_ary[$row['user_id']][$row['forum_id']][$flag]);
-
-						if (in_array(ACL_YES, $hold_ary[$row['user_id']][$row['forum_id']]))
-						{
-							$hold_ary[$row['user_id']][$row['forum_id']][$flag] = ACL_YES;
-						}
-					}
-				}*/
 		}
 		$_CLASS['core_db']->free_result($result);
 
 		if (!empty($group_id_array))
 		{
-			if (empty($group_members))
+			if (!$sql_user)
 			{
 				$sql = 'SELECT user_group, user_id FROM ' . CORE_USERS_TABLE .' 
 					WHERE user_group IN ('.implode(', ', array_keys($group_id_array)).')
@@ -568,74 +543,171 @@
 					{
 						if (!isset($hold_ary[$user_id][$row['forum_id']][$row['auth_option']]) || (isset($hold_ary[$row['user_id']][$row['forum_id']][$row['auth_option']]) && $hold_ary[$row['user_id']][$row['forum_id']][$row['auth_option']] != ACL_NEVER))
 						{
+							$auth_setting = ($row['auth_role_id']) ? $row['role_auth_setting'] : $row['auth_setting'];
+
 							$hold_ary[$user_id][$row['forum_id']][$row['auth_option']] = ($row['auth_role_id']) ? $row['role_auth_setting'] : $row['auth_setting'];
 						}
-						/*	
-						// Check for existence of ACL_YES if an option got set to ACL_NEVER
-						if ($setting == ACL_NEVER)
-						{
-							$flag = substr($row['auth_option'], 0, strpos($row['auth_option'], '_') + 1);
-		
-							if (isset($hold_ary[$row['user_id']][$row['forum_id']][$flag]) && $hold_ary[$row['user_id']][$row['forum_id']][$flag] == ACL_YES)
-							{
-								unset($hold_ary[$row['user_id']][$row['forum_id']][$flag]);
-		
-								if (in_array(ACL_YES, $hold_ary[$row['user_id']][$row['forum_id']]))
-								{
-									$hold_ary[$row['user_id']][$row['forum_id']][$flag] = ACL_YES;
-								}
-							}
-						}*/	
 					}
 				}
 			}
+			unset($group_members);
 		}
 
 		return $hold_ary;
 	}
 
+	/**
+	* Get raw user based permission settings
+	*/
+	function acl_user_raw_data($user_id = false, $opts = false, $forum_id = false)
+	{
+		global $_CLASS;
+
+		$sql_user = ($user_id !== false) ? (is_array($user_id) ? 'AND a.user_id IN (' . implode(', ', $user_id) . ')' : 'user_id = '.$user_id) : '';
+		$sql_forum = ($forum_id !== false) ? (is_array($forum_id) ? 'AND a.forum_id IN (' . implode(', ', $forum_id) . ')' : 'AND a.forum_id = '.$forum_id) : '';
+
+		$sql_opts = $sql_escape = '';
+
+		if ($opts !== false)
+		{
+			$this->build_auth_option_statement('ao.auth_option', $opts, $sql_opts, $sql_escape);
+		}
+
+		$hold_ary = array();
+
+		// Grab user settings...
+		$sql = 'SELECT ao.auth_option, a.auth_role_id, r.auth_setting as role_auth_setting, a.user_id, a.forum_id, a.auth_setting
+			FROM ' . FORUMS_ACL_OPTIONS_TABLE . ' ao, ' . FORUMS_ACL_TABLE . ' a
+			LEFT JOIN '.FORUMS_ACL_ROLES_DATA_TABLE." r ON (a.auth_role_id = r.role_id)
+			WHERE (ao.auth_option_id = a.auth_option_id OR ao.auth_option_id = r.auth_option_id)
+				$sql_user $sql_forum $sql_opts
+			ORDER BY a.forum_id, ao.auth_option";
+
+		$result = $_CLASS['core_db']->query($sql . $sql_escape);
+
+		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+		{
+			if (!isset($hold_ary[$row['user_id']][$row['forum_id']][$row['auth_option']]) || (isset($hold_ary[$row['user_id']][$row['forum_id']][$row['auth_option']]) && $hold_ary[$row['user_id']][$row['forum_id']][$row['auth_option']] != ACL_NEVER))
+			{
+				$setting = ($row['auth_role_id']) ? $row['role_auth_setting'] : $row['auth_setting'];
+				$hold_ary[$row['user_id']][$row['forum_id']][$row['auth_option']] = $setting;
+			}
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		return $hold_ary;
+	}
+
 	function acl_group_raw_data($group_id = false, $opts = false, $forum_id = false)
 	{
 		global $_CLASS;
 
-		$sql_group = ($group_id) ? ((!is_array($group_id)) ? "group_id = $group_id" : 'group_id IN (' . implode(', ', $group_id) . ')') : '';
-		$sql_forum = ($forum_id) ? ((!is_array($forum_id)) ? "AND a.forum_id = $forum_id" : 'AND a.forum_id IN (' . implode(', ', $forum_id) . ')') : '';
+		$sql_group = ($group_id !== false) ? (is_array($group_id) ? 'AND a.group_id IN (' . implode(', ', $group_id) . ')' : 'group_id = '.$group_id) : '';
+		$sql_forum = ($forum_id !== false) ? (is_array($forum_id) ? 'AND a.forum_id IN (' . implode(', ', $forum_id) . ')' : 'AND a.forum_id = '.$forum_id) : '';
 
-		$sql_opts = '';
+		$sql_opts = $sql_escape = '';
 
 		if ($opts !== false)
 		{
-			if (!is_array($opts))
-			{
-				$sql_opts = (strpos($opts, '%') !== false) ? "AND ao.auth_option LIKE '" . $_CLASS['core_db']->escape($opts) . "'" : "AND ao.auth_option = '" . $_CLASS['core_db']->escape($opts) . "'";
-			}
-			else
-			{
-				$sql_opts = "AND ao.auth_option IN ('" . implode("' ,'", $_CLASS['core_db']->escape_array($opts)) . "')";
-			}
+			$this->build_auth_option_statement('ao.auth_option', $opts, $sql_opts, $sql_escape);
 		}
 
 		$hold_ary = array();
 
 		// Grab group settings ... ACL_NO overrides ACL_YES so act appropriatley
-		$sql = 'SELECT a.group_id, ao.auth_option, a.forum_id, a.auth_setting
+		$sql = 'SELECT ao.auth_option, a.auth_role_id, r.auth_setting as role_auth_setting, a.group_id, a.forum_id, a.auth_setting
 			FROM ' . FORUMS_ACL_OPTIONS_TABLE . ' ao, ' . FORUMS_ACL_TABLE . ' a
-			WHERE ao.auth_option_id = a.auth_option_id
-				AND a.group_id IS NOT NULL AND a.group_id <> 0
-				' . (($sql_group) ? 'AND a.' . $sql_group : '') . "
-				$sql_forum
-				$sql_opts
+			LEFT JOIN '.FORUMS_ACL_ROLES_DATA_TABLE." r ON (a.auth_role_id = r.role_id)
+			WHERE (ao.auth_option_id = a.auth_option_id OR ao.auth_option_id = r.auth_option_id)
+				$sql_group $sql_forum $sql_opts
 			ORDER BY a.forum_id, ao.auth_option";
-		$result = $_CLASS['core_db']->query($sql);
+		$result = $_CLASS['core_db']->query($sql. $sql_escape);
 
 		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 		{
-			$hold_ary[$row['group_id']][$row['forum_id']][$row['auth_option']] = $row['auth_setting'];
+			if (!isset($hold_ary[$row['group_id']][$row['forum_id']][$row['auth_option']]) || (isset($hold_ary[$row['group_id']][$row['forum_id']][$row['auth_option']]) && $hold_ary[$row['user_id']][$row['forum_id']][$row['auth_option']] != ACL_NEVER))
+			{
+				$setting = ($row['auth_role_id']) ? $row['role_auth_setting'] : $row['auth_setting'];
+				$hold_ary[$row['group_id']][$row['forum_id']][$row['auth_option']] = $setting;
+			}
 		}
 		$_CLASS['core_db']->free_result($result);
 
 		return $hold_ary;
 	}
+
+	/**
+	* Fill auth_option statement for later querying based on the supplied options
+	*/
+	function build_auth_option_statement($key, $auth_options, &$sql_opts, &$sql_escape)
+	{
+		global $_CLASS;
+
+		if (!is_array($auth_options))
+		{
+			if (strpos($auth_options, '%') !== false)
+			{
+				if (strpos($auth_options, '_') !== false)
+				{
+					$sql_opts = "AND $key LIKE '" . $_CLASS['core_db']->escape(str_replace('_', "\_", $auth_options)) . "'";
+					$sql_escape = ($_CLASS['core_db']->db_layer == 'mssql' || $_CLASS['core_db']->db_layer == 'mssql_odbc') ? " ESCAPE '\\'" : '';
+				}
+				else
+				{
+					$sql_opts = "AND $key LIKE '" . $_CLASS['core_db']->escape($auth_options) . "'";
+				}
+			}
+			else
+			{
+				$sql_opts = "AND $key = '" . $_CLASS['core_db']->escape($auth_options) . "'";
+			}
+		}
+		else
+		{
+			$is_like_expression = $is_underline = false;
+
+			foreach ($auth_options as $option)
+			{
+				if (strpos($option, '%') !== false)
+				{
+					$is_like_expression = true;
+				}
+
+				if (strpos($option, '_') !== false)
+				{
+					$is_underline = true;
+				}
+			}
+
+			if (!$is_like_expression)
+			{
+				$sql_opts = "AND $key IN ('" . implode("' ,'", $_CLASS['core_db']->escape_array($auth_options)) . "')";
+			}
+			else
+			{
+				$sql = array();
+
+				foreach ($auth_options as $option)
+				{
+					if (strpos($option, '%') !== false)
+					{
+						$sql[] = $key . " LIKE '" . $_CLASS['core_db']->escape(str_replace('_', "\_", $option)) . "'";
+					}
+					else
+					{
+						$sql[] = $key . " = '" . $_CLASS['core_db']->escape(str_replace('_', "\_", $option)) . "'";
+					}
+				}
+
+				$sql_opts = 'AND (' . implode(' OR ', $sql) . ')';
+
+				if ($is_underline)
+				{
+					$sql_escape = ($_CLASS['core_db']->db_layer == 'mssql' || $_CLASS['core_db']->db_layer == 'mssql_odbc') ? " ESCAPE '\\'" : '';
+				}
+			}
+		}
+	}
 }
 
 ?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/functions.php
===================================================================
--- cms/trunk/includes/forums/functions.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -237,22 +237,29 @@
 
 	$message = str_replace($match, $replace, $message);
 
-	$match = array(
-		'#<!\-\- e \-\-><a href="mailto:(.*?)">.*?</a><!\-\- e \-\->#',
-		'#<!\-\- m \-\-><a href="(.*?)" target="_blank">.*?</a><!\-\- m \-\->#',
-		'#<!\-\- w \-\-><a href="http:\/\/(.*?)" target="_blank">.*?</a><!\-\- w \-\->#',
-		'#<!\-\- l \-\-><a href="(.*?)">.*?</a><!\-\- l \-\->#',
-		'#<!\-\- s(.*?) \-\-><img src="\{SMILIES_PATH\}\/.*? \/><!\-\- s\1 \-\->#',
-		'#<!\-\- .*? \-\->#s',
-		'#<.*?>#s'
-	);
+	$match = get_preg_expression('bbcode_htm');
+	$replace = array('\1', '\2', '\1', '', '');
 	
-	$replace = array('\1', '\1', '\1', '\1', '\1', '', '');
-	
 	$message = preg_replace($match, $replace, $message);
+}
 
-	return;
-}
+/**
+* Strips all bbcode from a text and returns the plain content
+*/
+function strip_bbcode(&$text, $uid = '')
+{
+	if (!$uid)
+	{
+		$uid = '[0-9a-z]{5,}';
+	}
+
+	$text = preg_replace("#\[\/?[a-z0-9\*\+\-]+(?:=.*?)?(?::[a-z])?(\:?$uid)\]#", ' ', $text);
+
+	$match = get_preg_expression('bbcode_htm');
+	$replace = array('\1', '\2', '\1', '', '');
+	
+	$text = preg_replace($match, $replace, $text);
+}
 
 /**
 * For display of custom parsed text on user-facing pages
@@ -268,7 +275,7 @@
 	}
 
 	// Parse bbcode if bbcode uid stored and bbcode enabled
-	if ($uid && ($flags & 1))
+	if ($uid && ($flags & OPTION_FLAG_BBCODE))
 	{
 		if (!class_exists('bbcode'))
 		{
@@ -287,7 +294,7 @@
 		$bbcode->bbcode_second_pass($text, $uid);
 	}
 
-	$text = smiley_text($text, !($flags & 2));
+	$text = smiley_text($text, !($flags & OPTION_FLAG_SMILIES));
 	$text = str_replace("\n", '<br />', censor_text($text));
 
 	return $text;
@@ -340,9 +347,9 @@
 	decode_message($text, $uid);
 
 	return array(
-		'allow_bbcode'	=> ($flags & 1) ? 1 : 0,
-		'allow_smilies'	=> ($flags & 2) ? 1 : 0,
-		'allow_urls'	=> ($flags & 4) ? 1 : 0,
+		'allow_bbcode'  => ($flags & OPTION_FLAG_BBCODE) ? 1 : 0,
+		'allow_smilies' => ($flags & OPTION_FLAG_SMILIES) ? 1 : 0,
+		'allow_urls'    => ($flags & OPTION_FLAG_LINKS) ? 1 : 0,
 		'text'			=> $text
 	);
 }
@@ -889,8 +896,6 @@
 				$inline_attachments[$key] = false;
 			}
 		}
-//print_r($inline_attachments);
-		//$inline_attachments = display_attachments($forum_id, $inline_attachments, $update_count, $preview, true);
 
 		$replace = array();
 		foreach ($matches[1] as $key => $index)
@@ -1341,6 +1346,16 @@
 		case 'email':
 			return '[a-z0-9&\'\.\-_\+]+@[a-z0-9\-]+\.([a-z0-9\-]+\.)*[a-z]+';
 		break;
+
+		case 'bbcode_htm':
+			return array(
+				'#<!\-\- e \-\-><a href="mailto:(.*?)">.*?</a><!\-\- e \-\->#',
+				'#<!\-\- (l|m|w) \-\-><a href="(.*?)">.*?</a><!\-\- \1 \-\->#',
+				'#<!\-\- s(.*?) \-\-><img src="\{SMILIES_PATH\}\/.*? \/><!\-\- s\1 \-\->#',
+				'#<!\-\- .*? \-\->#s',
+				'#<.*?>#s',
+			);
+		break;
 	}
 
 	return '';
@@ -1374,11 +1389,11 @@
 
 		// matches a xxxx://aaaaa.bbb.cccc. ...
 		$magic_url_match[] = '#(^|[\n ]|\()([\w]+:/{2}.*?([^[ \t\n\r<"\'\)&]+|&(?!lt;|quot;))*)#ie';
-		$magic_url_replace[] = "'\$1<!-- m --><a href=\"\$2\" target=\"_blank\">' . ((strlen('\$2') > 55) ? substr(str_replace('&amp;', '&', '\$2'), 0, 39) . ' ... ' . substr(str_replace('&amp;', '&', '\$2'), -10) : '\$2') . '</a><!-- m -->'";
+		$magic_url_replace[] = "'\$1<!-- m --><a href=\"\$2\">' . ((strlen('\$2') > 55) ? substr(str_replace('&amp;', '&', '\$2'), 0, 39) . ' ... ' . substr(str_replace('&amp;', '&', '\$2'), -10) : '\$2') . '</a><!-- m -->'";
 
 		// matches a "www.xxxx.yyyy[/zzzz]" kinda lazy URL thing
 		$magic_url_match[] = '#(^|[\n ]|\()(w{3}\.[\w\-]+\.[\w\-.\~]+(?:[^[ \t\n\r<"\'\)&]+|&(?!lt;|quot;))*)#ie';
-		$magic_url_replace[] = "'\$1<!-- w --><a href=\"http://\$2\" target=\"_blank\">' . ((strlen('\$2') > 55) ? substr(str_replace('&amp;', '&', '\$2'), 0, 39) . ' ... ' . substr(str_replace('&amp;', '&', '\$2'), -10) : '\$2') . '</a><!-- w -->'";
+		$magic_url_replace[] = "'\$1<!-- w --><a href=\"http://\$2\">' . ((strlen('\$2') > 55) ? substr(str_replace('&amp;', '&', '\$2'), 0, 39) . ' ... ' . substr(str_replace('&amp;', '&', '\$2'), -10) : '\$2') . '</a><!-- w -->'";
 
 		// matches an email at domain type address at the start of a line, or after a space or after what might be a BBCode.
 		$magic_url_match[] = '/(^|[\n ]|\()(' . get_preg_expression('email') . ')/ie';
@@ -1388,4 +1403,25 @@
 	return preg_replace($magic_url_match, $magic_url_replace, $text);
 }
 
+/**
+* Generate size select options
+*/
+function size_select_options($size_compare)
+{
+	global $_CLASS;
+
+	$size_types_text = array($_CLASS['core_user']->lang['BYTES'], $_CLASS['core_user']->lang['KB'], $_CLASS['core_user']->lang['MB']);
+	$size_types = array('b', 'kb', 'mb');
+
+	$s_size_options = '';
+
+	for ($i = 0, $size = sizeof($size_types_text); $i < $size; $i++)
+	{
+		$selected = ($size_compare == $size_types[$i]) ? ' selected="selected"' : '';
+		$s_size_options .= '<option value="' . $size_types[$i] . '"' . $selected . '>' . $size_types_text[$i] . '</option>';
+	}
+
+	return $s_size_options;
+}
+
 ?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/functions_admin.php
===================================================================
--- cms/trunk/includes/forums/functions_admin.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_admin.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1579,15 +1579,25 @@
 {
 	global $_CLASS;
 
+	if (!is_array($forum_id))
+	{
+		$forum_id = array($forum_id);
+	}
+
+	if (!sizeof($forum_id))
+	{
+		return;
+	}
+	
 	$sql_forum = (is_array($forum_id)) ? ' IN (' . implode(', ', array_map('intval', $forum_id)) . ')' : ' = '. (int) $forum_id;
 
 	$sql_and = '';
-	if (!($prune_flags & 4))
+	if (!($prune_flags & FORUM_FLAG_PRUNE_ANNOUNCE))
 	{
 		$sql_and .= ' AND topic_type <> ' . POST_ANNOUNCE;
 	}
 
-	if (!($prune_flags & 8))
+	if (!($prune_flags & FORUM_FLAG_PRUNE_STICKY))
 	{
 		$sql_and .= ' AND topic_type <> ' . POST_STICKY;
 	}
@@ -1603,7 +1613,7 @@
 	}
 
 	$sql = 'SELECT topic_id
-		FROM ' . TOPICS_TABLE . "
+		FROM ' . FORUMS_TOPICS_TABLE . "
 		WHERE forum_id $sql_forum
 			AND poll_start = 0 
 			$sql_and";
@@ -1616,10 +1626,10 @@
 	}
 	$_CLASS['core_db']->free_result($result);
 
-	if ($prune_flags & 2)
+	if ($prune_flags & FORUM_FLAG_PRUNE_POLL)
 	{
 		$sql = 'SELECT topic_id
-			FROM ' . TOPICS_TABLE . "
+			FROM ' . FORUMS_TOPICS_TABLE . "
 			WHERE forum_id $sql_forum 
 				AND poll_start > 0 
 				AND poll_last_vote < $prune_date 
@@ -1646,7 +1656,7 @@
 	global $_CLASS;
 
 	$sql = 'SELECT forum_name
-		FROM ' . FORUMS_TABLE . "
+		FROM ' . FORUMS_FORUMS_TABLE . "
 		WHERE forum_id = $forum_id";
 	$result = $_CLASS['core_db']->query($sql);
 	$row = $_CLASS['core_db']->fetch_row_assoc($result);
@@ -1659,7 +1669,7 @@
 
 		prune($forum_id, $prune_mode, $prune_date, $prune_flags, true);
 
-		$sql = 'UPDATE ' . FORUMS_TABLE . "
+		$sql = 'UPDATE ' . FORUMS_FORUMS_TABLE . "
 			SET prune_next = $next_prune
 			WHERE forum_id = $forum_id";
 		$_CLASS['core_db']->query($sql);
@@ -1994,6 +2004,32 @@
 	return;
 }
 
+/**
+* Update foes - remove moderators and administrators from foe lists...
+*/
+function update_foes()
+{
+	global $_CLASS;
+
+	$perms = array();
+	foreach ($_CLASS['forums_auth']->acl_get_list(false, array('a_', 'm_'), false) as $forum_id => $forum_ary)
+	{
+		foreach ($forum_ary as $auth_option => $user_ary)
+		{
+			$perms = array_merge($perms, $user_ary);
+		}
+	}
+
+	if (sizeof($perms))
+	{
+		$sql = 'DELETE FROM ' . ZEBRA_TABLE . ' 
+			WHERE zebra_id IN (' . implode(', ', array_unique($perms)) . ')
+				AND foe = 1';
+		$_CLASS['core_db']->query($sql);
+	}
+	unset($perms);
+}
+
 // Extension of auth class for changing permissions
 if (class_exists('forums_auth'))
 {

Deleted: cms/trunk/includes/forums/functions_compress.php
===================================================================
--- cms/trunk/includes/forums/functions_compress.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_compress.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,627 +0,0 @@
-<?
-//**************************************************************//
-//  Vipeal CMS:													//
-//**************************************************************//
-//																//
-//  Copyright ? 2004 by Viperal									//
-//  http://www.viperal.com										//
-//																//
-//  Viperal CMS is released under the terms and conditions		//
-//  of the GNU General Public License version 2					//
-//																//
-//**************************************************************//
-
-// -------------------------------------------------------------------------
-//
-// $Id: functions_compress.php,v 1.16 2003/08/22 00:35:59 psotfx Exp $
-//
-// FILENAME  : functions_compress.php
-// STARTED   : Sat Jul 19 2003
-// COPYRIGHT : ? 2003 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
-// 
-// -------------------------------------------------------------------------
-
-class compress 
-{
-	var $fp = 0;
-
-	function add_file($src, $src_rm_prefix = '', $src_add_prefix = '', $skip_files = '')
-	{
-		$skip_files = explode(',', $skip_files);
-
-		// Remove rm prefix from src path 
-		$src_path = ($src_rm_prefix) ? preg_replace('#^(' . preg_quote($src_rm_prefix) . ')#', '', $src) : $src;
-		// Add src prefix
-		$src_path = ($src_add_prefix) ? ($src_add_prefix . ((substr($src_add_prefix, -1) != '/') ? '/' : '') . $src_path) : $src_path;
-		// Remove initial "/" if present
-		$src_path = (substr($src_path, 0, 1) == '/') ? substr($src_path, 1) : $src_path;
-
-		if (is_file($src))
-		{
-			if (!($fp = @fopen("$src", 'rb')))
-			{
-				return false;
-			}
-
-			$data = fread($fp, filesize("$src"));
-			fclose($fp);
-
-			$this->data($src_path, $data, filemtime("$src"), false);
-		}
-		else if (is_dir($src))
-		{
-			// Clean up path, add closing / if not present
-			$src_path = ($src_path && substr($src_path, -1) != '/') ? $src_path . '/' : $src_path;
-
-			$filelist = array();
-			$filelist = filelist("$src", '', '*');
-			krsort($filelist);
-
-			if ($src_path)
-			{
-				$mtime = (file_exists("$src_path")) ? filemtime("$src_path") : time();
-				$this->data($src_path, '', $mtime, true);
-			}
-
-			foreach ($filelist as $path => $file_ary)
-			{
-				if ($path)
-				{
-					// Same as for src_path
-					$path = (substr($path, 0, 1) == '/') ? substr($path, 1) : $path;
-					$path = ($path && substr($path, -1) != '/') ? $path . '/' : $path;
-
-					$this->data("$src_path$path", '', filemtime("$src_path$path"), true);
-				}
-
-				foreach ($file_ary as $file)
-				{
-					if (in_array($path . $file, $skip_files))
-					{
-						continue;
-					}
-
-					$this->data("$src_path$path$file", implode('', file("$src_path$path$file")), filemtime("$src_path$path$file"), false);
-				}
-			}
-
-		}
-		return true;
-	}
-
-	function add_data($src, $name)
-	{
-		$this->data($name, $src);
-		return true;
-	}
-
-	function methods()
-	{
-		$methods = array('tar');
-
-		foreach (array('tar.gz' => 'zlib', 'tar.bz2' => 'bz2', 'zip' => 'zlib') as $type => $module)
-		{
-			if (!@extension_loaded($module))
-			{
-				break;
-			}
-			$methods[] = $type;
-		}
-
-		return $methods;
-	}
-}
-
-/**
-* @package phpBB3
-*
-* Zip creation class from phpMyAdmin 2.3.0 ? Tobias Ratschiller, Olivier M?ller, Lo?c Chapeaux, 
-* Marc Delisle, http://www.phpmyadmin.net/
-*
-* Modified extensively by psoTFX, ? phpBB Group, 2003
-*
-* Based on work by Eric Mueller and Denis125
-* Official ZIP file format: http://www.pkware.com/appnote.txt
-*/
-
-class compress_zip extends compress
-{
-	var $datasec = array();
-	var $ctrl_dir = array();
-	var $eof_cdh = "\x50\x4b\x05\x06\x00\x00\x00\x00";
-
-	var $old_offset = 0;
-	var $datasec_len = 0;
-
-	function compress_zip($mode, $file)
-	{
-		return $this->fp = @fopen($file, $mode . 'b');
-	}
-
-	function unix_to_dos_time($time)
-	{
-		$timearray = (!$time) ? getdate() : getdate($time);
-
-		if ($timearray['year'] < 1980)
-		{
-			$timearray['year'] = 1980;
-			$timearray['mon'] = $timearray['mday'] = 1;
-			$timearray['hours'] = $timearray['minutes'] = $timearray['seconds'] = 0;
-		}
-
-		return (($timearray['year'] - 1980) << 25) | ($timearray['mon'] << 21) | ($timearray['mday'] << 16) | ($timearray['hours'] << 11) | ($timearray['minutes'] << 5) | ($timearray['seconds'] >> 1);
-	}
-
-	function extract($dst)
-	{
-		$header = $data = '';
-		$seek_ary = $mkdir_ary = array();
-		$j = 0;
-
-		fseek($this->fp, -14, SEEK_END);
-		$tmp = unpack("ventries/vtotentries/Vctsize/Vctpos", fread($this->fp, 12));
-		$entries = (int) trim($tmp['entries']);
-		$totentries = (int) trim($tmp['totentries']);
-		$ctsize = (int) trim($tmp['ctsize']);
-		$ctpos = (int) trim($tmp['ctpos']);
-
-		fseek($this->fp, $ctpos);
-
-		// First scan entries, pull out position of data, length, etc.
-		// and directory structure
-		for ($i = 0; $i < $entries; $i++)
-		{
-			$buffer = fread($this->fp, 46);
-
-			$tmp = unpack("vc_method/Vmtime/Vcrc/Vc_size/Vuc_size/vstrlen", substr($buffer, 10, 20));
-			$c_method = (int) trim($tmp['c_method']);
-			$crc = (int) trim($tmp['crc']);
-			$strlen = (int) trim($tmp['strlen']);
-			$uc_size = (int) trim($tmp['uc_size']);
-			$c_size = (int) trim($tmp['c_size']);
-
-			$tmp = unpack("Vattrib/Voffset", substr($buffer, 38, 8));
-			$attrib = (int) trim($tmp['attrib']);
-			$offset = (int) trim($tmp['offset']);
-
-			$filename =  fread($this->fp, $strlen);
-
-			if ($attrib == 16 || $attrib == 0x41FF0010 || (!$uc_size && !$crc))
-			{
-				$mkdir_ary[] = "$dst$filename";
-			}
-			else
-			{
-				$seek_ary[$j]['c_method'] = $c_method;
-				$seek_ary[$j]['crc'] = $crc;
-				$seek_ary[$j]['strlen'] = $strlen;
-				$seek_ary[$j]['uc_size'] = $uc_size;
-				$seek_ary[$j]['c_size'] = $c_size;
-
-				$seek_ary[$j]['offset'] = $offset;
-				$seek_ary[$j]['filename'] = "$dst$filename";
-
-				$j++;
-			}
-		}
-
-		// Create directory structure on fs
-		if (is_array($mkdir_ary))
-		{
-			sort($mkdir_ary);
-			foreach ($mkdir_ary as $dir)
-			{
-				if (!@mkdir($dir, 0777))
-				{
-					trigger_error("Could not create directory $dir");
-				}
-				@chmod("$dir", 0777);
-			}
-		}
-
-		// Extract files
-		foreach ($seek_ary as $seek)
-		{
-			$filename = $seek['filename'];
-
-//			fseek($this->fp, $seek['offset'] + 8); // To grab file header info
-//			fseek($this->fp, $seek['offset'] + 30 + $tmp['strlen'] + $tmp['c_size']); // To grab file header info2
-
-			// Jump to data
-			fseek($this->fp, $seek['offset'] + 30 + $seek['strlen']);
-
-			// Was data compressed? If so we have to fudge a solution thanks
-			// to some "issues" with gzuncompress. Else we just write out the
-			// data
-			if ($seek['c_method'] == 8)
-			{
-				// Temp gzip file -> .gz header -> data -> gz footer
-				if (!($fp = fopen($filename . '.gz', 'wb')))
-				{
-					trigger_error("Could not open temporary $filename.gz");
-				}
-				fwrite($fp, pack('va1a1Va1a1', 0x8b1f, chr(0x08), chr(0x00), time(), chr(0x00), chr(3)));
-				fwrite($fp, fread($this->fp, $seek['c_size']));
-				fwrite($fp, pack("VV", $seek['crc'], $seek['uc_size']));
-				fclose($fp);
-
-				if (!($fp = fopen($filename, 'wb')))
-				{
-					trigger_error("Could not create $filename");
-				}
-				@chmod($filename, 0777);
-
-				if (!($gzfp = gzopen($filename . '.gz', 'rb')))
-				{
-					die("Could not open temporary $filename.gz");
-				}
-
-				while ($buffer = gzread($gzfp, 1024))
-				{
-					fwrite($fp, $buffer);
-				}
-				gzclose($gzfp);
-				fclose($fp);
-				unlink($filename . '.gz');
-			}
-			else
-			{
-				if (!($fp = fopen($filename, 'wb')))
-				{
-					trigger_error("Could not create $filename");
-				}
-				@chmod($filename, 0777);
-
-				fwrite($fp, fread($this->fp, $seek['uc_size']));
-				fclose($fp);
-			}
-		}
-	}
-
-	function close()
-	{
-		// Write out central file directory and footer ... if it exists
-		if (sizeof($this->ctrl_dir))
-		{
-			fwrite($this->fp, $this->file());
-		}
-		fclose($this->fp);
-	}
-
-	// Create the structures ... note we assume version made by is MSDOS
-	function data($name, $data, $mtime = false, $is_dir = false)
-	{
-		$name = str_replace('\\', '/', $name);
-
-		$dtime = dechex($this->unix_to_dos_time($mtime));
-		$hexdtime = '\x' . $dtime[6] . $dtime[7] . '\x' . $dtime[4] . $dtime[5] . '\x' . $dtime[2] . $dtime[3] . '\x' . $dtime[0] . $dtime[1];
-		eval('$hexdtime = "' . $hexdtime . '";');
-
-		if ($is_dir)
-		{
-			$unc_len = $c_len = $crc = 0;
-			$zdata = '';
-		}
-		else
-		{
-			$unc_len = strlen($data);
-			$crc = crc32($data);
-			$zdata = gzcompress($data);
-			$zdata = substr(substr($zdata, 0, strlen($zdata) - 4), 2); // fix crc bug
-			$c_len = strlen($zdata);
-
-			// Did we compress? No, then use data as is
-			if ($c_len >= $unc_len)
-			{
-				$zdata = $data;
-				$c_len = $unc_len;
-			}
-		}
-		unset($data);
-
-		// If we didn't compress set method to store, else deflate
-		$c_method = ($c_len == $unc_len) ? "\x00\x00" : "\x08\x00"; 
-
-		// Are we a file or a directory? Set archive for file
-		$attrib = ($is_dir) ? 16 : 32;
-		$var_ext = ($is_dir) ? "\x0a" : "\x14";
-
-		// File Record Header
-		$fr = "\x50\x4b\x03\x04";		// Local file header 4bytes
-		$fr .= "$var_ext\x00";			// ver needed to extract 2bytes
-		$fr .= "\x00\x00";				// gen purpose bit flag 2bytes
-		$fr .= $c_method;				// compression method 2bytes
-		$fr .= $hexdtime;				// last mod time and date 2+2bytes
-		$fr .= pack('V', $crc);			// crc32 4bytes
-		$fr .= pack('V', $c_len);		// compressed filesize 4bytes
-		$fr .= pack('V', $unc_len);		// uncompressed filesize 4bytes
-		$fr .= pack('v', strlen($name));// length of filename 2bytes
-
-		$fr .= pack('v', 0);			// extra field length 2bytes
-		$fr .= $name;
-		$fr .= $zdata;
-		unset($zdata);
-		$fr .= pack('V', $crc);			// crc32 4bytes
-		$fr .= pack('V', $c_len);		// compressed filesize 4bytes
-		$fr .= pack('V', $unc_len);		// uncompressed filesize 4bytes
-
-		$this->datasec_len += strlen($fr);
-
-		// Add data to file ... by writing data out incrementally we save some memory
-		fwrite($this->fp, $fr);
-		unset($fr);
-
-		// Central Directory Header
-		$cdrec = "\x50\x4b\x01\x02";		// header 4bytes
-		$cdrec .= "\x00\x00";               // version made by
-		$cdrec .= "$var_ext\x00";           // version needed to extract
-		$cdrec .= "\x00\x00";               // gen purpose bit flag
-		$cdrec .= $c_method;				// compression method 
-		$cdrec .= $hexdtime;                // last mod time & date
-		$cdrec .= pack('V', $crc);          // crc32
-		$cdrec .= pack('V', $c_len);        // compressed filesize
-		$cdrec .= pack('V', $unc_len);      // uncompressed filesize
-		$cdrec .= pack('v', strlen($name)); // length of filename
-		$cdrec .= pack('v', 0);             // extra field length
-		$cdrec .= pack('v', 0);             // file comment length
-		$cdrec .= pack('v', 0);             // disk number start
-		$cdrec .= pack('v', 0);             // internal file attributes
-		$cdrec .= pack('V', $attrib);		// external file attributes
-		$cdrec .= pack('V', $this->old_offset); // relative offset of local header
-		$cdrec .= $name;
-
-		// Save to central directory
-		$this->ctrl_dir[] = $cdrec;
-
-		$this->old_offset = $this->datasec_len;
-	}
-
-	function file()
-	{
-		$ctrldir = implode('', $this->ctrl_dir);
-
-		return $ctrldir . $this->eof_cdh . 
-			pack('v', sizeof($this->ctrl_dir)) .	// total # of entries "on this disk"
-			pack('v', sizeof($this->ctrl_dir)) .	// total # of entries overall
-			pack('V', strlen($ctrldir)) .			// size of central dir
-			pack('V', $this->datasec_len) .			// offset to start of central dir
-			"\x00\x00";								// .zip file comment length
-	}
-	
-	function download($filename)
-	{
-		global $phpbb_root_path;
-
-		$mimetype = 'application/zip';
-
-		header('Pragma: no-cache');
-		header("Content-Type: $mimetype; name=\"$filename.zip\"");
-		header("Content-disposition: attachment; filename=$filename.zip");
-
-		$fp = fopen("store/$filename.zip", 'rb');
-		while ($buffer = fread($fp, 1024))
-		{
-			echo $buffer;
-		}
-		fclose($fp);
-	}
-}
-
-// Tar/tar.gz compression routine
-// Header/checksum creation derived from tarfile.pl, ? Tom Horsley, 1994
-class compress_tar extends compress 
-{
-	var $isgz = false;
-	var $isbz = false;
-	var $filename = '';
-	var $mode = '';
-	var $type = '';
-
-	function compress_tar($mode, $file, $type = '')
-	{
-		$type = (!$type) ? $file : $type;
-		$this->isgz = (strpos($type, '.tar.gz') !== false || strpos($type, '.tgz') !== false) ? true : false;
-		$this->isbz = (strpos($type, '.tar.bz2') !== false) ? true : false;
-
-		$this->mode = &$mode;
-		$this->file = &$file;
-		$this->type = &$type;
-		$this->open();
-	}
-
-	function extract($dst)
-	{
-		$fzread = ($this->isbz && function_exists('bzread')) ? 'bzread' : (($this->isgz && extension_loaded('zlib')) ? 'gzread' : 'fread');
-
-		// Run through the file and grab directory entries
-		while ($buffer = $fzread($this->fp, 512))
-		{
-			$tmp = unpack("A6magic", substr($buffer, 257, 6));
-
-			if (trim($tmp['magic']) == 'ustar')
-			{
-				$tmp = unpack("A100name", $buffer);
-				$filename = trim($tmp['name']);
-
-				$tmp = unpack("Atype", substr($buffer, 156, 1));
-				$filetype = (int) trim($tmp['type']);
-
-				if ($filetype == 5)
-				{
-					$mkdir_ary[] = "$dst$filename";
-				}
-				else if (dirname($filename) != '.')
-				{
-					$mkdir_alt_ary[] = $dst . dirname($filename);
-				}
-			}
-		}
-
-		$mkdir_alt_ary = array_unique($mkdir_alt_ary);
-
-		// Create the directory structure
-		if (sizeof($mkdir_ary) || sizeof($mkdir_alt_ary))
-		{
-			if (!sizeof($mkdir_ary) && sizeof($mkdir_alt_ary))
-			{
-				$mkdir_ary = $mkdir_alt_ary;
-				unset($mkdir_alt_ary);
-			}
-
-			sort($mkdir_ary);
-			foreach ($mkdir_ary as $dir)
-			{
-				if (!@mkdir($dir, 0777))
-				{
-					trigger_error("Could not create directory $dir");
-				}
-				@chmod("$dir", 0777);
-			}
-		}
-
-		// If this is a .bz2 we need to close and re-open the file in order
-		// to reset the file pointer since we cannot apparently rewind it
-		if ($this->isbz)
-		{
-			$this->close();
-			$this->open();
-		}
-		else
-		{
-			fseek($this->fp, 0);
-		}
-
-		// Write out the files
-		$size = 0;
-		while ($buffer = $fzread($this->fp, 512))
-		{
-			$tmp = unpack("A6magic", substr($buffer, 257, 6));
-
-			if (trim($tmp['magic']) == 'ustar')
-			{
-				$tmp = unpack("A100name", $buffer);
-				$filename = trim($tmp['name']);
-
-				$tmp = unpack("Atype", substr($buffer, 156, 1));
-				$filetype = (int) trim($tmp['type']);
-
-				if ($filetype == 0 || $filetype == "\0")
-				{
-					$tmp = unpack("A12size", substr($buffer, 124, 12));
-					$filesize = octdec((int) trim($tmp['size']));
-
-					if (!($fp = fopen("$dst$filename", 'wb')))
-					{
-						trigger_error("Could create file $filename");
-					}
-					@chmod("$dst$filename", 0777);
-
-					$size = 0;
-					continue;
-				}
-			}
-
-			$size += 512;
-			$length = ($size > $filesize) ? 512 - ($size - $filesize) : 512;
-
-			$tmp = unpack("A512data", $buffer);
-
-			fwrite($fp, (string) $tmp['data'], $length);
-			unset($buffer);
-		}
-	}
-
-	function close()
-	{
-		$fzclose = ($this->isbz && function_exists('bzclose')) ? 'bzclose' : (($this->isgz && extension_loaded('zlib')) ? 'gzclose' : 'fclose');
-		$fzclose($this->fp);
-	}
-
-	function data($name, $data, $mtime = false, $is_dir = false)
-	{
-		$fzwrite = 	($this->isbz && function_exists('bzwrite')) ? 'bzwrite' : (($this->isgz && extension_loaded('zlib')) ? 'gzwrite' : 'fwrite');
-
-		$mode = ($is_dir) ? '493' : '436';
-		$mtime = (!$mtime) ? time() : $mtime;
-		$filesize = ($is_dir) ? 0 : strlen($data);
-		$typeflag = ($is_dir) ? '5' : '';
-
-		$header = '';
-		$header .= pack("a100", $name);
-		$header .= pack("a8", sprintf("%07o", $mode));
-		$header .= pack("a8", sprintf("%07o", 0));
-		$header .= pack("a8", sprintf("%07o", 0));
-		$header .= pack("a12", sprintf("%011o", $filesize));
-		$header .= pack("a12", sprintf("%011o", $mtime));
-		$header .= '        ';
-		$header .= pack("a", $typeflag);
-		$header .= pack("a100", '');
-		$header .= 'ustar';
-		$header .= pack("x");
-		$header .= '00';
-		$header .= pack("x247");
-
-		// Checksum
-		$checksum = 0;
-		for ($i = 0; $i < 512; $i++)
-		{
-			$b = unpack("c1char", substr($header, $i, 1));
-			$checksum += $b['char'];
-		}
-		$header = substr_replace($header, pack("a8",sprintf("%07o", $checksum)), 148, 8);
-
-		$fzwrite($this->fp, $header);
-
-		$i = 0;
-		// Read the data 512 bytes at a time and write it out
-		while ($buffer = substr($data, $i, 512))
-		{
-			$fzwrite($this->fp, pack("a512", $buffer));
-			$i += 512;
-		}
-		unset($data);
-	}
-
-	function open()
-	{
-		$fzopen = ($this->isbz && function_exists('bzopen')) ? 'bzopen' : (($this->isgz && extension_loaded('zlib')) ? 'gzopen' : 'fopen');
-		return $this->fp = @$fzopen($this->file, $this->mode . 'b');
-	}
-	
-	function download($filename)
-	{
-		switch ($this->type)
-		{
-			case 'tar':
-				$mimetype = 'application/x-tar';
-				break;
-
-			case 'tar.gz':
-				$mimetype = 'application/x-gzip';
-				break;
-
-			case 'tar.bz2':
-				$mimetype = 'application/x-bzip2';
-				break;
-			
-			default:
-				$mimetype = 'application/octet-stream';
-				break;
-		}
-
-		header('Pragma: no-cache');
-		header("Content-Type: $mimetype; name=\"$filename.$this->type\"");
-		header("Content-disposition: attachment; filename=$filename.$this->type");
-
-		$fp = fopen("store/$filename.$this->type", 'rb');
-		while ($buffer = fread($fp, 1024))
-		{
-			echo $buffer;
-		}
-		fclose($fp);
-	}
-}
-
-?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/functions_display.php
===================================================================
--- cms/trunk/includes/forums/functions_display.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_display.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -52,7 +52,7 @@
 	}
 
 	// Display list of active topics for this category?
-	$show_active = (isset($root_data['forum_flags']) && $root_data['forum_flags'] & 16) ? true : false;
+	$show_active = (isset($root_data['forum_flags']) && ($root_data['forum_flags'] & FORUM_FLAG_ACTIVE_TOPICS)) ? true : false;
 
 	if ($_CLASS['core_user']->is_user &&  $config['load_db_lastread'])
 	{
@@ -110,7 +110,7 @@
 		}
 
 		// Display active topics from this forum?
-		if ($show_active && $row['forum_type'] == FORUM_POST && $_CLASS['auth']->acl_get('f_read', $row['forum_id']) && ($row['forum_flags'] & 16))
+		if ($show_active && $row['forum_type'] == FORUM_POST && $_CLASS['auth']->acl_get('f_read', $row['forum_id']) && ($row['forum_flags'] & FORUM_FLAG_ACTIVE_TOPICS))
 		{
 			if (!isset($active_forum_ary['forum_topics']))
 			{
@@ -306,7 +306,7 @@
 		}
 
 		$l_post_click_count = ($row['forum_type'] == FORUM_LINK) ? 'CLICKS' : 'POSTS';
-		$post_click_count = ($row['forum_type'] != FORUM_LINK || $row['forum_flags'] & 1) ? $row['forum_posts'] : '';
+		$post_click_count = ($row['forum_type'] != FORUM_LINK || $row['forum_flags'] & FORUM_FLAG_LINK_TRACK) ? $row['forum_posts'] : '';
 
 		$_CLASS['core_template']->assign_vars_array('forumrow', array(
 			'S_IS_CAT'			=> false, 
@@ -335,7 +335,7 @@
 			
 			'U_LAST_POSTER'		=> $last_poster_url, 
 			'U_LAST_POST'		=> $last_post_url, 
-			'U_VIEWFORUM'		=> ($row['forum_type'] != FORUM_LINK || $row['forum_flags'] & 1) ? generate_link('forums&amp;file=viewforum&amp;f=' . $row['forum_id']) : $row['forum_link'])
+			'U_VIEWFORUM'		=> ($row['forum_type'] != FORUM_LINK || $row['forum_flags'] & FORUM_FLAG_LINK_TRACK) ? generate_link('forums&amp;file=viewforum&amp;f=' . $row['forum_id']) : $row['forum_link'])
 		);
 	}
 
@@ -589,7 +589,7 @@
 				$folder = 'topic_read';
 				$folder_new = 'topic_unread';
 
-				if ($config['hot_threshold'] && $replies >= $config['hot_threshold'])
+				if ($config['hot_threshold'] && $replies >= $config['hot_threshold'] && $topic_row['topic_status'] != ITEM_LOCKED)
 				{
 					$folder .= '_hot';
 					$folder_new .= '_hot';
@@ -633,9 +633,49 @@
 	{
 		$update_count = array();
 	}
+	// Look for missing attachment informations...
+	$attach_ids = array();
+	foreach ($attachment_data as $pos => $attachment)
+	{
+		// If is_orphan is set, we need to retrieve the attachments again...
+		if (!isset($attachment['extension']) && !isset($attachment['physical_filename']))
+		{
+			$attach_ids[(int) $attachment['attach_id']] = $pos;
+		}
+	}
+
+	if (sizeof($attach_ids))
+	{
+		global $db;
+
+		$attachment_data = array();
+
+		$sql = 'SELECT *
+			FROM ' . FORUMS_ATTACHMENTS_TABLE . '
+			WHERE attach_id IN (' . implode(', ', array_keys($attach_ids)) . ')';
+		$result = $_CLASS['core_db']->query($sql);
+
+		while ($row = $db->sql_fetchrow($result))
+		{
+			if (!isset($attach_ids[$row['attach_id']]))
+			{
+				continue;
+			}
+
+			$attachment_data[$attach_ids[$row['attach_id']]] = $row;
+		}
+		$_CLASS['core_db']->free_result($result);
+
+		ksort($attachment_data);
+	}
 
 	foreach ($attachment_data as $attachment)
 	{
+		if (!sizeof($attachment))
+		{
+			continue;
+		}
+
 		$attachment['extension'] = strtolower(trim($attachment['extension']));
 
 		if (!extension_allowed($forum_id, $attachment['extension'], $extensions))

Deleted: cms/trunk/includes/forums/functions_jabber.php
===================================================================
--- cms/trunk/includes/forums/functions_jabber.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_jabber.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,1083 +0,0 @@
-<?php
-/** 
-*
-* @package phpBB3
-* @version $Id: functions_jabber.php,v 1.11 2005/04/10 18:06:59 acydburn Exp $
-* @copyright (c) 2005 phpBB Group 
-* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
-*
-*/
-
-/**
-* @package phpBB3
-*
-*	Class.Jabber.PHP v0.4
-*	(c) 2002 Carlo "Gossip" Zottmann
-*	http://phpjabber.g-blog.net *** gossip at jabber.g-blog.net
-*
-*	The FULL documentation and examples for this software can be found at
-*	http://phpjabber.g-blog.net (not many doc comments in here, sorry)
-*
-*	last modified: 27.04.2003 13:01:53 CET
-*
-* 
-*	Modified by psoTFX, phpBB Group, 2003.
-*	Removed functions/support not critical to integration with phpBB
-*
-*/
-class jabber
-{
-	var $server;
-	var $port;
-	var $username;
-	var $password;
-	var $resource;
-	var $jid;
-
-	var $connection;
-	var $delay_disconnect;
-
-	var $stream_id;
-	var $roster;
-
-	var $iq_sleep_timer;
-	var $last_ping_time;
-
-	var $packet_queue;
-	var $subscription_queue;
-
-	var $iq_version_name;
-	var $iq_version_os;
-	var $iq_version_version;
-
-	var $error_codes;
-
-	var $connected;
-	var $keep_alive_id;
-	var $returned_keep_alive;
-	var $txnid;
-
-	var $connector;
-
-	function jabber()
-	{
-		$this->port					= '5222';
-		$this->resource				= NULL;
-		$this->packet_queue			= $this->subscription_queue = array();
-		$this->iq_sleep_timer		= $this->delay_disconnect = 1;
-
-		$this->returned_keep_alive	= true;
-		$this->txnid				= 0;
-
-		$this->iq_version_name		= "Class.Jabber.PHP -- http://phpjabber.g-blog.net -- by Carlo 'Gossip' Zottmann, gossip at jabber.g-blog.net";
-		$this->iq_version_version	= '0.4';
-		$this->iq_version_os		= $_SERVER['SERVER_SOFTWARE'];
-
-		$this->error_codes			= array(
-			400 => 'Bad Request',
-			401 => 'Unauthorized',
-			402 => 'Payment Required',
-			403 => 'Forbidden',
-			404 => 'Not Found',
-			405 => 'Not Allowed',
-			406 => 'Not Acceptable',
-			407 => 'Registration Required',
-			408 => 'Request Timeout',
-			409 => 'Conflict',
-			500 => 'Internal Server Error',
-			501 => 'Not Implemented',
-			502 => 'Remove Server Error',
-			503 => 'Service Unavailable',
-			504 => 'Remove Server Timeout',
-			510 => 'Disconnected'
-		);
-	}
-
-	function connect()
-	{
-		$this->connector = new cjp_standard_connector;
-
-		if ($this->connector->open_socket($this->server, $this->port))
-		{
-			$this->send_packet("<?xml version='1.0' encoding='UTF-8' ?" . ">\n");
-			$this->send_packet("<stream:stream to='{$this->server}' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams'>\n");
-
-			sleep(2);
-
-			if ($this->_check_connected())
-			{
-				$this->connected = true; // Nathan Fritz
-				return true;
-			}
-			else
-			{
-				return false;
-			}
-		}
-		else
-		{
-			return false;
-		}
-	}
-
-	function disconnect()
-	{
-		if (is_int($this->delay_disconnect))
-		{
-			sleep($this->delay_disconnect);
-		}
-
-		$this->send_packet('</stream:stream>');
-		$this->connector->close_socket();
-	}
-
-	function cruise_control($seconds = -1)
-	{
-		$count = 0;
-
-		while ($count != $seconds)
-		{
-			$this->listen();
-
-			do
-			{
-				$packet = $this->get_first_from_queue();
-
-				if ($packet)
-				{
-					$this->call_handler($packet);
-				}
-
-			}
-			while (sizeof($this->packet_queue) > 1);
-
-			$count += 0.25;
-			usleep(250000);
-			
-			if ($this->last_ping_time != date('H:i'))
-			{
-				// Modified by Nathan Fritz
-				if ($this->returned_keep_alive == false)
-				{
-					$this->connected = false;
-					//EVENT: Disconnected
-				}
-
-				$this->returned_keep_alive = FALSE;
-				$this->keep_alive_id = 'keep_alive_' . time();
-				$this->send_packet("<iq id='{$this->keep_alive_id}'/>", 'cruise_control');
-				$this->last_ping_time = date('H:i');
-			}
-		}
-
-		return true;
-	}
-
-	function send_auth()
-	{
-		$this->auth_id	= 'auth_' . md5(time() . $_SERVER['REMOTE_ADDR']);
-		$this->jid		= "{$this->username}@{$this->server}/{$this->resource}";
-
-		// request available authentication methods
-		$payload	= "<username>{$this->username}</username>";
-		$packet		= $this->send_iq(NULL, 'get', $this->auth_id, 'jabber:iq:auth', $payload);
-
-		// was a result returned?
-		if ($this->get_info_from_iq_type($packet) == 'result' && $this->get_info_from_iq_id($packet) == $this->auth_id)
-		{
-			if (@function_exists('mhash') && isset($packet['iq']['#']['query'][0]['#']['sequence'][0]['#']) && isset($packet['iq']['#']['query'][0]['#']['token'][0]['#']))
-			{
-				// auth_0k
-				return $this->_sendauth_ok($packet['iq']['#']['query'][0]['#']['token'][0]['#'], $packet['iq']['#']['query'][0]['#']['sequence'][0]['#']);
-			}
-			elseif (@function_exists('mhash') && isset($packet['iq']['#']['query'][0]['#']['digest']))
-			{
-				// digest
-				return $this->_sendauth_digest();
-			}
-			elseif ($packet['iq']['#']['query'][0]['#']['password'])
-			{
-				// plain text
-				return $this->_sendauth_plaintext();
-			}
-		}
-		else
-		{
-			// no result returned
-			return false;
-		}
-	}
-
-	function account_registration($reg_email = NULL, $reg_name = NULL)
-	{
-		$packet = $this->send_iq($this->server, 'get', 'reg_01', 'jabber:iq:register');
-
-		if ($packet)
-		{
-			$key = $this->get_info_from_iq_key($packet); // just in case a key was passed back from the server
-			unset($packet);
-
-			$payload = "<username>{$this->username}</username>
-						<password>{$this->password}</password>
-						<email>$reg_email</email>
-						<name>$reg_name</name>\n";
-
-			$payload .= ($key) ? "<key>$key</key>\n" : '';
-
-			$packet = $this->send_iq($this->server, 'set', 'reg_01', 'jabber:iq:register', $payload);
-
-			if ($this->get_info_from_iq_type($packet) == 'result')
-			{
-				$return_code = (isset($packet['iq']['#']['query'][0]['#']['registered'][0]['#'])) ? 1 : 2;
-				$this->jid = ($this->resource) ? "{$this->username}@{$this->server}/{$this->resource}" : "{$this->username}@{$this->server}";
-			}
-			elseif ($this->get_info_from_iq_type($packet) == 'error' && isset($packet['iq']['#']['error'][0]['#']))
-			{
-				// "conflict" error, i.e. already registered
-				if ($packet['iq']['#']['error'][0]['@']['code'] == '409')
-				{
-					$return_code = 1;
-				}
-				else
-				{
-					$return_code = 'Error ' . $packet['iq']['#']['error'][0]['@']['code'] . ': ' . $packet['iq']['#']['error'][0]['#'];
-				}
-			}
-
-			return $return_code;
-		}
-		else
-		{
-			return 3;
-		}
-	}
-
-	function change_password($new_password)
-	{
-		$packet = $this->send_iq($this->server, 'get', 'A0', 'jabber:iq:register');
-
-		if ($packet)
-		{
-			$key = $this->get_info_from_iq_key($packet); // just in case a key was passed back from the server
-			unset($packet);
-
-			$payload = "<username>{$this->username}</username>
-						<password>{$new_password}</password>\n";
-			$payload .= ($key) ? "<key>$key</key>\n" : '';
-
-			$packet = $this->send_iq($this->server, 'set', 'A0', 'jabber:iq:register', $payload);
-
-			if ($this->get_info_from_iq_type($packet) == 'result')
-			{
-				$return_code = (isset($packet['iq']['#']['query'][0]['#']['registered'][0]['#'])) ? 1 : 2;
-			}
-			elseif ($this->get_info_from_iq_type($packet) == 'error' && isset($packet['iq']['#']['error'][0]['#']))
-			{
-				// "conflict" error, i.e. already registered
-				if ($packet['iq']['#']['error'][0]['@']['code'] == '409')
-				{
-					$return_code = 1;
-				}
-				else
-				{
-					$return_code = 'Error ' . $packet['iq']['#']['error'][0]['@']['code'] . ': ' . $packet['iq']['#']['error'][0]['#'];
-				}
-			}
-
-			return $return_code;
-		}
-		else
-		{
-			return 3;
-		}
-	}
-
-	function send_packet($xml)
-	{
-		$xml = trim($xml);
-
-		return ($this->connector->write_to_socket($xml)) ? true : false;
-	}
-
-	// get the transport registration fields
-	// method written by Steve Blinch, http://www.blitzaffe.com 
-	function transport_registration_details($transport)
-	{
-		$this->txnid++;
-		$packet = $this->send_iq($transport, 'get', "reg_{$this->txnid}", "jabber:iq:register", NULL, $this->jid);
-
-		if ($packet)
-		{
-			$res = array();
-
-			foreach ($packet['iq']['#']['query'][0]['#'] as $element => $data)
-			{
-				if ($element != 'instructions' && $element != 'key')
-				{
-					$res[] = $element;
-				}
-			}
-
-			return $res;
-		}
-		else
-		{
-			return 3;
-		}
-	}
-
-	// register with the transport
-	// method written by Steve Blinch, http://www.blitzaffe.com 
-	function transport_registration($transport, $details)
-	{
-		$this->txnid++;
-		$packet = $this->send_iq($transport, 'get', "reg_{$this->txnid}", "jabber:iq:register", NULL, $this->jid);
-
-		if ($packet)
-		{
-			$key = $this->get_info_from_iq_key($packet); // just in case a key was passed back from the server
-			unset($packet);
-		
-			$payload = ($key) ? "<key>$key</key>\n" : '';
-			foreach ($details as $element => $value)
-			{
-				$payload .= "<$element>$value</$element>\n";
-			}
-		
-			$packet = $this->send_iq($transport, 'set', "reg_{$this->txnid}", "jabber:iq:register", $payload);
-		
-			if ($this->get_info_from_iq_type($packet) == 'result')
-			{
-				if (isset($packet['iq']['#']['query'][0]['#']['registered'][0]['#']))
-				{
-					$return_code = 1;
-				}
-				else
-				{
-					$return_code = 2;
-				}
-			}
-			elseif ($this->get_info_from_iq_type($packet) == 'error')
-			{
-				if (isset($packet['iq']['#']['error'][0]['#']))
-				{
-					$return_code = "Error " . $packet['iq']['#']['error'][0]['@']['code'] . ": " . $packet['iq']['#']['error'][0]['#'];
-					// ERROR: TransportRegistration()
-				}
-			}
-
-			return $return_code;
-		}
-		else
-		{
-			return 3;
-		}
-	}
-
-	function listen()
-	{
-		$incoming = '';
-
-		while ($line = $this->connector->read_from_socket(4096))
-		{
-			$incoming .= $line;
-		}
-
-		$incoming = trim($incoming);
-
-		if ($incoming != '')
-		{
-			$temp = $this->_split_incoming($incoming);
-
-			for ($a = 0, $size = sizeof($temp); $a < $size; $a++)
-			{
-				$this->packet_queue[] = $this->xmlize($temp[$a]);
-			}
-		}
-
-		return true;
-	}
-
-	function strip_jid($jid = NULL)
-	{
-		preg_match('#(.*)\/(.*)#Ui', $jid, $temp);
-		return ($temp[1] != '') ? $temp[1] : $jid;
-	}
-
-	function send_message($to, $type = 'normal', $id = NULL, $content = NULL, $payload = NULL)
-	{
-		if ($to && is_array($content))
-		{
-			if (!$id)
-			{
-				$id = $type . '_' . time();
-			}
-
-			$content = $this->_array_htmlspecialchars($content);
-
-			$xml = "<message to='$to' type='$type' id='$id'>\n";
-
-			if (isset($content['subject']) && $content['subject'])
-			{
-				$xml .= '<subject>' . $content['subject'] . "</subject>\n";
-			}
-
-			if (isset($content['thread']) && $content['thread'])
-			{
-				$xml .= '<thread>' . $content['thread'] . "</thread>\n";
-			}
-
-			$xml .= '<body>' . $content['body'] . "</body>\n";
-			$xml .= $payload;
-			$xml .= "</message>\n";
-
-			if ($this->send_packet($xml))
-			{
-				return true;
-			}
-			else
-			{
-				return false;
-			}
-		}
-		else
-		{
-			return false;
-		}
-	}
-
-	function send_presence($type = NULL, $to = NULL, $status = NULL, $show = NULL, $priority = NULL)
-	{
-		$xml = '<presence';
-		$xml .= ($to) ? " to='$to'" : '';
-		$xml .= ($type) ? " type='$type'" : '';
-		$xml .= ($status || $show || $priority) ? ">\n" : " />\n";
-
-		$xml .= ($status) ? " <status>$status</status>\n" : '';
-		$xml .= ($show) ? "	<show>$show</show>\n" : '';
-		$xml .= ($priority) ? "	<priority>$priority</priority>\n" : '';
-
-		$xml .= ($status || $show || $priority) ? "</presence>\n" : '';
-
-		return ($this->send_packet($xml)) ? true : false;
-	}
-
-	function send_error($to, $id = NULL, $error_number, $error_message = NULL)
-	{
-		$xml = "<iq type='error' to='$to'";
-		$xml .= ($id) ? " id='$id'" : '';
-		$xml .= ">\n";
-		$xml .= "	<error code='$error_number'>";
-		$xml .= ($error_message) ? $error_message : $this->error_codes[$error_number];
-		$xml .= "</error>\n";
-		$xml .= '</iq>';
-
-		$this->send_packet($xml);
-	}
-
-	function get_first_from_queue()
-	{
-		return array_shift($this->packet_queue);
-	}
-
-	function get_from_queue_by_id($packet_type, $id)
-	{
-		$found_message = false;
-
-		foreach ($this->packet_queue as $key => $value)
-		{
-			if ($value[$packet_type]['@']['id'] == $id)
-			{
-				$found_message = $value;
-				unset($this->packet_queue[$key]);
-
-				break;
-			}
-		}
-
-		return (is_array($found_message)) ? $found_message : false;
-	}
-
-	function call_handler($packet = NULL)
-	{
-		$packet_type = $this->_get_packet_type($packet);
-
-		if ($packet_type == 'message')
-		{
-			$type		= $packet['message']['@']['type'];
-			$type		= ($type != '') ? $type : 'normal';
-			$funcmeth	= "handler_message_$type";
-		}
-		elseif ($packet_type == 'iq')
-		{
-			$namespace	= $packet['iq']['#']['query'][0]['@']['xmlns'];
-			$namespace	= str_replace(':', '_', $namespace);
-			$funcmeth	= "handler_iq_$namespace";
-		}
-		elseif ($packet_type == 'presence')
-		{
-			$type		= $packet['presence']['@']['type'];
-			$type		= ($type != '') ? $type : 'available';
-			$funcmeth	= "handler_presence_$type";
-		}
-
-		if ($funcmeth != '')
-		{
-			if (function_exists($funcmeth))
-			{
-				call_user_func($funcmeth, $packet);
-			}
-			elseif (method_exists($this, $funcmeth))
-			{
-				call_user_func(array(&$this, $funcmeth), $packet);
-			}
-			else
-			{
-				$this->handler_not_implemented($packet);
-			}
-		}
-	}
-
-	function send_iq($to = NULL, $type = 'get', $id = NULL, $xmlns = NULL, $payload = NULL, $from = NULL)
-	{
-		if (!preg_match('#^(get|set|result|error)$#', $type))
-		{
-			unset($type);
-
-			return false;
-		}
-		else if ($id && $xmlns)
-		{
-			$xml = "<iq type='$type' id='$id'";
-			$xml .= ($to) ? " to='$to'" : '';
-			$xml .= ($from) ? " from='$from'" : '';
-			$xml .= ">
-						<query xmlns='$xmlns'>
-							$payload
-						</query>
-					</iq>";
-
-			$this->send_packet($xml);
-			sleep($this->iq_sleep_timer);
-			$this->listen();
-
-			return (preg_match('#^(get|set)$#', $type)) ? $this->get_from_queue_by_id('iq', $id) : true;
-		}
-		else
-		{
-			return false;
-		}
-	}
-
-
-	// ======================================================================
-	// private methods
-	// ======================================================================
-
-	function _sendauth_ok($zerok_token, $zerok_sequence)
-	{
-		// initial hash of password
-		$zerok_hash = @mhash(MHASH_SHA1, $this->password);
-		$zerok_hash = bin2hex($zerok_hash);
-
-		// sequence 0: hash of hashed-password and token
-		$zerok_hash = @mhash(MHASH_SHA1, $zerok_hash . $zerok_token);
-		$zerok_hash = bin2hex($zerok_hash);
-
-		// repeat as often as needed
-		for ($a = 0; $a < $zerok_sequence; $a++)
-		{
-			$zerok_hash = @mhash(MHASH_SHA1, $zerok_hash);
-			$zerok_hash = bin2hex($zerok_hash);
-		}
-
-		$payload = "<username>{$this->username}</username>
-					<hash>$zerok_hash</hash>
-					<resource>{$this->resource}</resource>";
-
-		$packet = $this->send_iq(NULL, 'set', $this->auth_id, 'jabber:iq:auth', $payload);
-
-		// was a result returned?
-		return ($this->get_info_from_iq_type($packet) == 'result' && $this->get_info_from_iq_id($packet) == $this->auth_id) ? true : false;
-	}
-
-	function _sendauth_digest()
-	{
-		$payload = "<username>{$this->username}</username>
-					<resource>{$this->resource}</resource>
-					<digest>" . bin2hex(mhash(MHASH_SHA1, $this->stream_id . $this->password)) . "</digest>";
-
-		$packet = $this->send_iq(NULL, 'set', $this->auth_id, 'jabber:iq:auth', $payload);
-
-		// was a result returned?
-		return ($this->get_info_from_iq_type($packet) == 'result' && $this->get_info_from_iq_id($packet) == $this->auth_id) ? true : false;
-	}
-
-	function _sendauth_plaintext()
-	{
-		$payload = "<username>{$this->username}</username>
-					<password>{$this->password}</password>
-					<resource>{$this->resource}</resource>";
-
-		$packet = $this->send_iq(NULL, 'set', $this->auth_id, 'jabber:iq:auth', $payload);
-
-		// was a result returned?
-		return ($this->get_info_from_iq_type($packet) == 'result' && $this->get_info_from_iq_id($packet) == $this->auth_id) ? true : false;
-	}
-
-	function _listen_incoming()
-	{
-		$incoming = '';
-		
-		while ($line = $this->connector->read_from_socket(4096))
-		{
-			$incoming .= $line;
-		}
-
-		$incoming = trim($incoming);
-		return $this->xmlize($incoming);
-	}
-
-	function _check_connected()
-	{
-		$incoming_array = $this->_listen_incoming();
-
-		if (is_array($incoming_array))
-		{
-			if ($incoming_array['stream:stream']['@']['from'] == $this->server
-				&& $incoming_array['stream:stream']['@']['xmlns'] == 'jabber:client'
-				&& $incoming_array['stream:stream']['@']['xmlns:stream'] == 'http://etherx.jabber.org/streams')
-			{
-				$this->stream_id = $incoming_array['stream:stream']['@']['id'];
-
-				return true;
-			}
-			else
-			{
-				return false;
-			}
-		}
-		else
-		{
-			return false;
-		}
-	}
-
-	function _split_incoming($incoming)
-	{
-		$temp = preg_split('#<(message|iq|presence|stream)#', $incoming, -1, PREG_SPLIT_DELIM_CAPTURE);
-		$array = array();
-
-		for ($a = 1; $a < sizeof($temp); $a = $a + 2)
-		{
-			$array[] = '<' . $temp[$a] . $temp[($a + 1)];
-		}
-
-		return $array;
-	}
-
-	function _get_packet_type($packet = NULL)
-	{
-		if (is_array($packet))
-		{
-			reset($packet);
-			$packet_type = key($packet);
-		}
-
-		return ($packet_type) ? $packet_type : false;
-	}
-
-	// _array_htmlspecialchars()
-	// applies htmlspecialchars() to all values in an array
-	function _array_htmlspecialchars(&$array)
-	{
-		if (is_array($array))
-		{
-			foreach ($array as $k => $v)
-			{
-				$v = (is_array($v)) ? $this->_array_htmlspecialchars($v) : htmlspecialchars($v);
-			}
-		}
-
-		return $array;
-	}
-
-	// ======================================================================
-	// <message/> parsers
-	// ======================================================================
-
-	function get_info_from_message_from($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['message']['@']['from'] : false;
-	}
-
-	function get_info_from_message_type($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['message']['@']['type'] : false;
-	}
-
-	function get_info_from_message_id($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['message']['@']['id'] : false;
-	}
-
-	function get_info_from_message_thread($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['message']['#']['thread'][0]['#'] : false;
-	}
-
-	function get_info_from_message_subject($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['message']['#']['subject'][0]['#'] : false;
-	}
-
-	function get_info_from_message_body($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['message']['#']['body'][0]['#'] : false;
-	}
-
-	function get_info_from_message_error($packet = NULL)
-	{
-		$error = preg_replace('#^\/$#', '', ($packet['message']['#']['error'][0]['@']['code'] . '/' . $packet['message']['#']['error'][0]['#']));
-		return (is_array($packet)) ? $error : false;
-	}
-
-	// ======================================================================
-	// <iq/> parsers
-	// ======================================================================
-
-	function get_info_from_iq_from($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['iq']['@']['from'] : false;
-	}
-
-	function get_info_from_iq_type($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['iq']['@']['type'] : false;
-	}
-
-	function get_info_from_iq_id($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['iq']['@']['id'] : false;
-	}
-
-	function get_info_from_iq_key($packet = NULL)
-	{
-		return (is_array($packet)) ? $packet['iq']['#']['query'][0]['#']['key'][0]['#'] : false;
-	}
-
-	function get_info_from_iq_error($packet = NULL)
-	{
-		$error = preg_replace('#^\/$#', '', ($packet['iq']['#']['error'][0]['@']['code'] . '/' . $packet['iq']['#']['error'][0]['#']));
-		return (is_array($packet)) ? $error : false;
-	}
-
-	// ======================================================================
-	// <message/> handlers
-	// ======================================================================
-
-	function handler_message_normal($packet)
-	{
-		$from = $packet['message']['@']['from'];
-	}
-
-	function handler_message_error($packet)
-	{
-		$from = $packet['message']['@']['from'];
-	}
-
-	// ======================================================================
-	// <iq/> handlers
-	// ======================================================================
-
-	// simple client authentication
-	function handler_iq_jabber_iq_auth($packet)
-	{
-		$from	= $this->get_info_from_iq_from($packet);
-		$id		= $this->get_info_from_iq_id($packet);
-
-		$this->send_error($from, $id, 501);
-	}
-
-	// method for interactive registration
-	function handler_iq_jabber_iq_register($packet)
-	{
-		$from	= $this->get_info_from_iq_from($packet);
-		$id		= $this->get_info_from_iq_id($packet);
-
-		$this->send_error($from, $id, 501);
-	}
-
-	// keepalive method, added by Nathan Fritz
-	function handler_iq_($packet)
-	{
-		if ($this->keep_alive_id == $this->get_info_from_iq_id($packet))
-		{
-			$this->returned_keep_alive = true;
-		}
-	}
-	
-	// ======================================================================
-	// Generic handlers
-	// ======================================================================
-
-	// Generic handler for unsupported requests
-	function handler_not_implemented($packet)
-	{
-		$packet_type	= $this->_get_packet_type($packet);
-		$from			= call_user_func(array(&$this, 'get_info_from_' . strtolower($packet_type) . '_from'), $packet);
-		$id				= call_user_func(array(&$this, 'get_info_from_' . strtolower($packet_type) . '_id'), $packet);
-
-		$this->send_error($from, $id, 501);
-	}
-
-	// Third party code
-	// m at d pr0ps to the coders ;)
-
-	// xmlize()
-	// (c) Hans Anderson / http://www.hansanderson.com/php/xml/
-	function xmlize($data)
-	{
-		$vals = $index = $array = array();
-		$parser = @xml_parser_create();
-		@xml_parser_set_option($parser, XML_OPTION_CASE_FOLDING, 0);
-		@xml_parser_set_option($parser, XML_OPTION_SKIP_WHITE, 1);
-		@xml_parse_into_struct($parser, $data, $vals, $index);
-		@xml_parser_free($parser);
-
-		$i = 0;
-
-		$tagname = $vals[$i]['tag'];
-		$array[$tagname]['@'] = $vals[$i]['attributes'];
-		$array[$tagname]['#'] = $this->_xml_depth($vals, $i);
-
-		return $array;
-	}
-
-	// _xml_depth()
-	// (c) Hans Anderson / http://www.hansanderson.com/php/xml/
-	function _xml_depth($vals, &$i)
-	{
-		$children = array();
-
-		if (isset($vals[$i]['value']) && $vals[$i]['value'])
-		{
-			array_push($children, trim($vals[$i]['value']));
-		}
-
-		while (++$i < sizeof($vals))
-		{
-			switch ($vals[$i]['type'])
-			{
-				case 'cdata':
-					array_push($children, trim($vals[$i]['value']));
-	 				break;
-
-				case 'complete':
-					$tagname = $vals[$i]['tag'];
-					$size = (isset($children[$tagname])) ? sizeof($children[$tagname]) : 0;
-					$children[$tagname][$size]['#'] = (isset($vals[$i]['value'])) ? trim($vals[$i]['value']) : '';
-					if (isset($vals[$i]['attributes']) && $vals[$i]['attributes'])
-					{
-						$children[$tagname][$size]['@'] = $vals[$i]['attributes'];
-					}
-					break;
-
-				case 'open':
-					$tagname = $vals[$i]['tag'];
-					$size = (isset($children[$tagname])) ? sizeof($children[$tagname]) : 0;
-					if ($vals[$i]['attributes'])
-					{
-						$children[$tagname][$size]['@'] = $vals[$i]['attributes'];
-						$children[$tagname][$size]['#'] = $this->_xml_depth($vals, $i);
-					}
-					else
-					{
-						$children[$tagname][$size]['#'] = $this->_xml_depth($vals, $i);
-					}
-					break;
-
-				case 'close':
-					return $children;
-					break;
-			}
-		}
-
-		return $children;
-	}
-
-	// traverse_xmlize()
-	// (c) acebone at f2s.com, a HUGE help!
-	function traverse_xmlize($array, $arr_name = 'array', $level = 0)
-	{
-		if ($level == 0)
-		{
-			echo '<pre>';
-		}
-
-		while (list($key, $val) = @each($array))
-		{
-			if (is_array($val))
-			{
-				$this->traverse_xmlize($val, $arr_name . '[' . $key . ']', $level + 1);
-			}
-			else
-			{
-				echo '$' . $arr_name . '[' . $key . '] = "' . $val . "\"\n";
-			}
-		}
-
-		if ($level == 0)
-		{
-			echo '</pre>';
-		}
-	}
-}
-
-/**
-* @package phpBB3
-* make_xml
-* Currently not in use
-*/
-class make_xml extends jabber
-{
-	var $nodes;
-
-	function make_xml()
-	{
-		$nodes = array();
-	}
-
-	function add_packet_details($string, $value = NULL)
-	{
-		if (preg_match('#\(([0-9]*)\)$#i', $string))
-		{
-			$string .= '/["#"]';
-		}
-
-		$temp = @explode('/', $string);
-
-		for ($a = 0, $size = sizeof($temp); $a < $size; $a++)
-		{
-			$temp[$a] = preg_replace('#^[@]{1}([a-z0-9_]*)$#i', '["@"]["\1"]', $temp[$a]);
-			$temp[$a] = preg_replace('#^([a-z0-9_]*)\(([0-9]*)\)$/i', '["\1"][\2]', $temp[$a]);
-			$temp[$a] = preg_replace('#^([a-z0-9_]*)$#i', '["\1"]', $temp[$a]);
-		}
-
-		$node = implode('', $temp);
-
-		// Yeahyeahyeah, I know it's ugly... get over it. ;)
-		echo '$this->nodes' . $node . ' = "' . htmlspecialchars($value) . '";<br/>';
-		eval('$this->nodes' . $node . ' = "' . htmlspecialchars($value) . '";');
-	}
-
-	function build_packet($array = NULL)
-	{
-		if (!$array)
-		{
-			$array = $this->nodes;
-		}
-
-		if (is_array($array))
-		{
-			array_multisort($array, SORT_ASC, SORT_STRING);
-
-			foreach ($array as $key => $value)
-			{
-				if (is_array($value) && $key == '@')
-				{
-					foreach ($value as $subkey => $subvalue)
-					{
-						$subvalue = htmlspecialchars($subvalue);
-						$text .= " $subkey='$subvalue'";
-					}
-
-					$text .= ">\n";
-
-				}
-				elseif ($key == '#')
-				{
-					$text .= htmlspecialchars($value);
-				}
-				elseif (is_array($value))
-				{
-					for ($a = 0, $size = sizeof($value); $a < $size; $a++)
-					{
-						$text .= "<$key";
-
-						if (!$this->_preg_grep_keys('#^@#', $value[$a]))
-						{
-							$text .= '>';
-						}
-
-						$text .= $this->build_packet($value[$a]);
-						$text .= "</$key>\n";
-					}
-				}
-				else
-				{
-					$value = htmlspecialchars($value);
-					$text .= "<$key>$value</$key>\n";
-				}
-			}
-
-			return $text;
-		}
-	}
-
-	function _preg_grep_keys($pattern, $array)
-	{
-		foreach ($array as $key => $val)
-		{
-			if (preg_match($pattern, $key))
-			{
-				$newarray[$key] = $val;
-			}
-		}
-		return (is_array($newarray)) ? $newarray : false;
-	}
-}
-
-/**
-* @package phpBB3
-* connector
-*/
-class cjp_standard_connector
-{
-	var $active_socket;
-
-	function open_socket($server, $port)
-	{
-		if ($this->active_socket = @fsockopen($server, $port, $err, $err2, 5))
-		{
-			@socket_set_blocking($this->active_socket, 0);
-			@socket_set_timeout($this->active_socket, 31536000);
-
-			return true;
-		}
-		else
-		{
-			return false;
-		}
-	}
-
-	function close_socket()
-	{
-		return @fclose($this->active_socket);
-	}
-
-	function write_to_socket($data)
-	{
-		return @fwrite($this->active_socket, $data);
-	}
-
-	function read_from_socket($chunksize)
-	{
-		$buffer = stripslashes(@fread($this->active_socket, $chunksize));
-		//@set_magic_quotes_runtime(get_magic_quotes_gpc());
-
-		return $buffer;
-	}
-}
-
-?>
\ No newline at end of file

Deleted: cms/trunk/includes/forums/functions_module.php
===================================================================
--- cms/trunk/includes/forums/functions_module.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_module.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,217 +0,0 @@
-<?
-// -------------------------------------------------------------------------
-//
-// $Id: functions_module.php,v 1.1 2004/10/31 13:26:38 psotfx Exp $
-//
-// FILENAME  : functions_module.php
-// STARTED   : Sat Oct 30 2004
-// COPYRIGHT : ? 2004 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ]
-//
-// -------------------------------------------------------------------------
-
-class module
-{
-	var $id = 0;
-	var $filename;
-	var $mode;
-	var $module_ary = array();
-	var $module_y_ary = array();
-	var $module_url = '';
-	var $module_path = '';
-	var $acl_forum_id = false;
-
-	// Private methods, should not be overwritten
-	function create($module_type, $module_path, $module_url, $selected_module = false)
-	{
-		global $template, $auth, $db, $user, $config, $phpbb_root_path, $phpEx;
-
-		$active = $category = false;
-		$this->module_url = htmlspecialchars($module_url);
-		// TODO Do some checking here?
-		$this->module_path = $module_path;
-
-		if (file_exists($phpbb_root_path . 'cache/' . $module_type . '_modules.'.$phpEx))
-		{
-			include($phpbb_root_path . 'cache/' . $module_type . '_modules.'.$phpEx);
-		}
-
-		$sql = 'SELECT *
-			FROM ' . MODULES_TABLE . "
-			WHERE module_type = '" . $db->sql_escape($module_type) . "'
-				AND module_enabled = 1
-				$sql_and
-			ORDER BY left_id";
-		$result = $db->sql_query($sql);
-
-		$padding = $i = 0;
-		while ($row = $db->sql_fetchrow($result))
-		{
-			// Authorisation is required ... not authed, skip
-			if ($row['module_auth'])
-			{
-				$is_auth = false;
-				eval('$is_auth = (int) (' . preg_replace(array('#acl_([a-z_]+)(,\$id)?#e', '#\$id#', '#cfg_([a-z_]+)#e'), array('(int) $auth->acl_get("\\1"\\2)', '$this->acl_forum_id', '(int) $config["\\1"]'), trim($row['module_auth'])) . ');');
-				if (!$is_auth)
-				{
-					continue;
-				}
-			}
-
-			if ($row['module_cat'] && ($row['left_id'] + 1 == $row['right_id']))
-			{
-				// Categoriy with no members, ignore
-				continue;
-			}
-
-			if ($row['left_id'] < $right)
-			{
-				$padding++;
-				$padding_store[$row['parent_id']] = $padding;
-			}
-			else if ($row['left_id'] > $right + 1)
-			{
-				$padding = $padding_store[$row['parent_id']];
-			}
-
-			$right = $row['right_id'];
-
-			$this->module_y_ary[$i] 			= ($padding) ? $padding : 0;
-
-			$this->module_ary[$i]['id'] 		= (int) $row['module_id'];
-			$this->module_ary[$i]['name'] 		= (function_exists($row['module_filename'])) ? $row['module_filename']($row['module_name']) : ((!empty($user->lang[$row['module_name']])) ? $user->lang[$row['module_name']] : ucfirst(str_replace('_', ' ', strtolower($row['module_name']))));
-			$this->module_ary[$i]['filename']	= (string) $row['module_filename'];
-			$this->module_ary[$i]['parent'] 	= (int) $row['parent_id'];
-			$this->module_ary[$i]['category']	= (bool) $row['module_cat'];
-			$this->module_ary[$i]['hilit'] 		= (bool) $row['module_hilit'];
-			$this->module_ary[$i]['active'] 	= false;
-
-			// If this is a module and it's selected, active
-			// If this is a category and the module is the first within it, active
-			// If no category or module selected, go active for first module in first category
-			if (!$active && ((!$row['module_cat'] && $row['module_id'] == $selected_module) || $row['parent_id'] === $category || (!$selected_module && !$row['module_cat'])))
-			{
-				$this->module_ary[$i]['active'] = true;
-
-				$this->id		= (int) $row['module_id'];
-				$this->parent	= (int) $row['parent_id'];
-				$this->filename = (string) $row['module_filename'];
-				$this->mode 	= (string) $row['module_mode'];
-
-				$active = true;
-			}
-			else if ($row['module_cat'] && $row['module_id'] == $selected_module)
-			{
-				$category = $row['module_id'];
-			}
-
-			$i++;
-		}
-		$db->sql_freeresult($result);
-	}
-
-	function load($mode = false, $run = true)
-	{
-		global $phpbb_root_path, $phpEx;
-
-		if (!class_exists($this->filename))
-		{
-			require_once($phpbb_root_path . "$this->module_path/$this->filename.$phpEx");
-
-			if ($run)
-			{
-				if (!empty($mode))
-				{
-					$this->mode = $mode;
-				}
-
-				eval("\$this->module = new $this->filename(\$this->id, \$this->mode);");
-				if (method_exists($this->module, 'init'))
-				{
-					$this->module->init();
-				}
-			}
-		}
-	}
-
-	// Displays the appropriate template with the given title
-	function display($page_title, $tpl_name)
-	{
-		global $template;
-
-		$current_padding = 0;
-		$linear_offset 	= 'l_block1';
-		$tabular_offset = 't_block2';
-
-		// Generate the list of modules, we'll do this in two ways ...
-		// 1) In a linear fashion
-		// 2) In a combined tabbed + linear fashion ... tabs for the categories
-		//    and a linear list for subcategories/items
-		foreach ($this->module_ary as $row_id => $item_ary)
-		{
-			$padding = $this->module_y_ary[$row_id];
-
-			if ($padding > $current_padding)
-			{
-				$linear_offset = $linear_offset . '.l_block' . ($padding + 1);
-				$tabular_offset = ($padding + 1 > 2) ? $tabular_offset . '.t_block' . ($padding + 1) : $tabular_offset;
-			}
-			else if ($padding < $current_padding)
-			{
-				for ($i = $current_padding - $padding; $i > 0; $i--)
-				{
-					$linear_offset = substr($linear_offset, 0, strrpos($linear_offset, '.'));
-					$tabular_offset = ($i + $padding > 1) ? substr($tabular_offset, 0, strrpos($tabular_offset, '.')) : $tabular_offset;
-				}
-			}
-
-			$current_padding = $padding;
-
-			// Only output a categories items if it's currently selected
-			if (!$padding || ($padding && $item_ary['parent'] == $this->parent))
-			{
-				$use_tabular_offset = (!$padding) ? 't_block1' : $tabular_offset;
-				$template->assign_block_vars($use_tabular_offset, array(
-					'L_TITLE'		=> $item_ary['name'],
-					'S_SELECTED'	=> ($item_ary['id'] == $this->parent || $item_ary['active']) ? true : false,
-					'U_TITLE'		=> $this->module_url . '&amp;i=' . $item_ary['id'])
-				);
-			}
-
-			$template->assign_block_vars($linear_offset, array(
-				'L_TITLE'		=> $item_ary['name'],
-				'S_SELECTED'	=> ($item_ary['id'] == $this->parent || $item_ary['active']) ? true : false,
-				'U_TITLE'		=> $this->module_url . '&amp;i=' . $item_ary['id'])
-			);
-		}
-
-		page_header($page_title);
-
-		$template->set_filenames(array(
-			'body' => $tpl_name . '_' . $this->mode . '.html')
-		);
-
-		page_footer();
-	}
-
-	//
-	// Public methods to be overwritten by modules
-	//
-	function module()
-	{
-		// Module name
-		// Module filename
-		// Module description
-		// Module version
-		// Module compatibility
-		return false;
-	}
-
-	function init()
-	{
-		return false;
-	}
-}
-
-?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/functions_posting.php
===================================================================
--- cms/trunk/includes/forums/functions_posting.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_posting.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -108,17 +108,32 @@
 	}
 
 	$update_sql = $empty_forums = array();
+	
+	if (sizeof($ids) == 1)
+	{
+		$sql = 'SELECT MAX(post_id) as last_post_id
+			FROM ' . POSTS_TABLE . '
+			WHERE post_approved = 1
+				AND '. $type . '_id = '.$ids[0];
+	}
+	else
+	{
+		$sql = 'SELECT ' . $type . '_id, MAX(post_id) as last_post_id
+			FROM ' . FORUMS_POSTS_TABLE . "
+			WHERE post_approved = 1
+				AND {$type}_id IN (" . implode(', ', $ids) . ")
+			GROUP BY {$type}_id";
+		$result = $_CLASS['core_db']->query($sql);
+	}
 
-	$sql = 'SELECT ' . $type . '_id, MAX(post_id) as last_post_id
-		FROM ' . FORUMS_POSTS_TABLE . "
-		WHERE post_approved = 1
-			AND {$type}_id IN (" . implode(', ', $ids) . ")
-		GROUP BY {$type}_id";
-	$result = $_CLASS['core_db']->query($sql);
-
 	$last_post_ids = array();
 	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 	{
+		if (sizeof($ids) == 1)
+		{
+			$row[$type . '_id'] = $ids[0];
+		}
+
 		if ($type === 'forum')
 		{
 			$empty_forums[] = $row['forum_id'];
@@ -202,7 +217,7 @@
 
 	if (!$filedata['post_attach'])
 	{
-		$filedata['error'][] = 'No filedata found';
+		$filedata['error'][] = $_CLASS['core_user']->lang['NO_UPLOAD_FORM_FOUND'];
 		return $filedata;
 	}
 
@@ -223,6 +238,16 @@
 
 	$cat_id = (isset($extensions[$file->get('extension')]['display_cat'])) ? $extensions[$file->get('extension')]['display_cat'] : ATTACHMENT_CATEGORY_NONE;
 
+	// Make sure the image category only holds valid images...
+	if ($cat_id == ATTACHMENT_CATEGORY_IMAGE && !$file->is_image())
+	{
+		$file->remove();
+
+		// If this error occurs a user tried to exploit an IE Bug by renaming extensions
+		// Since the image category is displaying content inline we need to catch this.
+		trigger_error('UNABLE_GET_IMAGE_SIZE');
+	}
+
 	// Do we have to create a thumbnail?
 	$filedata['thumbnail'] = ($cat_id == ATTACHMENT_CATEGORY_IMAGE && $config['img_create_thumbnail']) ? 1 : 0;
 
@@ -533,7 +558,7 @@
 	
 	foreach ($attachment_data as $i => $attachment)
 	{
-		$s_inline_attachment_options .= '<option value="' . $i . '">' . $attachment['real_filename'] . '</option>';
+		$s_inline_attachment_options .= '<option value="' . $i . '">' . basename($attachment['real_filename']) . '</option>';
 	}
 
 	$_CLASS['core_template']->assign('S_INLINE_ATTACHMENT_OPTIONS', $s_inline_attachment_options);
@@ -618,18 +643,16 @@
 				$hidden .= '<input type="hidden" name="attachment_data[' . $count . '][' . $key . ']" value="' . $value . '" />';
 			}
 			
-			$download_link = (!$attach_row['attach_id']) ? $config['upload_path'] . '/' . basename($attach_row['physical_filename']) : generate_link('Forums&amp;file=download&amp;id=' . intval($attach_row['attach_id']));
-			
 			$_CLASS['core_template']->assign_vars_array('attach_row', array(
 				'FILENAME'			=> basename($attach_row['real_filename']),
-				'ATTACH_FILENAME'	=> basename($attach_row['physical_filename']),
-				'FILE_COMMENT'		=> $attach_row['comment'],
+				'FILE_COMMENT'		=> $attach_row['attach_comment'],
 				'ATTACH_ID'			=> $attach_row['attach_id'],
+				'S_IS_ORPHAN'		=> $attach_row['is_orphan'],
 				'ASSOC_INDEX'		=> $count,
 
-				'U_VIEW_ATTACHMENT' => $download_link,
-				'S_HIDDEN'			=> $hidden)
-			);
+				'U_VIEW_ATTACHMENT' => generate_link('forums&amp;file=download&amp;id=' . (int) $attach_row['attach_id']),
+				'S_HIDDEN'			=> $hidden
+			));
 
 			$count++;
 		}
@@ -855,7 +878,7 @@
 		'notify_forum'		=> 'Forum Post Notification - '. $forum_name,
 	);
 
-	if ($mode == 'reply' || $mode == 'quote')
+	if ($mode === 'reply' || $mode === 'quote')
 	{
 		$topic_title = $subject;
 
@@ -863,7 +886,7 @@
 		$template = 'notify_topic'; //notify_forum
 		$where = "(w.forum_id = $forum_id OR w.topic_id = $topic_id)";
 	}
-	else
+	elseif ($mode == 'post')
 	{
 		$topic_title = $topic_title;
 
@@ -871,6 +894,10 @@
 		$template = 'notify_newtopic';
 		$where = 'w.forum_id = '.$forum_id;
 	}
+	else
+	{
+		trigger_error('WRONG_NOTIFICATION_MODE');
+	}
 
 	$topic_title = censor_text($topic_title);
 	$holding = array();
@@ -1255,7 +1282,7 @@
 				'post_subject'		=> $subject,
 				'post_text'			=> $data['message'],
 				'post_checksum'		=> $data['message_md5'],
-				'post_attachment'	=> (isset($data['filename_data']['physical_filename']) && sizeof($data['filename_data'])) ? 1 : 0,
+				'post_attachment'	=> empty($data['attachment_data']) ? 0 : 1,
 				'bbcode_bitfield'	=> $data['bbcode_bitfield'],
 				'bbcode_uid'		=> $data['bbcode_uid'],
 				'post_postcount'	=> ($_CLASS['forums_auth']->acl_get('f_postcount', $data['forum_id'])) ? 1 : 0,
@@ -1309,7 +1336,7 @@
 				'post_edit_reason'	=> $data['post_edit_reason'],
 				'post_edit_user'	=> (int) $data['post_edit_user'],
 				'post_checksum'		=> $data['message_md5'],
-				'post_attachment'	=> (isset($data['filename_data']['physical_filename']) && sizeof($data['filename_data'])) ? 1 : 0,
+				'post_attachment'	=> empty($data['attachment_data']) ? 0 : 1,
 				'bbcode_bitfield'	=> $data['bbcode_bitfield'],
 				'bbcode_uid'		=> $data['bbcode_uid'],
 				'post_edit_locked'	=> $data['post_edit_locked'])
@@ -1337,7 +1364,7 @@
 				'topic_first_poster_name'	=> (!$_CLASS['core_user']->is_user && $username) ? $username : (($_CLASS['core_user']->data['user_id'] != ANONYMOUS) ? $_CLASS['core_user']->data['username'] : ''),
 				'topic_type'				=> $topic_type,
 				'topic_time_limit'			=> ($topic_type == POST_STICKY || $topic_type == POST_ANNOUNCE) ? ($data['topic_time_limit'] * 86400) : 0,
-				'topic_attachment'			=> (isset($data['filename_data']['physical_filename']) && sizeof($data['filename_data'])) ? 1 : 0,
+				'topic_attachment'			=> empty($data['attachment_data']) ? 0 : 1,
 				'topic_status'				=> 0,
 				'topic_replies_real'		=> 0,
 				'topic_replies'				=> 0,
@@ -1395,7 +1422,7 @@
 				'poll_length'				=> (isset($poll['poll_options'])) ? ($poll['poll_length'] * 86400) : 0,
 				'poll_vote_change'			=> (isset($poll['poll_vote_change'])) ? $poll['poll_vote_change'] : 0,
 
-				'topic_attachment'			=> ($post_mode == 'edit_topic') ? ((isset($data['filename_data']['physical_filename']) && sizeof($data['filename_data'])) ? 1 : 0) : (isset($data['topic_attachment']) ? $data['topic_attachment'] : 0)
+				'topic_attachment'			=> empty($data['attachment_data']) ? 0 : 1
 			);
 		break;
 	}
@@ -1572,71 +1599,78 @@
 	if (count($data['attachment_data']) && $data['post_id'] && in_array($mode, array('post', 'reply', 'quote', 'edit')))
 	{
 		$space_taken = $files_added = $files_updated = 0;
-		$attach_sql_array = array();
+		$orphan_rows = array();
 
 		foreach ($data['attachment_data'] as $pos => $attach_row)
 		{
-			if ($attach_row['attach_id'])
+			$orphan_rows[(int) $attach_row['attach_id']] = array();
+		}
+
+		if (sizeof($orphan_rows))
+		{
+			$sql = 'SELECT attach_id, filesize, physical_filename
+				FROM ' . FORUMS_ATTACHMENTS_TABLE . '
+				WHERE attach_id IN (' . implode(', ', array_keys($orphan_rows)) . ')
+					AND is_orphan = 1
+					AND poster_id = ' . $_CLASS['core_user']->data['user_id'];
+			$result = $_CLASS['core_db']->query($sql);
+
+			$orphan_rows = array();
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 			{
+				$orphan_rows[$row['attach_id']] = $row;
+			}
+			$_CLASS['core_db']->free_result($result);
+		}
+
+		foreach ($data['attachment_data'] as $pos => $attach_row)
+		{
+			if ($attach_row['is_orphan'] && !in_array($attach_row['attach_id'], array_keys($orphan_rows)))
+			{
+				continue;
+			}
+
+			if (!$attach_row['is_orphan'])
+			{
 				// update entry in db if attachment already stored in db and filespace
 				$sql = 'UPDATE ' . FORUMS_ATTACHMENTS_TABLE . "
-					SET comment = '" . $_CLASS['core_db']->escape($attach_row['comment']) . "'
-					WHERE attach_id = " . (int) $attach_row['attach_id'];
-				$_CLASS['core_db']->query($sql);
-				
-				$files_updated++;
+					SET attach_comment = '" . $_CLASS['core_db']->escape($attach_row['attach_comment']) . "'
+					WHERE attach_id = " . (int) $attach_row['attach_id'] . '
+						AND is_orphan = 0';
+				$_CLASS['core_db']->query($sql);
 			}
 			else
 			{
 				// insert attachment into db
-				if (!@file_exists($config['upload_path'] . '/' . basename($attach_row['physical_filename'])))
+				if (!@file_exists(SITE_FILE_ROOT . $config['upload_path'] . '/' . basename($orphan_rows[$attach_row['attach_id']]['physical_filename'])))
 				{
 					continue;
 				}
 
-				$attach_sql_array[] = array(
-					'post_msg_id'		=> (int) $data['post_id'],
-					'topic_id'			=> (int) $data['topic_id'],
-					'in_message'		=> 0,
-					'poster_id'			=> (int) $poster_id,
-					'physical_filename'	=> basename($attach_row['physical_filename']),
-					'real_filename'		=> basename($attach_row['real_filename']),
-					'download_count'	=> 0,
-					'comment'			=> $attach_row['comment'],
-					'extension'			=> $attach_row['extension'],
-					'mimetype'			=> $attach_row['mimetype'],
-					'filesize'			=> $attach_row['filesize'],
-					'filetime'			=> $attach_row['filetime'],
-					'thumbnail'			=> $attach_row['thumbnail']
+				$space_taken += $orphan_rows[$attach_row['attach_id']]['filesize'];
+				$files_added++;
+
+				$attach_sql = array(
+					'post_msg_id'		=> $data['post_id'],
+					'topic_id'			=> $data['topic_id'],
+					'is_orphan'			=> 0,
+					'poster_id'			=> $poster_id,
+					'attach_comment'	=> $attach_row['attach_comment'],
 				);
 
-				$space_taken += $attach_row['filesize'];
-				$files_added++;
+				$sql = 'UPDATE ' . FORUMS_ATTACHMENTS_TABLE . ' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $attach_sql) . '
+					WHERE attach_id = ' . $attach_row['attach_id'] . '
+						AND is_orphan = 1
+						AND poster_id = ' . $user->data['user_id'];
+				$_CLASS['core_db']->query($sql);
 			}
 		}
 
-		if (!empty($attach_sql_array))
-		{
-			$_CLASS['core_db']->sql_query_build('MULTI_INSERT', $attach_sql_array, FORUMS_ATTACHMENTS_TABLE);
-			unset($attach_sql_array);
-		}
-
 		if ($files_updated || $files_added)
 		{
-			$sql = 'UPDATE ' . FORUMS_POSTS_TABLE . '
-				SET post_attachment = 1
-				WHERE post_id = ' . $data['post_id'];
-			$_CLASS['core_db']->query($sql);
-
-			$sql = 'UPDATE ' . FORUMS_TOPICS_TABLE . '
-				SET topic_attachment = 1
-				WHERE topic_id = ' . $data['topic_id'];
-			$_CLASS['core_db']->query($sql);
+			set_config('upload_dir_size', $config['upload_dir_size'] + $space_taken, true);
+			set_config('num_files', $config['num_files'] + $files_added, true);
 		}
-		unset($attach_sql_array);
-
-		set_config('upload_dir_size', $config['upload_dir_size'] + $space_taken, true);
-		set_config('num_files', $config['num_files'] + $files_added, true);
 	}
 
 	$_CLASS['core_db']->transaction('commit');
@@ -1734,7 +1768,7 @@
 			trigger_error($error);
 		}
 
-		$search->index($mode, $data['post_id'], $data['message'], $subject, $_CLASS['core_user']->lang['ENCODING'], $poster_id, ($topic_type == POST_GLOBAL) ? 0 : $data['forum_id']);
+		$search->index($mode, $data['post_id'], $data['message'], $subject, $poster_id, ($topic_type == POST_GLOBAL) ? 0 : $data['forum_id']);
 	}
 
 	$_CLASS['core_db']->transaction('commit');

Modified: cms/trunk/includes/forums/functions_privmsgs.php
===================================================================
--- cms/trunk/includes/forums/functions_privmsgs.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_privmsgs.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -797,7 +797,7 @@
 		
 		if ($_CLASS['core_user']->data['user_id'] == $user_id)
 		{
-			$_CLASS['core_user']->data['user_unread_privmsg'] = $_CLASS['core_user']->data['user_unread_privmsg'] + (($read) ? $count : -$count));
+			$_CLASS['core_user']->data['user_unread_privmsg'] = ($_CLASS['core_user']->data['user_unread_privmsg'] + (($read) ? $count : -$count));
 		}
 	}
 
@@ -1181,8 +1181,8 @@
 						'IS_USER'	=> ($type === 'user'),
 						'COLOUR'	=> ($row['colour']) ? $row['colour'] : '',
 						'UG_ID'		=> $id,
-						'U_VIEW'	=> ($type === 'user') ? (($id != ANONYMOUS) ? generate_link('members_list&amp;mode=viewprofile&amp;u=' . $id) ? '') : generate_link('members_list&amp;mode=group&amp;g=' . $id))
-					);
+						'U_VIEW'	=> ($type === 'user') ? (($id != ANONYMOUS) ? generate_link('members_list&amp;mode=viewprofile&amp;u=' . $id) : '') : generate_link('members_list&amp;mode=group&amp;g=' . $id)
+					));
 				}
 			}
 		}
@@ -1333,7 +1333,7 @@
 				'enable_sig' 		=> $data['enable_sig'],
 				'message_subject'	=> $subject,
 				'message_text' 		=> $data['message'],
-				'message_attachment'=> (isset($data['filename_data']['physical_filename']) && !empty($data['filename_data'])) ? 1 : 0,
+				'message_attachment'=> empty($data['attachment_data']) ? 0 : 1,
 				'bbcode_bitfield'	=> $data['bbcode_bitfield'],
 				'bbcode_uid'		=> $data['bbcode_uid'],
 				'to_address'		=> implode(':', $to),
@@ -1352,7 +1352,7 @@
 				'enable_sig' 		=> $data['enable_sig'],
 				'message_subject'	=> $subject,
 				'message_text' 		=> $data['message'],
-				'message_attachment'=> (isset($data['filename_data']['physical_filename']) && !empty($data['filename_data'])) ? 1 : 0,
+				'message_attachment'=> empty($data['attachment_data']) ? 0 : 1,
 				'bbcode_bitfield'	=> $data['bbcode_bitfield'],
 				'bbcode_uid'		=> $data['bbcode_uid']
 			);
@@ -1438,50 +1438,73 @@
 	if (!empty($data['attachment_data']) && $data['msg_id'] && in_array($mode, array('post', 'reply', 'quote', 'quotepost', 'edit', 'forward')))
 	{
 		$space_taken = $files_added = 0;
+		$orphan_rows = array();
 
 		foreach ($data['attachment_data'] as $pos => $attach_row)
 		{
-			if ($attach_row['attach_id'])
+			$orphan_rows[(int) $attach_row['attach_id']] = array();
+		}
+
+		if (sizeof($orphan_rows))
+		{
+			$sql = 'SELECT attach_id, filesize, physical_filename
+				FROM ' . FORUMS_ATTACHMENTS_TABLE . '
+				WHERE attach_id IN (' . implode(', ', array_keys($orphan_rows)) . ')
+					AND in_message = 1
+					AND is_orphan = 1
+					AND poster_id = ' . $_CLASS['core_user']->data['user_id'];
+			$result = $_CLASS['core_db']->query($sql);
+
+			$orphan_rows = array();
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+			{
+				$orphan_rows[$row['attach_id']] = $row;
+			}
+			$_CLASS['core_db']->free_result($result);
+		}
+
+		foreach ($data['attachment_data'] as $pos => $attach_row)
+		{
+			if ($attach_row['is_orphan'] && !in_array($attach_row['attach_id'], array_keys($orphan_rows)))
+			{
+				continue;
+			}
+
+			if (!$attach_row['is_orphan'])
 			{
 				// update entry in db if attachment already stored in db and filespace
 				$sql = 'UPDATE ' . FORUMS_ATTACHMENTS_TABLE . " 
 					SET comment = '" . $_CLASS['core_db']->sql_escape($attach_row['comment']) . "' 
-					WHERE attach_id = " . (int) $attach_row['attach_id'];
+					WHERE attach_id = " . (int) $attach_row['attach_id'] . '
+						AND is_orphan = 0';
 				$_CLASS['core_db']->query($sql);
 			}
 			else
 			{
-				// insert attachment into db 
-				$attach_sql = array(
-					'post_msg_id'		=> $data['msg_id'],
-					'download_count'	=> 0,
-					'topic_id'			=> 0,
-					'in_message'		=> 1,
-					'poster_id'			=> $data['from_user_id'],
-					'physical_filename'	=> basename($attach_row['physical_filename']),
-					'real_filename'		=> basename($attach_row['real_filename']),
-					'comment'			=> $attach_row['comment'],
-					'extension'			=> $attach_row['extension'],
-					'mimetype'			=> $attach_row['mimetype'],
-					'filesize'			=> $attach_row['filesize'],
-					'filetime'			=> $attach_row['filetime'],
-					'thumbnail'			=> $attach_row['thumbnail']
-				);
-
-				$_CLASS['core_db']->sql_query_build('INSERT', $attach_sql, FORUMS_ATTACHMENTS_TABLE);
-
-				$space_taken += $attach_row['filesize'];
-				$files_added++;
+				// insert attachment into db
+				if (!@file_exists(SITE_FILE_ROOT . $config['upload_path'] . '/' . basename($orphan_rows[$attach_row['attach_id']]['physical_filename'])))
+				{
+					continue;
+				}
+
+				$space_taken += $orphan_rows[$attach_row['attach_id']]['filesize'];
+				$files_added++;
+
+				$attach_sql = array(
+					'post_msg_id'		=> $data['msg_id'],
+					'topic_id'			=> 0,
+					'is_orphan'			=> 0,
+					'poster_id'			=> $data['from_user_id'],
+					'attach_comment'	=> $attach_row['attach_comment'],
+				);
+
+				$sql = 'UPDATE ' . FORUMS_ATTACHMENTS_TABLE . ' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $attach_sql) . '
+					WHERE attach_id = ' . $attach_row['attach_id'] . '
+						AND is_orphan = 1
+						AND poster_id = ' . $_CLASS['core_user']->data['user_id'];
+				$_CLASS['core_db']->query($sql);
 			}
 		}
-		
-		if (!empty($data['attachment_data']))
-		{
-			$sql = 'UPDATE ' . FORUMS_PRIVMSGS_TABLE . '
-				SET message_attachment = 1
-				WHERE msg_id = ' . $data['msg_id'];
-			$_CLASS['core_db']->query($sql);
-		}
 
 		if ($space_taken && $files_added)
 		{

Deleted: cms/trunk/includes/forums/functions_profile_fields.php
===================================================================
--- cms/trunk/includes/forums/functions_profile_fields.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_profile_fields.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,894 +0,0 @@
-<?php
-//**************************************************************//
-//  Vipeal CMS:													//
-//**************************************************************//
-//																//
-//  Copyright ? 2004 by Viperal									//
-//  http://www.viperal.com										//
-//																//
-//  Viperal CMS is released under the terms and conditions		//
-//  of the GNU General Public License version 2					//
-//																//
-//**************************************************************//
-
-// -------------------------------------------------------------
-//
-// $Id: functions_profile_fields.php,v 1.10 2004/09/19 20:40:20 acydburn Exp $
-//
-// FILENAME  : functions_profile_fields.php
-// STARTED   : Tue Oct 21, 2003
-// COPYRIGHT : ? 2003 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
-// 
-// -------------------------------------------------------------
-
-class custom_profile
-{
-	var $profile_types = array(1 => 'int', 2 => 'string', 3 => 'text', 4 => 'bool', 5 => 'dropdown', 6 => 'date');
-	var $profile_cache = array();
-	var $options_lang = array();
-
-	// Build language options cache, useful for viewtopic display
-	function build_cache()
-	{
-		global $_CLASS;
-
-		$this->profile_cache = array();
-
-		// Display hidden/no_view fields for admin/moderator
-		$sql = 'SELECT l.*, f.*
-			FROM ' . PROFILE_LANG_TABLE . ' l, ' . PROFILE_FIELDS_TABLE . ' f 
-			WHERE l.lang_id = ' . $_CLASS['core_user']->get_iso_lang_id() . '
-				AND f.field_active = 1 ' .
-				((!$_CLASS['auth']->acl_gets('a_', 'm_')) ? '     AND f.field_hide = 0 AND f.field_no_view = 0 ' : '') . '
-				AND l.field_id = f.field_id 
-			GROUP BY f.field_id
-			ORDER BY f.field_order';
-		$result = $_CLASS['core_db']->sql_query($sql);
-
-		while ($row = $_CLASS['core_db']->sql_fetchrow($result))
-		{
-			$this->profile_cache[$row['field_ident']] = $row;
-		}
-		$_CLASS['core_db']->sql_freeresult($result);
-	}
-
-	// Get language entries for options and store them here for later use
-	function get_option_lang($field_id, $lang_id, $field_type, $preview)
-	{
-		global $_CLASS;
-
-		if ($preview)
-		{
-			$lang_options = (!is_array($this->vars['lang_options'])) ? explode("\n", $this->vars['lang_options']) : $this->vars['lang_options'];
-			
-			foreach ($lang_options as $num => $var)
-			{
-				$this->options_lang[$field_id][$lang_id][($num+1)] = $var;
-			}
-		}
-		else
-		{
-			$sql = 'SELECT option_id, value
-				FROM ' . PROFILE_FIELDS_LANG_TABLE . "
-					WHERE field_id = $field_id
-					AND lang_id = $lang_id
-					AND field_type = $field_type
-				ORDER BY option_id";
-			$result = $_CLASS['core_db']->sql_query($sql);
-
-			while ($row = $_CLASS['core_db']->sql_fetchrow($result))
-			{
-				$this->options_lang[$field_id][$lang_id][$row['option_id']] = $row['value'];
-			}
-			$_CLASS['core_db']->sql_freeresult($result);
-		}
-	}
-
-	// Functions performing operations on register/profile/profile admin
-	function submit_cp_field($mode, $lang_id, &$cp_data, &$cp_error)
-	{
-		global $_CLASS;
-
-		$sql = 'SELECT l.*, f.*
-			FROM ' . PROFILE_LANG_TABLE . ' l, ' . PROFILE_FIELDS_TABLE . " f 
-			WHERE l.lang_id = $lang_id
-				AND f.field_active = 1
-				" . (($mode == 'register') ? ' AND f.field_show_on_reg = 1' : '') .
-				(($_CLASS['auth']->acl_gets('a_', 'm_') && $mode == 'profile') ? '' : ' AND f.field_hide = 0') . '
-				AND l.field_id = f.field_id 
-			GROUP BY f.field_id
-			ORDER BY f.field_order';
-		$result = $_CLASS['core_db']->sql_query($sql);
-					
-		while ($row = $_CLASS['core_db']->sql_fetchrow($result))
-		{
-			$cp_data[$row['field_ident']] = $this->get_profile_field($row);
-
-			// get_profile_field returns an array with values for TEXT fields.
-			if(is_array($cp_data[$row['field_ident']]))
-			{
-				// Contains the original text without bbcode processing etc
-				$check_value = $cp_data[$row['field_ident']]['submitted'];
-				
-				foreach($cp_data[$row['field_ident']] as $key => $value)
-				{
-					if($key != 'submitted')
-					{
-						$cp_data[$key] = $value;
-					}
-				}
-			}
-			else
-			{
-				$check_value = $cp_data[$row['field_ident']];
-			}
-			
-			if (($cp_result = $this->validate_profile_field($row['field_type'], $check_value, $row)) !== false)
-			{
-				// If not and only showing common error messages, use this one
-				$error = false;
-
-				switch ($cp_result)
-				{
-					case 'FIELD_INVALID_DATE':
-					case 'FIELD_REQUIRED':
-						$error = sprintf($_CLASS['core_user']->lang[$cp_result], $row['lang_name']);
-						break;
-					case 'FIELD_TOO_SHORT':
-					case 'FIELD_TOO_SMALL':
-						$error = sprintf($_CLASS['core_user']->lang[$cp_result], $row['lang_name'], $row['field_minlen']);
-						break;
-					case 'FIELD_TOO_LONG':
-					case 'FIELD_TOO_LARGE':
-						$error = sprintf($_CLASS['core_user']->lang[$cp_result], $row['lang_name'], $row['field_maxlen']);
-						break;
-					case 'FIELD_INVALID_CHARS':
-						switch ($row['field_validation'])
-						{
-							case '[0-9]+':
-								$error = sprintf($_CLASS['core_user']->lang[$cp_result . '_NUMBERS_ONLY'], $row['lang_name']);
-								break;
-							case '[\w]+':
-								$error = sprintf($_CLASS['core_user']->lang[$cp_result . '_ALPHA_ONLY'], $row['lang_name']);
-								break;
-							case '[\w_\+\. \-\[\]]+':
-								$error = sprintf($_CLASS['core_user']->lang[$cp_result . '_SPACERS_ONLY'], $row['lang_name']);
-								break;
-						}
-						break;
-				}
-
-				if ($error)
-				{
-					$cp_error[] = $error;
-				}
-			}
-		}
-		$_CLASS['core_db']->sql_freeresult($result);
-	}
-	
-	// Assign fields to template, mode can be profile (for profile change) or register (for registration)
-//	function generate_profile_fields($mode, $lang_id, $cp_error)
-	function generate_profile_fields($mode, $lang_id)
-	{
-		global $_CLASS;
-
-		$sql = 'SELECT l.*, f.*
-			FROM ' . PROFILE_LANG_TABLE . ' l, ' . PROFILE_FIELDS_TABLE . " f 
-			WHERE l.lang_id = $lang_id
-				AND f.field_active = 1
-				" . (($mode == 'register') ? ' AND f.field_show_on_reg = 1' : '') .
-				(($_CLASS['auth']->acl_gets('a_', 'm_') && $mode == 'profile') ? '' : ' AND f.field_hide = 0') . '
-				AND l.field_id = f.field_id 
-			GROUP BY f.field_id
-			ORDER BY f.field_order';
-		$result = $_CLASS['core_db']->sql_query($sql);
-
-		while ($row = $_CLASS['core_db']->sql_fetchrow($result))
-		{
-			$_CLASS['core_template']->assign_vars_array('profile_fields', array(
-				'LANG_NAME' => $row['lang_name'],
-				'LANG_EXPLAIN' => $row['lang_explain'],
-				'FIELD' => $this->process_field_row('change', $row))
-//				'ERROR' => $error)
-			);
-		}
-		$_CLASS['core_db']->sql_freeresult($result);
-	}
-
-	// Assign fields to template, used for viewprofile, viewtopic and memberlist (if load setting is enabled)
-	// This is directly connected to the user -> mode == grab is to grab the user specific fields, mode == show is for assigning the row to the template
-	function generate_profile_fields_template($mode, $user_id = 0, $profile_row = false)
-	{
-		global $_CLASS;
-
-		if ($mode == 'grab')
-		{
-			if (!is_array($user_id))
-			{
-				$user_id = array($user_id);
-			}
-			
-			if (!sizeof($this->profile_cache))
-			{
-				$this->build_cache();
-			}
-
-			if (!implode(', ', $user_id))
-			{
-				return array();
-			}
-
-			$sql = 'SELECT *
-				FROM ' . PROFILE_DATA_TABLE . '
-				WHERE user_id IN (' . implode(', ', array_map('intval', $user_id)) . ')';
-			$result = $_CLASS['core_db']->sql_query($sql);
-
-			if (!($row = $_CLASS['core_db']->sql_fetchrow($result)))
-			{
-				return array();
-			}
-			
-			$user_fields = array();
-			do
-			{
-				foreach ($row as $ident => $value)
-				{
-					if (isset($this->profile_cache[$ident]))
-					{
-						$user_fields[$row['user_id']][$ident]['value'] = $value;
-						$user_fields[$row['user_id']][$ident]['data'] = $this->profile_cache[$ident];
-					}
-					else if($i = strpos($ident, '_bbcode'))
-					{
-						// Add extra data (bbcode_uid and bbcode_bitfield) to the data for this profile field.
-						// TODO: Maybe we should try to make this a bit more generic (not limited to bbcode)?
-						$field = substr($ident, 0, $i);
-						$subfield = substr($ident, $i+1);
-						$user_fields[$row['user_id']][$field]['data'][$subfield] = $value;
-					}
-				}
-			} 
-			while ($row = $_CLASS['core_db']->sql_fetchrow($result));
-			
-			$_CLASS['core_db']->sql_freeresult($result);
-
-			return $user_fields;
-
-		}
-		elseif ($mode == 'show')
-		{
-			// $profile_row == $user_fields[$row['user_id']];
-			$tpl_fields = array();
-			$tpl_fields['row'] = $tpl_fields['blockrow'] = array();
-
-			foreach ($profile_row as $ident => $ident_ary)
-			{
-				$tpl_fields['row'] += array(
-					'PROFILE_' . strtoupper($ident) . '_VALUE'	=> $this->get_profile_value($ident_ary),
-					'PROFILE_' . strtoupper($ident) . '_TYPE'	=> $ident_ary['data']['field_type'],
-					'PROFILE_' . strtoupper($ident) . '_NAME'	=> $ident_ary['data']['lang_name'],
-					'PROFILE_' . strtoupper($ident) . '_EXPLAIN'=> $ident_ary['data']['lang_explain'],
-
-					'S_PROFILE_' . strtoupper($ident)			=> true
-				);
-				
-				$tpl_fields['blockrow'][] = array(
-					'PROFILE_FIELD_VALUE'   => $this->get_profile_value($ident_ary),
-					'PROFILE_FIELD_TYPE'    => $ident_ary['data']['field_type'],
-					'PROFILE_FIELD_NAME'    => $ident_ary['data']['lang_name'],
-					'PROFILE_FIELD_EXPLAIN' => $ident_ary['data']['lang_explain'],
-					'S_PROFILE_' . strtoupper($ident)               => true
-				);
-			}
-		
-			return $tpl_fields;
-		}
-	}
-	
-	// VALIDATE Function - validate entered data
-	function validate_profile_field($field_type, &$field_value, $field_data)
-	{
-		switch ($field_type)
-		{
-			case FIELD_INT:
-			case FIELD_DROPDOWN:
-				$field_value = (int) $field_value;
-				break;
-
-			case FIELD_BOOL:
-				$field_value = (bool) $field_value;
-				break;
-		}
-
-		switch ($field_type)
-		{
-			case FIELD_DATE:
-				$field_validate = explode('-', $field_value);
-				
-				$day = (int) $field_validate[0];
-				$month = (int) $field_validate[1];
-				$year = (int) $field_validate[2];
-
-				if ((!$day || !$month || !$year) && !$field_data['field_required'])
-				{
-					return false;
-				}
-
-				if ((!$day || !$month || !$year) && $field_data['field_required'])
-				{
-					return 'FIELD_REQUIRED';
-				}
-
-				if ($day < 0 || $day > 31 || $month < 0 || $month > 12 || ($year < 1901 && $year > 0) || $year > gmdate('Y', time()))
-				{
-					return 'FIELD_INVALID_DATE';
-				}
-				break;
-
-			case FIELD_INT:
-				if (empty($field_value) && !$field_data['field_required'])
-				{
-					return false;
-				}
-
-				if ($field_value < $field_data['field_minlen'])
-				{
-					return 'FIELD_TOO_SMALL';
-				}
-				else if ($field_value > $field_data['field_maxlen']) 
-				{
-					return 'FIELD_TOO_LARGE';
-				}
-				break;
-		
-			case FIELD_DROPDOWN:
-				if ($field_value == $field_data['field_novalue'] && $field_data['field_required'])
-				{
-					return 'FIELD_REQUIRED';
-				}
-				break;
-			
-			case FIELD_STRING:
-			case FIELD_TEXT:
-				if (empty($field_value) && !$field_data['field_required'])
-				{
-					return false;
-				}
-				else if (empty($field_value) && $field_data['field_required'])
-				{
-					return 'FIELD_REQUIRED';
-				}
-
-				if ($field_data['field_minlen'] && strlen($field_value) < $field_data['field_minlen'])
-				{
-					return 'FIELD_TOO_SHORT';
-				}
-				else if ($field_data['field_maxlen'] && strlen($field_value) > $field_data['field_maxlen'])
-				{
-					return 'FIELD_TOO_LONG';
-				}
-
-				if (!empty($field_data['field_validation']) && $field_data['field_validation'] != '.*')
-				{
-					$field_validate = ($field_type == FIELD_STRING) ? $field_value : str_replace("\n", ' ', $field_value);
-					if (!preg_match('#^' . str_replace('\\\\', '\\', $field_data['field_validation']) . '$#i', $field_validate))
-					{
-						return 'FIELD_INVALID_CHARS';
-					}
-				}
-				break;
-		}
-
-		return false;
-	}
-
-	// Get Profile Value for display
-	function get_profile_value($ident_ary)
-	{
-		$value = $ident_ary['value'];
-		$field_type = $ident_ary['data']['field_type'];
-		
-		switch ($this->profile_types[$field_type])
-		{
-			case 'int':
-				return (int) $value;
-				break;
-			case 'string':
-				return str_replace("\n", '<br />', $value);
-				break;
-			case 'text':
-				// Prepare further, censor_text, smilies, bbcode, html, whatever
-				if ($ident_ary['data']['bbcode_bitfield'])
-				{
-					$bbcode = new bbcode($ident_ary['data']['bbcode_bitfield']);
-					$bbcode->bbcode_second_pass($value, $ident_ary['data']['bbcode_uid'], $ident_ary['data']['bbcode_bitfield']);
-					$value = smiley_text($value);
-					$value = censor_text($value);
-				}
-				
-				return str_replace("\n", '<br />', $value);
-				break;
-			case 'date':
-				break;
-			case 'dropdown':
-				$field_id = $ident_ary['data']['field_id'];
-				$lang_id = $ident_ary['data']['lang_id'];
-				if (!isset($this->options_lang[$field_id][$lang_id]))
-				{
-					$this->get_option_lang($field_id, $lang_id, FIELD_DROPDOWN, false);
-				}
-
-				return $this->options_lang[$field_id][$lang_id][(int) $value];
-				break;
-			case 'bool':
-				break;
-			default:
-				trigger_error('Unknown profile type');
-				break;
-		}
-	}
-
-	// Get field value for registration/profile
-	function get_var($field_validation, &$profile_row, $default_value, $preview)
-	{
-		global $_CLASS;
-
-		$profile_row['field_ident'] = (isset($profile_row['var_name'])) ? $profile_row['var_name'] : 'pf_' . $profile_row['field_ident'];
-		
-		// checkbox - only testing for isset
-		if ($profile_row['field_type'] == FIELD_BOOL && $profile_row['field_length'] == 2)
-		{
-			$value = (isset($_REQUEST[$profile_row['field_ident']])) ? true : ((!isset($_CLASS['core_user']->profile_fields[$profile_row['field_ident']]) || $preview) ? $default_value : $_CLASS['core_user']->profile_fields[$profile_row['field_ident']]);
-		}
-		else
-		{
-			$value = (isset($_REQUEST[$profile_row['field_ident']])) ? request_var($profile_row['field_ident'], $default_value) : ((!isset($_CLASS['core_user']->profile_fields[str_replace('pf_', '', $profile_row['field_ident'])]) || $preview) ? $default_value : $_CLASS['core_user']->profile_fields[str_replace('pf_', '', $profile_row['field_ident'])]);
-		}
-
-		switch ($field_validation)
-		{
-			case 'int':
-				return (int) $value;
-				break;
-		}
-
-		return $value;
-	}
-	
-	// GENERATE_* Functions - return templated, storable profile fields
-	function generate_int($profile_row, $preview = false)
-	{
-		$value = $this->get_var('int', $profile_row, $profile_row['field_default_value'], $preview);
-		$this->set_tpl_vars($profile_row, $value);
-
-		return $this->get_cp_html();
-	}
-
-	function generate_date($profile_row, $preview = false)
-	{
-		global $_CLASS;
-
-		$profile_row['field_ident'] = (isset($profile_row['var_name'])) ? $profile_row['var_name'] : 'pf_' . $profile_row['field_ident'];
-		$now = getdate();
-
-		if (!isset($_REQUEST[$profile_row['field_ident'] . '_day']))
-		{
-			if ($profile_row['field_default_value'] == 'now')
-			{
-				$profile_row['field_default_value'] = sprintf('%2d-%2d-%4d', $now['mday'], $now['mon'], $now['year']);
-			}
-			list($day, $month, $year) = explode('-', ((!isset($_CLASS['core_user']->profile_fields[$profile_row['field_ident']]) || $preview) ? $profile_row['field_default_value'] : $_CLASS['core_user']->profile_fields[$profile_row['field_ident']]));
-		}
-		else
-		{
-			if ($preview && $profile_row['field_default_value'] == 'now')
-			{
-				$profile_row['field_default_value'] = sprintf('%2d-%2d-%4d', $now['mday'], $now['mon'], $now['year']);
-				list($day, $month, $year) = explode('-', ((!isset($_CLASS['core_user']->profile_fields[$profile_row['field_ident']]) || $preview) ? $profile_row['field_default_value'] : $_CLASS['core_user']->profile_fields[$profile_row['field_ident']]));
-			}
-			else
-			{
-				$day = request_var($profile_row['field_ident'] . '_day', 0);
-				$month = request_var($profile_row['field_ident'] . '_month', 0);
-				$year = request_var($profile_row['field_ident'] . '_year', 0);
-			}
-		}
-
-		$profile_row['s_day_options'] = '<option value="0"' . ((!$day) ? ' selected="selected"' : '') . '>--</option>';
-		for ($i = 1; $i < 32; $i++)
-		{
-			$profile_row['s_day_options'] .= '<option value="' . $i . '"' . (($i == $day) ? ' selected="selected"' : '') . ">$i</option>";
-		}
-
-		$profile_row['s_month_options'] = '<option value="0"' . ((!$month) ? ' selected="selected"' : '') . '>--</option>';
-		for ($i = 1; $i < 13; $i++)
-		{
-			$profile_row['s_month_options'] .= '<option value="' . $i . '"' . (($i == $month) ? ' selected="selected"' : '') . ">$i</option>";
-		}
-
-		$profile_row['s_year_options'] = '<option value="0"' . ((!$year) ? ' selected="selected"' : '') . '>--</option>';
-		for ($i = $now['year'] - 100; $i <= $now['year']; $i++)
-		{
-			$profile_row['s_year_options'] .= '<option value="' . $i . '"' . (($i == $year) ? ' selected="selected"' : '') . ">$i</option>";
-		}
-		unset($now);
-		
-		$this->set_tpl_vars($profile_row, 0);
-		return $this->get_cp_html();
-	}
-
-	function generate_bool($profile_row, $preview = false)
-	{
-		global $_CLASS;
-
-		$value = $this->get_var('int', $profile_row, $profile_row['field_default_value'], $preview);
-
-		$this->set_tpl_vars($profile_row, $value);
-
-		if ($profile_row['field_length'] == 1)
-		{
-			if (!isset($this->options_lang[$profile_row['field_id']][$profile_row['lang_id']]) || !sizeof($this->options_lang[$profile_row['field_id']][$profile_row['lang_id']]))
-			{
-				$this->get_option_lang($profile_row['field_id'], $profile_row['lang_id'], FIELD_BOOL, $preview);
-			}
-
-			foreach ($this->options_lang[$profile_row['field_id']][$profile_row['lang_id']] as $option_id => $option_value)
-			{
-				$_CLASS['core_template']->assign_vars_array('bool.options', array(
-					'OPTION_ID' => $option_id,
-					'CHECKED' => ($value == $option_id) ? ' checked="checked"' : '',
-					'VALUE' => $option_value)
-				);
-			}
-		}
-
-		return $this->get_cp_html();
-	}
-
-	// Get the data associated with this field for this user
-	function generate_string($profile_row, $preview = false)
-	{
-		$value = $this->get_var('', $profile_row, $profile_row['lang_default_value'], $preview);
-		$this->set_tpl_vars($profile_row, $value);
-
-		return $this->get_cp_html();
-	}
-
-	function generate_text($profile_row, $preview = false)
-	{
-		global $_CLASS, $site_file_root;
-		
-		$value = $this->get_var('', $profile_row, $profile_row['lang_default_value'], $preview);
-		
-		if($preview == false)
-		{
-			include_once($site_file_root.'includes/forums/message_parser.php');
-			include_once($site_file_root.'includes/forums/functions_posting.php');
-			
-			$message_parser = new parse_message();
-			$message_parser->message = $value;
-			$message_parser->decode_message($_CLASS['core_user']->profile_fields[str_replace('pf_', '', $profile_row['field_ident']) . '_bbcode_uid']);
-			$value = $message_parser->message;
-		}
-		
-		$field_length = explode('|', $profile_row['field_length']);
-		$profile_row['field_rows'] = $field_length[0];
-		$profile_row['field_cols'] = $field_length[1];
-
-		$this->set_tpl_vars($profile_row, $value);
-
-		return $this->get_cp_html();
-	}
-
-	function generate_dropdown($profile_row, $preview = false)
-	{
-		global $_CLASS;
-
-		$value = $this->get_var('int', $profile_row, $profile_row['field_default_value'], $preview);
-
-		if (!isset($this->options_lang[$profile_row['field_id']]) || !sizeof($this->options_lang[$profile_row['field_id']][$profile_row['lang_id']]))
-		{
-			$this->get_option_lang($profile_row['field_id'], $profile_row['lang_id'], FIELD_DROPDOWN, $preview);
-		}
-
-		$this->set_tpl_vars($profile_row, $value);
-
-		foreach ($this->options_lang[$profile_row['field_id']][$profile_row['lang_id']] as $option_id => $option_value)
-		{
-			$_CLASS['core_template']->assign_vars_array('dropdown.options', array(
-				'OPTION_ID' => $option_id,
-				'SELECTED' => ($value == $option_id) ? ' selected="selected"' : '',
-				'VALUE' => $option_value)
-			);
-		}
-
-		return $this->get_cp_html();
-	}
-
-
-	// Return Templated value (change == user is able to set/enter profile values; show == just show the value)
-	function process_field_row($mode, $profile_row)
-	{
-		$preview = false;
-
-		switch ($mode)
-		{
-			case 'preview':
-				$preview = true;
-			case 'change':
-				$type_func = 'generate_' . $this->profile_types[$profile_row['field_type']];
-				break;
-			default:
-				return;
-		}
-
-		return $this->$type_func($profile_row, $preview);
-	}
-
-	// Build Array for user insertion into custom profile fields table
-	function build_insert_sql_array($cp_data)
-	{
-		global $_CLASS;
-
-		$sql = 'SELECT f.field_type, f.field_ident, f.field_default_value, l.lang_default_value
-			FROM ' . PROFILE_LANG_TABLE . ' l, ' . PROFILE_FIELDS_TABLE . ' f 
-			WHERE l.lang_id = ' . $_CLASS['core_user']->get_iso_lang_id() . ' 
-				AND f.field_active = 1
-				AND f.field_show_on_reg = 0
-				' . (($_CLASS['auth']->acl_gets('a_', 'm_')) ? '' : ' AND f.field_hide = 0') . '
-				AND l.field_id = f.field_id 
-			GROUP BY f.field_id';
-		$result = $_CLASS['core_db']->sql_query($sql);
-
-		while ($row = $_CLASS['core_db']->sql_fetchrow($result))
-		{
-			if ($row['field_default_value'] == 'now' && $row['field_type'] == FIELD_DATE)
-			{
-				$now = getdate();
-				$row['field_default_value'] = sprintf('%2d-%2d-%4d', $now['mday'], $now['mon'], $now['year']);
-			}
-			$cp_data[$row['field_ident']] = (in_array($row['field_type'], array(FIELD_TEXT, FIELD_STRING))) ? $row['lang_default_value'] : $row['field_default_value'];
-		}
-		$_CLASS['core_db']->sql_freeresult($result);
-		
-		return $cp_data;
-	}
-
-	function get_profile_field($profile_row)
-	{
-		global $site_file_root;
-		
-		switch ($profile_row['field_type'])
-		{
-			case FIELD_DATE:
-
-				if (!isset($_REQUEST[$var_name . '_day']))
-				{
-					if ($profile_row['field_default_value'] == 'now')
-					{
-						$now = getdate();
-						$profile_row['field_default_value'] = sprintf('%2d-%2d-%4d', $now['mday'], $now['mon'], $now['year']);
-					}
-					list($day, $month, $year) = explode('-', $profile_row['field_default_value']);
-				}
-				else
-				{
-					$day = request_var($var_name . '_day', 0);
-					$month = request_var($var_name . '_month', 0);
-					$year = request_var($var_name . '_year', 0);
-				}
-				
-				$var = sprintf('%2d-%2d-%4d', $day, $month, $year);
-				break;
-
-			case FIELD_TEXT:
-				include_once($site_file_root.'includes/forums/message_parser.php');
-				$message_parser = new parse_message(request_var($var_name, ''));
-				
-				// Get the allowed settings from the global settings. Magic URLs are always set to true.
-				// TODO: It might be nice to make this a per field setting.
-				$message_parser->parse($config['allow_html'], $config['allow_bbcode'], true, $config['allow_smilies']);
-				
-				$var = array(
-					$profile_row['field_ident'] => $message_parser->message,
-					$profile_row['field_ident'] . '_bbcode_uid' => $message_parser->bbcode_uid,
-					$profile_row['field_ident'] . '_bbcode_bitfield' => $message_parser->bbcode_bitfield,
-					 'submitted' => request_var($var_name, '')
-				);
-				break;
-
-			default:
-				$var = request_var($var_name, $profile_row['field_default_value']);
-				break;
-		}
-
-		return $var;
-	}
-
-	function set_tpl_vars($profile_row, $field_value)
-	{
-		global $_CLASS;
-		
-		foreach ($this->profile_types as $field_case => $field_type)
-		{
-			unset($_CLASS['core_template']->_tpl_vars[$field_type]);
-		}
-
-		foreach ($profile_row as $key => $value)
-		{
-			unset($profile_row[$key]);
-			$profile_row[strtoupper($key)] = $value;
-		}
-
-		$profile_row['FIELD_VALUE'] = $field_value;
-
-		$_CLASS['core_template']->assign_vars_array($this->profile_types[$profile_row['FIELD_TYPE']], $profile_row);
-	}
-
-	function get_cp_html()
-	{
-		global $_CLASS;
-
-		ob_start();
-
-		$_CLASS['core_template']->display('forums/custom_profile_fields.html');
-
-		$data = ob_get_contents();
-		ob_end_clean();
-
-		return $data;
-	}
-}
-
-class custom_profile_admin extends custom_profile
-{
-	var $vars = array();
-	
-
-	function validate_options()
-	{
-		global $_CLASS;
-
-		$validate_ary = array('CHARS_ANY' => '.*', 'NUMBERS_ONLY' => '[0-9]+', 'ALPHA_ONLY' => '[\w]+', 'ALPHA_SPACERS' => '[\w_\+\. \-\[\]]+');
-
-		$validate_options = '';
-		foreach ($validate_ary as $lang => $value)
-		{
-			$selected = ($this->vars['field_validation'] == $value) ? ' selected="selected"' : '';
-			$validate_options .= '<option value="' . $value . '"' . $selected . '>' . $_CLASS['core_user']->lang[$lang] . '</option>';
-		}
-
-		return $validate_options;
-	}
-	
-	// GET_* get admin options for second step
-	function get_string_options()
-	{
-		global $_CLASS;
-
-		$options = array(
-			0 => array('TITLE' => $_CLASS['core_user']->lang['FIELD_LENGTH'], 'FIELD' => '<input class="post" type="text" name="field_length" size="5" value="' . $this->vars['field_length'] . '" />'),
-			1 => array('TITLE' => $_CLASS['core_user']->lang['MIN_FIELD_CHARS'], 'FIELD' => '<input class="post" type="text" name="field_minlen" size="5" value="' . $this->vars['field_minlen'] . '" />'),
-			2 => array('TITLE' => $_CLASS['core_user']->lang['MAX_FIELD_CHARS'], 'FIELD' => '<input class="post" type="text" name="field_maxlen" size="5" value="' . $this->vars['field_maxlen'] . '" />'),
-			3 => array('TITLE' => $_CLASS['core_user']->lang['FIELD_VALIDATION'], 'FIELD' => '<select name="field_validation">' . $this->validate_options() . '</select>')
-		);
-
-		return $options;
-	}
-
-	function get_text_options()
-	{
-		global $_CLASS;
-
-		$options = array(
-			0 => array('TITLE' => $_CLASS['core_user']->lang['FIELD_LENGTH'], 'FIELD' => '<table border=0><tr><td><input name="rows" size="5" value="' . $this->vars['rows'] . '" class="post" /></td><td>[ ' . $_CLASS['core_user']->lang['ROWS'] . ' ]</td></tr><tr><td><input name="columns" size="5" value="' . $this->vars['columns'] . '" class="post" /></td><td>[ ' . $_CLASS['core_user']->lang['COLUMNS'] . ' ] <input type="hidden" name="field_length" value="' . $this->vars['field_length'] . '" /></td></tr></table>'),
-			1 => array('TITLE' => $_CLASS['core_user']->lang['MIN_FIELD_CHARS'], 'FIELD' => '<input class="post" type="text" name="field_minlen" size="10" value="' . $this->vars['field_minlen'] . '" />'),
-			2 => array('TITLE' => $_CLASS['core_user']->lang['MAX_FIELD_CHARS'], 'FIELD' => '<input class="post" type="text" name="field_maxlen" size="10" value="' . $this->vars['field_maxlen'] . '" />'),
-			3 => array('TITLE' => $_CLASS['core_user']->lang['FIELD_VALIDATION'], 'FIELD' => '<select name="field_validation">' . $this->validate_options() . '</select>')
-		);
-
-		return $options;
-	}
-
-	function get_int_options()
-	{
-		global $_CLASS;
-
-		$options = array(
-			0 => array('TITLE' => $_CLASS['core_user']->lang['FIELD_LENGTH'], 'FIELD' => '<input class="post" type="text" name="field_length" size="5" value="' . $this->vars['field_length'] . '" />'),
-			1 => array('TITLE' => $_CLASS['core_user']->lang['MIN_FIELD_NUMBER'], 'FIELD' => '<input class="post" type="text" name="field_minlen" size="5" value="' . $this->vars['field_minlen'] . '" />'),
-			2 => array('TITLE' => $_CLASS['core_user']->lang['MAX_FIELD_NUMBER'], 'FIELD' => '<input class="post" type="text" name="field_maxlen" size="5" value="' . $this->vars['field_maxlen'] . '" />'),
-			3 => array('TITLE' => $_CLASS['core_user']->lang['DEFAULT_VALUE'], 'FIELD' => '<input class="post" type="post" name="field_default_value" value="' . $this->vars['field_default_value'] . '" />')
-		);
-
-		return $options;
-	}
-
-	function get_bool_options()
-	{
-		global $_CLASS, $config, $lang_defs;
-
-		$default_lang_id = $lang_defs['iso'][$config['default_lang']];
-
-		$profile_row = array(
-			'var_name'				=> 'field_default_value',
-			'field_id'				=> 1,
-			'lang_name'				=> $this->vars['lang_name'],
-			'lang_explain'			=> $this->vars['lang_explain'],
-			'lang_id'				=> $default_lang_id,
-			'field_default_value'	=> $this->vars['field_default_value'],
-			'field_ident'			=> 'field_default_value',
-			'field_type'			=> FIELD_BOOL,
-			'field_length'			=> $this->vars['field_length'],
-			'lang_options'			=> $this->vars['lang_options']
-		);
-
-		$options = array(
-			0 => array('TITLE' => $_CLASS['core_user']->lang['FIELD_TYPE'], 'EXPLAIN' => $_CLASS['core_user']->lang['BOOL_TYPE_EXPLAIN'], 'FIELD' => '<input type="radio" name="field_length" value="1"' . (($this->vars['field_length'] == 1) ? ' checked="checked"' : '') . ' />' . $_CLASS['core_user']->lang['RADIO_BUTTONS'] . '&nbsp; &nbsp;<input type="radio" name="field_length" value="2"' . (($this->vars['field_length'] == 2) ? ' checked="checked"' : '') . ' />' . $_CLASS['core_user']->lang['CHECKBOX'] . '&nbsp; &nbsp;'),
-			1 => array('TITLE' => $_CLASS['core_user']->lang['DEFAULT_VALUE'], 'FIELD' => $this->generate_bool($profile_row, true))
-		);
-
-		return $options;
-	}
-
-	function get_dropdown_options()
-	{
-		global $_CLASS, $config, $lang_defs;
-
-		$default_lang_id = $lang_defs['iso'][$config['default_lang']];
-
-		$profile_row[0] = array(
-			'var_name'				=> 'field_default_value',
-			'field_id'				=> 1,
-			'lang_name'				=> $this->vars['lang_name'],
-			'lang_explain'			=> $this->vars['lang_explain'],
-			'lang_id'				=> $default_lang_id,
-			'field_default_value'	=> $this->vars['field_default_value'],
-			'field_ident'			=> 'field_default_value',
-			'field_type'			=> FIELD_DROPDOWN,
-			'lang_options'			=> $this->vars['lang_options']
-		);
-
-		$profile_row[1] = $profile_row[0];
-		$profile_row[1]['var_name'] = 'field_novalue';
-		$profile_row[1]['field_ident'] = 'field_novalue';
-		$profile_row[1]['field_default_value']	= $this->vars['field_novalue'];
-
-
-		$options = array(
-			0 => array('TITLE' => $_CLASS['core_user']->lang['DEFAULT_VALUE'], 'FIELD' => $this->generate_dropdown($profile_row[0], true)),
-			1 => array('TITLE' => $_CLASS['core_user']->lang['NO_VALUE_OPTION'], 'EXPLAIN' => $_CLASS['core_user']->lang['NO_VALUE_OPTION_EXPLAIN'], 'FIELD' => $this->generate_dropdown($profile_row[1], true))
-		);
-
-		return $options;
-	}
-
-	function get_date_options()
-	{
-		global $_CLASS, $config, $lang_defs;
-
-		$default_lang_id = $lang_defs['iso'][$config['default_lang']];
-
-		$profile_row = array(
-			'var_name'				=> 'field_default_value',
-			'lang_name'				=> $this->vars['lang_name'],
-			'lang_explain'			=> $this->vars['lang_explain'],
-			'lang_id'				=> $default_lang_id,
-			'field_default_value'	=> $this->vars['field_default_value'],
-			'field_ident'			=> 'field_default_value',
-			'field_type'			=> FIELD_DATE,
-			'field_length'			=> $this->vars['field_length']
-		);
-
-		$options = array(
-			0 => array('TITLE' => $_CLASS['core_user']->lang['DEFAULT_VALUE'], 'FIELD' => $this->generate_date($profile_row, true) . '<br /><input type="checkbox" name="always_now"' . ((isset($_REQUEST['always_now']) || $this->vars['field_default_value'] == 'now') ? ' checked="checked"' : '') . ' />&nbsp; ' . $_CLASS['core_user']->lang['ALWAYS_TODAY'])
-		);
-
-		return $options;
-	}
-}
-
-?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/functions_upload.php
===================================================================
--- cms/trunk/includes/forums/functions_upload.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_upload.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -233,12 +233,27 @@
 			$destination = '';
 		}
 
+		// We need to trust the admin in specifying valid upload directories and an attacker not being able to overwrite it...
 		$this->destination_path = SITE_FILE_ROOT.$destination;
 
+		// Check if the destination path exist...
+		if (!file_exists($this->destination_path))
+		{
+			@unlink($this->filename);
+			return false;
+		}
+
 		$upload_mode = (@ini_get('open_basedir') || @ini_get('safe_mode')) ? 'move' : 'copy';
 		$upload_mode = ($this->local) ? 'local' : $upload_mode;
 		$this->destination_file = $this->destination_path . '/' . basename($this->realname);
 
+		// Check if the file already exist, else there is something wrong...
+		if (file_exists($this->destination_file))
+		{
+			@unlink($this->filename);
+			return false;
+		}
+
 		switch ($upload_mode)
 		{
 			case 'copy':

Deleted: cms/trunk/includes/forums/functions_user.php
===================================================================
--- cms/trunk/includes/forums/functions_user.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/functions_user.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,1667 +0,0 @@
-<?php
-//**************************************************************//
-//  Vipeal CMS:													//
-//**************************************************************//
-//																//
-//  Copyright ? 2004 by Viperal									//
-//  http://www.viperal.com										//
-//																//
-//  Viperal CMS is released under the terms and conditions		//
-//  of the GNU General Public License version 2					//
-//																//
-//**************************************************************//
-
-// -------------------------------------------------------------
-//
-// $Id: functions_user.php,v 1.37 2004/05/02 13:05:38 acydburn Exp $
-//
-// FILENAME  : functions_user.php
-// STARTED   : Sat Dec 16, 2000
-// COPYRIGHT : ? 2001, 2003 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
-// 
-// -------------------------------------------------------------
-
-//
-// User functions
-//
-
-// Obtain user_ids from usernames or vice versa. Returns false on
-// success else the error string
-function user_get_id_name(&$user_id_ary, &$username_ary)
-{
-	global $_CLASS;
-
-	// Are both arrays already filled? Yep, return else
-	// are neither array filled? 
-	if ($user_id_ary && $username_ary)
-	{
-		return;
-	}
-	else if (!$user_id_ary && !$username_ary)
-	{
-		return 'NO_USERS';
-	}
-
-	$which_ary = ($user_id_ary) ? 'user_id_ary' : 'username_ary';
-
-	if ($$which_ary  && !is_array($$which_ary))
-	{
-		$$which_ary = array($$which_ary);
-	}
-
-	$sql_in = ($which_ary == 'user_id_ary') ? array_map('intval', $$which_ary) : preg_replace('#^[\s]*(.*?)[\s]*$#e', "\"'\" . \$_CLASS['core_db']->escape('\\1') . \"'\"", $$which_ary);
-	unset($$which_ary);
-
-	// Grab the user id/username records
-	$sql_where = ($which_ary == 'user_id_ary') ? 'user_id' : 'username';
-	$sql = 'SELECT user_id, username 
-		FROM ' . USERS_TABLE . " 
-		WHERE $sql_where IN (" . implode(', ', $sql_in) . ')';
-	$result = $_CLASS['core_db']->query($sql);
-
-	if (!($row = $_CLASS['core_db']->fetch_row_assoc($result)))
-	{
-		return 'NO_USERS';
-	}
-
-	$id_ary = $username_ary = array();
-	do
-	{
-		$username_ary[$row['user_id']] = $row['username'];
-		$user_id_ary[] = $row['user_id'];
-	}
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-	$_CLASS['core_db']->free_result($result);
-
-	return false;
-}
-
-// Updates a username across all relevant tables/fields
-function user_update_name($old_name, $new_name)
-{
-	global $config, $_CLASS;
-
-	$update_ary = array(
-		FORUMS_TABLE	=> array('forum_last_poster_name'), 
-		MODERATOR_TABLE	=> array('username'), 
-		POSTS_TABLE		=> array('post_username'), 
-		TOPICS_TABLE	=> array('topic_first_poster_name', 'topic_last_poster_name'),
-	);
-
-	foreach ($update_ary as $table => $field_ary)
-	{
-		foreach ($field_ary as $field)
-		{
-			$sql = "UPDATE $table 
-				SET $field = '$new_name' 
-				WHERE $field = '$old_name'";
-			$_CLASS['core_db']->query($sql);
-		}
-	}
-
-	if ($config['newest_username'] == $old_name)
-	{
-		set_config('newest_username', $new_name);
-	}
-}
-
-function user_delete($mode, $user_id)
-{
-	global $config, $_CLASS;
-	
-	$_CLASS['core_db']->sql_transaction();
-
-	switch ($mode)
-	{
-		case 'retain':
-			$sql = 'UPDATE ' . FORUMS_TABLE . '
-				SET forum_last_poster_id = ' . ANONYMOUS . " 
-				WHERE forum_last_poster_id = $user_id";
-			$_CLASS['core_db']->query($sql);
-
-			$sql = 'UPDATE ' . POSTS_TABLE . '
-				SET poster_id = ' . ANONYMOUS . " 
-				WHERE poster_id = $user_id";
-			$_CLASS['core_db']->query($sql);
-
-			$sql = 'UPDATE ' . TOPICS_TABLE . '
-				SET topic_poster = ' . ANONYMOUS . "
-				WHERE topic_poster = $user_id";
-			$_CLASS['core_db']->query($sql);
-
-			$sql = 'UPDATE ' . TOPICS_TABLE . '
-				SET topic_last_poster_id = ' . ANONYMOUS . "
-				WHERE topic_last_poster_id = $user_id";
-			$_CLASS['core_db']->query($sql);
-			break;
-
-		case 'remove':
-
-			if (!function_exists('delete_posts'))
-			{
-				global $site_file_root;
-
-				include($site_file_root.'includes/forums/functions_admin.php');
-			}
-
-			$sql = 'SELECT topic_id, COUNT(post_id) AS total_posts 
-				FROM ' . POSTS_TABLE . " 
-				WHERE poster_id = $user_id
-				GROUP BY topic_id";
-			$result = $_CLASS['core_db']->query($sql);
-
-			$topic_id_ary = array();
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-			{
-				$topic_id_ary[$row['topic_id']] = $row['total_posts'];
-			}
-			$_CLASS['core_db']->free_result($result);
-			
-			if (!count($topic_id_ary))
-			{
-				break;
-			}
-
-			$sql = 'SELECT topic_id, topic_replies, topic_replies_real 
-				FROM ' . TOPICS_TABLE . ' 
-				WHERE topic_id IN (' . implode(', ', array_keys($topic_id_ary)) . ')';
-			$result = $_CLASS['core_db']->query($sql);
-
-			$del_topic_ary = array();
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-			{
-				if (max($row['topic_replies'], $row['topic_replies_real']) + 1 == $topic_id_ary[$row['topic_id']])
-				{
-					$del_topic_ary[] = $row['topic_id'];
-				}
-			}
-			$_CLASS['core_db']->free_result($result);
-
-			if (sizeof($del_topic_ary))
-			{
-				$sql = 'DELETE FROM ' . TOPICS_TABLE . ' 
-					WHERE topic_id IN (' . implode(', ', $del_topic_ary) . ')';
-				$_CLASS['core_db']->query($sql);
-			}
-
-			// Delete posts, attachments, etc.
-			delete_posts('poster_id', $user_id);
-
-			break;
-	}
-
-	$table_ary = array(USERS_TABLE, USER_GROUP_TABLE, TOPICS_WATCH_TABLE, FORUMS_WATCH_TABLE, ACL_USERS_TABLE, TOPICS_TRACK_TABLE, FORUMS_TRACK_TABLE);
-
-	foreach ($table_ary as $table)
-	{
-		$sql = "DELETE FROM $table 
-			WHERE user_id = $user_id";
-		$_CLASS['core_db']->query($sql);
-	}
-
-	// Reset newest user info if appropriate
-	if ($config['newest_user_id'] == $user_id)
-	{
-		$sql = 'SELECT user_id, username 
-			FROM ' . USERS_TABLE . '
-			WHERE user_type IN (' . USER_NORMAL . ', ' . USER_FOUNDER . ')
-			ORDER BY user_id DESC
-			LIMIT 1';
-		$result = $_CLASS['core_db']->query($sql);
-
-		if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			set_config('newest_user_id', $row['user_id']);
-			set_config('newest_username', $row['username']);
-		}
-		$_CLASS['core_db']->freeresult($result);
-	}
-
-	set_config('num_users', $config['num_users'] - 1, TRUE);
-
-	$_CLASS['core_db']->sql_transaction('commit');
-
-	return false;
-}
-
-// Flips user_type from active to inactive and vice versa, handles
-// group membership updates
-function user_active_flip($user_id, $user_type, $user_actkey = false, $username = false)
-{
-	global $_CLASS;
-
-	$sql = 'SELECT group_id, group_name 
-		FROM ' . GROUPS_TABLE . " 
-		WHERE group_name IN ('REGISTERED', 'REGISTERED_COPPA', 'INACTIVE', 'INACTIVE_COPPA')";
-	$result = $_CLASS['core_db']->query($sql);
-
-	$group_id_ary = array();
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		$group_id_ary[$row['group_name']] = $row['group_id'];
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	$sql = 'SELECT group_id 
-		FROM ' . USER_GROUP_TABLE . " 
-		WHERE user_id = $user_id";
-	$result = $_CLASS['core_db']->query($sql);
-
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		if ($group_name = array_search($row['group_id'], $group_id_ary))
-		{
-			break;
-		}
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	$current_group = ($user_type == USER_NORMAL) ? 'REGISTERED' : 'INACTIVE';
-	$switch_group = ($user_type == USER_NORMAL) ? 'INACTIVE' : 'REGISTERED';
-
-	$new_group_id = $group_id_ary[str_replace($current_group, $switch_group, $group_name)];
-
-	$sql = 'UPDATE ' . USER_GROUP_TABLE . " 
-		SET group_id = $new_group_id 
-		WHERE user_id = $user_id
-			AND group_id = " . $group_id_ary[$group_name];
-	$_CLASS['core_db']->query($sql);
-
-	$sql_ary = array(
-		'user_type'		=> ($user_type == USER_NORMAL) ? USER_INACTIVE : USER_NORMAL
-	);
-
-	if ($group_id == $group_id_ary[$group_name])
-	{
-		$sql_ary['group_id'] = $new_group_id;
-	}
-
-	if ($user_actkey !== false)
-	{
-		$sql_ary['user_actkey'] = $user_actkey;
-	}
-
-	$sql = 'UPDATE ' . USERS_TABLE . ' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql_ary) . "
-		WHERE user_id = $user_id";
-	$_CLASS['core_db']->query($sql);
-
-	$_CLASS['auth']->acl_clear_prefetch($user_id);
-
-	if (!function_exists('add_log'))
-	{
-		global $site_file_root;
-
-		include($site_file_root.'includes/forums/functions_admin.php');
-	}
-
-	if (!$username)
-	{
-		$sql = 'SELECT username
-			FROM ' . USERS_TABLE . " 
-			WHERE user_id = $user_id";
-		$result = $_CLASS['core_db']->query($sql);
-		
-		extract($_CLASS['core_db']->fetch_row_assoc($result));
-		$_CLASS['core_db']->free_result($result);
-	}
-
-	$log = ($user_type == USER_NORMAL) ? 'LOG_USER_INACTIVE' : 'LOG_USER_ACTIVE';
-	add_log('admin', $log, $username);
-
-	return false;
-}
-
-function user_ban($mode, $ban, $ban_len, $ban_len_other, $ban_exclude, $ban_reason)
-{
-	global $_CLASS;
-
-	// Delete stale bans
-	$sql = "DELETE FROM " . BANLIST_TABLE . "
-		WHERE ban_end < " . time() . "
-			AND ban_end <> 0";
-	$_CLASS['core_db']->query($sql);
-
-	$ban_list = (!is_array($ban)) ? array_unique(explode("\n", $ban)) : $ban;
-	$ban_list_log = implode(', ', $ban_list);
-
-	$current_time = time();
-
-	if ($ban_len)
-	{
-		if ($ban_len != -1 || !$ban_len_other)
-		{
-			$ban_end = max($current_time, $current_time + ($ban_len) * 60);
-		}
-		else
-		{
-			$ban_other = explode('-', $ban_len_other);
-			$ban_end = max($current_time, gmmktime(0, 0, 0, $ban_other[1], $ban_other[2], $ban_other[0]));
-		}
-	}
-	else
-	{
-		$ban_end = 0;
-	}
-
-	$banlist = array();
-
-	switch ($mode)
-	{
-		case 'user':
-			$type = 'ban_userid';
-
-			if (in_array('*', $ban_list))
-			{
-				$banlist[] = '*';
-			}
-			else
-			{
-				$sql = 'SELECT user_id
-					FROM ' . USERS_TABLE . '
-					WHERE username IN (' . implode(', ', array_diff(preg_replace('#^[\s]*(.*?)[\s]*$#', "'\\1'", $ban_list), array("''"))) . ')';
-				$result = $_CLASS['core_db']->query($sql);
-
-				if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-				{
-					do
-					{
-						$banlist[] = $row['user_id'];
-					}
-					while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-				}
-			}
-			break;
-
-		case 'ip':
-			$type = 'ban_ip';
-
-			foreach ($ban_list as $ban_item)
-			{
-				if (preg_match('#^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})[ ]*\-[ ]*([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$#', trim($ban_item), $ip_range_explode))
-				{
-					// Don't ask about all this, just don't ask ... !
-					$ip_1_counter = $ip_range_explode[1];
-					$ip_1_end = $ip_range_explode[5];
-
-					while ($ip_1_counter <= $ip_1_end)
-					{
-						$ip_2_counter = ($ip_1_counter == $ip_range_explode[1]) ? $ip_range_explode[2] : 0;
-						$ip_2_end = ($ip_1_counter < $ip_1_end) ? 254 : $ip_range_explode[6];
-
-						if($ip_2_counter == 0 && $ip_2_end == 254)
-						{
-							$ip_2_counter = 256;
-							$ip_2_fragment = 256;
-
-							$banlist[] = "'$ip_1_counter.*'";
-						}
-
-						while ($ip_2_counter <= $ip_2_end)
-						{
-							$ip_3_counter = ($ip_2_counter == $ip_range_explode[2] && $ip_1_counter == $ip_range_explode[1]) ? $ip_range_explode[3] : 0;
-							$ip_3_end = ($ip_2_counter < $ip_2_end || $ip_1_counter < $ip_1_end) ? 254 : $ip_range_explode[7];
-
-							if ($ip_3_counter == 0 && $ip_3_end == 254)
-							{
-								$ip_3_counter = 256;
-								$ip_3_fragment = 256;
-
-								$banlist[] = "'$ip_1_counter.$ip_2_counter.*'";
-							}
-
-							while ($ip_3_counter <= $ip_3_end)
-							{
-								$ip_4_counter = ($ip_3_counter == $ip_range_explode[3] && $ip_2_counter == $ip_range_explode[2] && $ip_1_counter == $ip_range_explode[1]) ? $ip_range_explode[4] : 0;
-								$ip_4_end = ($ip_3_counter < $ip_3_end || $ip_2_counter < $ip_2_end) ? 254 : $ip_range_explode[8];
-
-								if ($ip_4_counter == 0 && $ip_4_end == 254)
-								{
-									$ip_4_counter = 256;
-									$ip_4_fragment = 256;
-
-									$banlist[] = "'$ip_1_counter.$ip_2_counter.$ip_3_counter.*'";
-								}
-
-								while ($ip_4_counter <= $ip_4_end)
-								{
-									$banlist[] = "'$ip_1_counter.$ip_2_counter.$ip_3_counter.$ip_4_counter'";
-									$ip_4_counter++;
-								}
-								$ip_3_counter++;
-							}
-							$ip_2_counter++;
-						}
-						$ip_1_counter++;
-					}
-				}
-				else if (preg_match('#^([\w\-_]\.?){2,}$#is', trim($ban_item)))
-				{
-					$ip_ary = gethostbynamel(trim($ban_item));
-
-					foreach ($ip_ary as $ip)
-					{
-						if (!empty($ip))
-						{
-							$banlist[] = "'" . $ip . "'";
-						}
-					}
-				}
-				else if (preg_match('#^([0-9]{1,3})\.([0-9\*]{1,3})\.([0-9\*]{1,3})\.([0-9\*]{1,3})$#', trim($ban_item)) || preg_match('#^[a-f0-9:]+\*?$#i', trim($ban_item)))
-				{
-					$banlist[] = "'" . trim($ban_item) . "'";
-				}
-				else if (preg_match('#^\*$#', trim($ban_item)))
-				{
-					$banlist[] = "'*'";
-				}
-			}
-			break;
-
-		case 'email':
-			$type = 'ban_email';
-
-			foreach ($ban_list as $ban_item)
-			{
-				if (preg_match('#^.*?@*|(([a-z0-9\-]+\.)+([a-z]{2,3}))$#i', trim($ban_item)))
-				{
-					$banlist[] = "'" . trim($ban_item) . "'";
-				}
-			}
-			break;
-	}
-
-	$sql = "SELECT $type
-		FROM " . BANLIST_TABLE . "
-		WHERE $type <> '' 
-			AND ban_exclude = $ban_exclude";
-	$result = $_CLASS['core_db']->query($sql);
-
-	if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		$banlist_tmp = array();
-		do
-		{
-			switch ($mode)
-			{
-				case 'user':
-					$banlist_tmp[] = $row['ban_userid'];
-					break;
-
-				case 'ip':
-					$banlist_tmp[] = "'" . $row['ban_ip'] . "'";
-					break;
-
-				case 'email':
-					$banlist_tmp[] = "'" . $row['ban_email'] . "'";
-					break;
-			}
-		}
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-
-		$banlist = array_unique(array_diff($banlist, $banlist_tmp));
-		unset($banlist_tmp);
-	}
-
-	if (sizeof($banlist))
-	{
-		$sql = '';
-		foreach ($banlist as $ban_entry)
-		{
-			switch (SQL_LAYER)
-			{
-				case 'mysql':
-					$sql .= (($sql != '') ? ', ' : '') . "($ban_entry, $current_time, $ban_end, $ban_exclude, '$ban_reason')";
-					break;
-					
-				case 'mysql4':
-				case 'mysqli':
-				case 'mssql':
-				case 'sqlite':
-					$sql .= (($sql != '') ? ' UNION ALL ' : '') . " SELECT $ban_entry, $current_time, $ban_end, $ban_exclude, '$ban_reason'";
-					break;
-
-				default:
-					$sql = 'INSERT INTO ' . BANLIST_TABLE . " ($type, ban_start, ban_end, ban_exclude, ban_reason)
-						VALUES ($ban_entry, $current_time, $ban_end, $ban_exclude, '$ban_reason')";
-					$_CLASS['core_db']->query($sql);
-			}
-		}
-
-		if ($sql)
-		{
-			$sql = 'INSERT INTO ' . BANLIST_TABLE . " ($type, ban_start, ban_end, ban_exclude, ban_reason)
-				VALUES $sql";
-			$_CLASS['core_db']->query($sql);
-		}
-
-		if (!$ban_exclude)
-		{
-			$sql = '';
-			switch ($mode)
-			{
-				case 'user':
-					$sql = 'WHERE session_user_id IN (' . implode(', ', $banlist) . ')';
-					break;
-
-				case 'ip':
-					$sql = 'WHERE session_ip IN (' . implode(', ', $banlist) . ')';
-					break;
-
-				case 'email':
-					$sql = 'SELECT user_id
-						FROM ' . USERS_TABLE . '
-						WHERE user_email IN (' . implode(', ', $banlist) . ')';
-					$result = $_CLASS['core_db']->query($sql);
-
-					$sql_in = array();
-					if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-					{
-						do
-						{
-							$sql_in[] = $row['user_id'];
-						}
-						while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-
-						$sql = 'WHERE session_user_id IN (' . str_replace('*', '%', implode(', ', $sql_in)) . ")";
-					}
-					break;
-			}
-
-			if ($sql)
-			{
-				$sql = 'DELETE FROM ' . SESSIONS_TABLE . "
-					$sql";
-				$_CLASS['core_db']->query($sql);
-			}
-		}
-
-		if (!function_exists('add_log'))
-		{
-			global $site_file_root;
-
-			include($site_file_root.'includes/forums/functions_admin.php');
-		}
-
-		// Update log
-		$log_entry = ($ban_exclude) ? 'LOG_BAN_EXCLUDE_' : 'LOG_BAN_';
-		add_log('admin', $log_entry . strtoupper($mode), $ban_reason, $ban_list_log);
-	}
-
-	return false;
-}
-
-function user_unban($mode, $ban)
-{
-	global $_CLASS;
-
-	// Delete stale bans
-	$sql = "DELETE FROM " . BANLIST_TABLE . "
-		WHERE ban_end < " . time() . "
-			AND ban_end <> 0";
-	$_CLASS['core_db']->query($sql);
-
-	$unban_sql = implode(', ', $ban);
-
-	if ($unban_sql)
-	{
-		$l_unban_list = '';
-		// Grab details of bans for logging information later
-		switch ($mode)
-		{
-			case 'user':
-				$sql = 'SELECT u.username AS unban_info
-					FROM ' . USERS_TABLE . ' u, ' . BANLIST_TABLE . " b 
-					WHERE b.ban_id IN ($unban_sql) 
-						AND u.user_id = b.ban_userid";
-				break;
-
-			case 'email':
-				$sql = 'SELECT ban_email AS unban_info 
-					FROM ' . BANLIST_TABLE . "
-					WHERE ban_id IN ($unban_sql)";
-				break;
-
-			case 'ip':
-				$sql = 'SELECT ban_ip AS unban_info 
-					FROM ' . BANLIST_TABLE . "
-					WHERE ban_id IN ($unban_sql)";
-				break;
-		}
-		$result = $_CLASS['core_db']->query($sql);
-
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$l_unban_list .= (($l_unban_list != '') ? ', ' : '') . $row['unban_info'];
-		}
-
-		$sql = 'DELETE FROM ' . BANLIST_TABLE . "
-			WHERE ban_id IN ($unban_sql)";
-		$_CLASS['core_db']->query($sql);
-
-		if (!function_exists('add_log'))
-		{
-			global $site_file_root;
-
-			include($site_file_root.'includes/forums/functions_admin.php');
-		}
-
-		add_log('admin', 'LOG_UNBAN_' . strtoupper($mode), $l_unban_list);
-	}
-
-	return false;
-
-}
-
-// Whois facility
-function user_ipwhois($ip)
-{
-	$ipwhois = '';
-
-	$match = array(
-		'#RIPE\.NET#is'				=> 'whois.ripe.net',
-		'#whois\.apnic\.net#is'		=> 'whois.apnic.net',
-		'#nic\.ad\.jp#is'			=> 'whois.nic.ad.jp',
-		'#whois\.registro\.br#is'	=> 'whois.registro.br'
-	);
-
-	if (($fsk = @fsockopen('whois.arin.net', 43)))
-	{
-		fputs($fsk, "$ip\n");
-		while (!feof($fsk))
-		{
-			$ipwhois .= fgets($fsk, 1024);
-		}
-		@fclose($fsk);
-	}
-
-	foreach (array_keys($match) as $server)
-	{
-		if (preg_match($server, $ipwhois))
-		{
-			$ipwhois = '';
-			if (($fsk = @fsockopen($match[$server], 43)))
-			{
-				fputs($fsk, "$ip\n");
-				while (!feof($fsk))
-				{
-					$ipwhois .= fgets($fsk, 1024);
-				}
-				@fclose($fsk);
-			}
-			break;
-		}
-	}
-
-	return $ipwhois;
-}
-//
-// Data validation ... used primarily but not exclusively by
-// ucp modules
-//
-
-// "Master" function for validating a range of data types
-function validate_data($data, $val_ary)
-{
-	$error = array();
-
-	foreach ($val_ary as $var => $val_seq)
-	{
-		if (!is_array($val_seq[0]))
-		{
-			$val_seq = array($val_seq);
-		}
-
-		foreach ($val_seq as $validate)
-		{
-			$function = array_shift($validate);
-			array_unshift($validate, $data[$var]);
-
-			if ($result = call_user_func_array('validate_' . $function, $validate))
-			{
-				$error[] = $result . '_' . strtoupper($var);
-			}
-		}
-	}
-
-	return $error;
-}
-
-function validate_string($string, $optional = false, $min = 0, $max = 0)
-{
-	if (empty($string) && $optional)
-	{
-		return false;
-	}
-
-	if ($min && strlen($string) < $min)
-	{
-		return 'TOO_SHORT';
-	}
-	else if ($max && strlen($string) > $max)
-	{
-		return 'TOO_LONG';
-	}
-
-	return false;
-}
-
-function validate_num($num, $optional = false, $min = 0, $max = 1E99)
-{
-	if (empty($num) && $optional)
-	{
-		return false;
-	}
-
-	if ($num < $min)
-	{
-		return 'TOO_SMALL';
-	}
-	else if ($num > $max) 
-	{
-		return 'TOO_LARGE';
-	}
-
-	return false;
-}
-
-function validate_match($string, $optional = false, $match)
-{
-	if (empty($string) && $optional)
-	{
-		return false;
-	}
-
-	if (!preg_match($match, $string))
-	{
-		return 'WRONG_DATA';
-	}
-	return false;
-}
-
-// Check to see if the username has been taken, or if it is disallowed.
-// Also checks if it includes the " character, which we don't allow in usernames.
-// Used for registering, changing names, and posting anonymously with a username
-function validate_username($username)
-{
-	global $_CORE_CONFIG, $_CLASS;
-
-	if (strtolower($_CLASS['core_user']->data['username']) == strtolower($username))
-	{
-		return false;
-	}
-
-	if (!preg_match('#^' . str_replace('\\\\', '\\', $_CORE_CONFIG['user']['allow_name_chars']) . '$#i', $username))
-	{
-		return 'INVALID_CHARS';
-	}
-
-	$sql = 'SELECT username
-		FROM ' . USERS_TABLE . "
-		WHERE LOWER(username) = '" . strtolower($_CLASS['core_db']->escape($username)) . "'";
-	$result = $_CLASS['core_db']->query($sql);
-
-	if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		return 'USERNAME_TAKEN';
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	$sql = 'SELECT group_name
-		FROM ' . GROUPS_TABLE . "
-		WHERE LOWER(group_name) = '" . strtolower($_CLASS['core_db']->escape($username)) . "'";
-	$result = $_CLASS['core_db']->query($sql);
-
-	if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		return 'USERNAME_TAKEN';
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	$sql = 'SELECT disallow_username
-		FROM ' . DISALLOW_TABLE;
-	$result = $_CLASS['core_db']->query($sql);
-
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		if (preg_match('#' . str_replace('*', '.*?', preg_quote($row['disallow_username'], '#')) . '#i', $username))
-		{
-			return 'USERNAME_DISALLOWED';
-		}
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	$sql = 'SELECT word
-		FROM  ' . WORDS_TABLE;
-	$result = $_CLASS['core_db']->query($sql);
-
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		if (preg_match('#(' . str_replace('\*', '.*?', preg_quote($row['word'], '#')) . ')#i', $username))
-		{
-			return 'USERNAME_DISALLOWED';
-		}
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	return false;
-}
-
-// TODO?
-// Ability to limit types of email address ... not by banning, seperate table
-// capability to require (or deny) use of certain addresses when user is
-// registering from certain IP's/hosts
-
-// Check to see if email address is banned or already present in the DB
-function validate_email($email)
-{
-	global $_CORE_CONFIG, $_CLASS;
-
-	if (strtolower($_CLASS['core_user']->data['user_email']) == strtolower($email))
-	{
-		return false;
-	}
-
-	if (!preg_match('#^[a-z0-9\.\-_\+]+?@(.*?\.)*?[a-z0-9\-_]+?\.[a-z]{2,4}$#i', $email))
-	{
-		return 'EMAIL_INVALID';
-	}
-
-	$sql = 'SELECT ban_email
-		FROM ' . BANLIST_TABLE;
-	$result = $_CLASS['core_db']->query($sql);
-
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		if (preg_match('#^' . str_replace('*', '.*?', $row['ban_email']) . '$#i', $email))
-		{
-			return 'EMAIL_BANNED';
-		}
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	if (!$_CORE_CONFIG['user']['allow_emailreuse'])
-	{
-		$sql = 'SELECT user_email_hash
-			FROM ' . USERS_TABLE . "
-			WHERE user_email_hash = " . crc32(strtolower($email)) . strlen($email);
-		$result = $_CLASS['core_db']->query($sql);
-
-		if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			return 'EMAIL_TAKEN';
-		}
-		$_CLASS['core_db']->free_result($result);
-	}
-
-	return false;
-}
-
-//
-// Avatar functions
-//
-
-function avatar_delete($id)
-{
-	global $config, $_CORE_CONFIG;
-
-	if (file_exists($config['avatar_path'] . '/' . $id))
-	{
-		@unlink($config['avatar_path'] . '/' . $id);
-	}
-
-	return false;
- }
-
-function avatar_remote($data, &$error)
-{
-	global $config, $_CLASS;
-
-	if (!preg_match('#^(http|https|ftp)://#i', $data['remotelink']))
-	{
-		$data['remotelink'] = 'http://' . $data['remotelink'];
-	}
-
-	if (!preg_match('#^(http|https|ftp)://(.*?\.)*?[a-z0-9\-]+?\.[a-z]{2,4}:?([0-9]*?).*?\.(gif|jpg|jpeg|png)$#i', $data['remotelink']))
-	{
-		$error[] = $_CLASS['core_user']->lang['AVATAR_URL_INVALID'];
-		return false;
-	}
-
-	if ((!($data['width'] || $data['height']) || $data['remotelink'] != $_CLASS['core_user']->data['user_avatar']) && ($config['avatar_max_width'] || $config['avatar_max_height']))
-	{
-		list($width, $height) = @getimagesize($data['remotelink']);
-
-		if (!$width || !$height)
-		{
-			$error[] = $_CLASS['core_user']->lang['AVATAR_NO_SIZE'];
-			return false;
-		}
-		else if ($width > $config['avatar_max_width'] || $height > $config['avatar_max_height'])
-		{
-			$error[] = sprintf($_CLASS['core_user']->lang['AVATAR_WRONG_SIZE'], $config['avatar_max_width'], $config['avatar_max_height']);
-			return false;
-		}
-	}
-	else if ($data['width'] > $config['avatar_max_width'] || $data['height'] > $config['avatar_max_height'])
-	{
-		$error[] = sprintf($_CLASS['core_user']->lang['AVATAR_WRONG_SIZE'], $config['avatar_max_width'], $config['avatar_max_height']);
-		return false;
-	}
-
-	return array(AVATAR_REMOTE, $data['remotelink'], $width, $height);
-}
-
-function avatar_upload($data, &$error)
-{
-	global $site_file_root, $config, $_CLASS;
-
-	// Init upload class
-	include_once($site_file_root.'includes/forums/functions_upload.php');
-	
-	$upload = new fileupload('AVATAR_', array('jpg', 'jpeg', 'gif', 'png'), $config['avatar_filesize'], $config['avatar_min_width'], $config['avatar_min_height'], $config['avatar_max_width'], $config['avatar_max_height']);
-							
-	if (!empty($_FILES['uploadfile']['name']))
-	{
-		$file = $upload->form_upload('uploadfile');
-	}
-	else
-	{
-		$file = $upload->remote_upload($data['uploadurl']);
-	}
-
-	$file->clean_filename('real', $_CLASS['core_user']->data['user_id'] . '_');
-	$file->move_file($config['avatar_path']);
-
-	if (sizeof($file->error))
-	{
-		$file->remove();
-		$error = array_merge($error, $file->error);
-	}
-	
-	return array(AVATAR_UPLOAD, $file->get('realname'), $file->get('width'), $file->get('height'));
-}
-
-//
-// Usergroup functions
-//
-
-// Add or edit a group. If we're editing a group we only update user
-// parameters such as rank, etc. if they are changed
-function group_create($group_id, $type, $name, $desc)
-{
-	global $config, $_CLASS, $file_upload;
-
-	$error = array();
-
-	// Check data
-	if (!strlen($name) || strlen($name) > 40)
-	{
-		$error[] = (!strlen($name)) ? $_CLASS['core_user']->lang['GROUP_ERR_USERNAME'] : $_CLASS['core_user']->lang['GROUP_ERR_USER_LONG'];
-	}
-
-	if (strlen($desc) > 255)
-	{
-		$error[] = $_CLASS['core_user']->lang['GROUP_ERR_DESC_LONG'];
-	}
-
-	if (!in_array($type, array(GROUP_OPEN, GROUP_CLOSED, GROUP_HIDDEN, GROUP_SPECIAL, GROUP_FREE)))
-	{
-		$error[] = $_CLASS['core_user']->lang['GROUP_ERR_TYPE'];
-	}
-
-	if (!sizeof($error))
-	{
-		$sql_ary = array(
-			'group_name'			=> (string) $name,
-			'group_description'		=> (string) $desc,
-			'group_type'			=> (int) $type,
-		);
-
-		$attribute_ary = array('group_colour' => 'string', 'group_rank' => 'int', 'group_avatar' => 'string', 'group_avatar_type' => 'int', 'group_avatar_width' => 'int', 'group_avatar_height' => 'int', 'group_receive_pm' => 'int', 'group_message_limit' => 'int');
-
-		$i = 4;
-		foreach ($attribute_ary as $attribute => $type)
-		{
-			if (func_num_args() > $i && ($value = func_get_arg($i)) !== false)
-			{
-				settype($value, $type);
-
-				$sql_ary[$attribute] = $$attribute = $value;
-			}
-			$i++;
-		}
-		
-		$group_only_ary = array('group_receive_pm' => 'int', 'group_message_limit' => 'int');
-
-		foreach ($group_only_ary as $attribute => $type)
-		{
-			if (func_num_args() > $i && ($value = func_get_arg($i)) !== false)
-			{
-				settype($value, $type);
-
-				$sql_ary[$attribute] = $value;
-			}
-			$i++;
-		}
-		
-		$sql = ($group_id) ? 'UPDATE ' . GROUPS_TABLE . ' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql_ary) . "	WHERE group_id = $group_id" : 'INSERT INTO ' . GROUPS_TABLE . ' ' . $_CLASS['core_db']->sql_build_array('INSERT', $sql_ary);
-		$_CLASS['core_db']->query($sql);
-
-		$sql_ary = array();
-		foreach ($attribute_ary as $attribute => $type)
-		{
-			if (isset($$attribute))
-			{
-				$sql_ary[str_replace('group', 'user', $attribute)] = $$attribute;
-			}
-		}
-
-		if (sizeof($sql_ary))
-		{
-			$sql = 'UPDATE ' . USERS_TABLE . ' SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql_ary) . "
-				WHERE group_id = $group_id";
-			$_CLASS['core_db']->query($sql);
-		}
-
-		if (!function_exists('add_log'))
-		{
-			global $site_file_root;
-
-			include($site_file_root.'includes/forums/functions_admin.php');
-		}
-
-		$log = ($group_id) ? 'LOG_GROUP_UPDATED' : 'LOG_GROUP_CREATED';
-		add_log('admin', $log, $name);
-	}
-
-	return (sizeof($error)) ? $error : false;
-}
-
-function group_delete($group_id, $group_name = false)
-{
-	global $_CLASS;
-
-	if (!$group_name)
-	{
-		$sql = 'SELECT group_name
-			FROM ' . GROUPS_TABLE . " 
-			WHERE group_id = $group_id";
-		$result = $_CLASS['core_db']->query($sql);
-
-		if (!extract($_CLASS['core_db']->fetch_row_assoc($result)))
-		{
-			trigger_error("Could not obtain name of group $group_id", E_USER_ERROR);
-		}
-		$_CLASS['core_db']->free_result($result);
-	}
-
-	$start = 0;
-
-	do
-	{
-		$user_id_ary = $username_ary = array();
-
-		// Batch query for group members, call group_user_del
-		$sql = 'SELECT u.user_id, u.username
-			FROM ' . USER_GROUP_TABLE . ' ug, ' . USERS_TABLE . " u
-			WHERE ug.group_id = $group_id
-				AND u.user_id = ug.user_id 
-			LIMIT $start, 200";
-		$result = $_CLASS['core_db']->query($sql);
-
-		if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			do
-			{
-				$user_id_ary[] = $row['user_id'];
-				$username_ary[] = $row['username'];
-
-				$start++;
-			}
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-
-			group_user_del($group_id, $user_id_ary, $username_ary, $group_name);
-		}
-		else
-		{
-			$start = 0;
-		}
-		$_CLASS['core_db']->free_result($result);
-	}
-	while ($start);
-	
-	// Delete group
-	$sql = 'DELETE FROM ' . GROUPS_TABLE . " 
-		WHERE group_id = $group_id";
-	$_CLASS['core_db']->query($sql);
-
-	if (!function_exists('add_log'))
-	{
-		global $site_file_root;
-
-		include($site_file_root.'includes/forums/functions_admin.php');
-	}
-
-	add_log('admin', 'LOG_GROUP_DELETE', $group_name);
-
-	return false;
-}
-
-function group_user_add($group_id, $user_id_ary = false, $username_ary = false, $group_name = false, $default = false, $leader = 0)
-{
-	global $_CLASS;
-
-	// We need both username and user_id info
-	user_get_id_name($user_id_ary, $username_ary);
-
-	// Remove users who are already members of this group
-	$sql = 'SELECT user_id, group_leader  
-		FROM ' . USER_GROUP_TABLE . '   
-		WHERE user_id IN (' . implode(', ', $user_id_ary) . ") 
-			AND group_id = $group_id";
-	$result = $_CLASS['core_db']->query($sql);
-
-	$add_id_ary = $update_id_ary = array();
-	if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		do
-		{
-			$add_id_ary[] = $row['user_id'];
-
-			if ($leader && !$row['group_leader'])
-			{
-				$update_id_ary[] = $row['user_id'];
-			}
-		}
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	// Do all the users exist in this group?
-	$add_id_ary = array_diff($user_id_ary, $add_id_ary);
-	unset($id_ary);
-
-	// If we have no users 
-	if (!sizeof($add_id_ary) && !sizeof($update_id_ary))
-	{
-		return 'GROUP_USERS_EXIST';
-	}
-
-	if (sizeof($add_id_ary))
-	{
-		// Insert the new users 
-		switch (SQL_LAYER)
-		{
-			case 'mysql':
-			case 'mysql4':
-			case 'mysqli':
-			case 'mssql':
-			case 'sqlite':
-
-				$sql = 'INSERT INTO ' . USER_GROUP_TABLE . " (user_id, group_id, group_leader) 
-					VALUES " . implode(', ', preg_replace('#^([0-9]+)$#', "(\\1, $group_id, $leader)",  $add_id_ary));
-				$_CLASS['core_db']->query($sql);
-				break;
-			
-			default:
-				foreach ($add_id_ary as $user_id)
-				{
-					$sql = 'INSERT INTO ' . USER_GROUP_TABLE . " (user_id, group_id, group_leader)
-						VALUES ($user_id, $group_id, $leader)";
-					$_CLASS['core_db']->query($sql);
-				}
-				break;
-		}
-	}
-
-	$usernames = array();
-	if (sizeof($update_id_ary))
-	{
-		$sql = 'UPDATE ' . USER_GROUP_TABLE . ' 
-			SET group_leader = 1 
-			WHERE user_id IN (' . implode(', ', $update_id_ary) . ")
-				AND group_id = $group_id";
-		$_CLASS['core_db']->query($sql);
-
-		foreach ($update_id_ary as $id)
-		{
-			$usernames[] = $username_ary[$id];
-		}
-	}
-	else
-	{
-		foreach ($add_id_ary as $id)
-		{
-			$usernames[] = $username_ary[$id];
-		}
-	}
-
-	if ($default)
-	{
-		$attribute_ary = array('group_colour' => 'string', 'group_rank' => 'int', 'group_avatar' => 'string', 'group_avatar_type' => 'int', 'group_avatar_width' => 'int', 'group_avatar_height' => 'int');
-	
-		// Were group attributes passed to the function? If not we need to obtain them
-		if (func_num_args() > 6)
-		{
-			$i = 6;
-			foreach ($attribute_ary as $attribute => $type)
-			{
-				if (func_num_args() > $i && ($value = func_get_arg($i)) !== false)
-				{
-					settype($value, $type);
-
-					$sql_ary[$attribute] = $$attribute = $value;
-				}
-				$i++;
-			}
-		}
-		else
-		{
-			$sql = 'SELECT group_colour, group_rank, group_avatar, group_avatar_type, group_avatar_width, group_avatar_height  
-				FROM ' . GROUPS_TABLE . " 
-				WHERE group_id = $group_id";
-			$result = $_CLASS['core_db']->query($sql);
-
-			if (!extract($_CLASS['core_db']->fetch_row_assoc($result)))
-			{
-				trigger_error("Could not obtain group attributes for group_id $group_id", E_USER_ERROR);
-			}
-
-			if (!$group_avatar_width)
-			{
-				unset($group_avatar_width);
-			}
-			if (!$group_avatar_height)
-			{
-				unset($group_avatar_height);
-			}
-		}
-
-		$sql_set = '';
-		foreach ($attribute_ary as $attribute => $type)
-		{
-			if (isset($$attribute))
-			{
-				$field = str_replace('group_', 'user_', $attribute);
-
-				switch ($type)
-				{
-					case 'int':
-						$sql_set .= ", $field = " . (int) $$attribute;
-						break;
-					case 'double':
-						$sql_set .= ", $field = " . (double) $$attribute;
-						break;
-					case 'string':
-						$sql_set .= ", $field = '" . (string) $_CLASS['core_db']->escape($$attribute) . "'";
-						break;
-				}
-			}
-		}
-
-		$sql = 'UPDATE ' . USERS_TABLE . "
-			SET group_id = $group_id$sql_set  
-			WHERE user_id IN (" . implode(', ', $user_id_ary) . ')';
-		$_CLASS['core_db']->query($sql);
-	}
-
-	// Clear permissions cache of relevant users
-	$_CLASS['auth']->acl_clear_prefetch($user_id_ary);
-
-	if (!$group_name)
-	{
-		$sql = 'SELECT group_name
-			FROM ' . GROUPS_TABLE . " 
-			WHERE group_id = $group_id";
-		$result = $_CLASS['core_db']->query($sql);
-
-		if (!extract($_CLASS['core_db']->fetch_row_assoc($result)))
-		{
-			trigger_error("Could not obtain name of group $group_id", E_USER_ERROR);
-		}
-	}
-
-	if (!function_exists('add_log'))
-	{
-		global $site_file_root;
-
-		include($site_file_root.'includes/forums/functions_admin.php');
-	}
-
-	$log = ($leader) ? 'LOG_MODS_ADDED' : 'LOG_USERS_ADDED';
-
-	add_log('admin', $log, $group_name, implode(', ', $username_ary));
-
-	unset($username_ary);
-	unset($user_id_ary);
-
-	return false;
-}
-
-// Remove a user/s from a given group. When we remove users we update their
-// default group_id. We do this by examining which "special" groups they belong
-// to. The selection is made based on a reasonable priority system
-function group_user_del($group_id, $user_id_ary = false, $username_ary = false, $group_name = false)
-{
-	global $_CLASS;
-
-	$group_order = array('ADMINISTRATORS', 'SUPER_MODERATORS', 'REGISTERED_COPPA', 'REGISTERED', 'BOTS', 'GUESTS');
-
-	$attribute_ary = array('group_colour' => 'string', 'group_rank' => 'int', 'group_avatar' => 'string', 'group_avatar_type' => 'int', 'group_avatar_width' => 'int', 'group_avatar_height' => 'int');
-
-	// We need both username and user_id info
-	user_get_id_name($user_id_ary, $username_ary);
-
-	$sql = 'SELECT * 
-		FROM ' . GROUPS_TABLE . ' 
-		WHERE group_name IN (' . implode(', ', preg_replace('#^(.*)$#', "'\\1'", $group_order)) . ')';
-	$result = $_CLASS['core_db']->query($sql);
-
-	$group_order_id = $special_group_data = array();
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		$group_order_id[$row['group_name']] = $row['group_id'];
-
-		$special_group_data[$row['group_id']]['group_colour']			= $row['group_colour'];
-		$special_group_data[$row['group_id']]['group_rank']				= $row['group_rank'];
-		$special_group_data[$row['group_id']]['group_avatar']			= $row['group_avatar'];
-		$special_group_data[$row['group_id']]['group_avatar_type']		= $row['group_avatar_type'];
-		$special_group_data[$row['group_id']]['group_avatar_width']		= $row['group_avatar_width'];
-		$special_group_data[$row['group_id']]['group_avatar_height']	= $row['group_avatar_height'];
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	// What special group memberships exist for these users?
-	$sql = 'SELECT g.group_id, g.group_name, ug.user_id 
-		FROM ' . USER_GROUP_TABLE . ' ug, ' . GROUPS_TABLE . ' g 
-		WHERE ug.user_id IN (' . implode(', ', $user_id_ary) . ") 
-			AND g.group_id = ug.group_id
-			AND g.group_id <> $group_id 
-			AND g.group_type = " . GROUP_SPECIAL . '
-		ORDER BY ug.user_id, g.group_id';
-	$result = $_CLASS['core_db']->query($sql);
-
-	$temp_ary = array();
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		if (!isset($temp_ary[$row['user_id']]) || array_search($row['group_name'], $group_order) < $temp_ary[$row['user_id']])
-		{
-			$temp_ary[$row['user_id']] = $row['group_id'];
-		}
-	}
-	$_CLASS['core_db']->free_result($result);
-
-	$sql_where_ary = array();
-	foreach ($temp_ary as $uid => $gid)
-	{
-		$sql_where_ary[$gid][] = $uid;
-	}
-	unset($temp_ary);
-
-	foreach ($special_group_data as $gid => $default_data_ary)
-	{
-		if ($sql_where = implode(', ', $sql_where_ary[$gid]))
-		{
-			$sql_set = '';
-			foreach ($special_group_data[$gid] as $attribute => $value)
-			{
-				$field = str_replace('group_', 'user_', $attribute);
-
-				switch ($attribute_ary[$attribute])
-				{
-					case 'int':
-						$sql_set .= ", $field = " . (int) $value;
-						break;
-					case 'double':
-						$sql_set .= ", $field = " . (double) $value;
-						break;
-					case 'string':
-						$sql_set .= ", $field = '" . $_CLASS['core_db']->escape($value) . "'";
-						break;
-				}
-			}
-
-			// Set new default
-			$sql = 'UPDATE ' . USERS_TABLE . " 
-				SET group_id = $gid$sql_set 
-				WHERE user_id IN (" . implode(', ', $sql_where_ary[$gid]) . ')';
-			$_CLASS['core_db']->query($sql);
-		}
-	}
-	unset($special_group_data);
-
-	$sql = 'DELETE FROM ' . USER_GROUP_TABLE . " 
-		WHERE group_id = $group_id
-			AND user_id IN (" . implode(', ', $user_id_ary) . ')';
-	$_CLASS['core_db']->query($sql);
-	unset($default_ary);
-
-	// Clear permissions cache of relevant users
-	$_CLASS['auth']->acl_clear_prefetch($user_id_ary);
-
-	if (!$group_name)
-	{
-		$sql = 'SELECT group_name
-			FROM ' . GROUPS_TABLE . " 
-			WHERE group_id = $group_id";
-		$result = $_CLASS['core_db']->query($sql);
-
-		if (!extract($_CLASS['core_db']->fetch_row_assoc($result)))
-		{
-			trigger_error("Could not obtain name of group $group_id", E_USER_ERROR);
-		}
-	}
-
-	if (!function_exists('add_log'))
-	{
-		global $site_file_root;
-
-		include($site_file_root.'includes/forums/functions_admin.php');
-	}
-
-	$log = 'LOG_GROUP_REMOVE';
-
-	add_log('admin', $log, $group_name, implode(', ', $username_ary));
-
-	unset($username_ary);
-	unset($user_id_ary);
-
-	return false;
-}
-
-// This is used to promote (to leader), demote or set as default a member/s
-function group_user_attributes($action, $group_id, $user_id_ary = false, $username_ary = false, $group_name = false)
-{
-	global $_CLASS;
-
-	// We need both username and user_id info
-	user_get_id_name($user_id_ary, $username_ary);
-
-	switch ($action)
-	{
-		case 'demote':
-		case 'promote':
-			$sql = 'UPDATE ' . USER_GROUP_TABLE . '
-				SET group_leader = ' . (($action == 'promote') ? 1 : 0) . "  
-				WHERE group_id = $group_id
-					AND user_id IN (" . implode(', ', $user_id_ary) . ')';
-			$_CLASS['core_db']->query($sql);
-
-			$log = ($action == 'promote') ? 'LOG_GROUP_PROMOTED' : 'LOG_GROUP_DEMOTED';
-			break;
-
-		case 'approve':
-			$sql = 'UPDATE ' . USER_GROUP_TABLE . " 
-				SET user_pending = 0 
-				WHERE group_id = $group_id 
-					AND user_id IN (" . implode(', ', $user_id_ary) . ')';
-			$_CLASS['core_db']->query($sql);
-
-			$log = 'LOG_GROUP_APPROVE';
-			break;
-
-		case 'default':
-			$attribute_ary = array('group_colour' => 'string', 'group_rank' => 'int', 'group_avatar' => 'string', 'group_avatar_type' => 'int', 'group_avatar_width' => 'int', 'group_avatar_height' => 'int');
-
-			// Were group attributes passed to the function? If not we need
-			// to obtain them
-			if (func_num_args() > 5)
-			{
-				$i = 5;
-				foreach ($attribute_ary as $attribute => $type)
-				{
-					if (func_num_args() > $i && ($value = func_get_arg($i)) !== false)
-					{
-						settype($value, $type);
-
-						$sql_ary[$attribute] = $$attribute = $value;
-					}
-					$i++;
-				}
-			}
-			else
-			{
-				$sql = 'SELECT group_colour, group_rank, group_avatar, group_avatar_type, group_avatar_width, group_avatar_height 
-					FROM ' . GROUPS_TABLE . " 
-					WHERE group_id = $group_id";
-				$result = $_CLASS['core_db']->query($sql);
-
-				if (!extract($_CLASS['core_db']->fetch_row_assoc($result)))
-				{
-					return 'NO_GROUP';
-				}
-				$_CLASS['core_db']->free_result($result);
-
-				if (!$group_avatar_width)
-				{
-					unset($group_avatar_width);
-				}
-				if (!$group_avatar_height)
-				{
-					unset($group_avatar_height);
-				}
-			}
-
-			// FAILURE HERE when grabbing data from DB and checking "isset" ... will
-			// be true for all similar functionality
-
-			$sql_set = '';
-			foreach ($attribute_ary as $attribute => $type)
-			{
-				if (isset($$attribute))
-				{
-					$field = str_replace('group_', 'user_', $attribute);
-
-					switch ($type)
-					{
-						case 'int':
-							$sql_set .= ", $field = " . (int) $$attribute;
-							break;
-						case 'double':
-							$sql_set .= ", $field = " . (double) $$attribute;
-							break;
-						case 'string':
-							$sql_set .= ", $field = '" . (string) $_CLASS['core_db']->escape($$attribute) . "'";
-							break;
-					}
-				}
-			}
-
-			$sql = 'UPDATE ' . USERS_TABLE . "
-				SET group_id = $group_id$sql_set  
-				WHERE user_id IN (" . implode(', ', $user_id_ary) . ')';
-			$_CLASS['core_db']->query($sql);
-
-			$log = 'LOG_GROUP_DEFAULTS';
-			break;
-	}
-
-	if (!function_exists('add_log'))
-	{
-		global $site_file_root;
-
-		include($site_file_root.'includes/forums/functions_admin.php');
-	}
-
-	// Clear permissions cache of relevant users
-	$_CLASS['auth']->acl_clear_prefetch($user_id_ary);
-
-	if (!$group_name)
-	{
-		$sql = 'SELECT group_name
-			FROM ' . GROUPS_TABLE . " 
-			WHERE group_id = $group_id";
-		$result = $_CLASS['core_db']->query($sql);
-
-		if (!extract($_CLASS['core_db']->fetch_row_assoc($result)))
-		{
-			trigger_error("Could not obtain name of group $group_id", E_USER_ERROR);
-		}
-	}
-
-	add_log('admin', $log, $group_name, implode(', ', $username_ary));
-
-	unset($username_ary);
-	unset($user_id_ary);
-
-	return false;
-}
-
-/**
-* Obtain either the members of a specified group, the groups the specified user is subscribed to
-* or checking if a specified user is in a specified group
-*
-* Note: Extend select statement as needed
-* Note2: Never use this more than once... first group your users/groups
-*/
-function group_memberships($group_id_ary = false, $user_id_ary = false, $return_bool = false)
-{
-	global $_CLASS;
-
-	if (!$group_id_ary && !$user_id_ary)
-	{
-		return true;
-	}
-
-	$sql = 'SELECT group_id, user_id, user_status
-		FROM ' . USER_GROUP_TABLE . '
-		WHERE ';
-
-	if ($group_id_ary && $user_id_ary)
-	{
-		$sql .= " group_id " . ((is_array($group_id_ary)) ? ' IN (' . implode(', ', $group_id_ary) . ')' : " = $group_id_ary") . "
-				AND user_id " . ((is_array($user_id_ary)) ? ' IN (' . implode(', ', $user_id_ary) . ')' : " = $user_id_ary");
-	}
-	else if ($group_id)
-	{
-		$sql .= " group_id " . ((is_array($group_id_ary)) ? ' IN (' . implode(', ', $group_id_ary) . ')' : " = $group_id_ary");
-	}
-	else if ($user_id_ary)
-	{
-		$sql .= " user_id " . ((is_array($user_id_ary)) ? ' IN (' . implode(', ', $user_id_ary) . ')' : " = $user_id_ary");
-	}
-	
-	$result = ($return_bool) ? $_CLASS['core_db']->query_limit($sql, 1) : $_CLASS['core_db']->query($sql);
-	
-	$row = $_CLASS['core_db']->fetch_row_assoc($result);
-
-	if ($return_bool)
-	{
-		$_CLASS['core_db']->free_result($result);
-		return ($row) ? true : false;
-	}
-
-	$result = array();
-
-	do
-	{
-		$result[] = $row;
-	}
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-	
-	return $result;
-}
-
-?>
\ No newline at end of file

Modified: cms/trunk/includes/forums/message_parser.php
===================================================================
--- cms/trunk/includes/forums/message_parser.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/forums/message_parser.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -367,17 +367,11 @@
 		// We remove the hardcoded elements from the code block here because it is not used in code blocks
 		// Having it here saves us one preg_replace per message containing [code] blocks
 		// Additionally, magic url parsing should go after parsing bbcodes, but for safety those are stripped out too...
-		$htm_match = array(
-			'#<!\-\- e \-\-><a href="mailto:(.*?)">.*?</a><!\-\- e \-\->#',
-			'#<!\-\- m \-\-><a href="(.*?)" target="_blank">.*?</a><!\-\- m \-\->#',
-			'#<!\-\- w \-\-><a href="http:\/\/(.*?)" target="_blank">.*?</a><!\-\- w \-\->#',
-			'#<!\-\- l \-\-><a href="(.*?)">.*?</a><!\-\- l \-\->#',
-			'#<!\-\- s(.*?) \-\-><img src="\{SMILIES_PATH\}\/.*? \/><!\-\- s\1 \-\->#',
-			'#<!\-\- h \-\-><(.*?)><!\-\- h \-\->#',
-			'#&\#([0-9]+);#',
-		);
-		$htm_replace = array('\1', '\1', '\1', '\1', '\1', '&lt;\1&gt;', '&amp;#\1;');
+		$htm_match = get_preg_expression('bbcode_htm');
+		$htm_match[3] = '#&\#([0-9]+);#';
+		Unset($htm_match[4]);
 
+		$htm_replace = array('\1', '\2', '\1', '&amp;#\1;');
 		$out = '';
 
 		do
@@ -512,8 +506,9 @@
 
 		do
 		{
-			$pos = strlen($in);
-			for ($i = 0; $i < strlen($tok); ++$i)
+			$pos = strlen($in);
+			$tok_len = strlen($tok);
+			for ($i = 0; $i < $tok_len; ++$i)
 			{
 				$tmp_pos = strpos($in, $tok{$i});
 
@@ -531,7 +526,7 @@
 			if ($tok == ']')
 			{
 				// if $tok is ']' the buffer holds a tag
-				if ($buffer == '/list' && sizeof($list_end_tags))
+				if (strtolower($buffer) == '/list' && sizeof($list_end_tags))
 				{
 					$out .= array_pop($list_end_tags) . ']';
 					$tok = '[';
@@ -546,7 +541,13 @@
 					else
 					{
 						array_push($list_end_tags, '/list:o:' . $this->bbcode_uid);
-					}
+					}
+
+					if (strtolower(substr($buffer, 0, 4)) == 'list')
+					{
+						$buffer = 'list' . substr($buffer, 4, $pos);
+					}
+					
 					$out .= $buffer . ':' . $this->bbcode_uid . ']';
 					$tok = '[';
 				}
@@ -862,6 +863,7 @@
 	var $allow_img_bbcode = true;
 	var $allow_flash_bbcode = true;
 	var $allow_quote_bbcode = true;
+	var $allow_url_bbcode = true;
 
 	var $mode;
 
@@ -882,7 +884,7 @@
 	/**
 	* Parse Message
 	*/
-	function parse($allow_html, $allow_bbcode, $allow_magic_url, $allow_smilies, $allow_img_bbcode = true, $allow_flash_bbcode = true, $allow_quote_bbcode = true, $update_this_message = true, $mode = 'post')
+	function parse($allow_html, $allow_bbcode, $allow_magic_url, $allow_smilies, $allow_img_bbcode = true, $allow_flash_bbcode = true, $allow_quote_bbcode = true, $allow_url_bbcode = true, $update_this_message = true, $mode = 'post')
 	{
 		global $config, $_CLASS;
 		
@@ -893,6 +895,7 @@
 		$this->allow_img_bbcode = $allow_img_bbcode;
 		$this->allow_flash_bbcode = $allow_flash_bbcode;
 		$this->allow_quote_bbcode = $allow_quote_bbcode;
+		$this->allow_url_bbcode = $allow_url_bbcode;
 
 		// If false, then $this->message won't be altered, the text will be returned instead.
 		if (!$update_this_message)
@@ -935,7 +938,7 @@
 		if ($allow_bbcode && strpos($this->message, '[') !== false)
 		{
 			$this->bbcode_init();
-			$disallow = array('img', 'flash', 'quote');
+			$disallow = array('img', 'flash', 'quote', 'url');
 			foreach ($disallow as $bool)
 			{
 				if (!${'allow_' . $bool . '_bbcode'})
@@ -1007,7 +1010,7 @@
 		if ($this->message_status === 'plain')
 		{
 			// Force updating message - of course.
-			$this->parse($allow_html, $allow_bbcode, $allow_magic_url, $allow_smilies, $this->allow_img_bbcode, $this->allow_flash_bbcode, $this->allow_quote_bbcode, true);
+			$this->parse($allow_html, $allow_bbcode, $allow_magic_url, $allow_smilies, $this->allow_img_bbcode, $this->allow_flash_bbcode, $this->allow_quote_bbcode, $this->allow_url_bbcode, true);
 		}
 
 		// Parse BBcode
@@ -1102,7 +1105,7 @@
 			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 			{
 				$smiley['match'][] = '#(?<=^|[\n ]|\.)' . preg_quote($row['smiley_code'], '#') . '#';
-				$smiley['replace'][] = '<!-- s' . $row['smiley_code'] . ' --><img src="{SMILIES_PATH}/' . $row['smiley_src'] . '" border="0" alt="' . $row['smiley_description'] . '" title="' . $row['smiley_description'] . '" /><!-- s' . $row['smiley_code'] . ' -->';
+				$smiley['replace'][] = '<!-- s' . $row['smiley_code'] . ' --><img src="{SMILIES_PATH}/' . $row['smiley_src'] . '" alt="' . $row['smiley_description'] . '" title="' . $row['smiley_description'] . '" /><!-- s' . $row['smiley_code'] . ' -->';
 			}
 			$_CLASS['core_db']->free_result($result);
 
@@ -1157,18 +1160,30 @@
 
 				if ($filedata['post_attach'] && empty($error))
 				{
-					$new_entry = array(
-						'physical_filename'	=> $filedata['physical_filename'],
-						'comment'			=> $this->filename_data['filecomment'],
-						'real_filename'		=> $filedata['real_filename'],
-						'extension'			=> $filedata['extension'],
-						'mimetype'			=> $filedata['mimetype'],
-						'filesize'			=> $filedata['filesize'],
-						'filetime'			=> $filedata['filetime'],
-						'attach_id'			=> 0,
-						'thumbnail'			=> $filedata['thumbnail']
+					$sql_insert_ary = array(
+						'physical_filename'	=> $filedata['physical_filename'],
+						'attach_comment'	=> $this->filename_data['filecomment'],
+						'real_filename'		=> $filedata['real_filename'],
+						'extension'			=> $filedata['extension'],
+						'mimetype'			=> $filedata['mimetype'],
+						'filesize'			=> $filedata['filesize'],
+						'filetime'			=> $filedata['filetime'],
+						'thumbnail'			=> $filedata['thumbnail'],
+						'is_orphan'			=> 1,
+						'in_message'		=> ($is_message) ? 1 : 0,
+						'poster_id'			=> $user->data['user_id'],
 					);
 
+					$_CLASS['core_db']->sql_query_build('INSERT', $sql_insert_ary, FORUMS_ATTACHMENTS_TABLE);
+					unset($sql_insert_ary);
+
+					$new_entry = array(
+						'attach_id'		=> $_CLASS['core_db']->insert_id(FORUMS_ATTACHMENTS_TABLE, 'attach_id'),
+						'is_orphan'		=> 1,
+						'real_filename'	=> $filedata['real_filename'],
+						'attach_comment'=> $this->filename_data['filecomment'],
+					);
+
 					$this->attachment_data = array_merge(array(0 => $new_entry), $this->attachment_data);
 					$this->message = preg_replace('#\[attachment=([0-9]+)\](.*?)\[\/attachment\]#e', "'[attachment='.(\\1 + 1).']\\2[/attachment]'", $this->message);
 
@@ -1198,26 +1213,43 @@
 			{
 				$index = (int) key($_POST['delete_file']);
 
-				// delete selected attachment
-				if (!$this->attachment_data[$index]['attach_id'])
+				if (!empty($this->attachment_data[$index]))
 				{
-					phpbb_unlink($this->attachment_data[$index]['physical_filename'], 'file');
-
-					if ($this->attachment_data[$index]['thumbnail'])
-					{
-						phpbb_unlink($this->attachment_data[$index]['physical_filename'], 'thumbnail');
+					// delete selected attachment
+					if ($this->attachment_data[$index]['is_orphan'])
+					{
+						$sql = 'SELECT attach_id, physical_filename, thumbnail
+							FROM ' . FORUMS_ATTACHMENTS_TABLE . '
+							WHERE attach_id = ' . (int) $this->attachment_data[$index]['attach_id'] . '
+								AND is_orphan = 1
+								AND poster_id = ' . $user->data['user_id'];
+						$result = $_CLASS['core_db']->query($sql);
+						$row = $_CLASS['core_db']->fetch_row_assoc($result);
+						$_CLASS['core_db']->free_result($result);
+
+						if ($row)
+						{
+							phpbb_unlink($row['physical_filename'], 'file');
+
+							if ($row['thumbnail'])
+							{
+								phpbb_unlink($row['physical_filename'], 'thumbnail');
+							}
+
+							$_CLASS['core_db']->query('DELETE FROM ' . FORUMS_ATTACHMENTS_TABLE . ' WHERE attach_id = ' . (int) $this->attachment_data[$index]['attach_id']);
+						}
+					}
+					else
+					{
+						delete_attachments('attach', array(intval($this->attachment_data[$index]['attach_id'])));
 					}
+					
+					unset($this->attachment_data[$index]);
+					$this->message = preg_replace('#\[attachment=([0-9]+)\](.*?)\[\/attachment\]#e', "(\\1 == \$index) ? '' : ((\\1 > \$index) ? '[attachment=' . (\\1 - 1) . ']\\2[/attachment]' : '\\0')", $this->message);
+	
+					// Reindex Array
+					$this->attachment_data = array_values($this->attachment_data);
 				}
-				else
-				{
-					delete_attachments('attach', array(intval($this->attachment_data[$index]['attach_id'])));
-				}
-				
-				unset($this->attachment_data[$index]);
-				$this->message = preg_replace('#\[attachment=([0-9]+)\](.*?)\[\/attachment\]#e', "(\\1 == \$index) ? '' : ((\\1 > \$index) ? '[attachment=' . (\\1 - 1) . ']\\2[/attachment]' : '\\0')", $this->message);
-
-				// Reindex Array
-				$this->attachment_data = array_values($this->attachment_data);
 			}
 			else if ($edit_comment || $add_file || $preview)
 			{
@@ -1240,18 +1272,30 @@
 
 						if (!sizeof($error))
 						{
-							$new_entry = array(
-								'physical_filename'	=> $filedata['physical_filename'],
-								'comment'			=> $this->filename_data['filecomment'],
-								'real_filename'		=> $filedata['real_filename'],
-								'extension'			=> $filedata['extension'],
-								'mimetype'			=> $filedata['mimetype'],
-								'filesize'			=> $filedata['filesize'],
-								'filetime'			=> $filedata['filetime'],
-								'attach_id'			=> 0,
-								'thumbnail'			=> $filedata['thumbnail']
+							$sql_ary = array(
+								'physical_filename'	=> $filedata['physical_filename'],
+								'attach_comment'	=> $this->filename_data['filecomment'],
+								'real_filename'		=> $filedata['real_filename'],
+								'extension'			=> $filedata['extension'],
+								'mimetype'			=> $filedata['mimetype'],
+								'filesize'			=> $filedata['filesize'],
+								'filetime'			=> $filedata['filetime'],
+								'thumbnail'			=> $filedata['thumbnail'],
+								'is_orphan'			=> 1,
+								'in_message'		=> ($is_message) ? 1 : 0,
+								'poster_id'			=> $user->data['user_id'],
 							);
 
+							$_CLASS['core_db']->sql_query_build('INSERT', $sql_insert_ary, FORUMS_ATTACHMENTS_TABLE);
+							unset($sql_insert_ary);
+
+							$new_entry = array(
+								'attach_id'		=> $_CLASS['core_db']->insert_id(FORUMS_ATTACHMENTS_TABLE, 'attach_id'),
+								'is_orphan'		=> 1,
+								'real_filename'	=> $filedata['real_filename'],
+								'attach_comment'=> $this->filename_data['filecomment'],
+							);
+
 							$this->attachment_data = array_merge(array(0 => $new_entry), $this->attachment_data);
 							$this->message = preg_replace('#\[attachment=([0-9]+)\](.*?)\[\/attachment\]#e', "'[attachment='.(\\1 + 1).']\\2[/attachment]'", $this->message);
 							$this->filename_data['filecomment'] = '';
@@ -1279,101 +1323,85 @@
 		global $_CLASS, $config;
 
 		$this->filename_data['filecomment'] = request_var('filecomment', '', true);
-		$this->attachment_data = isset($_POST['attachment_data']) ? $_POST['attachment_data'] : array();
+		$attachment_data = (isset($_POST['attachment_data'])) ? $_POST['attachment_data'] : array();
 
+		if (empty($attachment_data))
+		{
+			return;
+		}
+
 		$check_user_id = ($check_user_id === false) ? $_CLASS['core_user']->data['user_id'] : $check_user_id;
-
-		// Regenerate data array...
-		$attach_ids = $filenames = array();
+		$not_orphan = $orphan = array();
 
-		foreach ($this->attachment_data as $pos => $var_ary)
+		foreach ($attachment_data as $pos => $var_ary)
 		{
-			if ($var_ary['attach_id'])
+			if ($var_ary['is_orphan'])
 			{
-				$attach_ids[$this->attachment_data[$pos]['attach_id']] = $pos;
+				$orphan[(int) $var_ary['attach_id']] = $pos;
 			}
 			else
 			{
-				$filenames[$pos] = '';
-				set_var($filenames[$pos], $this->attachment_data[$pos]['physical_filename'], 'string');
-				$filenames[$pos] = basename($filenames[$pos]);
+				$not_orphan[(int) $var_ary['attach_id']] = $pos;
 			}
 		}
 
 		$this->attachment_data = array();
 
 		// Regenerate already posted attachments...
-		if (!empty($attach_ids))
+		if (!empty($not_orphan))
 		{
 			// Get the data from the attachments
-			$sql = 'SELECT attach_id, physical_filename, comment, real_filename, extension, mimetype, filesize, filetime, thumbnail
+			$sql = 'SELECT attach_id, is_orphan, real_filename, attach_comment
 				FROM ' . FORUMS_ATTACHMENTS_TABLE . '
-				WHERE attach_id IN (' . implode(', ', array_unique(array_map('intval', array_keys($attach_ids)))) . ')
+				WHERE attach_id IN (' . implode(', ', array_keys($not_orphan)) . ')
 					AND poster_id = ' . $check_user_id;
 			$result = $_CLASS['core_db']->query($sql);
 
 			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 			{
-				if (isset($attach_ids[$row['attach_id']]))
-				{
-					$pos = $attach_ids[$row['attach_id']];
-					$this->attachment_data[$pos] = $row;
-					set_var($this->attachment_data[$pos]['comment'], $_POST['attachment_data'][$pos]['comment'], 'string', true);
+				$pos = $not_orphan[$row['attach_id']];
+				$this->attachment_data[$pos] = $row;
+				set_var($this->attachment_data[$pos]['attach_comment'], $_POST['attachment_data'][$pos]['attach_comment'], 'string', true);
 
-					unset($attach_ids[$row['attach_id']]);
-				}
+				unset($not_orphan[$row['attach_id']]);
 			}
 			$_CLASS['core_db']->free_result($result);
+		}
 
-			if (!empty($attach_ids))
-			{
-				trigger_error('NO_ACCESS_ATTACHMENT', E_USER_ERROR);
-			}
+		if (!empty($not_orphan))
+		{
+			trigger_error('NO_ACCESS_ATTACHMENT', E_USER_ERROR);
 		}
 
 		// Regenerate newly uploaded attachments
-		if (sizeof($filenames))
+		if (!empty($orphan))
 		{
-			require_once SITE_FILE_ROOT.'includes/forums/functions_upload.php';
+			$sql = 'SELECT attach_id, is_orphan, real_filename, attach_comment
+				FROM ' . ATTACHMENTS_TABLE . '
+				WHERE attach_id IN (' . implode(', ', array_keys($orphan)) . ')
+					AND poster_id = ' . $user->data['user_id'] . '
+					AND is_orphan = 1';
+			$result = $_CLASS['core_db']->query($sql);
 
-			$sql = 'SELECT attach_id
-				FROM ' . FORUMS_ATTACHMENTS_TABLE . "
-				WHERE LOWER(physical_filename) IN ('" . implode("' ,'", $_CLASS['core_db']->escape_array(array_map('strtolower', $filenames))) . "')";
-			$result = $_CLASS['core_db']->query_limit($sql, 1);
-			$row = $_CLASS['core_db']->fetch_row_assoc($result);
-			$_CLASS['core_db']->free_result($result);
-
-			if ($row)
+			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
 			{
-				trigger_error('NO_ACCESS_ATTACHMENT', E_USER_ERROR);
-			}
+				$pos = $orphan[$row['attach_id']];
+				$this->attachment_data[$pos] = $row;
+				set_var($this->attachment_data[$pos]['attach_comment'], $_POST['attachment_data'][$pos]['attach_comment'], 'string', true);
 
-			foreach ($filenames as $pos => $physical_filename)
-			{
-				$this->attachment_data[$pos] = array(
-					'physical_filename'	=> $physical_filename,
-					'extension'			=> strtolower(filespec::get_extension(SITE_FILE_ROOT . $config['upload_path'] . '/' . $physical_filename)),
-					'filesize'			=> filespec::get_filesize(SITE_FILE_ROOT . $config['upload_path'] . '/' . $physical_filename),
-					'attach_id'			=> 0,
-					'thumbnail'			=> (file_exists(SITE_FILE_ROOT . $config['upload_path'] . '/thumb_' . $physical_filename)) ? 1 : 0,
-				);
-
-				set_var($this->attachment_data[$pos]['comment'], $_POST['attachment_data'][$pos]['comment'], 'string', true);
-				set_var($this->attachment_data[$pos]['real_filename'], $_POST['attachment_data'][$pos]['real_filename'], 'string', true);
-				set_var($this->attachment_data[$pos]['filetime'], $_POST['attachment_data'][$pos]['filetime'], 'int');
-
-				if (strpos($_POST['attachment_data'][$pos]['mimetype'], 'image/') !== false)
-				{
-					set_var($this->attachment_data[$pos]['mimetype'], $_POST['attachment_data'][$pos]['mimetype'], 'string');
-				}
-				else
-				{
-					$this->attachment_data[$pos]['mimetype'] = filespec::get_mimetype(SITE_FILE_ROOT . $config['upload_path'] . '/' . $physical_filename);
-				}
+				unset($orphan[$row['attach_id']]);
 			}
+			$_CLASS['core_db']->free_result($result);
 		}
+
+		if (!empty($orphan))
+		{
+			trigger_error('NO_ACCESS_ATTACHMENT', E_USER_ERROR);
+		}
+
+		ksort($this->attachment_data);
 	}
-	
+
 	/**
 	* Parse Poll
 	*/
@@ -1386,11 +1414,10 @@
 		// Parse Poll Option text ;)
 		$tmp_message = $this->message;
 		$this->message = $poll['poll_option_text'];
+
 
+		$poll['poll_option_text'] = $this->parse(false, $poll['enable_bbcode'], ($config['allow_post_links']) ? $poll['enable_urls'] : false, $poll['enable_smilies'], $poll['img_status'], false, false, $config['allow_post_links'], false);
 
-		$poll['poll_option_text'] = $this->parse(false, $poll['enable_bbcode'], $poll['enable_urls'], $poll['enable_smilies'], $poll['img_status'], false, false, false);
-
-
 		$this->message = $tmp_message;
 
 		// Parse Poll Title
@@ -1398,8 +1425,8 @@
 		$this->message = $poll['poll_title'];
 
 
-		$poll['poll_title'] = $this->parse(false, $poll['enable_bbcode'], $poll['enable_urls'], $poll['enable_smilies'], $poll['img_status'], false, false, false);
-
+		$poll['poll_title'] = $this->parse(false, $poll['enable_bbcode'], ($config['allow_post_links']) ? $poll['enable_urls'] : false, $poll['enable_smilies'], $poll['img_status'], false, false, $config['allow_post_links'], false);
+
 		$this->message = $tmp_message;
 
 		unset($tmp_message);

Modified: cms/trunk/includes/functions.php
===================================================================
--- cms/trunk/includes/functions.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/functions.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -21,6 +21,45 @@
 $Id$
 */
 
+function array_filter_int($var)
+{
+	return validate_integer($var, true);
+}
+
+function validate_integer($value, $bool = false)
+{
+	if (is_null($value) || $value === '')
+	{
+		return false;
+	}
+
+	$value = (string) trim($value);
+	$value = str_replace(array(',', '$'), '', $value);
+
+	if ($value{0} === '+')
+	{
+		$value = substr($value, 1);
+	}
+
+	$check = (string) intval($value);
+
+	/*$position = 0;
+	while (substr($value, $position, 1) === '0')
+	{
+		$position++;
+		$check = '0'.$check;
+	}*/
+
+
+	if ($check === $value)
+	{
+		$return = $bool ? true : (int) $value;
+		return $return;
+	}
+
+	return false;
+}
+
 function censor_text($text, $force = false)
 {
 	global $_CLASS;

Modified: cms/trunk/includes/functions_user.php
===================================================================
--- cms/trunk/includes/functions_user.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/functions_user.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -104,19 +104,10 @@
 function check_user_id(&$user_id, $bypass = false)
 {
 	// should we just return false, if this array map is different from the one sent
-
-	$user_id = array_map('intval', $user_id);
+	$user_id = array_map('intval', array_filter($user_id, 'array_filter_int'));
 	$user_id = array_unique($user_id);
 
-	// array map should make 0 values for notint values
-	$key = array_search(0, $user_id);
-
-	if ($key !== false && !is_null($key))
-	{
-		unset($user_id[$key]);
-	}
-
-// make bypass an array maybe, along with protected id. would be better if you want to extend this
+	// make bypass an array maybe, along with protected id. would be better if you want to extend this
 	if ($bypass)
 	{
 		// You shouldn'y do anything to guest
@@ -124,8 +115,8 @@
 		{
 			unset($user_id[$key]);
 		}
-	
-		// First admin is always specail
+
+		// First admin is always special
 		if (($key = array_search(2, $user_id)) === false)
 		{
 			unset($user_id[$key]);
@@ -157,18 +148,17 @@
 	);
 
 	$default_data['user_data'] = serialize(array(
-		'viewimg' => 1,
-		'viewflash' => 1,
-		'viewsmilies' => 1,
-		'viewsigs'	=> 1,
-		'viewavatars' => 1,
-		'viewcensors' => 1,
+		'viewimg'		=> 1,
+		'viewflash'		=> 1,
+		'viewsmilies'	=> 1,
+		'viewsigs'		=> 1,
+		'viewavatars'	=> 1,
+		'viewcensors'	=> 1,
 
-		'bbcode' => 1,
-		'html'	=> 1,
-		'smilies' => 1,
+		'bbcode'	=> 1,
+		'html'		=> 1,
+		'smilies' 	=> 1,
 		'attachsig' => 1,
-		'html'	=> 1,
 	));
 
 	$data = array_merge($default_data, $data);
@@ -188,7 +178,7 @@
 			'member_status'	=> $data['user_status']
 		);
 
-		$_CLASS['core_db']->sql_query_build('INSERT', $data2, CORE_USER_GROUP_TABLE);
+		$_CLASS['core_db']->sql_query_build('INSERT', $data2, CORE_GROUPS_MEMBERS_TABLE);
 	}
 
 	$_CLASS['core_db']->transaction('commit');
@@ -200,7 +190,7 @@
 
 	$user_id = is_array($user_id) ? $user_id : array($user_id);
 
-	if (check_user_id($user_id) == false)
+	if (check_user_id($user_id) === false)
 	{
 		return;
 	}
@@ -215,7 +205,7 @@
 
 	$_CLASS['core_db']->query($sql);
 
-	$sql = 'UPDATE ' . CORE_USER_GROUP_TABLE . '
+	$sql = 'UPDATE ' . CORE_GROUPS_MEMBERS_TABLE . '
 		SET member_status = ' . STATUS_ACTIVE . '
 			WHERE user_id  IN (' . implode(', ', $user_id) . ') 
 			AND member_status = ' . STATUS_DISABLED;
@@ -243,7 +233,7 @@
 
 	$user_id = is_array($user_id) ? $user_id : array($user_id);
 
-	if (check_user_id($user_id) == false)
+	if (check_user_id($user_id) === false)
 	{
 		return;
 	}
@@ -259,15 +249,14 @@
 	$_CLASS['core_db']->query($sql);
 
 	// Now we disable the user in his active groups
-	$sql = 'UPDATE ' . CORE_USER_GROUP_TABLE . '
+	$sql = 'UPDATE ' . CORE_GROUPS_MEMBERS_TABLE . '
 		SET member_status = ' . STATUS_DISABLED . '
 			WHERE user_id IN (' . implode(', ', $user_id) . ')
 			AND member_status = ' . STATUS_ACTIVE;
 	$_CLASS['core_db']->query($sql);
 
 	$sql = 'DELETE FROM ' . CORE_SESSIONS_AUTOLOGIN_TABLE . ' 
-		WHERE user_id IN (' . implode(', ', $user_id) . ")
-		AND auto_login_code = '" . $_CLASS['core_db']->escape($code) . "'";
+		WHERE user_id IN (' . implode(', ', $user_id) . ")";
 	$_CLASS['core_db']->query($sql);
 
 	if ($update_stats)
@@ -301,7 +290,7 @@
 
 	$user_id = is_array($user_id) ? $user_id : array($user_id);
 
-	if (check_user_id($user_id) == false)
+	if (check_user_id($user_id) === false)
 	{
 		return;
 	}
@@ -331,7 +320,7 @@
 	$_CLASS['core_db']->transaction();
 
 	$optimize_array = array();
-	$tables = array(CORE_USERS_TABLE => 'user_id', CORE_SESSIONS_AUTOLOGIN_TABLE => 'user_id', CORE_USER_GROUP_TABLE => 'user_id');
+	$tables = array(CORE_USERS_TABLE => 'user_id', CORE_SESSIONS_AUTOLOGIN_TABLE => 'user_id', CORE_GROUPS_MEMBERS_TABLE => 'user_id');
 // hook here
 
 // Move this to hooks on seperation
@@ -441,21 +430,21 @@
 	return $data['username'];
 }
 
-function groups_user_remove($group_id, $user_id)
+function group_user_remove($group_id, $user_id)
 {
 	global $_CLASS;
 
 	$group_id = is_array($group_id) ? $group_id : array($group_id);
 	$user_id = is_array($user_id) ? $user_id : array($user_id);
 
-	$group_id = array_map('intval', $group_id);
+	$group_id = array_unique(array_map('intval', array_filter($group_id, 'array_filter_int')));
 
-	if (check_user_id($user_id) == false)
+	if (empty($group_id))
 	{
 		return;
 	}
 
-	if (empty($group_id))
+	if (check_user_id($user_id) === false)
 	{
 		return;
 	}
@@ -489,14 +478,13 @@
 		$result = $_CLASS['core_db']->query($sql);
 	}
 
-	$sql = 'DELETE FROM ' . CORE_USER_GROUP_TABLE . '
+	$sql = 'DELETE FROM ' . CORE_GROUPS_MEMBERS_TABLE . '
 		WHERE group_id IN ('. implode(', ', $group_id) . ')
 		AND user_id IN ('. implode(', ', $user_id) .')';
-
-	$result = $_CLASS['core_db']->query($sql);
+	$_CLASS['core_db']->query($sql);
 }
 
-function groups_user_add($group_id, $user_id, $status)
+function group_user_add($group_id, $user_id, $status)
 {
 	global $_CLASS;
 
@@ -530,12 +518,39 @@
 
 	if (!empty($data)) 
 	{
-		$_CLASS['core_db']->sql_query_build('MULTI_INSERT', $data, USER_GROUP_TABLE);
+		$_CLASS['core_db']->sql_query_build('MULTI_INSERT', $data, CORE_GROUPS_MEMBERS_TABLE);
 	}
 
 	$_CLASS['core_db']->transaction('commit');
 }
 
+function group_membership($user_id, $group_id = false)
+{
+	global $_CLASS;
+
+	$user_id = is_array($user_id) ? $user_id : array($user_id);
+
+	if ($group_id)
+	{
+		$group_id = is_array($group_id) ? $group_id : array($group_id);
+		$group_id = array_map('intval', array_filter($group_id, 'array_filter_int'));
+	}
+
+	$sql = 'SELECT *
+		FROM ' . CORE_GROUPS_MEMBERS_TABLE . ' ug, '. CORE_GROUPS_TABLE .' g
+		WHERE ug.user_id IN (' . implode(', ', $user_id) . ')
+		AND g.group_id = ug.group_id ORDER by g.group_name';
+	$result = $_CLASS['core_db']->query($sql);
+
+	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
+	{
+		$return[$row['user_id']][$row['group_id']] = $row;
+	}
+	$_CLASS['core_db']->free_result($result);
+
+	return $return;
+}
+
 function validate_username($username)
 {
 	global $_CORE_CONFIG, $_CLASS;

Modified: cms/trunk/includes/handler.php
===================================================================
--- cms/trunk/includes/handler.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/handler.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -57,6 +57,20 @@
 		set_error_handler(array(&$this, 'error_handler'));
 	}
 	
+	function add_log($type, $operation, $data = false)
+	{
+		$sql_array = array(
+			'user_id'		=> empty($_CLASS['core_user']->data['user_id']) ? ANONYMOUS : $_CLASS['core_user']->data['user_id'],
+			'log_type'		=> $type,
+			'log_ip'		=> $_CLASS['core_user']->ip,
+			'log_time'		=> $_CLASS['core_user']->time,
+			'log_operation'	=> $operation,
+			'log_data'		=> ($data) ? serialize($data) : '',
+		);
+
+		$_CLASS['core_db']->sql_query_build('INSERT', $sql_array, CORE_LOG_TABLE);
+	}
+
 	function stop($level = false)
 	{
 		if (!$this->active)

Modified: cms/trunk/includes/tables.php
===================================================================
--- cms/trunk/includes/tables.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/tables.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -97,6 +97,19 @@
 define('ITEM_MOVED', 2);
 define('ITEM_DELETING', 3);
 
+// Forum Flags
+define('FORUM_FLAG_LINK_TRACK', 1);
+define('FORUM_FLAG_PRUNE_POLL', 2);
+define('FORUM_FLAG_PRUNE_ANNOUNCE', 4);
+define('FORUM_FLAG_PRUNE_STICKY', 8);
+define('FORUM_FLAG_ACTIVE_TOPICS', 16);
+define('FORUM_FLAG_POST_REVIEW', 32);
+
+// Optional text flags
+define('OPTION_FLAG_BBCODE', 1);
+define('OPTION_FLAG_SMILIES', 2);
+define('OPTION_FLAG_LINKS', 4);
+
 // Topic types
 define('POST_NORMAL', 0);
 define('POST_STICKY', 1);

Modified: cms/trunk/includes/user.php
===================================================================
--- cms/trunk/includes/user.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/includes/user.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -43,7 +43,6 @@
 	var $user_setup = false;
 
 	var $lang_name;
-	var $lang_path;
 
 	function core_user()
 	{
@@ -271,7 +270,6 @@
 		}
 
 		$this->lang_name = $_CORE_CONFIG['global']['default_lang'];
-		$this->lang_path = SITE_FILE_ROOT.'language/' . $this->lang_name . '/';
 
 		$this->time_format = ($this->data['user_time_format']) ? $this->data['user_time_format'] : $_CORE_CONFIG['global']['default_dateformat'];
 		$this->time_offset = ($this->data['user_timezone']) ? $this->data['user_timezone'] : $_CORE_CONFIG['global']['default_timezone'];
@@ -281,7 +279,7 @@
 			$this->time_offset += 3600;
 		}
 
-		require($this->lang_path . 'common.php');
+		$this->add_lang('common', null);
 	}
 
 	function add_img($img_file = false, $module = false, $lang = false)

Modified: cms/trunk/install/build_data.php
===================================================================
--- cms/trunk/install/build_data.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/install/build_data.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -23,7 +23,7 @@
 
 $time = gmtime();
 
-$_CLASS['core_db']->query('INSERT INTO '. CORE_ADMIN_AUTH_TABLE ." (admin_section, user_id, admin_status) VALUES ('_all_', 2, 2)");
+$_CLASS['core_db']->query('INSERT INTO '. CORE_ADMIN_AUTH_TABLE ." (admin_section, user_id, admin_status, admin_options) VALUES ('_all_', 2, 2, '_all_')");
 
 $_CLASS['core_db']->query('INSERT INTO '. CORE_CONFIG_TABLE  ." (config_section, config_name, config_value, config_type, config_cache) VALUES ('global', 'path_avatar_upload', 'images/avatars/upload', 'string', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. CORE_CONFIG_TABLE  ." (config_section, config_name, config_value, config_type, config_cache) VALUES ('global', 'path_avatar_gallery', 'images/avatars/gallery', 'string', 1)");
@@ -73,6 +73,7 @@
 $_CLASS['core_db']->query('INSERT INTO '. CORE_CONFIG_TABLE  ." (config_section, config_name, config_value, config_type, config_cache) VALUES ('user', 'activation', '0', 'int', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. CORE_CONFIG_TABLE  ." (config_section, config_name, config_value, config_type, config_cache) VALUES ('user', 'total_users', '1', 'int', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. CORE_CONFIG_TABLE  ." (config_section, config_name, config_value, config_type, config_cache) VALUES ('user', 'password_encoding', 'md5', 'string', 1)");
+$_CLASS['core_db']->query('INSERT INTO '. CORE_CONFIG_TABLE  ." (config_section, config_name, config_value, config_type, config_cache) VALUES ('user', 'pass_complex', '.*', 'string', 1)");
 
 $_CLASS['core_db']->query('INSERT INTO '. CORE_CONFIG_TABLE  ." (config_section, config_name, config_value, config_type, config_cache) VALUES ('server', 'path', '/', 'string', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. CORE_CONFIG_TABLE  ." (config_section, config_name, config_value, config_type, config_cache) VALUES ('server', 'cookie_domain', '', 'string', 1)");
@@ -252,12 +253,6 @@
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_hideonline', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_viewonline', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_viewprofile', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_chgavatar', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_chggrp', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_chgemail', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_chgname', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_chgpasswd', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_chgcensors', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_search', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_savedrafts', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_download', 1)");
@@ -270,11 +265,9 @@
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_attach', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_authgroups', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_authusers', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_backup', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_bbcode', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_board', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_clearlogs', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_email', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_fauth', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_forum', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_forumadd', 1)");
@@ -282,8 +275,6 @@
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_icons', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_mauth', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_modules', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_names', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_profile', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_prune', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_ranks', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_reasons', 1)");
@@ -295,19 +286,6 @@
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_user', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_viewauth', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_viewlogs', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('a_words', 1)");
-
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_attach', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_bbcode', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_smilies', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_download', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_edit', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_printpm', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_emailpm', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_forward', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_delete', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_img', 1)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_OPTIONS_TABLE  ." (auth_option, is_global) VALUES ('u_pm_flash', 1)");
 
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_ROLES_TABLE . " (role_name, role_description, role_type, role_order) VALUES ('Standard Admin', 'ROLE_DESCRIPTION_ADMIN_STANDARD', 'a_', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_ROLES_TABLE . " (role_name, role_description, role_type, role_order) VALUES ('Forum Admin', 'ROLE_DESCRIPTION_ADMIN_FORUM', 'a_', 3)");
@@ -339,14 +317,9 @@
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_sig', '1', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_topic_notify', '1', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_forum_notify', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_avatar_local', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_avatar_remote', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_avatar_upload', '1', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_nocensors', '0', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_bookmarks', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('board_disable_msg', '', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('board_email_form', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_login_attempts', '3', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('min_ratings', '10', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('posts_per_page', '10', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('topics_per_page', '25', 0)");
@@ -358,80 +331,64 @@
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('upload_icons_path', 'images/upload_icons', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('ranks_path', 'images/ranks', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('email_enable', '1', 0)");// maybe keep
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_privmsg', '1', 0)");
-
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_online_time', '5', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_online', '1', 0)");
+
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('limit_search_load', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_anon_lastread', '1', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_db_lastread', '1', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_birthdays', '1', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_moderators', '1', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_jumpbox', '1', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_search', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_search_upd', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_search_phr', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_db_lastread', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_onlinetrack', '1', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_user_activity', '1', 0)");
+
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_block_size', '250', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_gc', '7200', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_indexing_state', '', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_interval', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_anonymous_interval', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_type', 'fulltext_native', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_store_results', '1800', 0)");
 
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_gc', '7200', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('queue_interval', '3', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('version', '2.1.2', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_post_chars', '', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_post_smilies', '', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_quote_depth', '3', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_sig_chars', '255', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_poll_options', '10', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('min_search_chars', '3', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_search_chars', '10', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('edit_time', '0', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('display_last_edited', '1', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('version', '2.1.2', 0)");
 
-//$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('board_email_sig', 'Thanks, The Management', 0)");
-//$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('board_email', '', 0)");
-//$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('board_contact', '', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_attachments', '3', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_filesize', '262144', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_poll_options', '10', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_post_chars', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_post_font_size', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_post_img_height', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_post_img_width', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_post_smilies', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_post_urls', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_quote_depth', '3', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_sig_chars', '255', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('min_search_author_chars', '3', 0)");
 
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('board_start_date', $time, 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('board_start_date', $time, 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('bump_interval', '10', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('bump_type', 'd', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('display_order', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('display_last_edited', '1', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('edit_time', '0', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('flood_interval', '15', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('bump_interval', '10h', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_interval', '', 0)");
 
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('avatar_filesize', '6144', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('avatar_min_width', '20', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('avatar_min_height', '20', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('avatar_max_width', '90', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('avatar_max_height', '90', 0)");
 
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('lastread', '432000', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('display_order', '0', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_filesize', '262144', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_filesize_pm', '262144', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('attachment_quota', '52428800', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_attachments', '3', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_attachments_pm', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_pm_attach', '1', 0)");
+
+//$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('lastread', '432000', 0)");
+
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('upload_path', 'files', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_display_inlined', '1', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('secure_downloads', '0', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('secure_allow_deny', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('secure_allow_empty_referer', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_max_width', '', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_max_height', '', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_link_width', '', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_link_height', '', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('secure_allow_empty_referer', '1', 0)");
+
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_create_thumbnail', '1', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_display_inlined', '1', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_imagick', '', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_max_height', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_max_width', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_link_height', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_link_width', '0', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_min_thumb_filesize', '12000', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('img_imagick', '', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('pm_max_boxes', '4', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('pm_max_msgs', '50', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('auth_html_pm', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('auth_bbsmiley_code_pm', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('auth_smilies_pm', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('auth_download_pm', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('auth_report_pm', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('load_online_guests', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('auth_img_pm', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('auth_flash_pm', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('enable_pm_icons', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('pm_edit_time', '', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_mass_pm', '1', 0)");
 
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('record_online_users', '0', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('record_online_date', '0', 1)");
@@ -444,15 +401,8 @@
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('search_last_gc', '0', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('last_queue_run', '0', 1)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('full_folder_action', '2', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('bump_type', 'm', 0)");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_img', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('board_hide_emails', '0', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_sig_bbsmiley_code', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_sig_flash', '0', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_sig_html', '0', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_sig_img', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('allow_sig_smilies', '1', 0)");
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('max_post_urls', '0', 0)");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_CONFIG_TABLE  ." (config_name, config_value, is_dynamic) VALUES ('board_hide_emails', '0', 0)");
 
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_EXTENSION_GROUPS_TABLE  ." (group_name, cat_id, allow_group, download_mode, upload_icon, max_filesize, allowed_forums) VALUES ('Images', 1, 1, 1, '', 0, '')");
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_EXTENSION_GROUPS_TABLE  ." (group_name, cat_id, allow_group, download_mode, upload_icon, max_filesize, allowed_forums) VALUES ('Archives', 0, 1, 1, '', 0, '')");
@@ -504,7 +454,7 @@
 # -- Roles data
 
 # Standard Admin (a_)
-$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_ROLES_DATA_TABLE  ." (role_id, auth_option_id, auth_setting) SELECT 1, auth_option_id, 1 FROM  ". FORUMS_ACL_OPTIONS_TABLE  ."  WHERE auth_option LIKE 'a_%' AND auth_option NOT IN ('a_switchperm', 'a_jabber', 'a_phpinfo', 'a_server', 'a_backup', 'a_styles', 'a_clearlogs', 'a_modules', 'a_language', 'a_email', 'a_bots', 'a_search', 'a_aauth', 'a_roles')");
+$_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_ROLES_DATA_TABLE  ." (role_id, auth_option_id, auth_setting) SELECT 1, auth_option_id, 1 FROM  ". FORUMS_ACL_OPTIONS_TABLE  ."  WHERE auth_option LIKE 'a_%' AND auth_option NOT IN ('a_switchperm', 'a_jabber', 'a_phpinfo', 'a_server', 'a_styles', 'a_clearlogs', 'a_modules', 'a_language', 'a_bots', 'a_search', 'a_aauth', 'a_roles')");
 
 # Forum admin (a_)
 $_CLASS['core_db']->query('INSERT INTO '. FORUMS_ACL_ROLES_DATA_TABLE  ." (role_id, auth_option_id, auth_setting) SELECT 2, auth_option_id, 1 FROM  ". FORUMS_ACL_OPTIONS_TABLE  ."  WHERE auth_option LIKE 'a_%' AND auth_option IN ('a_', 'a_authgroups', 'a_authusers', 'a_fauth', 'a_forum', 'a_forumadd', 'a_forumdel', 'a_mauth', 'a_prune', 'a_uauth', 'a_viewauth', 'a_viewlogs')");

Modified: cms/trunk/install/build_tables.php
===================================================================
--- cms/trunk/install/build_tables.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/install/build_tables.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -34,13 +34,14 @@
 
 $_CLASS['core_db']->table_create('start', CORE_ADMIN_AUTH_TABLE);
 
+$_CLASS['core_db']->add_table_field_int('admin_access_id', array('max' => 16000000, 'auto_increment' => true));
 $_CLASS['core_db']->add_table_field_char('admin_section', 100);
-
+$_CLASS['core_db']->add_table_field_int('admin_status', array('max' => 10));
+$_CLASS['core_db']->add_table_field_text('admin_options', 60000, true);
 $_CLASS['core_db']->add_table_field_int('user_id', array('max' => 16000000, 'null' => true));
 $_CLASS['core_db']->add_table_field_int('group_id', array('max' => 16000000, 'null' => true));
-$_CLASS['core_db']->add_table_field_int('admin_status', array('max' => 10));
-$_CLASS['core_db']->add_table_field_text('admin_options', 60000, true);
 
+$_CLASS['core_db']->add_table_index('admin_access_id', 'primary');
 $_CLASS['core_db']->add_table_index('user_id');
 $_CLASS['core_db']->add_table_index('group_id');
 $_CLASS['core_db']->add_table_index('admin_status');
@@ -365,6 +366,7 @@
 $_CLASS['core_db']->add_table_field_int('poster_id', array('max' => 16000000));
 $_CLASS['core_db']->add_table_field_int('download_count', array('max' => 16000000));
 $_CLASS['core_db']->add_table_field_int('in_message', array('max' => 1));
+$_CLASS['core_db']->add_table_field_int('is_orphan', array('max' => 1));
 
 $_CLASS['core_db']->add_table_field_text('comment', 200);
 $_CLASS['core_db']->add_table_field_char('physical_filename', 255);

Modified: cms/trunk/javascript/editor.js
===================================================================
--- cms/trunk/javascript/editor.js	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/javascript/editor.js	2006-09-21 06:41:32 UTC (rev 188)
@@ -490,7 +490,7 @@
 			{
 				color = String(numberList[r]) + String(numberList[g]) + String(numberList[b]);
 				document.write('<td bgcolor="#' + color + '">');
-				document.write('<a href="javascript:bbfontstyle(\'[color=#' + color + ']\', \'[/color]\');" onmouseover="helpline(\'s\');"><img src="images/spacer.gif" width="' + width + '" height="' + height + '" border="0" alt="#' + color + '" title="#' + color + '" /></a>');
+				document.write('<a href="#" onclick="bbfontstyle(\'[color=#' + color + ']\', \'[/color]\'); return false;" onmouseover="helpline(\'s\');"><img src="images/spacer.gif" width="' + width + '" height="' + height + '" alt="#' + color + '" title="#' + color + '" /></a>');
 				document.writeln('</td>');
 			}
 

Modified: cms/trunk/modules/control_panel/modules/ucp_pm_compose.php
===================================================================
--- cms/trunk/modules/control_panel/modules/ucp_pm_compose.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/control_panel/modules/ucp_pm_compose.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -318,19 +318,23 @@
 		$error[] = $_CLASS['core_user']->lang['TOO_MANY_RECIPIENTS'];
 	}
 
+	// Always check if the submitted attachment data is valid and belongs to the user.
+	// Further down (especially in submit_post()) we do not check this again.
 	$message_parser->get_submitted_attachment_data();
 
 	if ($message_attachment && !$submit && !$refresh && !$preview && $action == 'edit')
 	{
-		$sql = 'SELECT attach_id, physical_filename, comment, real_filename, extension, mimetype, filesize, filetime, thumbnail
+		// Do not change to SELECT *
+		$sql = 'SELECT attach_id, is_orphan, attach_comment, real_filename
 			FROM ' . FORUMS_ATTACHMENTS_TABLE . "
 			WHERE post_msg_id = $msg_id
 				AND in_message = 1
+				AND is_orphan = 0
 				ORDER BY filetime " . ((!$config['display_order']) ? 'DESC' : 'ASC');
 		$result = $_CLASS['core_db']->query($sql);
 
 		$message_parser->attachment_data = array_merge($message_parser->attachment_data, $_CLASS['core_db']->fetch_row_assocset($result));
-		
+
 		$_CLASS['core_db']->free_result($result);
 	}
 
@@ -375,11 +379,12 @@
 	$img_status		= ($config['auth_img_pm'] && $_CLASS['forums_auth']->acl_get('u_pm_img'));
 	$flash_status	= ($config['auth_flash_pm'] && $_CLASS['forums_auth']->acl_get('u_pm_flash'));
 */
-	$html_status	= ($config['allow_html'] && $config['auth_html_pm']);
-	$bbcode_status	= ($config['allow_bbcode'] && $config['auth_bbcode_pm']);
-	$smilies_status	= ($config['allow_smilies'] && $config['auth_smilies_pm']);
-	$img_status		= ($config['auth_img_pm']);
-	$flash_status	= ($config['auth_flash_pm']);
+	$html_status	= ($config['allow_html'] && $config['auth_html_pm']) ? true : false;
+	$bbcode_status	= ($config['allow_bbcode'] && $config['auth_bbcode_pm']) ? true : false;
+	$smilies_status	= ($config['allow_smilies'] && $config['auth_smilies_pm']) ? true : false;
+	$img_status		= ($config['auth_img_pm']) ? true : false;
+	$flash_status	= ($config['auth_flash_pm']) ? true : false;
+	$url_status		= ($config['allow_post_links']) ? true : false;
 
 	// Save Draft
 	if ($save && $_CLASS['forums_auth']->acl_get('u_savedrafts'))
@@ -483,7 +488,7 @@
 		$message_parser->parse_attachments('fileupload', $action, 0, $submit, $preview, $refresh, true);
 
 		// Parse message
-		$message_parser->parse($enable_html, $enable_bbcode, $enable_urls, $enable_smilies, $img_status, $flash_status, true);
+		$message_parser->parse(false, $enable_bbcode, ($config['allow_post_links']) ? $enable_urls : false, $enable_smilies, $img_status, $flash_status, true, $config['allow_sig_links']);
 
 		if ($action != 'edit' && !$preview && !$refresh && $config['flood_interval'] && !$_CLASS['forums_auth']->acl_get('u_ignoreflood'))
 		{
@@ -629,8 +634,16 @@
 	{
 		if ($action === 'quotepost')
 		{
-			$post_id = request_var('p', 0);
-			$message_link = "[url=" . generate_link("forums&amp;file=viewtopic&amp;p={$post_id}#p{$post_id}")."]{$message_subject}[/url]\n";
+			$post_id = request_var('p', 0);
+
+			if ($config['allow_post_links'])
+			{
+				$message_link = "[url=" . generate_link("forums&amp;file=viewtopic&amp;p={$post_id}#p{$post_id}")."]{$message_subject}[/url]\n\n";
+			}
+			else
+			{
+				$message_link = $_CLASS['core_user']->lang['SUBJECT'] . ': ' . $message_subject . " (" . generate_link("forums&amp;file=viewtopic&amp;p={$post_id}#p{$post_id}").")\n\n";
+			}
 		}
 		else 
 		{
@@ -648,14 +661,23 @@
 	{
 		$fwd_to_field = write_pm_addresses(array('to' => $post['to_address']), 0, true);
 
+		if ($config['allow_post_links'])
+		{
+			$quote_username_text = '[url=' . generate_link("members_list&amp;mode=viewprofile&amp;u={$post['author_id']}")."]{$quote_username}[/url]";
+		}
+		else
+		{
+			$quote_username_text = $quote_username . ' (' . generate_link("members_list&amp;mode=viewprofile&u={$post['author_id']}").")";
+		}
+
 		$forward_text = array();
 		$forward_text[] = $_CLASS['core_user']->lang['FWD_ORIGINAL_MESSAGE'];
 		$forward_text[] = sprintf($_CLASS['core_user']->lang['FWD_SUBJECT'], censor_text($message_subject));
 		$forward_text[] = sprintf($_CLASS['core_user']->lang['FWD_DATE'], $_CLASS['core_user']->format_date($message_time));
-		$forward_text[] = sprintf($_CLASS['core_user']->lang['FWD_FROM'], $quote_username);
+		$forward_text[] = sprintf($_CLASS['core_user']->lang['FWD_FROM'], $quote_username_text);
 		$forward_text[] = sprintf($_CLASS['core_user']->lang['FWD_TO'], implode(', ', $fwd_to_field['to']));
 
-		$message_parser->message = implode("\n", $forward_text) . "\n\n[quote=\"[url=" . generate_link("members_list&mode=viewprofile&u={$post['author_id']}")."{$quote_username}[/url]\"]\n" . censor_text(trim($message_parser->message)) . "\n[/quote]";
+		$message_parser->message = implode("\n", $forward_text) . "\n\n[quote=\"{$quote_username}\"]\n" . censor_text(trim($message_parser->message)) . "\n[/quote]";
 		$message_subject = ((!preg_match('/^Fwd:/', $message_subject)) ? 'Fwd: ' : '') . censor_text($message_subject);
 	}
 
@@ -811,6 +833,7 @@
 		'IMG_STATUS'			=> ($img_status) ? $_CLASS['core_user']->lang['IMAGES_ARE_ON'] : $_CLASS['core_user']->lang['IMAGES_ARE_OFF'],
 		'FLASH_STATUS'			=> ($flash_status) ? $_CLASS['core_user']->lang['FLASH_IS_ON'] : $_CLASS['core_user']->lang['FLASH_IS_OFF'],
 		'SMILIES_STATUS'		=> ($smilies_status) ? $_CLASS['core_user']->lang['SMILIES_ARE_ON'] : $_CLASS['core_user']->lang['SMILIES_ARE_OFF'],
+		'URL_STATUS'			=> ($url_status) ? $_CLASS['core_user']->lang['URL_IS_ON'] : $_CLASS['core_user']->lang['URL_IS_OFF'],
 		'MINI_POST_IMG'			=> $_CLASS['core_user']->img('icon_post', $_CLASS['core_user']->lang['PM']),
 		'ERROR'					=> empty($error) ? '' : implode('<br />', $error), 
 
@@ -826,15 +849,21 @@
 		'S_SMILIES_CHECKED' 	=> ($smilies_checked) ? ' checked="checked"' : '',
 		'S_SIG_ALLOWED'			=> ($config['allow_sig'] && $_CLASS['forums_auth']->acl_get('u_sig')),
 		'S_SIGNATURE_CHECKED' 	=> ($sig_checked) ? ' checked="checked"' : '',
+		'S_LINKS_ALLOWED'               => $url_status,
 		'S_MAGIC_URL_CHECKED' 	=> ($urls_checked) ? ' checked="checked"' : '',
 		'S_SAVE_ALLOWED'		=> $_CLASS['forums_auth']->acl_get('u_savedrafts'),
 		'S_HAS_DRAFTS'			=> ($_CLASS['forums_auth']->acl_get('u_savedrafts') && $drafts),
 		'S_FORM_ENCTYPE'		=> $form_enctype,
 		
+		'S_BBCODE_IMG'			=> $img_status,
+		'S_BBCODE_FLASH'		=> $flash_status,
+		'S_BBCODE_QUOTE'		=> true,
+		'S_BBCODE_URL'			=> $url_status,
+		
 		'S_POST_ACTION' 		=> generate_link($s_action),
 		'S_HIDDEN_ADDRESS_FIELD'=> $s_hidden_address_field,
-		'S_HIDDEN_FIELDS'		=> $s_hidden_fields)
-	);
+		'S_HIDDEN_FIELDS'		=> $s_hidden_fields
+	));
 
 	// Attachment entry
 	if ($_CLASS['forums_auth']->acl_get('u_pm_attach') && $config['allow_pm_attach'] && $form_enctype)

Modified: cms/trunk/modules/control_panel/modules/ucp_profile.php
===================================================================
--- cms/trunk/modules/control_panel/modules/ucp_profile.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/control_panel/modules/ucp_profile.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -110,7 +110,7 @@
 				$message_parser = new parse_message($signature);
 
 				// Allowing Quote BBCode
-				$message_parser->parse($enable_html, $enable_bbcode, $enable_urls, $enable_smilies, $config['allow_sig_img'], $config['allow_sig_flash'], true, true, 'sig');
+				$message_parser->parse(false, $enable_bbcode, ($config['allow_sig_links']) ? $enable_urls : false, $enable_smilies, $config['allow_sig_img'], $config['allow_sig_flash'], true, $config['allow_sig_links'], true, 'sig');
 				
 				if (!empty($message_parser->warn_msg))
 				{
@@ -176,6 +176,7 @@
 			'SMILIES_STATUS'		=> (true) ? $_CLASS['core_user']->get_lang('SMILIES_ARE_ON') : $_CLASS['core_user']->get_lang('SMILIES_ARE_OFF'),
 			'IMG_STATUS'			=> (true) ? $_CLASS['core_user']->get_lang('IMAGES_ARE_ON') : $_CLASS['core_user']->get_lang('IMAGES_ARE_OFF'),
 			'FLASH_STATUS'			=> (true) ? $_CLASS['core_user']->get_lang('FLASH_IS_ON') : $_CLASS['core_user']->get_lang('FLASH_IS_OFF'),
+			'URL_STATUS'			=> ($config['allow_sig_links']) ? $_CLASS['core_user']->lang['URL_IS_ON'] : $_CLASS['core_user']->lang['URL_IS_OFF'],
 
 			'L_SIGNATURE_EXPLAIN'	=> sprintf($_CLASS['core_user']->lang['SIGNATURE_EXPLAIN'], $config['max_sig_chars']),
 

Modified: cms/trunk/modules/control_panel/modules/ucp_register.php
===================================================================
--- cms/trunk/modules/control_panel/modules/ucp_register.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/control_panel/modules/ucp_register.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -106,6 +106,23 @@
 		$error[] = $_CLASS['core_user']->get_lang('PASSWORD_ERROR');
 	}
 
+	if ($password)
+	{
+		if (!preg_match('#' . str_replace('\\\\', '\\', $_CORE_CONFIG['user']['pass_complex']) . '#i', $password))
+		{
+			$error[] = $_CLASS['core_user']->get_lang('PASSWORD_INVALID_CHARS');
+		}
+
+		if ($_CORE_CONFIG['user']['min_pass_chars'] && mb_strlen($password) < $_CORE_CONFIG['user']['min_pass_chars'])
+		{
+			$error[] = $_CLASS['core_user']->get_lang('PASSWORD_TOO_SHORT');
+		}
+		elseif ($_CORE_CONFIG['user']['max_pass_chars'] && mb_strlen($password) > $_CORE_CONFIG['user']['max_pass_chars'])
+		{
+			$error[] = $_CLASS['core_user']->get_lang('PASSWORD_TOO_LONG');
+		}
+	}
+
 	if (!$email || $email !== $email_confirm)
 	{
 		$error[] = $_CLASS['core_user']->get_lang('EMAIL_ERROR');
@@ -177,7 +194,7 @@
 		$data = array(
 			'username'		=> (string) $username,
 			'user_email'	=> (string) $email,
-// add an option so admin can set with group they added to
+// add an option so admin can set with group they added to ( default registration group )
 			'user_group'	=> ($coppa) ? 3 : 2,
 			'user_reg_date'	=> (int) $_CLASS['core_user']->time,
 			'user_timezone'	=> (string) $tz,
@@ -206,14 +223,13 @@
 		$mailer = new core_mailer();
 
 		$mailer->to($email, $username);
-		$mailer->subject('Welcome to ');
+		$mailer->subject('Welcome');
 
 		$_CLASS['core_template']->assign_array(array(
 			'SITENAME'		=> $_CORE_CONFIG['global']['site_name'],
 			'WELCOME_MSG'   => sprintf($_CLASS['core_user']->lang['WELCOME_SUBJECT'], $_CORE_CONFIG['global']['site_name']),
 			'USERNAME'		=> $username,
 			'PASSWORD'		=> $password,
-			'EMAIL_SIG'		=> '', //I like this
 			'U_ACTIVATE'	=> generate_link('system&mode=activate&user_id='.$data['user_id'].'&key='.$user_act_key, array('sid' => false, 'full' => true))
 		));
 
@@ -228,9 +244,13 @@
 		}
 
 		$mailer->message = trim($_CLASS['core_template']->display('email/core/'.$email_template, true));
-
 		$mailer->send();
 
+		if $_CORE_CONFIG['user']['activation'] == USER_ACTIVATION_ADMIN)
+		{
+			sele
+		}
+
 		$message = $message . '<br /><br />' . sprintf($_CLASS['core_user']->lang['RETURN_INDEX'],  '<a href="'. generate_link() .'">', '</a>');
 		trigger_error($message);
 	}
@@ -280,6 +300,7 @@
 }
 
 $user_char_ary = array('.*' => 'USERNAME_CHARS_ANY', '[\w]+' => 'USERNAME_ALPHA_ONLY', '[\w_\+\. \-\[\]]+' => 'USERNAME_ALPHA_SPACERS');
+$pass_char_ary = array('.*' => 'PASS_TYPE_ANY', '[a-zA-Z]' => 'PASS_TYPE_CASE', '[a-zA-Z0-9]' => 'PASS_TYPE_ALPHA', '[a-zA-Z\W]' => 'PASS_TYPE_SYMBOL');
 
 $_CLASS['core_template']->assign_array(array(
 	'ERROR'			=> empty($error) ? false : implode('<br />', $error), 
@@ -293,9 +314,9 @@
 	'L_CONFIRM_EXPLAIN'			=> sprintf($_CLASS['core_user']->lang['CONFIRM_EXPLAIN'], '<a href="mailto:' . htmlentities('') . '">', '</a>'), 
 	'L_ITEMS_REQUIRED'			=> $l_reg_cond, 
 	'L_USERNAME_EXPLAIN'		=> sprintf($_CLASS['core_user']->lang[$user_char_ary[$_CORE_CONFIG['user']['allow_name_chars']] . '_EXPLAIN'], $_CORE_CONFIG['user']['min_name_chars'], $_CORE_CONFIG['user']['max_name_chars']),
-	'L_NEW_PASSWORD_EXPLAIN'	=> sprintf($_CLASS['core_user']->lang['NEW_PASSWORD_EXPLAIN'], $_CORE_CONFIG['user']['min_pass_chars'], $_CORE_CONFIG['user']['max_pass_chars']), 
+	//'L_NEW_PASSWORD_EXPLAIN'	=> sprintf($_CLASS['core_user']->lang['NEW_PASSWORD_EXPLAIN'], $_CORE_CONFIG['user']['min_pass_chars'], $_CORE_CONFIG['user']['max_pass_chars']), 
+	'L_NEW_PASSWORD_EXPLAIN'	=> sprintf($_CLASS['core_user']->lang[$pass_char_ary[str_replace('\\\\', '\\', $_CORE_CONFIG['user']['pass_complex'])] . '_EXPLAIN'], $_CORE_CONFIG['user']['min_pass_chars'], $_CORE_CONFIG['user']['max_pass_chars']),
 
-
 	'S_COPPA'			=> $coppa, 
 	'S_HIDDEN_FIELDS'	=> $hidden_fields,
 	'S_UCP_ACTION'		=> generate_link("control_panel&amp;mode=register"))

Modified: cms/trunk/modules/forums/admin/index.php
===================================================================
--- cms/trunk/modules/forums/admin/index.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/admin/index.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -161,7 +161,7 @@
 			$size = (int) $tpl_type[1];
 			$maxlength = (int) $tpl_type[2];
 
-			$tpl = '<input id="' . $key . '" type="' . $tpl_type[0] . '"' . (($size) ? ' size="' . $size . '"' : '') . ' maxlength="' . (($maxlength) ? $maxlength : 255) . '" name="' . $name . '" value="' . $new[$config_key] . '" />';
+			$tpl = '<input id="' . $key . '" type="' . $tpl_type[0] . '"' . (($size) ? ' size="' . $size . '"' : '') . ' maxlength="' . (($maxlength) ? $maxlength : 255) . '" name="' . $name . '" value="' . @$new[$config_key] . '" />';
 		break;
 
 		case 'dimension':
@@ -198,7 +198,7 @@
 
 			if (isset($vars['method']))
 			{
-				$call = array($module->module, $vars['method']);
+				$call = $vars['method'];
 			}
 			else if (isset($vars['function']))
 			{
@@ -258,4 +258,82 @@
 	return $tpl;
 }
 
+/**
+* Going through a config array and validate values, writing errors to $error.
+*/
+function validate_config_vars($config_vars, &$cfg_array, &$error)
+{
+	global $_CLASS;
+
+	foreach ($config_vars as $config_name => $config_definition)
+	{
+		if (!isset($cfg_array[$config_name]) || strpos($config_name, 'legend') !== false)
+		{
+			continue;
+		}
+
+		if (!isset($config_definition['validate']))
+		{
+			continue;
+		}
+
+		// Validate a bit. ;) String is already checked through request_var(), therefore we do not check this again
+		switch ($config_definition['validate'])
+		{
+			case 'bool':
+				$cfg_array[$config_name] = ($cfg_array[$config_name]) ? 1 : 0;
+			break;
+
+			case 'int':
+				$cfg_array[$config_name] = (int) $cfg_array[$config_name];
+			break;
+
+			case 'rpath':
+				if (!$cfg_array[$config_name])
+				{
+					break;
+				}
+
+				$destination = $cfg_array[$config_name];
+
+				// Adjust destination path (no trailing slash)
+				if ($destination{(sizeof($destination)-1)} == '/' || $destination{(sizeof($destination)-1)} == '\\')
+				{
+					$destination = substr($destination, 0, sizeof($destination)-2);
+				}
+
+				$destination = str_replace(array('../', '..\\', './', '.\\'), '', $destination);
+				if ($destination && ($destination{0} == '/' || $destination{0} == "\\"))
+				{
+					$destination = '';
+				}
+
+				$cfg_array[$config_name] = $destination;
+
+			case 'path':
+
+				if (!$cfg_array[$config_name])
+				{
+					break;
+				}
+
+				$cfg_array[$config_name] = trim($cfg_array[$config_name]);
+
+				if (!file_exists($cfg_array[$config_name]))
+				{
+					$error[] = sprintf($_CLASS['core_user']->lang['DIRECTORY_DOES_NOT_EXIST'], $cfg_array[$config_name]);
+				}
+
+				if (file_exists($cfg_array[$config_name]) && !is_dir($cfg_array[$config_name]))
+				{
+					$error[] = sprintf($_CLASS['core_user']->lang['DIRECTORY_NOT_DIR'], $cfg_array[$config_name]);
+				}
+
+			break;
+		}
+	}
+
+	return;
+}
+
 ?>
\ No newline at end of file

Modified: cms/trunk/modules/forums/download.php
===================================================================
--- cms/trunk/modules/forums/download.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/download.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -45,7 +45,7 @@
 	trigger_error('ATTACHMENT_FUNCTIONALITY_DISABLED');
 }
 
-$sql = 'SELECT attach_id, in_message, post_msg_id, extension
+$sql = 'SELECT attach_id, in_message, post_msg_id, extension, is_orphan, poster_id
 	FROM ' . FORUMS_ATTACHMENTS_TABLE . "
 	WHERE attach_id = $download_id";
 $result = $_CLASS['core_db']->query_limit($sql, 1);
@@ -64,48 +64,63 @@
 
 $row = array();
 
-if (!$attachment['in_message'])
+if ($attachment['is_orphan'])
+{
+	// We allow admins having attachment permissions to see orphan attachments...
+	$own_attachment = ($_CLASS['auth']->acl_get('a_attach') || $attachment['poster_id'] == $_CLASS['core_user']->data['user_id']) ? true : false;
+
+	if (!$own_attachment || ($attachment['in_message'] && !$_CLASS['auth']->acl_get('u_pm_download')) || (!$attachment['in_message'] && !$_CLASS['auth']->acl_get('u_download')))
+	{
+		trigger_error('ERROR_NO_ATTACHMENT');
+	}
+
+	$extensions = obtain_attach_extensions();
+}
+else
 {
-	$sql = 'SELECT p.forum_id, f.forum_password, f.parent_id
-		FROM ' . FORUMS_POSTS_TABLE . ' p, ' . FORUMS_FORUMS_TABLE . ' f
-		WHERE p.post_id = ' . $attachment['post_msg_id'] . '
-			AND p.forum_id = f.forum_id';
-
-	$result = $_CLASS['core_db']->query_limit($sql, 1);
-	$row = $_CLASS['core_db']->fetch_row_assoc($result);
-	$_CLASS['core_db']->free_result($result);
-
-	if ($_CLASS['auth']->acl_get('u_download') && $_CLASS['auth']->acl_get('f_download', $row['forum_id']))
+	if (!$attachment['in_message'])
 	{
-		if ($row['forum_password'])
+		$sql = 'SELECT p.forum_id, f.forum_password, f.parent_id
+			FROM ' . FORUMS_POSTS_TABLE . ' p, ' . FORUMS_FORUMS_TABLE . ' f
+			WHERE p.post_id = ' . $attachment['post_msg_id'] . '
+				AND p.forum_id = f.forum_id';
+	
+		$result = $_CLASS['core_db']->query_limit($sql, 1);
+		$row = $_CLASS['core_db']->fetch_row_assoc($result);
+		$_CLASS['core_db']->free_result($result);
+	
+		if ($_CLASS['auth']->acl_get('u_download') && $_CLASS['auth']->acl_get('f_download', $row['forum_id']))
 		{
-			// Do something else ... ?
-			login_forum_box($row);
+			if ($row['forum_password'])
+			{
+				// Do something else ... ?
+				login_forum_box($row);
+			}
 		}
+		else
+		{
+			trigger_error('SORRY_AUTH_VIEW_ATTACH');
+		}
 	}
 	else
 	{
-		trigger_error('SORRY_AUTH_VIEW_ATTACH');
+		$row['forum_id'] = 0;
+	
+		if (!$_CLASS['auth']->acl_get('u_pm_download') || !$config['auth_download_pm'])
+		{
+			trigger_error('SORRY_AUTH_VIEW_ATTACH');
+		}
 	}
-}
-else
-{
-	$row['forum_id'] = 0;
-
-	if (!$_CLASS['auth']->acl_get('u_pm_download') || !$config['auth_download_pm'])
+	
+	// disallowed ?
+	$extensions = obtain_attach_extensions();
+	
+	if (!extension_allowed($row['forum_id'], $attachment['extension'], $extensions))
 	{
-		trigger_error('SORRY_AUTH_VIEW_ATTACH');
+		trigger_error(sprintf($_CLASS['core_user']->lang['EXTENSION_DISABLED_AFTER_POSTING'], $attachment['extension']));
 	}
 }
 
-// disallowed ?
-$extensions = obtain_attach_extensions();
-
-if (!extension_allowed($row['forum_id'], $attachment['extension'], $extensions))
-{
-	trigger_error(sprintf($_CLASS['core_user']->lang['EXTENSION_DISABLED_AFTER_POSTING'], $attachment['extension']));
-}
-
 if (!download_allowed())
 {
 	trigger_error('LINKAGE_FORBIDDEN');
@@ -114,7 +129,7 @@
 $download_mode = (int) $extensions[$attachment['extension']]['download_mode'];
 
 // Fetching filename here to prevent sniffing of filename
-$sql = 'SELECT attach_id, in_message, post_msg_id, extension, physical_filename, real_filename, mimetype
+$sql = 'SELECT attach_id, is_orphan, in_message, post_msg_id, extension, physical_filename, real_filename, mimetype
 	FROM ' . FORUMS_ATTACHMENTS_TABLE . "
 	WHERE attach_id = $download_id";
 $result = $_CLASS['core_db']->query_limit($sql, 1);
@@ -133,7 +148,7 @@
 {
 	$attachment['physical_filename'] = 'thumb_' . $attachment['physical_filename'];
 }
-elseif ($display_cat == ATTACHMENT_CATEGORY_NONE || $display_cat == ATTACHMENT_CATEGORY_IMAGE)
+elseif (($display_cat == ATTACHMENT_CATEGORY_NONE || $display_cat == ATTACHMENT_CATEGORY_IMAGE) && !$attachment['is_orphan'])
 {
 	// Update download count
 	$sql = 'UPDATE ' . FORUMS_ATTACHMENTS_TABLE . ' 
@@ -184,9 +199,9 @@
 		Correct the mime type - we force application/octetstream for all files, except images
 		Please do not change this, it is a security precaution
 	*/
-	if ($category == ATTACHMENT_CATEGORY_NONE && strpos($attachment['mimetype'], 'image') === false)
+	if (strpos($attachment['mimetype'], 'image') !== 0)
 	{
-		$attachment['mimetype'] = (strpos(strtolower($user->browser), 'msie') !== false || strpos(strtolower($user->browser), 'opera') !== false) ? 'application/octetstream' : 'application/octet-stream';
+		$attachment['mimetype'] = (strpos(strtolower($_CLASS['core_user']->browser), 'msie') !== false || strpos(strtolower($_CLASS['core_user']->browser), 'opera') !== false) ? 'application/octetstream' : 'application/octet-stream';
 	}
 
 	/* Clean all output buffers */
@@ -200,12 +215,15 @@
 	/* Send out required headers */
 	header('Pragma: public');
 	
-	// Try X-Sendfile since it is much more server friendly.
+	// Try X-Sendfile since it is much more server friendly - only works if the path is *not* outside of the root path...
 	// lighttpd has core support for it. An apache2 module is available at http://celebnamer.celebworld.ws/stuff/mod_xsendfile/
-	header('X-Sendfile: ' . $filename);
+	if (strpos($upload_dir, '/') !== 0 && strpos($upload_dir, '../') === false && (!SITE_ROOT || (strpos($upload_dir, SITE_ROOT) || @file_exists(SITE_ROOT.$filename))))
+	{
+		header('X-Sendfile: ' . $filename);
+	}
 
 	header('Content-Type: ' . $attachment['mimetype'] . '; name="' . $attachment['real_filename'] . '"');
-	header('Content-Disposition: attachment; filename="' . $attachment['real_filename'] . '"');
+	header('Content-Disposition: ' . ((strpos($attachment['mimetype'], 'image') === 0) ? 'inline' : 'attachment') . '; filename="' . $attachment['real_filename'] . '"');
 
 	/* Now send the File Contents to the Browser */
 	$size = @filesize($filename);

Added: cms/trunk/modules/forums/language/admin_attachments.php
===================================================================
--- cms/trunk/modules/forums/language/admin_attachments.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/language/admin_attachments.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -0,0 +1,144 @@
+<?php
+/** 
+*
+* acp_attachments [English]
+*
+* @package language
+* @version $Id: attachments.php,v 1.10 2006/08/28 15:50:32 acydburn Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+$this->lang += array(
+	'ACP_ATTACHMENT_SETTINGS_EXPLAIN'	=> 'Here you can configure the Main Settings for Attachments and the associated Special Categories.',
+	'ACP_EXTENSION_GROUPS_EXPLAIN'		=> 'Here you can add, delete and modify your Extension Groups, you can disable Extension Groups, assign a special Category to them, change the download mechanism and you can define an Upload Icon which will be displayed in front of an Attachment belonging to the Group.',
+	'ACP_MANAGE_EXTENSIONS_EXPLAIN'		=> 'Here you can manage your allowed extensions. To activate your Extensions, please refer to the extension groups management panel. We strongly recommend not to allow scripting extensions (such as php, php3, php4, phtml, pl, cgi, asp, aspx...)',
+	'ACP_ORPHAN_ATTACHMENTS_EXPLAIN'	=> 'Here you are able to see files within the Attachments upload directory but not assigned to posts. This happens mostly if users are attaching files but not submitting the post. You are able to delete the files or attach them to existing posts. Attaching to posts requires a valid post id, you have to determine this id by yourself, this feature is mainly for those people wanting to upload files with another program and assigning those (mostly large) files to an existing post.',
+	'ADD_EXTENSION'						=> 'Add extension',
+	'ADD_EXTENSION_GROUP'				=> 'Add Extension Group',
+	'ADMIN_UPLOAD_ERROR'				=> 'Errors while trying to attach file: %s',
+	'ALLOWED_FORUMS'					=> 'Allowed Forums',
+	'ALLOWED_FORUMS_EXPLAIN'			=> 'Able to post the assigned extensions at the selected (or all if selected) forums',
+	'ALLOW_ATTACHMENTS'					=> 'Allow Attachments',
+	'ALLOW_ALL_FORUMS'					=> 'Allow All Forums',
+	'ALLOW_IN_PM'						=> 'Allowed in private messaging',
+	'ALLOW_PM_ATTACHMENTS'				=> 'Allow Attachments in Private Messages',
+	'ALLOW_SELECTED_FORUMS'				=> 'Only Forums selected below',
+	'ASSIGNED_EXTENSIONS'				=> 'Assigned Extensions',
+	'ASSIGNED_GROUP'					=> 'Assigned Group',
+	'ATTACH_EXTENSIONS_URL'				=> 'Extensions',
+	'ATTACH_EXT_GROUPS_URL'				=> 'Extension Groups',
+	'ATTACH_MAX_FILESIZE'				=> 'Maximum filesize',
+	'ATTACH_MAX_FILESIZE_EXPLAIN'		=> 'Maximum size of each file, 0 is unlimited.',
+	'ATTACH_MAX_PM_FILESIZE'			=> 'Maximum filesize messaging',
+	'ATTACH_MAX_PM_FILESIZE_EXPLAIN'	=> 'Maximum drive space available per user for private message attachments, 0 is unlimited.',
+	'ATTACH_ORPHAN_URL'					=> 'Orphan Attachments',
+	'ATTACH_POST_ID'					=> 'Post ID',
+	'ATTACH_QUOTA'						=> 'Total attachment quota',
+	'ATTACH_QUOTA_EXPLAIN'				=> 'Maximum drive space available for attachments in total, 0 is unlimited.',
+	'ATTACH_TO_POST'					=> 'Attach file to post',
+
+	'CAT_IMAGES'				=> 'Images',
+	'CAT_RM_FILES'				=> 'Real Media Streams',
+	'CAT_WM_FILES'				=> 'Win Media Streams',
+	'CREATE_GROUP'				=> 'Create new group',
+	'CREATE_THUMBNAIL'			=> 'Create thumbnail',
+	'CREATE_THUMBNAIL_EXPLAIN'	=> 'Create a thumbnail in all possible situations.',
+
+	'DEFINE_ALLOWED_IPS'			=> 'Define allowed IPs/Hostnames',
+	'DEFINE_DISALLOWED_IPS'			=> 'Define disallowed IPs/Hostnames',
+	'DOWNLOAD_ADD_IPS_EXPLAIN'		=> 'To specify several different IP\'s or hostnames enter each on a new line. To specify a range of IP addresses separate the start and end with a hyphen (-), to specify a wildcard use *',
+	'DOWNLOAD_MODE'					=> 'Download Mode',
+	'DOWNLOAD_MODE_EXPLAIN'			=> 'If you experience problems downloading files, set this to "physical", the user will be directed to the file directly. Do not set it to physical if not really needed, it discloses the filename.',
+	'DOWNLOAD_REMOVE_IPS_EXPLAIN'	=> 'You can remove (or un-exclude) multiple IP addresses in one go using the appropriate combination of mouse and keyboard for your computer and browser. Excluded IP\'s have a blue background.',
+	'DISPLAY_INLINED'				=> 'Display images inline',
+	'DISPLAY_INLINED_EXPLAIN'		=> 'If set to No image attachments will show as a link.',
+	'DISPLAY_ORDER'					=> 'Attachment Display Order',
+	'DISPLAY_ORDER_EXPLAIN'			=> 'Display attachments ordered by time.',
+	
+	'EDIT_EXTENSION_GROUP'			=> 'Edit Extension Group',
+	'EXCLUDE_ENTERED_IP'			=> 'Enable this to exclude the entered IP/Hostname.',
+	'EXCLUDE_FROM_ALLOWED_IP'		=> 'Exclude IP from allowed IPs/Hostnames',
+	'EXCLUDE_FROM_DISALLOWED_IP'	=> 'Exclude IP from disallowed IPs/Hostnames',
+	'EXTENSIONS_UPDATED'			=> 'Extensions successfully updated',
+	'EXTENSION_EXIST'				=> 'The Extension %s already exist',
+	'EXTENSION_GROUP'				=> 'Extension Group',
+	'EXTENSION_GROUPS'				=> 'Extension Groups',
+	'EXTENSION_GROUP_DELETED'		=> 'Extension Group successfully deleted',
+	'EXTENSION_GROUP_EXIST'			=> 'The Extension Group %s already exist',
+
+	'GO_TO_EXTENSIONS'		=> 'Go to Extension Management Screen',
+	'GROUP_NAME'			=> 'Group name',
+
+	'IMAGE_LINK_SIZE'			=> 'Image Link Dimensions',
+	'IMAGE_LINK_SIZE_EXPLAIN'	=> 'Display image attachment as link if image is larger than this, set to 0px by 0px to disable.',
+	'IMAGICK_PATH'				=> 'Imagemagick path',
+	'IMAGICK_PATH_EXPLAIN'		=> 'Full path to the imagemagick convert application, e.g. /usr/bin/',
+
+	'MAX_ATTACHMENTS'				=> 'Max attachments per post',
+	'MAX_ATTACHMENTS_PM'			=> 'Max attachments per message',
+	'MAX_EXTGROUP_FILESIZE'			=> 'Maximum Filesize',
+	'MAX_IMAGE_SIZE'				=> 'Maximum Image Dimensions',
+	'MAX_IMAGE_SIZE_EXPLAIN'		=> 'Maximum size of image attachments, 0px by 0px disables image attachments.',
+	'MAX_THUMB_WIDTH'				=> 'Maximum thumbnail width in pixel',
+	'MAX_THUMB_WIDTH_EXPLAIN'		=> 'A generated thumbnail will not exceed the width set here',
+	'MIN_THUMB_FILESIZE'			=> 'Minimum thumbnail filesize',
+	'MIN_THUMB_FILESIZE_EXPLAIN'	=> 'Do not create a thumbnail for images smaller than this.',
+	'MODE_INLINE'					=> 'Inline',
+	'MODE_PHYSICAL'					=> 'Physical',
+
+	'NOT_ALLOWED_IN_PM'			=> 'Not allowed in private messages',
+	'NOT_ASSIGNED'				=> 'Not assigned',
+	'NO_EXT_GROUP'				=> 'None',
+	'NO_EXT_GROUP_NAME'			=> 'No Group Name entered',
+	'NO_EXT_GROUP_SPECIFIED'	=> 'No Extension Group specified',
+	'NO_FILE_CAT'				=> 'None',
+	'NO_IMAGE'					=> 'No Image',
+	'NO_THUMBNAIL_SUPPORT'		=> 'Thumbnail support has been disabled because there is no supported GD library available and the imagemagick executable could not be found.',
+	'NO_UPLOAD_DIR'				=> 'The upload directory you specified does not exist.',
+	'NO_WRITE_UPLOAD'			=> 'The upload directory you specified cannot be written to. Please alter the permissions to allow the webserver to write to it.',
+
+	'ORDER_ALLOW_DENY'		=> 'Allow',
+	'ORDER_DENY_ALLOW'		=> 'Deny',
+
+	'REMOVE_ALLOWED_IPS'		=> 'Remove or Un-exclude allowed IPs/Hostnames',
+	'REMOVE_DISALLOWED_IPS'		=> 'Remove or Un-exclude disallowed IPs/Hostnames',
+
+	'SEARCH_IMAGICK'				=> 'Search for Imagemagick',
+	'SECURE_ALLOW_DENY'				=> 'Allow/Deny List',
+	'SECURE_ALLOW_DENY_EXPLAIN'		=> 'Allow or Deny the list of addresses, this setting only applies to downloading files',
+	'SECURE_DOWNLOADS'				=> 'Enable secure downloads',
+	'SECURE_DOWNLOADS_EXPLAIN'		=> 'With this option enabled, downloads are limited to IP\'s/hostnames you defined.',
+	'SECURE_DOWNLOAD_NOTICE'		=> 'Secure Downloads are not enabled. The settings below will be applied after enabling secure downloads.',
+	'SECURE_DOWNLOAD_UPDATE_SUCCESS'=> 'The IP list has been updated successfully',
+	'SECURE_EMPTY_REFERRER'			=> 'Allow empty referrer',
+	'SECURE_EMPTY_REFERRER_EXPLAIN'	=> 'Secure downloads are based on referrers. Do you want to allow downloads for those ommitting the referrer?',
+	'SETTINGS_CAT_IMAGES'			=> 'Image category settings',
+	'SPECIAL_CATEGORY'				=> 'Special Category',
+	'SPECIAL_CATEGORY_EXPLAIN'		=> 'Special Categories differ between the way presented within posts.',
+	'SUCCESSFULLY_UPLOADED'			=> 'Succeessfully uploaded',
+	'SUCCESS_EXTENSION_GROUP_ADD'	=> 'Extension Group successfully added',
+	'SUCCESS_EXTENSION_GROUP_EDIT'	=> 'Extension Group successfully updated',
+
+	'UPLOADING_FILES'				=> 'Uploading Files',
+	'UPLOADING_FILE_TO'				=> 'Uploading File "%1$s" to Post Number %2$d...',
+	'UPLOAD_DENIED_FORUM'			=> 'You do not have the permission to upload files to forum "%s"',
+	'UPLOAD_DIR'					=> 'Upload Directory',
+	'UPLOAD_DIR_EXPLAIN'			=> 'Storage Path for Attachments.',
+	'UPLOAD_ICON'					=> 'Upload Icon',
+	'UPLOAD_NOT_DIR'				=> 'The upload location you specified does not appear to be a directory.',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/admin_board.php
===================================================================
--- cms/trunk/modules/forums/language/admin_board.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/language/admin_board.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -0,0 +1,139 @@
+<?php
+/** 
+*
+* acp_board [English]
+*
+* @package language
+* @version $Id: board.php,v 1.38 2006/09/13 16:08:36 acydburn Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+// Board Settings
+$this->lang += array(
+	'ACP_BOARD_SETTINGS_EXPLAIN'	=> 'Here you can determine the basic operation of your board, from the site name through user registration to private messaging.',
+
+	'CUSTOM_DATEFORMAT'				=> 'Custom...',
+	'DEFAULT_DATE_FORMAT'			=> 'Date Format',
+	'DEFAULT_DATE_FORMAT_EXPLAIN'	=> 'The date format is the same as the PHP date function.',
+	'DEFAULT_LANGUAGE'				=> 'Default Language',
+	'DEFAULT_STYLE'					=> 'Default Style',
+	'DISABLE_BOARD'					=> 'Disable board',
+	'DISABLE_BOARD_EXPLAIN'			=> 'This will make the board unavailable to users. You can also enter a short (255 character) message to display if you wish.',
+	'OVERRIDE_STYLE'				=> 'Override user style',
+	'OVERRIDE_STYLE_EXPLAIN'		=> 'Replaces users style with the default.',
+	'RELATIVE_DAYS'					=> 'Relative days',
+	'SITE_DESC'						=> 'Site description',
+	'SITE_NAME'						=> 'Site name',
+	'SYSTEM_DST'					=> 'Enable Daylight Savings Time',
+	'SYSTEM_TIMEZONE'				=> 'System Timezone',
+	'WARNINGS_EXPIRE'				=> 'Warning duration',
+	'WARNINGS_EXPIRE_EXPLAIN'		=> 'Number of days after it is issued before a warning will expire from a user\'s record',
+);
+
+// Board Features
+$this->lang += array(
+	'ACP_BOARD_FEATURES_EXPLAIN'	=> 'Here you can enable/disable several board features',
+
+	'ALLOW_ATTACHMENTS'			=> 'Allow Attachments',
+	'ALLOW_BOOKMARKS'			=> 'Allow bookmarking topics',
+	'ALLOW_BOOKMARKS_EXPLAIN'	=> 'User is able to store personal bookmarks',
+	'ALLOW_BBCODE'				=> 'Allow BBCode',
+	'ALLOW_FORUM_NOTIFY'		=> 'Allow Forum Watching',
+	'ALLOW_NAME_CHANGE'			=> 'Allow Username changes',
+	'ALLOW_NO_CENSORS'			=> 'Allow Disable of Censors',
+	'ALLOW_NO_CENSORS_EXPLAIN'	=> 'User can disable word censoring.',
+	'ALLOW_PM_ATTACHMENTS'		=> 'Allow Attachments in Private Messages',
+	'ALLOW_SIG'					=> 'Allow Signatures',
+	'ALLOW_SIG_BBCODE'			=> 'Allow BBCode in user signatures',
+	'ALLOW_SIG_FLASH'			=> 'Allow use of FLASH BBCode Tag in user signatures',
+	'ALLOW_SIG_IMG'				=> 'Allow use of IMG BBCode Tag in user signatures',
+	'ALLOW_SIG_LINKS'			=> 'Allow use of links in user signatures',
+	'ALLOW_SIG_LINKS_EXPLAIN'	=> 'If disallowed the URL bbcode tag and automatic/magic urls are disabled.',
+	'ALLOW_SIG_SMILIES'			=> 'Allow use of smilies in user signatures',
+	'ALLOW_SMILIES'				=> 'Allow Smilies',
+	'ALLOW_TOPIC_NOTIFY'		=> 'Allow Topic Watching',
+	'BOARD_PM'					=> 'Private Messaging',
+	'BOARD_PM_EXPLAIN'			=> 'Enable or disable private messaging for all users.',
+);
+
+// Post Settings
+$this->lang += array(
+	'ACP_POST_SETTINGS_EXPLAIN'			=> 'Here you can set all default settings for posting',
+	'ALLOW_POST_LINKS'					=> 'Allow links in posts/private messages',
+	'ALLOW_POST_LINKS_EXPLAIN'			=> 'If disallowed the URL bbcode tag and automatic/magic urls are disabled.',
+
+	'BUMP_INTERVAL'					=> 'Bump Interval',
+	'BUMP_INTERVAL_EXPLAIN'			=> 'Number of minutes, hours or days between the last post to a topic and the ability to bump this topic.',
+	'CHAR_LIMIT'					=> 'Max characters per post',
+	'CHAR_LIMIT_EXPLAIN'			=> 'Set to 0 for unlimited characters.',
+	'DISPLAY_LAST_EDITED'			=> 'Display last edited time information',
+	'DISPLAY_LAST_EDITED_EXPLAIN'	=> 'Choose if the last edited by information to be displayed on posts',
+	'EDIT_TIME'						=> 'Limit editing time',
+	'EDIT_TIME_EXPLAIN'				=> 'Limits the time available to edit a new post, zero equals infinity',
+	'FLOOD_INTERVAL'				=> 'Flood Interval',
+	'FLOOD_INTERVAL_EXPLAIN'		=> 'Number of seconds a user must wait between posting new messages. To enable users to ignore this alter their permissions.',
+	'HOT_THRESHOLD'					=> 'Posts for Popular Threshold, Set to 0 to disable hot topics.',
+	'MAX_POLL_OPTIONS'				=> 'Max number of poll options',
+	'MAX_POST_FONT_SIZE'			=> 'Max font size per post',
+	'MAX_POST_FONT_SIZE_EXPLAIN'	=> 'Set to 0 for unlimited font size.',
+	'MAX_POST_IMG_HEIGHT'			=> 'Max image height per post',
+	'MAX_POST_IMG_HEIGHT_EXPLAIN'	=> 'Maximum height of an image/flash file in postings. Set to 0 for unlimited size.',
+	'MAX_POST_IMG_WIDTH'			=> 'Max image width per post',
+	'MAX_POST_IMG_WIDTH_EXPLAIN'	=> 'Maximum width of an image/flash file in postings. Set to 0 for unlimited size.',
+	'MAX_POST_URLS'					=> 'Max links per post',
+	'MAX_POST_URLS_EXPLAIN'			=> 'Set to 0 for unlimited links.',
+	'POSTING'						=> 'Posting',
+	'POSTS_PER_PAGE'				=> 'Posts Per Page',
+	'QUOTE_DEPTH_LIMIT'				=> 'Max nested quotes per post',
+	'QUOTE_DEPTH_LIMIT_EXPLAIN'		=> 'Set to 0 for unlimited depth.',
+	'SMILIES_LIMIT'					=> 'Max smilies per post',
+	'SMILIES_LIMIT_EXPLAIN'			=> 'Set to 0 for unlimited smilies.',
+	'TOPICS_PER_PAGE'				=> 'Topics Per Page',
+);
+// Load Settings
+$this->lang += array(
+	'ACP_LOAD_SETTINGS_EXPLAIN'	=> 'Here you can enable and disable certain board functions to reduce the amount of processing required. On most servers there is no need to disable any functions. However on certain systems or in shared hosting environments it may be beneficial to disable capabilities you do not really need. You can also specify limits for system load and active sessions beyond which the board will go offline.',
+
+	'CUSTOM_PROFILE_FIELDS'			=> 'Custom Profile Fields',
+	'LIMIT_LOAD'					=> 'Limit system load',
+	'LIMIT_LOAD_EXPLAIN'			=> 'If the 1 minute system load exceeds this value the board will go offline, 1.0 equals ~100% utilisation of one processor. This only functions on UNIX based servers.',
+	'LIMIT_SESSIONS'				=> 'Limit sessions',
+	'LIMIT_SESSIONS_EXPLAIN'		=> 'If the number of sessions exceeds this value within a one minute period the board will go offline. Set to 0 for unlimited sessions.',
+	'LOAD_CPF_MEMBERLIST'			=> 'Display custom profile fields in memberlist',
+	'LOAD_CPF_VIEWPROFILE'			=> 'Display custom profile fields in user profiles',
+	'LOAD_CPF_VIEWTOPIC'			=> 'Display custom profile fields on viewtopic',
+	'LOAD_USER_ACTIVITY'			=> 'Show users activity',
+	'LOAD_USER_ACTIVITY_EXPLAIN'	=> 'Displays active topic/forum in user profiles and user control panel. It is recommended to disable this on boards with more than one million posts.',
+	'RECOMPILE_TEMPLATES'			=> 'Recompile stale templates',
+	'RECOMPILE_TEMPLATES_EXPLAIN'	=> 'Check for updated template files on filesystem and recompile.',
+	'YES_ANON_READ_MARKING'			=> 'Enable topic marking for guests',
+	'YES_ANON_READ_MARKING_EXPLAIN'	=> 'Stores read/unread status information for guests. If disabled posts are always read for guests.',
+	'YES_BIRTHDAYS'					=> 'Enable birthday listing',
+	'YES_JUMPBOX'					=> 'Enable display of Jumpbox',
+	'YES_MODERATORS'				=> 'Enable display of Moderators',
+	'YES_ONLINE'					=> 'Enable online user listings',
+	'YES_ONLINE_EXPLAIN'			=> 'Display online user information on index, forum and topic pages.',
+	'YES_ONLINE_GUESTS'				=> 'Enable online guest listings in viewonline',
+	'YES_ONLINE_GUESTS_EXPLAIN'		=> 'Allow display of guest user informations in viewonline.',
+	'YES_ONLINE_TRACK'				=> 'Enable display of user online img',
+	'YES_ONLINE_TRACK_EXPLAIN'		=> 'Display online information for user in profiles and viewtopic.',
+	'YES_POST_MARKING'				=> 'Enable dotted topics',
+	'YES_POST_MARKING_EXPLAIN'		=> 'Indicates whether user has posted to a topic.',
+	'YES_READ_MARKING'				=> 'Enable server-side topic marking',
+	'YES_READ_MARKING_EXPLAIN'		=> 'Stores read/unread status information in the database rather than a cookie.',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/admin_posting.php
===================================================================
--- cms/trunk/modules/forums/language/admin_posting.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/language/admin_posting.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -0,0 +1,229 @@
+<?php
+/** 
+*
+* posting [English]
+*
+* @package language
+* @version $Id: posting.php,v 1.17 2006/08/30 01:31:50 davidmj Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+// BBCodes 
+// Note to translators: you can translate everything but what's between { and }
+$this->lang += array(
+	'ACP_BBCODES_EXPLAIN'		=> 'BBCode is a special implementation of HTML offering greater control over what and how something is displayed. From this page you can add, remove and edit custom BBCodes',
+	'ADD_BBCODE'				=> 'Add a new BBCode',
+
+	'BBCODE_ADDED'				=> 'BBCode added successfully',
+	'BBCODE_EDITED'				=> 'BBCode edited successfully',
+	'BBCODE_INVALID_TAG_NAME'	=> 'The BBCode tag name that you selected already exists',
+	'BBCODE_NOT_EXIST'			=> 'The BBCode you selected does not exist',
+	'BBCODE_HELPLINE'			=> 'Helpline',
+	'BBCODE_HELPLINE_EXPLAIN'	=> 'This field contains the mouseover text of the BBCode',
+	'BBCODE_HELPLINE_TEXT'		=> 'Helpline text',
+	'BBCODE_TAG'				=> 'Tag',
+	'BBCODE_TAG_TOO_LONG'		=> 'The tag definition that you have entered is too long, please shorten your tag definition.',
+	'BBCODE_USAGE'				=> 'BBCode usage',
+	'BBCODE_USAGE_EXAMPLE'		=> '[colour={COLOR}]{TEXT}[/colour]<br /><br />[font={TEXT1}]{TEXT2}[/font]',
+	'BBCODE_USAGE_EXPLAIN'		=> 'Here you define how to use the bbcode. Replace any variable input by the corresponding token (%ssee below%s)',
+
+	'EXAMPLE'						=> 'Example:',
+	'EXAMPLES'						=> 'Examples:',
+
+	'HTML_REPLACEMENT'				=> 'HTML replacement',
+	'HTML_REPLACEMENT_EXAMPLE'		=> '&lt;font color="{COLOR}"&gt;{TEXT}&lt;/font&gt;<br /><br />&lt;font face="{TEXT1}"&gt;{TEXT2}&lt;/font&gt;',
+	'HTML_REPLACEMENT_EXPLAIN'		=> 'Here you define the default HTML replacement (each template can have its own HTML replacement). Do not forget to put back tokens you used above!',
+
+	'TOKEN'					=> 'Token',
+	'TOKENS'				=> 'Tokens',
+	'TOKENS_EXPLAIN'		=> 'Tokens are placeholders for user input. The input will be validated only if it matches the corresponding definition. If needed, you can number them by adding a number as the last character between the braces, e.g. {USERNAME1}, {USERNAME2}.<br /><br />In addition to these tokens you can use any of lang string present in your language/ directory like this: {L_<i>&lt;stringname&gt;</i>} where <i>&lt;stringname&gt;</i> is the name of the translated string you want to add. For example, {L_WROTE} will be displayed as "wrote" or its translation according to user\'s locale',
+	'TOKEN_DEFINITION'		=> 'What can it be?',
+	'TOO_MANY_BBCODES'		=> 'You cannot create any more BBCodes. Please remove one or more BBCodes then try again',
+
+	'tokens'	=>	array(
+		'TEXT'			=> 'Any text, including foreign characters, numbers, etc...',
+		'NUMBER'		=> 'Any series of digits',
+		'EMAIL'			=> 'A valid email address',
+		'URL'			=> 'A valid URL using any protocol (http, ftp, etc... cannot be used for javascript exploits). If none is given, "http://" is prepended to to the string',
+		'LOCAL_URL'		=> 'A local URL. The URL must be relative to the topic page and cannot contain a server name or protocol',
+		'COLOR'			=> 'A HTML color, can be either in the numeric form #FF1234 or an english name such as "blue"'
+	)
+);
+
+// Smilies and topic icons
+$this->lang += array(
+	'ACP_ICONS_EXPLAIN'		=> 'From this page you can add, remove and edit the icons users may add to their topics or posts. These icons are generally displayed next to topic titles on the forum listing, or the post subjects in topic listings. You can also install and create new packages of icons.',
+	'ACP_SMILIES_EXPLAIN'	=> 'Smilies or emoticons are typically small, sometimes animated images used to convey an emotion or feeling. From this page you can add, remove and edit the emoticons users can use in their posts and private messages. You can also install and create new packages of smilies.',
+	'ADD_SMILIES'			=> 'Add multiple smilies',
+	'ADD_ICONS'				=> 'Add multiple icons',
+	'AFTER_ICONS'			=> 'After %s',
+	'AFTER_SMILIES'			=> 'After %s',
+
+	'CODE'						=> 'Code',
+	'CURRENT_ICONS'				=> 'Current icons',
+	'CURRENT_ICONS_EXPLAIN'		=> 'Choose what to do with the currently installed icons',
+	'CURRENT_SMILIES'			=> 'Current smilies',
+	'CURRENT_SMILIES_EXPLAIN'	=> 'Choose what to do with the currently installed smilies',
+
+	'DISPLAY_ON_POSTING'	=> 'Display on posting',
+
+	'EDIT_ICONS'				=> 'Edit Icons',
+	'EDIT_SMILIES'				=> 'Edit smilies',
+	'EMOTION'					=> 'Emotion',
+	'EXPORT_ICONS'				=> 'Create icons pak',
+	'EXPORT_ICONS_EXPLAIN'		=> 'To create a package of your currently installed icons, click %sHERE%s to download the icons package file. Once downloaded create a zip or tgz file containing all of your icons plus this .pak configuration file.',
+	'EXPORT_SMILIES'			=> 'Create smilies pak',
+	'EXPORT_SMILIES_EXPLAIN'	=> 'To create a package of your currently installed smilies, click %sHERE%s to download the smilies.pak file. Once downloaded create a zip or tgz file containing all of your smilies plus this .pak configuration file.',
+
+	'FIRST'			=> 'First',
+
+	'ICONS_ADD'				=> 'Add a new Icon',
+	'ICONS_ADDED'			=> 'The icon has been added successfully.',
+	'ICONS_CONFIG'			=> 'Icon configuration',
+	'ICONS_DELETED'			=> 'The icon has been removed successfully.',
+	'ICONS_EDIT'			=> 'Edit Icon',
+	'ICONS_EDITED'			=> 'The icon has been updated successfully.',
+	'ICONS_HEIGHT'			=> 'Icon height',
+	'ICONS_IMAGE'			=> 'Icon image',
+	'ICONS_IMPORTED'		=> 'The icons pack has been installed successfully.',
+	'ICONS_IMPORT_SUCCESS'	=> 'The icons pack was imported successfully',
+	'ICONS_LOCATION'		=> 'Icon location',
+	'ICONS_NOT_DISPLAYED'	=> 'The following icons are not displayed on the posting page',
+	'ICONS_ORDER'			=> 'Icon order',
+	'ICONS_URL'				=> 'Icon image file',
+	'ICONS_WIDTH'			=> 'Icon width',
+	'IMPORT_ICONS'			=> 'Install icons pak',
+	'IMPORT_SMILIES'		=> 'Install smilies pak',
+
+	'KEEP_ALL'			=> 'Keep all',
+
+	'MASS_ADD_SMILIES'	=> 'Add multiple smilies',
+
+	'NO_ICONS_EXPORT'	=> 'You have no icons with which to create a package.',
+	'NO_ICONS_PAK'		=> 'No icon packages found.',
+	'NO_SMILIES_EXPORT'	=> 'You have no smilies with which to create a package.',
+	'NO_SMILIES_PAK'	=> 'No smiley packages found.',
+
+	'PAK_FILE_NOT_READABLE'		=> 'Could not read pak file',
+
+	'REPLACE_MATCHES'	=> 'Replace matches',
+
+	'SELECT_PACKAGE'			=> 'Select a package file',
+	'SMILIES_ADD'				=> 'Add a new Smiley',
+	'SMILIES_ADDED'				=> 'The smiley has been added successfully.',
+	'SMILIES_CODE'				=> 'Smiley code',
+	'SMILIES_CONFIG'			=> 'Smiley configuration',
+	'SMILIES_DELETED'			=> 'The smiley has been removed successfully.',
+	'SMILIES_EDIT'				=> 'Edit Smiley',
+	'SMILIES_EDITED'			=> 'The smiley has been updated successfully.',
+	'SMILIES_EMOTION'			=> 'Emotion',
+	'SMILIES_HEIGHT'			=> 'Smiley height',
+	'SMILIES_IMAGE'				=> 'Smiley image',
+	'SMILIES_IMPORTED'			=> 'The smilies pack has been installed successfully.',
+	'SMILIES_IMPORT_SUCCESS'	=> 'The smilies pack was imported successfully',
+	'SMILIES_LOCATION'			=> 'Smiley location',
+	'SMILIES_NOT_DISPLAYED'		=> 'The following smilies are not displayed on the posting page',
+	'SMILIES_ORDER'				=> 'Smiley order',
+	'SMILIES_URL'				=> 'Smiley image file',
+	'SMILIES_WIDTH'				=> 'Smiley width',
+
+	'WRONG_PAK_TYPE'	=> 'The specified package does not contain the appropriate data.',
+);
+
+// Word censors
+$this->lang += array(
+	'ACP_WORDS_EXPLAIN'		=> 'From this control panel you can add, edit, and remove words that will be automatically censored on your forums. In addition people will not be allowed to register with usernames containing these words. Wildcards (*) are accepted in the word field, eg. *test* will match detestable, test* would match testing, *test would match detest.',
+	'ADD_WORD'				=> 'Add new word',
+
+	'EDIT_WORD'		=> 'Edit word censor',
+	'ENTER_WORD'	=> 'You must enter a word and its replacement',
+
+	'NO_WORD'	=> 'No word selected for editing',
+
+	'REPLACEMENT'	=> 'Replacement',
+
+	'UPDATE_WORD'	=> 'Update word censor',
+
+	'WORD'				=> 'Word',
+	'WORD_ADDED'		=> 'The word censor has been successfully added',
+	'WORD_REMOVED'		=> 'The selected word censor has been successfully removed',
+	'WORD_UPDATED'		=> 'The selected word censor has been successfully updated',
+);
+
+// Ranks
+$this->lang += array(
+	'ACP_RANKS_EXPLAIN'		=> 'Using this form you can add, edit, view and delete ranks. You can also create custom ranks which can be applied to a user via the user management facility.',
+	'ADD_RANK'				=> 'Add new rank',
+
+	'MUST_SELECT_RANK'		=> 'You must select a rank.',
+	
+	'NO_ASSIGNED_RANK'		=> 'No special rank assigned.',
+	'NO_RANK_TITLE'			=> 'You haven\'t specified a title for the rank.',
+	'NO_UPDATE_RANKS'		=> 'The rank was successfully deleted. However user accounts using this rank were not updated.  You will need to manually reset the rank on these accounts.',
+
+	'RANK_ADDED'			=> 'The rank was successfully added.',
+	'RANK_IMAGE'			=> 'Rank Image',
+	'RANK_IMAGE_EXPLAIN'	=> 'Use this to define a small image associated with the rank. The path is relative to the root phpBB directory.',
+	'RANK_MINIMUM'			=> 'Minimum Posts',
+	'RANK_REMOVED'			=> 'The rank was successfully deleted.',
+	'RANK_SPECIAL'			=> 'Set as Special Rank',
+	'RANK_TITLE'			=> 'Rank Title',
+	'RANK_UPDATED'			=> 'The rank was successfully updated.',
+);
+
+// Disallow Usernames
+$this->lang += array(
+	'ACP_DISALLOW_EXPLAIN'	=> 'Here you can control usernames which will not be allowed to be used.  Disallowed usernames are allowed to contain a wildcard character of *.  Please note that you will not be allowed to specify any username that has already been registered, you must first delete that name then disallow it',
+	'ADD_DISALLOW_EXPLAIN'	=> 'You can disallow a username using the wildcard character * to match any character',
+	'ADD_DISALLOW_TITLE'	=> 'Add a disallowed username',
+
+	'DELETE_DISALLOW_EXPLAIN'	=> 'You can remove a disallowed username by selecting the username from this list and clicking submit',
+	'DELETE_DISALLOW_TITLE'		=> 'Remove a Disallowed Username',
+	'DISALLOWED_ALREADY'		=> 'The name you entered could not be disallowed. It either already exists in the list, exists in the word censor list, or a matching username is present.',
+	'DISALLOWED_DELETED'		=> 'The disallowed username has been successfully removed',
+	'DISALLOW_SUCCESSFUL'		=> 'The disallowed username has been successfully added',
+
+	'NO_DISALLOWED'				=> 'No Disallowed Usernames',
+	'NO_USERNAME_SPECIFIED'		=> 'You haven\'t selected or entered a username to operate with.',
+);
+
+// Reasons
+$this->lang += array(
+	'ACP_REASONS_EXPLAIN'	=> 'Here you can manage the reasons used in reports and denial messages when disapproving posts. There is one default reason (marked with a *) you are not able to remove, this reason is normally used for custom messages if no reason fits.',
+
+	'ADD_NEW_REASON'		=> 'Add new reason',
+	
+	'IS_NOT_TRANSLATED'		=> 'Reason has not been localized',
+	'IS_TRANSLATED'			=> 'Reason has been localized',
+	
+	'NO_REASON'					=> 'Reason could not be found',
+	'NO_REASON_INFO'			=> 'You have to specify a title and a description for this reason.',
+	'NO_REMOVE_DEFAULT_REASON'	=> 'You are not able to remove the default reason "Other".',
+
+	'REASON_ADD'			=> 'Add report/denial reason',
+	'REASON_ADDED'			=> 'Report/denial reason successfully added',
+	'REASON_ALREADY_EXIST'	=> 'A reason with this title already exist, please enter another title for this reason.',
+	'REASON_DESCRIPTION'	=> 'Reason Description',
+	'REASON_EDIT'			=> 'Edit report/denial reason',
+	'REASON_EDIT_EXPLAIN'	=> 'Here you are able to add or edit a reason. If the reason is translated the localized version is used instead of the description entered here.',
+	'REASON_REMOVED'		=> 'Report/denial reason successfully removed',
+	'REASON_TITLE'			=> 'Reason Title',
+	'REASON_UPDATED'		=> 'Report/denial reason successfully updated',
+
+	'USED_IN_REPORTS'		=> 'Used in reports',
+);
+
+?>
\ No newline at end of file

Added: cms/trunk/modules/forums/language/admin_prune.php
===================================================================
--- cms/trunk/modules/forums/language/admin_prune.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/language/admin_prune.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -0,0 +1,69 @@
+<?php
+/** 
+*
+* acp_prune [English]
+*
+* @package language
+* @version $Id: prune.php,v 1.3 2006/05/12 23:45:27 naderman Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+
+// DEVELOPERS PLEASE NOTE 
+//
+// Placeholders can now contain order information, e.g. instead of
+// 'Page %s of %s' you can (and should) write 'Page %1$s of %2$s', this allows
+// translators to re-order the output of data while ensuring it remains correct
+//
+// You do not need this where single placeholders are used, e.g. 'Message %d' is fine
+// equally where a string contains only two placeholders which are used to wrap text
+// in a url you again do not need to specify an order e.g., 'Click %sHERE%s' is fine
+
+// User pruning
+$this->lang += array(
+	'ACP_PRUNE_USERS_EXPLAIN'	=> 'Here you can delete (or deactivate) users from you board. This can be done in a variety of ways; by post count, last activity, etc. Each of these criteria can be combined, i.e. you can prune users last active before 2002-01-01 with fewer than 10 posts. Alternatively you can enter a list of users directly into the text box, any criteria entered will be ignored. Take care with this facility! Once a user is deleted there is no way back.',
+
+	'DEACTIVATE_DELETE'			=> 'Deactivate or delete',
+	'DEACTIVATE_DELETE_EXPLAIN'	=> 'Choose whether to deactivate users or delete them entirely, note there is no undo!',
+	'DELETE_USERS'				=> 'Delete',
+	'DELETE_USER_POSTS'			=> 'Delete pruned user posts',
+	'DELETE_USER_POSTS_EXPLAIN' => 'Removes posts made by deleted users, has no effect if users are deactivated.',
+
+	'JOINED_EXPLAIN'			=> 'Enter a date in YYYY-MM-DD format.',
+
+	'LAST_ACTIVE_EXPLAIN'		=> 'Enter a date in YYYY-MM-DD format.',
+
+	'SELECT_USERS_EXPLAIN'		=> 'Enter specific usernames here, they will be used in preference to the criteria above.',
+
+	'USER_DEACTIVATE_SUCCESS'	=> 'The selected users have been deactivated successfully',
+	'USER_DELETE_SUCCESS'		=> 'The selected users have been deleted successfully',
+);
+
+// Forum Pruning
+$this->lang += array(
+	'ACP_PRUNE_FORUMS_EXPLAIN'	=> 'This will delete any topic which has not been posted to within the number of days you select. If you do not enter a number then all topics will be deleted. It will not remove topics in which polls are still running nor will it remove announcements. You will need to remove these topics manually.',
+
+	'FORUM_PRUNE'		=> 'Forum Prune',
+
+	'NO_PRUNE'			=> 'No forums pruned',
+
+	'SELECTED_FORUM'	=> 'Selected Forum',
+	'SELECTED_FORUMS'	=> 'Selected Forums',
+
+	'POSTS_PRUNED'					=> 'Posts pruned',
+	'PRUNE_ANNOUNCEMENTS'			=> 'Prune Announcements',
+	'PRUNE_FINISHED_POLLS'			=> 'Prune Closed Polls',
+	'PRUNE_FINISHED_POLLS_EXPLAIN'	=> 'Removes topics with polls which have ended.',
+	'PRUNE_NOT_POSTED'				=> 'Days since last posted',
+	'PRUNE_NOT_VIEWED'				=> 'Days since last viewed',
+	'PRUNE_OLD_POLLS'				=> 'Prune Old Polls',
+	'PRUNE_OLD_POLLS_EXPLAIN'		=> 'Removes topics with polls not voted in for post age days.',
+	'PRUNE_STICKY'					=> 'Prune Stickies',
+	'PRUNE_SUCCESS'					=> 'Pruning of forums was successful',
+
+	'TOPICS_PRUNED'		=> 'Topics pruned',
+);
+
+?>
\ No newline at end of file

Modified: cms/trunk/modules/forums/posting.php
===================================================================
--- cms/trunk/modules/forums/posting.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/posting.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -356,10 +356,12 @@
 
 if ($post_data['post_attachment'] && !$submit && !$refresh && !$preview && $mode == 'edit')
 {
-	$sql = 'SELECT attach_id, physical_filename, comment, real_filename, extension, mimetype, filesize, filetime, thumbnail
+	//$sql = 'SELECT attach_id, physical_filename, comment, real_filename, extension, mimetype, filesize, filetime, thumbnail
+	$sql = 'SELECT attach_id, is_orphan, attach_comment, real_filename
 		FROM ' . FORUMS_ATTACHMENTS_TABLE . "
 		WHERE post_msg_id = $post_id
 			AND in_message = 0
+			AND is_orphan = 0
 		ORDER BY filetime " . ((!$config['display_order']) ? 'DESC' : 'ASC');
 	$result = $_CLASS['core_db']->query($sql);
 
@@ -516,6 +518,7 @@
 $bbcode_status	= ($config['allow_bbcode'] && $_CLASS['forums_auth']->acl_get('f_bbcode', $forum_id));
 $smilies_status	= ($config['allow_smilies'] && $_CLASS['forums_auth']->acl_get('f_smilies', $forum_id));
 $img_status		= ($_CLASS['forums_auth']->acl_get('f_img', $forum_id));
+$url_status		= ($config['allow_post_links']) ? true : false;
 $flash_status	= ($_CLASS['forums_auth']->acl_get('f_flash', $forum_id));
 $quote_status	= ($_CLASS['forums_auth']->acl_get('f_reply', $forum_id));
 
@@ -714,12 +717,16 @@
 	// notify and show user the post made between his request and the final submit
 	if (($mode === 'reply' || $mode === 'quote') && $post_data['topic_cur_post_id'] && $post_data['topic_cur_post_id'] != $post_data['topic_last_post_id'])
 	{
-		if (topic_review($topic_id, $forum_id, 'post_review', $post_data['topic_cur_post_id']))
+		// Only do so if it is allowed forum-wide
+		if ($post_data['forum_flags'] & FORUM_FLAG_POST_REVIEW)
 		{
-			$_CLASS['core_template']->assign('S_POST_REVIEW',  true);
+			if (topic_review($topic_id, $forum_id, 'post_review', $post_data['topic_cur_post_id']))
+			{
+				$_CLASS['core_template']->assign('S_POST_REVIEW',  true);
+			}
+			$submit = false;
+			$refresh = true;
 		}
-		$submit = false;
-		$refresh = true;
 	}
 
 	// Parse Attachments - before checksum is calculated
@@ -734,7 +741,7 @@
 	// Parse message
 	if ($update_message)
 	{
-		$message_parser->parse($post_data['enable_bbcode'], $post_data['enable_urls'], $post_data['enable_smilies'], $img_status, $flash_status, $quote_status);
+		$message_parser->parse(false, $post_data['enable_bbcode'], ($config['allow_post_links']) ? $post_data['enable_urls'] : false, $post_data['enable_smilies'], $img_status, $flash_status, $quote_status, $config['allow_post_links']);
 	}
 	else
 	{
@@ -872,7 +879,7 @@
 		}
 	}
 
-	if (!empty($message_parser->warn_msg))
+	if (!empty($message_parser->warn_msg) && !$refresh)
 	{
 		$error[] = implode('<br />', $message_parser->warn_msg);
 	}
@@ -1257,6 +1264,7 @@
 	'IMG_STATUS'			=> ($img_status) ? $_CLASS['core_user']->lang['IMAGES_ARE_ON'] : $_CLASS['core_user']->lang['IMAGES_ARE_OFF'],
 	'FLASH_STATUS'			=> ($flash_status) ? $_CLASS['core_user']->lang['FLASH_IS_ON'] : $_CLASS['core_user']->lang['FLASH_IS_OFF'],
 	'SMILIES_STATUS'		=> ($smilies_status) ? $_CLASS['core_user']->lang['SMILIES_ARE_ON'] : $_CLASS['core_user']->lang['SMILIES_ARE_OFF'],
+	'URL_STATUS'			=> ($url_status) ? $_CLASS['core_user']->lang['URL_IS_ON'] : $_CLASS['core_user']->lang['URL_IS_OFF'],
 	'MINI_POST_IMG'			=> $_CLASS['core_user']->img('icon_post', $_CLASS['core_user']->lang['POST']),
 	'POST_DATE'				=> ($post_data['post_time']) ? $_CLASS['core_user']->format_date($post_data['post_time']) : '',
 	'ERROR'					=> empty($error) ? '' : implode('<br />', $error), 
@@ -1285,13 +1293,15 @@
 	'S_LOCK_TOPIC_CHECKED'	=> ($lock_topic_checked) ? ' checked="checked"' : '',
 	'S_LOCK_POST_ALLOWED'	=> ($mode == 'edit' && $_CLASS['forums_auth']->acl_get('m_edit', $forum_id)),
 	'S_LOCK_POST_CHECKED'	=> ($lock_post_checked) ? ' checked="checked"' : '',
+	'S_LINKS_ALLOWED'		=> $url_status,
 	'S_MAGIC_URL_CHECKED' 	=> ($urls_checked) ? ' checked="checked"' : '',
 	'S_TYPE_TOGGLE'			=> $topic_type_toggle,
 	'S_SAVE_ALLOWED'		=> ($_CLASS['forums_auth']->acl_get('u_savedrafts') && $_CLASS['core_user']->is_user),
 	'S_HAS_DRAFTS'			=> ($_CLASS['forums_auth']->acl_get('u_savedrafts') && $_CLASS['core_user']->is_user && $post_data['drafts']),
 	'S_FORM_ENCTYPE'		=> $form_enctype,
 
-	'S_BBCODE_IMG'			=> $img_status,
+	'S_BBCODE_IMG'			=> $img_status,
+	'S_BBCODE_URL'			=> $url_status,
 	'S_BBCODE_FLASH'		=> $flash_status,
 	'S_BBCODE_QUOTE'		=> $quote_status,
 

Modified: cms/trunk/modules/forums/report.php
===================================================================
--- cms/trunk/modules/forums/report.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/report.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,413 +1,165 @@
-<?php
-//**************************************************************//
-//  Vipeal CMS:													//
-//**************************************************************//
-//																//
-//  Copyright ? 2004 by Viperal									//
-//  http://www.viperal.com										//
-//																//
-//  Viperal CMS is released under the terms and conditions		//
-//  of the GNU General Public License version 2					//
-//																//
-//**************************************************************//
-
-// -------------------------------------------------------------
-//
-// $Id: report.php,v 1.16 2004/07/10 22:47:43 acydburn Exp $
-//
-// FILENAME  : report.php 
-// STARTED   : Thu Apr 3, 2003
-// COPYRIGHT : ? 2001, 2003 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
-// 
-// -------------------------------------------------------------
-if (!defined('VIPERAL'))
-{
-    die;
-}
-
-require_once($site_file_root.'includes/forums/functions.php');
-load_class($site_file_root.'includes/forums/auth.php', 'auth');
-$_CLASS['auth']->acl($_CLASS['core_user']->data);
-
-$_CLASS['core_user']->add_lang('mcp');
-
-// Report PM or Post?
-$id = request_var('p', request_var('pm', 0));
-$report_post = (request_var('p', 0)) ? true : false;
-$reason_id	= request_var('reason_id', 0);
-$user_notify= (!empty($_REQUEST['notify']) && $_CLASS['core_user']->data['user_id'] != ANONYMOUS) ? true : false;
-$report_text= request_var('report_text', '');
-
-if (!$id)
-{
-	trigger_error('INVALID_MODE');
-}
-
-$redirect_url = ($report_post) ? generate_link("Forums&amp;file=viewtopic&p=$id#$id") : generate_link('Control_Panel&i=pm&p='.$id);
-// Has the report been cancelled?
-if (isset($_POST['cancel']))
-{
-	redirect($redirect_url);
-}
-
-// Grab all relevant data
-if ($report_post)
-{
-	$sql = 'SELECT f.*, t.*, p.*
-		FROM ' . POSTS_TABLE . ' p, ' . TOPICS_TABLE . ' t, ' . FORUMS_TABLE . " f
-		WHERE p.post_id = $id
-			AND p.topic_id = t.topic_id
-			AND p.forum_id = f.forum_id";
-}
-else
-{
-	// Only the user itself is able to report his Private Messages
-	$sql = 'SELECT p.*, t.*
-		FROM ' . PRIVMSGS_TABLE . ' p, ' . PRIVMSGS_TO_TABLE . " t
-		WHERE t.msg_id = $id
-			AND t.user_id = " . $_CLASS['core_user']->data['user_id'] . '
-			AND t.msg_id = p.msg_id';
-}
-
-$result = $_CLASS['core_db']->sql_query($sql);
-$report_data = $_CLASS['core_db']->sql_fetchrow($result);
-$_CLASS['core_db']->sql_freeresult($result);
-
-if (!$report_data)
-{
-	$message = ($report_post) ? $_CLASS['core_user']->lang['POST_NOT_EXIST'] : $_CLASS['core_user']->lang['PM_NOT_EXIST'];
-	trigger_error($message);
-}
-
-if ($report_post)
-{
-	$forum_id = $report_data['forum_id'];
-	$topic_id = $report_data['topic_id'];
-
-	// Check required permissions
-	$acl_check_ary = array('f_list' => 'POST_NOT_EXIST', 'f_read' => 'USER_CANNOT_READ', 'f_report' => 'USER_CANNOT_REPORT');
-	
-	foreach ($acl_check_ary as $acl => $error)
-	{
-		if (!$_CLASS['auth']->acl_get($acl, $forum_id))
-		{
-			trigger_error($error);
-		}
-	}
-	unset($acl_check_ary);
-}
-else
-{
-	if (!$config['auth_report_pm'] || !$_CLASS['auth']->acl_get('u_pm_report'))
-	{
-		trigger_error('USER_CANNOT_REPORT');
-	}
-}
-
-// Check if the post has already been reported by this user
-$sql = 'SELECT *
-	FROM ' . REPORTS_TABLE . '
-	WHERE ' . (($report_post) ? "post_id = $id" : "msg_id = $id") . '
-		AND user_id = ' . $_CLASS['core_user']->data['user_id'];
-$result = $_CLASS['core_db']->sql_query($sql);
-$row = $_CLASS['core_db']->sql_fetchrow($result);
-$_CLASS['core_db']->sql_freeresult($result);
-
-if ($row)
-{
-	if ($_CLASS['core_user']->data['user_id'] != ANONYMOUS)
-	{
-		// A report exists, extract $row if we're going to display the form
-		if ($reason_id)
-		{
-			$report_id = (int) $row['report_id'];
-		}
-		else
-		{
-			// Overwrite set variables
-			extract($row);
-		}
-	}
-	else
-	{
-		trigger_error($_CLASS['core_user']->lang['ALREADY_REPORTED'] . '<br /><br />' . sprintf($_CLASS['core_user']->lang[(($report_post) ? 'RETURN_TOPIC' : 'RETURN_MESSAGE')], '<a href="' . $redirect_url . '">', '</a>'));
-	}
-}
-else
-{
-	$report_id = 0;
-}
-
-// Has the report been confirmed?
-if (isset($_POST['submit']) && $reason_id)
-{
-	$sql = 'SELECT reason_name, reason_description
-		FROM ' . REASONS_TABLE . " 
-		WHERE reason_id = $reason_id";
-	$result = $_CLASS['core_db']->sql_query($sql);
-	$row = $_CLASS['core_db']->sql_fetchrow($result);
-	$_CLASS['core_db']->sql_freeresult($result);
-
-	if (!$row || (!$report_text && $row['reason_name'] == 'other'))
-	{
-		trigger_error('EMPTY_REPORT');
-	}
-
-	$reason_desc = (!empty($_CLASS['core_user']->lang['report_reasons']['DESCRIPTION'][$row['reason_name']])) ? $_CLASS['core_user']->lang['report_reasons']['DESCRIPTION'][$row['reason_name']] : $row['reason_description'];
-	
-	$sql_ary = array(
-		'reason_id'		=> (int) $reason_id,
-		'post_id'		=> ($report_post) ? $id : 0,
-		'msg_id'		=> ($report_post) ? 0 : $id,
-		'user_id'		=> (int) $_CLASS['core_user']->data['user_id'],
-		'user_notify'	=> (int) $user_notify,
-		'report_time'	=> (int) time(),
-		'report_text'	=> (string) $report_text
-	);
-
-	if ($report_id)
-	{
-		$sql = 'UPDATE ' . REPORTS_TABLE . '
-			SET ' . $_CLASS['core_db']->sql_build_array('UPDATE', $sql_ary) . '
-			WHERE report_id = ' . $report_id;
-		$_CLASS['core_db']->sql_query($sql);
-	}
-	else
-	{
-		$sql = 'INSERT INTO ' . REPORTS_TABLE . ' ' . 
-			$_CLASS['core_db']->sql_build_array('INSERT', $sql_ary);
-		$_CLASS['core_db']->sql_query($sql);
-		$report_id = $_CLASS['core_db']->sql_nextid();
-	}
-
-	if ($report_post)
-	{
-		if (!$report_data['post_reported'])
-		{
-			$sql = 'UPDATE ' . POSTS_TABLE . ' 
-				SET post_reported = 1 
-				WHERE post_id = ' . $id;
-			$_CLASS['core_db']->sql_query($sql);
-		}
-
-		if (!$report_data['topic_reported'])
-		{
-			$sql = 'UPDATE ' . TOPICS_TABLE . ' 
-				SET topic_reported = 1 
-				WHERE topic_id = ' . $report_data['topic_id'];
-			$_CLASS['core_db']->sql_query($sql);
-		}
-	}
-	else
-	{
-		if (!$report_data['message_reported'])
-		{
-			$sql = 'UPDATE ' . PRIVMSGS_TABLE . " 
-				SET message_reported = 1 
-				WHERE msg_id = $id";
-			$_CLASS['core_db']->sql_query($sql);
-		}
-	}
-
-	// Send Notifications
-	// PM: Reported Post is put into all admin's boxes (not notifying about 'this' PM)
-	// All persons get notified about a new report, if notified by PM, send out email notifications too
-	
-	// Send notifications to moderators
-	$acl_list = ($report_post) ? $_CLASS['auth']->acl_get_list(false, array('m_', 'a_'), array(0, $report_data['forum_id'])) : $_CLASS['auth']->acl_get_list(false, 'a_', 0);
-	$notify_user = ($report_post) ? $acl_list[$report_data['forum_id']]['m_'] : array();
-	$notify_user = array_unique(array_merge($notify_user, $acl_list[0]['a_']));
-	unset($acl_list);
-
-	// Send reported PM to responsible persons (admins)
-	if (!$report_post)
-	{
-		foreach ($notify_user as $user_id)
-		{
-			$_CLASS['core_db']->sql_query('INSERT INTO ' . PRIVMSGS_TO_TABLE . ' ' . $_CLASS['core_db']->sql_build_array('INSERT', array(
-				'msg_id'	=> (int) $id,
-				'user_id'	=> (int) $user_id,
-				'author_id'	=> (int) $report_data['author_id'],
-				'folder_id'	=> PRIVMSGS_NO_BOX,
-				'new'		=> 1,
-				'unread'	=> 1,
-				'forwarded'	=> 0))
-			);
-		}
-
-		// Update Status
-		$sql = 'UPDATE ' . USERS_TABLE . ' 
-			SET user_new_privmsg = user_new_privmsg + 1, user_unread_privmsg = user_unread_privmsg + 1
-			WHERE user_id IN (' . implode(', ', $notify_user) . ')';
-		$_CLASS['core_db']->sql_query($sql);
-	}
-
-	// How to notify them?
-	$sql = 'SELECT user_id, username, user_options, user_lang, user_email, user_notify_type, user_jabber 
-		FROM ' . USERS_TABLE . '
-		WHERE user_id IN (' . implode(', ', $notify_user) . ')';
-	$result = $_CLASS['core_db']->sql_query($sql);
-
-	$notify_user = array();
-	while ($row = $_CLASS['core_db']->sql_fetchrow($result))
-	{
-		$notify_user[$row['user_id']] = array(
-			'name'	=> $row['username'],
-			'email' => $row['user_email'],
-			'jabber'=> $row['user_jabber'],
-			'lang'	=> $row['user_lang'],
-			'notify_type'	=> $row['user_notify_type'],
-			
-			'pm'	=> $_CLASS['core_user']->optionget('report_pm_notify', $row['user_options'])
-		);
-	}
-	$_CLASS['core_db']->sql_freeresult($result);
-
-	$report_data = array(
-		'id'		=> $id,
-		'report_id'	=> $report_id,
-		'reporter'	=> $_CLASS['core_user']->data['username'],
-		'reason'	=> $reason_desc,
-		'text'		=> $report_text,
-		'subject'	=> ($report_post) ? $report_data['post_subject'] : $report_data['message_subject'],
-		'view_post'	=> ($report_post) ? generate_link("Forums&amp;file=viewtopic&amp;f={$report_data['forum_id']}&t={$report_data['topic_id']}&p=$id&e=$id") : ''
-	);
-
-	report_notification($notify_user, $report_post, $report_data);
-
-	$_CLASS['core_display']->meta_refresh(3, $redirect_url);
-
-	$message = $_CLASS['core_user']->lang[(($report_post) ? 'POST' : 'MESSAGE') . '_REPORTED_SUCCESS'] . '<br /><br />' . sprintf($_CLASS['core_user']->lang[(($report_post) ? 'RETURN_TOPIC' : 'RETURN_MESSAGE')], '<a href="' . $redirect_url . '">', '</a>');
-	trigger_error($message);
-}
-
-// Generate the form
-$sql = 'SELECT * 
-	FROM ' . REASONS_TABLE . ' 
-	ORDER BY reason_priority ASC';
-$result = $_CLASS['core_db']->sql_query($sql);
-
-while ($row = $_CLASS['core_db']->sql_fetchrow($result))
-{
-	$row['reason_name'] = strtoupper($row['reason_name']);
-
-	$reason_title = (!empty($_CLASS['core_user']->lang['report_reasons']['TITLE'][$row['reason_name']])) ? $_CLASS['core_user']->lang['report_reasons']['TITLE'][$row['reason_name']] : ucwords(str_replace('_', ' ', $row['reason_name']));
-
-	$reason_desc = (!empty($_CLASS['core_user']->lang['report_reasons']['DESCRIPTION'][$row['reason_name']])) ? $_CLASS['core_user']->lang['report_reasons']['DESCRIPTION'][$row['reason_name']] : $row['reason_desc'];
-
-	$_CLASS['core_template']->assign_vars_array('reason', array(
-		'ID'			=>	$row['reason_id'],
-		'NAME'			=>	htmlspecialchars($reason_title),
-		'DESCRIPTION'	=>	htmlspecialchars($reason_desc),
-		'S_SELECTED'    =>	($row['reason_id'] == $reason_id) ? true : false)
-	);
-}
-$_CLASS['core_db']->sql_freeresult($result);
-
-$u_report = ($report_post) ? "p=$id" : "pm=$id";
-
-$_CLASS['core_template']->assign(array(
-	'REPORT_TEXT'		=>	$report_text,
-	'S_REPORT_ACTION'	=>	generate_link("Forums&amp;file=report&amp;$u_report" . (($report_id) ? "&amp;report_id=$report_id" : '')),
-	'S_NOTIFY'			=> (!empty($user_notify)) ? true : false,
-	'S_CAN_NOTIFY'		=> ($_CLASS['core_user']->data['user_id'] == ANONYMOUS) ? false : true,
-	'S_REPORT_POST'		=> $report_post)
-);
-
-if ($report_post)
-{
-	generate_forum_nav($report_data);
-}
-
-page_header();
-
-$_CLASS['core_template']->display('modules/Forums/report_body.html');
-
-function report_notification($notify_user, $report_post, $report_data)
-{
-	global $config, $site_file_root;
-
-	require_once($site_file_root.'includes/forums/functions_messenger.php');
-	require_once($site_file_root.'includes/forums/functions_privmsgs.php');
-	$messenger = new messenger();
-
-	$email_sig = str_replace('<br />', "\n", "-- \n" . $config['board_email_sig']);
-	$email_template = ($report_post) ? 'new_report_post' : 'new_report_pm';
-	$view_report_url = ($report_post) ? generate_link('Forums&amp;file=mcp&amp;i=queue&r=' . $report_data['report_id'], array('full' => true, 'sid' => false)) : generate_link('Forums&amp;file=mcp&amp;i=pm&p='. $report_data['id'] . '&r=' . $report_data['report_id'], array('full' => true, 'sid' => false));
-
-	foreach ($notify_user as $user_id => $notify_row)
-	{
-		// Send notification by email
-		if (!$notify_row['pm'])
-		{
-			$messenger->to($notify_row['email'], $notify_row['name']);
-			$messenger->im($notify_row['jabber'], $notify_row['name']);
-			$messenger->replyto($config['board_email']);
-
-			$messenger->template($email_template, $notify_row['lang']);
-
-			$messenger->assign_vars(array(
-				'EMAIL_SIG'		=> $email_sig,
-				'SITENAME'		=> $config['sitename'],
-				'USERNAME'		=> $notify_row['name'],
-				'SUBJECT'		=> $report_data['subject'],
-				'REPORTER'		=> $report_data['reporter'],
-
-				'REPORT_REASON'	=> $report_data['reason'],
-				'REPORT_TEXT'	=> $report_data['text'],
-
-				'U_VIEW_REPORT'	=> $view_report_url,
-				'U_VIEW_POST'	=> generate_board_url() . '/' . $report_data['view_post'])
-			);
-
-			$messenger->send($notify_row['notify_type']);
-			$messenger->reset();
-
-			$messenger->save_queue();
-		}
-		else
-		{
-			// Use messenger for getting the correct message, we use the email template
-			$messenger->template($email_template, $notify_row['lang']);
-			
-			$messenger->assign_vars(array(
-				'EMAIL_SIG'		=> $email_sig,
-				'SITENAME'		=> $config['sitename'],
-				'USERNAME'		=> $notify_row['name'],
-				'SUBJECT'		=> $report_data['subject'],
-				'REPORTER'		=> $report_data['reporter'],
-
-				'REPORT_REASON'	=> $report_data['reason'],
-				'REPORT_TEXT'	=> $report_data['text'],
-
-				'U_VIEW_REPORT'	=> generate_board_url() . '/' . $view_report_url)
-			);
-
-			// break the sending process...
-			$messenger->send(false, true);
-			$messenger->reset();
-			
-			// do not put in reporters outbox
-			submit_pm('post', $report_data['subject'], '', array(), array(), array(
-				'address_list'	=> array('u' => array($user_id => 'to')),
-				'icon_id'		=> 0,
-				'enable_bbcode' 	=> 0,
-				'enable_html' 		=> 0,
-				'enable_smilies' 	=> 0,
-				'enable_magic_url' 	=> 1,
-				'enable_sig' 		=> 0,
-				'message_md5'		=> md5($messenger->msg),
-				'bbcode_bitfield'	=> 0,
-				'bbcode_uid'		=> 0,
-				'attachment_data'	=> array(),
-				'filename_data'		=> array(),
-				'message'			=> $messenger->msg				
-				), true, false);
-		}
-	}
-	unset($messenger);
-}
-
+<?php
+/** 
+*
+* @package phpBB3
+* @version $Id: report.php,v 1.31 2006/06/14 18:59:11 naderman Exp $
+* @copyright (c) 2005 phpBB Group 
+* @license http://opensource.org/licenses/gpl-license.php GNU Public License 
+*
+*/
+
+/**
+* @ignore
+*/
+define('IN_PHPBB', true);
+$phpbb_root_path = './';
+$phpEx = substr(strrchr(__FILE__, '.'), 1);
+include($phpbb_root_path . 'common.' . $phpEx);
+include($phpbb_root_path . 'includes/functions_display.' . $phpEx);
+
+// Start session management
+$user->session_begin();
+$auth->acl($user->data);
+$user->setup('mcp');
+
+$forum_id = request_var('f', 0);
+$post_id = request_var('p', 0);
+$reason_id = request_var('reason_id', 0);
+$report_text = request_var('report_text', '', true);
+$user_notify = (isset($_POST['notify']) && $user->data['is_registered']) ? true : false;
+$submit = (isset($_POST['submit'])) ? true : false;
+
+if (!$post_id)
+{
+	trigger_error('INVALID_MODE');
+}
+
+$redirect_url = append_sid("{$phpbb_root_path}viewtopic.$phpEx", "f=$forum_id&amp;p=$post_id") . "#p$post_id";
+
+// Has the report been cancelled?
+if (isset($_POST['cancel']))
+{
+	redirect($redirect_url);
+}
+
+// Grab all relevant data
+$sql = 'SELECT t.*, p.*
+	FROM ' . POSTS_TABLE . ' p, ' . TOPICS_TABLE . " t
+	WHERE p.post_id = $post_id
+		AND p.topic_id = t.topic_id";
+$result = $db->sql_query($sql);
+$report_data = $db->sql_fetchrow($result);
+$db->sql_freeresult($result);
+
+if (!$report_data)
+{
+	trigger_error('POST_NOT_EXIST');
+}
+
+$forum_id = (int) ($report_data['forum_id']) ? $report_data['forum_id'] : $forum_id;
+$topic_id = (int) $report_data['topic_id'];
+
+$sql = 'SELECT *
+	FROM ' . FORUMS_TABLE . '
+	WHERE forum_id = ' . $forum_id;
+$result = $db->sql_query($sql);
+$forum_data = $db->sql_fetchrow($result);
+
+if (!$forum_data)
+{
+	trigger_error('FORUM_NOT_EXIST');
+}
+
+// Check required permissions
+$acl_check_ary = array('f_list' => 'POST_NOT_EXIST', 'f_read' => 'USER_CANNOT_READ', 'f_report' => 'USER_CANNOT_REPORT');
+
+foreach ($acl_check_ary as $acl => $error)
+{
+	if (!$auth->acl_get($acl, $forum_id))
+	{
+		trigger_error($error);
+	}
+}
+unset($acl_check_ary);
+
+if ($report_data['post_reported'])
+{
+	$message = $user->lang['ALREADY_REPORTED'];
+	$message .= '<br /><br />' . sprintf($user->lang['RETURN_TOPIC'], '<a href="' . $redirect_url . '">', '</a>');
+	trigger_error($message);
+}
+
+// Submit report?
+if ($submit && $reason_id)
+{
+	$sql = 'SELECT *
+		FROM ' . REPORTS_REASONS_TABLE . "
+		WHERE reason_id = $reason_id";
+	$result = $db->sql_query($sql);
+	$row = $db->sql_fetchrow($result);
+	$db->sql_freeresult($result);
+
+	if (!$row || (!$report_text && $row['reason_title'] == 'other'))
+	{
+		trigger_error('EMPTY_REPORT');
+	}
+
+	$sql_ary = array(
+		'reason_id'		=> (int) $reason_id,
+		'post_id'		=> $post_id,
+		'user_id'		=> (int) $user->data['user_id'],
+		'user_notify'	=> (int) $user_notify,
+		'report_closed'	=> 0,
+		'report_time'	=> (int) time(),
+		'report_text'	=> (string) $report_text
+	);
+
+	$sql = 'INSERT INTO ' . REPORTS_TABLE . ' ' . $db->sql_build_array('INSERT', $sql_ary);
+	$db->sql_query($sql);
+	$report_id = $db->sql_nextid();
+
+	if (!$report_data['post_reported'])
+	{
+		$sql = 'UPDATE ' . POSTS_TABLE . '
+			SET post_reported = 1
+			WHERE post_id = ' . $post_id;
+		$db->sql_query($sql);
+	}
+
+	if (!$report_data['topic_reported'])
+	{
+		$sql = 'UPDATE ' . TOPICS_TABLE . '
+			SET topic_reported = 1
+			WHERE topic_id = ' . $report_data['topic_id'];
+		$db->sql_query($sql);
+	}
+
+	meta_refresh(3, $redirect_url);
+
+	$message = $user->lang['POST_REPORTED_SUCCESS'] . '<br /><br />' . sprintf($user->lang['RETURN_TOPIC'], '<a href="' . $redirect_url . '">', '</a>');
+	trigger_error($message);
+}
+
+// Generate the reasons
+display_reasons($reason_id);
+
+$template->assign_vars(array(
+	'REPORT_TEXT'		=> $report_text,
+	'S_REPORT_ACTION'	=> append_sid("{$phpbb_root_path}report.$phpEx", 'f=' . $forum_id . '&amp;p=' . $post_id),
+
+	'S_NOTIFY'			=> $user_notify,
+	'S_CAN_NOTIFY'		=> ($user->data['is_registered']) ? true : false)
+);
+
+generate_forum_nav($forum_data);
+
+// Start output of page
+page_header($user->lang['REPORT_POST']);
+
+$template->set_filenames(array(
+	'body' => 'report_body.html')
+);
+
+page_footer();
+
 ?>
\ No newline at end of file

Deleted: cms/trunk/modules/forums/search.php
===================================================================
--- cms/trunk/modules/forums/search.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/search.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -1,1004 +0,0 @@
-<?php
-/*
-||**************************************************************||
-||  Viperal CMS ?? :												||
-||**************************************************************||
-||																||
-||	Copyright (C) 2004, 2005									||
-||  By Ryan Marshall ( Viperal )								||
-||																||
-||  Email: viperal1 at gmail.com									||
-||  Site: http://www.viperal.com								||
-||																||
-||**************************************************************||
-||	LICENSE: ( http://www.gnu.org/licenses/gpl.txt )			||
-||**************************************************************||
-||  Viperal CMS is released under the terms and conditions		||
-||  of the GNU General Public License version 2					||
-||																||
-||**************************************************************||
-
-$Id$
-*/
-
-// -------------------------------------------------------------
-//
-// $Id: search.php,v 1.108 2004/10/19 19:20:30 acydburn Exp $
-//
-// FILENAME  : search.php 
-// STARTED   : Sat Feb 13, 2001
-// COPYRIGHT : ? 2001, 2003 phpBB Group
-// WWW       : http://www.phpbb.com/
-// LICENCE   : GPL vs2.0 [ see /docs/COPYING ] 
-// 
-// -------------------------------------------------------------
-
-//TODO
-//Introduce phrase searching?
-//Stemmers?
-//Find similar?
-//Relevancy?
-if (!defined('VIPERAL'))
-{
-    die;
-}
-
-$_CLASS['core_user']->add_lang('search');
-$_CLASS['core_user']->add_img();
-
-// Is user able to search? Has search been disabled?
-//!$_CLASS['auth']->acl_get('u_search') 
-if ($_CLASS['core_user']->is_bot || !$config['load_search'])
-{
-	trigger_error('NO_SEARCH');
-}
-
-// Define initial vars
-$mode				= request_var('mode', '');
-$search_id			= request_var('search_id', '');
-$search_session_id 	= request_var('search_session_id', 0);
-$start				= request_var('start', 0);
-$post_id			= request_var('p', 0);
-$view				= request_var('view', '');
-
-$search_keywords	= request_var('search_keywords', '');
-$search_author		= request_var('search_author', '');
-$show_results		= request_var('show_results', 'posts');
-$search_terms		= request_var('search_terms', 'all');
-$search_fields		= request_var('search_fields', 'all');
-$search_child		= request_var('search_child', true);
-
-$return_chars	= request_var('return_chars', 200);
-$search_forum	= request_var('search_forum', array(0));
-
-$sort_days	= request_var('st', 0);
-$sort_key	= request_var('sk', 't');
-$sort_dir	= request_var('sd', 'd');
-
-// Define some vars
-$limit_days		= array(0 => $_CLASS['core_user']->lang['ALL_RESULTS'], 1 => $_CLASS['core_user']->lang['1_DAY'], 7 => $_CLASS['core_user']->lang['7_DAYS'], 14 => $_CLASS['core_user']->lang['2_WEEKS'], 30 => $_CLASS['core_user']->lang['1_MONTH'], 90 => $_CLASS['core_user']->lang['3_MONTHS'], 180 => $_CLASS['core_user']->lang['6_MONTHS'], 364 => $_CLASS['core_user']->lang['1_YEAR']);
-$sort_by_text	= array('a' => $_CLASS['core_user']->lang['SORT_AUTHOR'], 't' => $_CLASS['core_user']->lang['SORT_TIME'], 'f' => $_CLASS['core_user']->lang['SORT_FORUM'], 'i' => $_CLASS['core_user']->lang['SORT_TOPIC_TITLE'], 's' => $_CLASS['core_user']->lang['SORT_POST_SUBJECT']);
-
-$s_limit_days = $s_sort_key = $s_sort_dir = $u_sort_param = '';
-gen_sort_selects($limit_days, $sort_by_text, $sort_days, $sort_key, $sort_dir, $s_limit_days, $s_sort_key, $s_sort_dir, $u_sort_param);
-
-$store_vars		= array('sort_key', 'sort_dir', 'sort_days', 'show_results', 'return_chars', 'total_match_count');
-$current_time	= $_CLASS['core_user']->time;
-$stopped_words	= array();
-
-// Check last search time ... if applicable
-if ($config['search_interval'])
-{
-	$sql = 'SELECT MAX(search_time) as last_time
-		FROM ' . FORUMS_SEARCH_TABLE."
-			WHERE session_id = '" . $_CLASS['core_db']->escape($_CLASS['core_user']->data['session_id']) . "'";
-	$result = $_CLASS['core_db']->query($sql);
-
-	if ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		if ($row['last_time'] > $_CLASS['core_user']->time - $config['search_interval'])
-		{
-			trigger_error('NO_SEARCH_TIME');
-		}
-	}
-}
-
-if ($search_keywords || $search_author || $search_id || $search_session_id)
-{
-	$post_id_ary = $split_words = $old_split_words = $common_words = array();
-
-	$permission_array = array_keys($_CLASS['auth']->acl_getf('f_read'));
-
-	if (!empty($search_forum))
-	{
-		$search_forum = array_unique($search_forum);
-		$difference = array_diff($search_forum, $permission_array);
-
-		// I'm sure theres a better way to do this, but it's close to midnight
-		if (!empty($difference))
-		{
-			$count = count($search_forum);
-			
-			for ($i = 0; $i < $count; $i++)
-			{
-				if (!in_array($search_forum[$i], $difference))
-				{
-					$temp[] = $search_forum[$i];
-				}
-			}
-			$search_forum = $temp;
-
-			unset($temp);
-		}
-	}
-	else
-	{
-		$search_forum =& $permission_array;
-	}
-
-	if (empty($search_forum))
-	{
-		trigger_error('NO_SEARCH_RESULTS');
-	}
-
-// This should be only intergers
-	$sql_forums = ' AND p.forum_id IN (' . implode(', ', $search_forum) . ')';
-
-	unset($search_forum, $permission_array);
-
-	if ($search_id === 'egosearch')
-	{
-		$search_author = $_CLASS['core_user']->data['username'];
-	}
-
-	// Are we looking for a user?
-	$sql_author = '';
-
-	if ($search_author)
-	{
-		$sql_where = (mb_strpos($search_author, '*') !== false) ? ' LIKE ' : ' = ';
-
-		$sql = 'SELECT user_id 
-			FROM ' . USERS_TABLE . "
-			WHERE username $sql_where '" . $_CLASS['core_db']->escape(preg_replace('#\*+#', '%', $search_author)) . "'
-				AND user_type = " . USER_NORMAL;
-		$result = $_CLASS['core_db']->query($sql);
-		
-		
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$sql_author[] = $row['user_id'];
-		}
-		$_CLASS['core_db']->free_result($result);
-
-		if (empty($sql_author))
-		{
-			trigger_error('NO_SEARCH_RESULTS');
-		}
-
-		$sql_author = (count($sql_author) == 1) ?  ' p.poster_id = ' . $sql_author[0] : ' p.poster_id IN (' . implode(', ', $sql_author) . ')';
-	}
-
-	if ($search_id)
-	{
-		switch ($search_id)
-		{
-			// Oh holy Bob, bring us some activity...
-			case 'active_topics':
-				$show_results = 'topics';
-
-				if (!$sort_days)
-				{
-					$sort_days = 1;
-					gen_sort_selects($limit_days, $sort_by_text, $sort_days, $sort_key, $sort_dir, $s_limit_days, $s_sort_key, $s_sort_dir, $u_sort_param);
-				}
-
-				$last_post_time = ($_CLASS['core_user']->time - ($sort_days * 24 * 3600));
-
-				$sql = 'SELECT DISTINCT t.topic_id, t.topic_last_post_time
-					FROM ' . FORUMS_POSTS_TABLE . ' p
-					LEFT JOIN ' . FORUMS_TOPICS_TABLE . " t ON (t.topic_approved = 1 AND p.topic_id = t.topic_id)
-					WHERE p.post_time > $last_post_time
-						$sql_forums
-					ORDER BY t.topic_last_post_time DESC";
-				$result = $_CLASS['core_db']->query_limit($sql, 1000);
-
-				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-				{
-					$post_id_ary[] = $row['topic_id'];
-				}
-				$_CLASS['core_db']->free_result($result);
-				
-				if (empty($post_id_ary))
-				{
-					trigger_error('NO_SEARCH_RESULTS');
-				}
-			break;
-				
-			case 'egosearch':
-			break;
-
-			case 'unanswered':
-				if ($show_results == 'posts')
-				{
-					$sql = 'SELECT p.post_id 
-						FROM ' . FORUMS_POSTS_TABLE . ' p, ' . FORUMS_TOPICS_TABLE . " t 
-						WHERE t.topic_replies = 0
-							AND p.topic_id = t.topic_id
-							$sql_forums";
-					$field = 'post_id';
-				}
-				else
-				{
-					$sql = 'SELECT t.topic_id 
-						FROM ' . FORUMS_POSTS_TABLE . ' p, ' . FORUMS_TOPICS_TABLE . " t 
-						WHERE t.topic_replies = 0 
-							AND p.topic_id = t.topic_id
-							$sql_forums
-						GROUP BY p.topic_id";
-					$field = 'topic_id';
-				}
-				$result = $_CLASS['core_db']->query($sql);
-
-				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-				{
-					$post_id_ary[] = $row[$field];
-				}
-				$_CLASS['core_db']->free_result($result);
-
-				if (empty($post_id_ary))
-				{
-					trigger_error('NO_SEARCH_RESULTS');
-				}
-			break;
-
-			case 'newposts':
-				if ($show_results == 'posts')
-				{
-					$sql = 'SELECT p.post_id 
-						FROM ' . FORUMS_POSTS_TABLE . ' p 
-						WHERE p.post_time > ' . $_CLASS['core_user']->data['user_last_visit'] . "
-							$sql_forums";
-					$field = 'post_id';
-				}
-				else
-				{
-					$sql = 'SELECT t.topic_id
-						FROM ' . FORUMS_TOPICS_TABLE . ' t, ' . FORUMS_POSTS_TABLE . ' p 
-						WHERE p.post_time > ' . $_CLASS['core_user']->data['user_last_visit'] . " 
-							AND t.topic_id = p.topic_id 
-							$sql_forums 
-						GROUP by p.topic_id";
-					$field = 'topic_id';
-				}
-				$result = $_CLASS['core_db']->query($sql);
-
-				while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-				{
-					$post_id_ary[] = $row[$field];
-				}
-				$_CLASS['core_db']->free_result($result);
-
-				if (empty($post_id_ary))
-				{
-					trigger_error('NO_SEARCH_RESULTS');
-				}
-			break;
-		}
-	}
-	
-	if ($search_session_id)
-	{
-		$sql = 'SELECT search_array
-			FROM ' . FORUMS_SEARCH_TABLE . "
-			WHERE search_id = $search_session_id
-				AND session_id = '" . $_CLASS['core_db']->escape($_CLASS['core_user']->data['session_id']) . "'";
-		$result = $_CLASS['core_db']->query($sql);
-		$row = $_CLASS['core_db']->fetch_row_assoc($result);
-		$_CLASS['core_db']->free_result($result);
-
-		if ($row)
-		{
-			$data = explode('#', $row['search_array']);
-
-			$split_words = unserialize(array_shift($data));
-
-			if ($search_keywords)
-			{
-				// If we're wanting to search on these results we store the existing split word array
-				$old_split_words = $split_words;
-			}
-
-			$stopped_words = unserialize(array_shift($data));
-
-			foreach ($store_vars as $var)
-			{
-				$$var = array_shift($data);
-			}
-
-			$sql_where = (($show_results == 'posts') ? 'p.post_id' : 't.topic_id') . ' IN (' . implode(', ', $data) . ')';
-			unset($data);
-		}
-		else
-		{
-			$search_session_id = false;
-		}
-	}
-
-	// Are we looking for words
-	if ($search_keywords)
-	{
-		$sql_author = ($sql_author) ? ' AND ' . $sql_author : '';
-
-		$split_words = $stopped_words = $smllrg_words = array();
-		$drop_char_match =   array('-', '^', '$', ';', '#', '&', '(', ')', '<', '>', '`', '\'', '"', '|', ',', '@', '_', '?', '%', '~', '.', '[', ']', '{', '}', ':', '\\', '/', '=', '\'', '!', '*');
-		$drop_char_replace = array(' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '',  '',   ' ', ' ', ' ', ' ', '',  ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '' ,  ' ', ' ', ' ',  ' ', ' ');
-
-		if ($fp = @fopen($_CLASS['core_user']->lang_path . '/search_stopwords.txt', 'rb'))
-		{
-			$stopwords = explode("\n", str_replace("\r\n", "\n", fread($fp, filesize($_CLASS['core_user']->lang_path . '/search_stopwords.txt'))));
-		}
-		fclose($fp);
-
-		if ($fp = @fopen($_CLASS['core_user']->lang_path . '/search_synonyms.txt', 'rb'))
-		{
-			preg_match_all('#^(.*?) (.*?)$#ms', fread($fp, filesize($_CLASS['core_user']->lang_path . '/search_synonyms.txt')), $match);
-			
-			$replace_synonym = $match[1];
-			$match_synonym = $match[2];
-		}
-		fclose($fp);
-
-		$match		= array('#\sand\s#i', '#\sor\s#i', '#\snot\s#i', '#\+#', '#-#', '#\|#');
-		$replace	= array(' + ',        ' | ',       ' - ',        ' + ',  ' - ', ' | ');
-
-		$search_keywords = preg_replace($match, $replace, $search_keywords);
-
-		$match = array();
-		// Comments for hardcoded bbcode elements (urls, smilies, html)
-		$match[] = '#<!\-\- .* \-\->(.*?)<!\-\- .* \-\->#is';
-		// New lines, carriage returns
-		$match[] = "#[\n\r]+#";
-		// NCRs like &nbsp; etc.
-		$match[] = '#(&amp;|&)[\#a-z0-9]+?;#i';
-		// BBcode
-		$match[] = '#\[\/?[a-z\*\+\-]+(=.*)?(\:?[0-9a-z]{5,})\]#';
-
-		// Filter out as above
-		$search_keywords = preg_replace($match, ' ', strtolower(trim($search_keywords)));
-		$search_keywords = str_replace($drop_char_match, $drop_char_replace, $search_keywords);
-
-		// Split words
-		$split_words = explode(' ', preg_replace('#\s+#', ' ', $search_keywords));
-
-		if (sizeof($stopwords))
-		{
-			$stopped_words = array_intersect($split_words, $stopwords);
-			$split_words = array_diff($split_words, $stopwords);
-		}
-
-		if (sizeof($replace_synonym))
-		{
-			$split_words = str_replace($replace_synonym, $match_synonym, $split_words);
-		}
-	}
-
-	if (!empty($old_split_words))
-	{
-		$split_words = !empty($split_words) ? array_diff($split_words, $old_split_words) : $old_split_words;
-	}
-
-	if (!empty($split_words))
-	{
-		// This "entire" section may be switched out to allow for alternative search systems
-		// such as that built-in to MySQL, MSSQL, etc. or external solutions which provide
-		// an appropriate API
-
-		$bool = ($search_terms == 'all') ? 'AND' : 'OR';
-		$sql_words = '';
-
-		foreach ($split_words as $word)
-		{
-			switch ($word)
-			{
-				case '-':
-					$bool = 'NOT';
-				break;
-
-				case '+':
-					$bool = 'AND';
-				break;
-
-				case '|':
-					$bool = 'OR';
-				break;
-
-				default:
-					$bool = ($search_terms != 'all') ? 'OR' : $bool;
-					$sql_words[$bool][] = "'" . preg_replace('#\*+#', '%', trim($word)) . "'";
-					$bool = ($search_terms == 'all') ? 'AND' : 'OR';
-				break;
-			}
-		}
-
-		switch ($search_fields)
-		{
-			case 'titleonly':
-				$sql_match = ' AND m.title_match = 1';
-				break;
-			case 'msgonly':
-				$sql_match = ' AND m.title_match = 0';
-				break;
-			default:
-				$sql_match = '';
-		}
-
-		// Build some display specific variable strings
-		$sql_select = ($show_results == 'posts') ? 'm.post_id' : 'DISTINCT t.topic_id';
-		$sql_from = ($show_results == 'posts') ? '' : FORUMS_TOPICS_TABLE . ' t, ';
-		$sql_topic = ($show_results == 'posts') ? '' : 'AND t.topic_id = p.topic_id';
-		$sql_time = ($sort_days) ? 'AND p.post_time >= ' . ($current_time - ($sort_days * 86400)) : '';
-		$field = ($show_results == 'posts') ? 'm.post_id' : 't.topic_id';
-
-		// Are we searching within an existing search set? Yes, then include the old ids
-		//$sql_find_in = ($sql_where) ? "AND $sql_where" : '';
-		$sql_find_in = '';
-
-		$result_ary = array();
-		foreach (array('AND', 'OR', 'NOT') as $bool)
-		{
-			if (isset($sql_words[$bool]) && is_array($sql_words[$bool]))
-			{
-				switch ($bool)
-				{
-					case 'AND':
-					case 'NOT':
-						foreach ($sql_words[$bool] as $word)
-						{
-							if (strlen($word) < 4)
-							{
-								continue;
-							}
-
-							$sql_where = (strstr($word, '%')) ? "LIKE $word" : "= $word";
-
-							$sql_and = (isset($result_ary['AND']) && sizeof($result_ary['AND'])) ? "AND $field IN (" . implode(', ', $result_ary['AND']) . ')' : '';
-
-							$sql = "SELECT $sql_select 
-								FROM $sql_from" . FORUMS_POSTS_TABLE . ' p, ' . FORUMS_SEARCH_MATCH_TABLE . ' m, ' . FORUMS_SEARCH_WORD_TABLE . " w 
-								WHERE w.word_text $sql_where 
-									AND m.word_id = w.word_id 
-									AND w.word_common <> 1 
-									AND p.post_id = m.post_id
-									$sql_topic 
-									$sql_forums 
-									$sql_author 
-									$sql_and 
-									$sql_time 
-									$sql_match
-									$sql_find_in";
-							$result = $_CLASS['core_db']->query($sql);
-
-							if (!($row = $_CLASS['core_db']->fetch_row_assoc($result)) && $bool == 'AND')
-							{
-								trigger_error('NO_SEARCH_RESULTS');
-							}
-
-							if ($bool == 'AND')
-							{
-								$result_ary['AND'] = array();
-							}
-
-							do
-							{
-								$result_ary[$bool][] = ($show_results == 'topics') ? $row['topic_id'] : $row['post_id'];
-							}
-							while ($row = $_CLASS['core_db']->fetch_row_assoc($result));
-							$_CLASS['core_db']->free_result($result);
-						}
-						break;
-
-					case 'OR':
-						$sql_where = $sql_in = '';
-						foreach ($sql_words[$bool] as $word)
-						{
-							if (strlen($word) < 4)
-							{
-								continue;
-							}
-
-							if (strstr($word, '%'))
-							{
-								$sql_where .= (($sql_where) ? ' OR w.word_text ' : 'w.word_text ') . "LIKE $word";
-							}
-							else
-							{
-								$sql_in .= (($sql_in) ? ', ' : '') . $word;
-							}
-						}
-						$sql_where = ($sql_in) ? (($sql_where) ? ' OR ' : '') . 'w.word_text IN (' . $sql_in . ')' : $sql_where;
-
-						$sql_and = (sizeof($result_ary['AND'])) ? "AND $field IN (" . implode(', ', $result_ary['AND']) . ')' : '';
-						$sql = "SELECT $sql_select 
-							FROM $sql_from" . FORUMS_POSTS_TABLE . ' p, ' . FORUMS_SEARCH_MATCH_TABLE . ' m, ' . FORUMS_SEARCH_WORD_TABLE . " w 
-							WHERE ($sql_where) 
-								AND m.word_id = w.word_id 
-								AND w.word_common <> 1 
-								AND p.post_id = m.post_id
-								$sql_topic 
-								$sql_forums 
-								$sql_author 
-								$sql_and 
-								$sql_time 
-								$sql_match 
-								$sql_find_in";
-						$result = $_CLASS['core_db']->query($sql);
-
-						while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-						{
-							$result_ary[$bool][] = ($show_results == 'topics') ? $row['topic_id'] : $row['post_id'];
-						}
-						$_CLASS['core_db']->free_result($result);
-						break;
-				}
-			}
-			else
-			{
-				$sql_words[$bool] = array();
-			}
-		}
-
-		if (isset($result_ary['OR']) && sizeof($result_ary['OR']))
-		{
-			$post_id_ary = (isset($result_ary['AND']) && sizeof($result_ary['AND'])) ? array_diff($result_ary['AND'], $result_ary['OR']) : $result_ary['OR'];
-		}
-		else
-		{
-			$post_id_ary = (isset($result_ary['AND'])) ? $result_ary['AND'] : array();
-		}
-
-		if (isset($result_ary['NOT']) && sizeof($result_ary['NOT']))
-		{
-			$post_id_ary = (sizeof($post_id_ary)) ? array_diff($post_id_ary, $result_ary['NOT']) : array();
-		}
-		unset($result_ary);
-
-		$post_id_ary = array_unique($post_id_ary);
-
-
-		if (!sizeof($post_id_ary))
-		{
-			trigger_error('NO_SEARCH_RESULTS');
-		}
-
-		$sql = 'SELECT word_text 
-			FROM ' . FORUMS_SEARCH_WORD_TABLE . ' 
-			WHERE word_text IN (' . implode(', ', array_unique(array_merge($sql_words['AND'], $sql_words['OR'], $sql_words['NOT']))) . ')
-				AND word_common = 1';
-		$result = $_CLASS['core_db']->query($sql);
-
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$common_words[] = $row['word_text'];
-		}
-		$_CLASS['core_db']->free_result($result);
-	}
-	elseif ($search_author)
-	{
-		if ($show_results === 'posts')
-		{
-			$sql = 'SELECT p.post_id 
-				FROM ' . FORUMS_POSTS_TABLE . " p 
-				WHERE $sql_author 
-					$sql_forums";
-			$field = 'post_id';
-		}
-		else
-		{
-			$sql = 'SELECT t.topic_id 
-				FROM ' . FORUMS_TOPICS_TABLE . ' t, ' . FORUMS_POSTS_TABLE . " p 
-				WHERE $sql_author
-					$sql_forums
-					AND t.topic_id = p.topic_id 
-				GROUP BY t.topic_id";
-			$field = 'topic_id';
-		}
-		$result = $_CLASS['core_db']->query($sql);
-
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$post_id_ary[] = $row[$field];
-		}
-		$_CLASS['core_db']->free_result($result);
-	}
-
-	if (!empty($post_id_ary))
-	{
-/*
- Make uses of autoinsert for search_id
- also rethink the why this is done, storing things more then one shouldn't be needed
-*/
-		$sql = 'SELECT session_id
-			FROM ' . SESSIONS_TABLE ."
-			WHERE session_id <> '" . $_CLASS['core_user']->data['session_id'] . "'";
-		$result = $_CLASS['core_db']->query($sql);
-
-		$delete_search_ids = array();
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$delete_search_ids[] = "'" . $_CLASS['core_db']->escape($row['session_id']) . "'";
-		}
-
-		if (empty($delete_search_ids))
-		{
-			$_CLASS['core_db']->query('TRUNCATE ' . FORUMS_SEARCH_TABLE);
-		}
-		else
-		{
-			$sql = 'DELETE FROM ' . FORUMS_SEARCH_TABLE . '
-				WHERE session_id NOT IN (' . implode(', ', $delete_search_ids) . ')';
-			$_CLASS['core_db']->query($sql);
-		}
-		unset($delete_search_ids);
-
-		$total_match_count = count($post_id_ary);
-
-		$sql_where = (($show_results === 'posts') ? 'p.post_id' : 't.topic_id') . ' IN (' . implode(', ', $post_id_ary) . ')';
-
-		if (!empty($old_split_words) && array_diff($split_words, $old_split_words))
-		{
-			$split_words = array_merge($split_words, $old_split_words);
-		}
-
-		$data = serialize(array_diff($split_words, $common_words));
-		$data .= '#' . serialize(array_merge($stopped_words, $common_words));
-
-		foreach ($store_vars as $var)
-		{
-			$data .= '#' . $$var;
-		}
-
-		$data .= '#' . implode('#', $post_id_ary);
-		unset($post_id_ary);
-
-		$search_session_id = rand();
-
-		$sql_ary = array(
-			'search_id'		=> $search_session_id,
-			'session_id'	=> $_CLASS['core_user']->data['session_id'],
-			'search_time'	=> $current_time,
-			'search_array'	=> $data
-		);
-
-		$_CLASS['core_db']->query('INSERT INTO ' . FORUMS_SEARCH_TABLE . ' ' . $_CLASS['core_db']->sql_build_array('INSERT', $sql_ary));
-		unset($data);
-	}
-
-	if ($show_results === 'posts')
-	{
-		require($site_file_root.'includes/forums/functions_posting.php');
-	}
-	else
-	{
-		require($site_file_root.'includes/forums/functions_display.php');
-	}
-
-	// Look up data ...
-	$per_page = ($show_results === 'posts') ? $config['posts_per_page'] : $config['topics_per_page'];
-
-	// Grab icons
-	$icons = obtain_icons();
-
-	// Output header
-	$l_search_matches = ($total_match_count == 1) ? sprintf($_CLASS['core_user']->lang['FOUND_SEARCH_MATCH'], $total_match_count) : sprintf($_CLASS['core_user']->lang['FOUND_SEARCH_MATCHES'], $total_match_count);
-
-	$hilit = htmlspecialchars(implode('|', str_replace(array('+', '-', '|'), '', $split_words)));
-
-	$split_words = htmlspecialchars(implode(' ', $split_words));
-	$ignored_words = htmlspecialchars(implode(' ', $stopped_words));
-
-	$pagination = generate_pagination("Forums&amp;file=search&amp;search_session_id=$search_session_id&amp;search_id=$search_id&amp;hilit=$hilit&amp;$u_sort_param", $total_match_count, $per_page, $start);
-
-	$_CLASS['core_template']->assign_array(array(
-		'SEARCH_MATCHES'	=> $l_search_matches,
-		'SEARCH_WORDS'		=> $split_words, 
-		'IGNORED_WORDS'		=> ($ignored_words) ? $ignored_words : '', 
-		'PAGINATION'		=> $pagination['formated'],
-		'PAGINATION_ARRAY'	=> $pagination['array'],
-		'PAGE_NUMBER'		=> on_page($total_match_count, $per_page, $start),
-		'TOTAL_MATCHES'		=> $total_match_count,
-
-		'S_SELECT_SORT_DIR'		=> $s_sort_dir,
-		'S_SELECT_SORT_KEY'		=> $s_sort_key,
-		'S_SELECT_SORT_DAYS'	=> $s_limit_days,
-
-		'S_SEARCH_ACTION'		=> generate_link('Forums&amp;file=search&amp;search_id='.$search_id),
-		'S_SHOW_TOPICS'			=> ($show_results == 'posts') ? false : true,
-
-		'REPORTED_IMG'			=> $_CLASS['core_user']->img('icon_reported', 'TOPIC_REPORTED'),
-		'UNAPPROVED_IMG'		=> $_CLASS['core_user']->img('icon_unapproved', 'TOPIC_UNAPPROVED'),
-		'GOTO_PAGE_IMG'			=> $_CLASS['core_user']->img('icon_post', 'GOTO_PAGE'),
-
-		'U_SEARCH_WORDS'	=> generate_link("Forums&amp;file=&amp;show_results=$show_results&amp;search_keywords=" . urlencode($split_words)))
-	);
-
-	$u_hilit = urlencode($split_words);
-
-	// Define ordering sql field, do it here because the order may be defined
-	// within an existing search result set
-	$sort_by_sql	= array('a' => (($show_results == 'posts') ? 'u.username' : 't.topic_poster'), 't' => (($show_results == 'posts') ? 'p.post_time' : 't.topic_last_post_time'), 'f' => 'f.forum_id', 'i' => 't.topic_title', 's' => (($show_results == 'posts') ? 'pt.post_subject' : 't.topic_title'));
-
-	if ($sql_where)
-	{
-		if ($show_results == 'posts')
-		{
-			// Not joining this query to the one below at present ... may do in future
-			$sql = 'SELECT zebra_id, friend, foe
-				FROM ' . ZEBRA_TABLE . ' 
-				WHERE user_id = ' . $_CLASS['core_user']->data['user_id'];
-			$result = $_CLASS['core_db']->query($sql);
-	
-			$zebra = array();
-			while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-			{
-				$zebra[($row['friend']) ? 'friend' : 'foe'][] = $row['zebra_id'];
-			}
-			$_CLASS['core_db']->free_result($result);
-	
-			$sql = 'SELECT p.*, f.forum_id, f.forum_name, t.*, u.username, u.user_sig, u.user_sig_bbcode_uid
-				FROM ' . FORUMS_FORUMS_TABLE . ' f, ' . FORUMS_TOPICS_TABLE . ' t, ' . USERS_TABLE . ' u, ' . FORUMS_POSTS_TABLE . " p 
-				WHERE $sql_where 
-					AND f.forum_id = p.forum_id
-					AND p.topic_id = t.topic_id
-					AND p.poster_id = u.user_id";
-		}
-		else
-		{
-			$sql = 'SELECT t.*, f.forum_id, f.forum_name
-				FROM ' . FORUMS_TOPICS_TABLE . ' t, ' . FORUMS_FORUMS_TABLE . " f 
-				WHERE $sql_where 
-					AND f.forum_id = t.forum_id";
-		}
-
-		$sql .= ' ORDER BY ' . $sort_by_sql[$sort_key] . ' ' . (($sort_dir == 'd') ? 'DESC' : 'ASC');
-		$result = $_CLASS['core_db']->query_limit($sql, $per_page, $start);
-
-		while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-		{
-			$forum_id = $row['forum_id'];
-			$topic_id = $row['topic_id'];
-	
-			$view_topic_url = "Forums&amp;file=viewtopic&amp;f=$forum_id&amp;t=$topic_id&amp;hilit=$u_hilit";
-	
-			if ($show_results === 'topics')
-			{
-				$replies = ($_CLASS['auth']->acl_get('m_approve', $forum_id)) ? $row['topic_replies_real'] : $row['topic_replies'];
-	
-				$folder_img = $unread_topic = $folder_alt = $topic_type = '';
-				topic_status($row, $replies, $_CLASS['core_user']->time, $unread_topic, $folder_img, $folder_alt, $topic_type);
-
-				$pagination = generate_pagination($view_topic_url, $replies, $config['posts_per_page'], 0);
-
-				$tpl_ary = array(
-					'TOPIC_AUTHOR' 		=> ($row['topic_poster'] == ANONYMOUS) ? (($row['topic_first_poster_name']) ? $row['topic_first_poster_name'] : $_CLASS['core_user']->get_lang('GUEST')) : $row['topic_first_poster_name'],
-					'FIRST_POST_TIME' 	=> $_CLASS['core_user']->format_date($row['topic_time']),
-					'LAST_POST_TIME'	=> $_CLASS['core_user']->format_date($row['topic_last_post_time']),
-					'LAST_VIEW_TIME'	=> $_CLASS['core_user']->format_date($row['topic_last_view_time']),
-					'LAST_POST_AUTHOR' 	=> ($row['topic_last_poster_name'] != '') ? $row['topic_last_poster_name'] : $_CLASS['core_user']->lang['GUEST'],
-					'PAGINATION'		=> $pagination['formated'],
-					'PAGINATION_ARRAY'	=> $pagination['array'],
-					'REPLIES' 			=> $replies,
-					'VIEWS' 			=> $row['topic_views'],
-					'TOPIC_TYPE' 		=> $topic_type,
-	
-					'LAST_POST_IMG' 	=> $_CLASS['core_user']->img('icon_post_latest', 'VIEW_LATEST_POST'),
-					'TOPIC_FOLDER_IMG' 	=> $_CLASS['core_user']->img($folder_img, $folder_alt),
-					'TOPIC_ICON_IMG'		=> (!empty($icons[$row['icon_id']])) ? $icons[$row['icon_id']]['img'] : '',
-					'TOPIC_ICON_IMG_WIDTH'	=> (!empty($icons[$row['icon_id']])) ? $icons[$row['icon_id']]['width'] : '',
-					'TOPIC_ICON_IMG_HEIGHT'	=> (!empty($icons[$row['icon_id']])) ? $icons[$row['icon_id']]['height'] : '',
-					'ATTACH_ICON_IMG'       => ($_CLASS['auth']->acl_gets(array('f_download', 'u_download'), $forum_id) && $row['topic_attachment']) ? $_CLASS['core_user']->img('icon_attach', $_CLASS['core_user']->lang['TOTAL_ATTACHMENTS']) : '',
-					'S_TOPIC_TYPE'			=> $row['topic_type'],
-					'S_USER_POSTED'			=> (!empty($row['mark_type'])) ? true : false,
-	
-					'S_TOPIC_REPORTED'		=> (!empty($row['topic_reported']) && $_CLASS['auth']->acl_get('m_', $forum_id)) ? true : false,
-					'S_TOPIC_UNAPPROVED'	=> (!$row['topic_approved'] && $_CLASS['auth']->acl_get('m_approve', $forum_id)) ? true : false,
-					'S_IGNORE_POST'			=> false,
-
-					'U_LAST_POST'		=> generate_link($view_topic_url . '&amp;p=' . $row['topic_last_post_id'] . '#' . $row['topic_last_post_id'], false),
-					'U_LAST_POST_AUTHOR'=> ($row['topic_last_poster_id'] != ANONYMOUS && $row['topic_last_poster_id']) ? generate_link('Members_List&amp;mode=viewprofile&amp;u='.$row['topic_last_poster_id']) : '',
-					'U_MCP_REPORT'		=> generate_link('Forums&amp;file=mcp&amp;mode=reports&amp;t='.$topic_id),
-					'U_MCP_QUEUE'		=> generate_link('Forums&amp;file=mcp&amp;i=queue&amp;mode=approve_details&amp;t='.$topic_id)
-				);
-			}
-			else
-			{
-				if ((isset($zebra['foe']) && in_array($row['poster_id'], $zebra['foe'])) && (!$view || $view != 'show' || $post_id != $row['post_id']))
-				{
-					$_CLASS['core_template']->assign_vars_array('searchresults', array(
-						'S_IGNORE_POST' => true, 
-						'L_IGNORE_POST' => sprintf($_CLASS['core_user']->lang['POST_BY_FOE'], $row['username'], '<a href="'.generate_link("Forums&amp;file=search&amp;search_session_id=$search_session_id&amp;$u_sort_param&amp;p=" . $row['post_id'] . '&amp;view=show#' . $row['post_id']) . '">', '</a>'))
-					);
-	
-					continue;
-				}
-
-				if ($row['enable_html'])
-				{
-					$row['post_text'] = preg_replace('#(<!\-\- h \-\-><)([\/]?.*?)(><!\-\- h \-\->)#is', "&lt;\\2&gt;", $row['post_text']);
-				}
-
-				$row['post_text'] = censor_text($row['post_text']);
-
-				decode_message($row['post_text'], $row['bbcode_uid']);
-
-				if ($return_chars)
-				{
-					$row['post_text'] = (strlen($row['post_text']) < $return_chars + 3) ? $row['post_text'] : substr($row['post_text'], 0, $return_chars) . '...';
-				}
-
-				if ($hilit)
-				{
-					// This was shamelessly 'borrowed' from volker at multiartstudio dot de
-					// via php.net's annotated manual
-					$row['post_text'] = str_replace('\"', '"', substr(preg_replace('#(\>(((?>([^><]+|(?R)))*)\<))#se', "preg_replace('#\b(" . str_replace('\\', '\\\\', addslashes($hilit)) . ")\b#i', '<span class=\"posthilit\">\\\\1</span>', '\\0')", '>' .  $row['post_text'] . '<'), 1, -1));
-				}
-
-				$row['post_text'] = smiley_text($row['post_text']);
-
-				// Replace naughty words such as farty pants
-				$row['post_subject'] = censor_text($row['post_subject']);
-				$row['post_text'] = str_replace("\n", '<br />', censor_text($row['post_text']));
-
-				$tpl_ary = array(
-					'POSTER_NAME'		=> ($row['poster_id'] == ANONYMOUS) ? ((!empty($row['post_username'])) ? $row['post_username'] : $_CLASS['core_user']->lang['GUEST']) : $row['username'], 
-					'POST_SUBJECT'		=> censor_text($row['post_subject']), 
-					'POST_DATE'			=> (!empty($row['post_time'])) ? $_CLASS['core_user']->format_date($row['post_time']) : '', 
-					'MESSAGE' 			=> $row['post_text'],
-					'S_IGNORE_POST'		=> false
-				);
-			}
-
-			$_CLASS['core_template']->assign_vars_array('searchresults', array_merge($tpl_ary, array(
-				'FORUM_ID' 			=> $forum_id,
-				'TOPIC_ID' 			=> $topic_id,
-				'POST_ID'			=> ($show_results == 'posts') ? $row['post_id'] : false, 
-	
-				'FORUM_TITLE'		=> $row['forum_name'], 
-				'TOPIC_TITLE' 		=> censor_text($row['topic_title']),
-	
-				'U_VIEW_TOPIC'		=> generate_link($view_topic_url),
-				'U_VIEW_FORUM'		=> generate_link('Forums&amp;file=viewforum&amp;f='.$forum_id), 
-				'U_VIEW_POST'		=> (!empty($row['post_id'])) ? generate_link("Forums&amp;file=viewtopic&amp;f=$forum_id&amp;t=" . $row['topic_id'] . '&amp;p=' . $row['post_id'] . '&amp;hilit=' . $u_hilit . '#' . $row['post_id'], false, false) : '')
-			));
-		}
-		$_CLASS['core_db']->free_result($result);
-	}
-	else
-	{
-		$_CLASS['core_template']->assign('S_NO_SEARCH_RESULTS', true);
-	}
-
-	page_header();
-	
-	make_jumpbox(generate_link('Forums&amp;file=viewforum'));
-	
-	$_CLASS['core_display']->display($_CLASS['core_user']->lang['SEARCH'], 'modules/Forums/search_results.html');
-}
-
-
-// Search forum
-$s_forums = '';
-
-if ($permission_array = $_CLASS['auth']->acl_getf('f_list'))
-{
-	$sql = 'SELECT forum_id, forum_name, parent_id, forum_type, left_id, right_id, forum_password
-		FROM ' . FORUMS_FORUMS_TABLE . '
-			WHERE forum_id IN (' . implode(', ', array_keys($permission_array)) . ')
-			ORDER BY left_id ASC';
-
-	$result = $_CLASS['core_db']->query($sql);
-	
-	$right = $cat_right = $padding_inc = 0;
-	$padding = $forum_list = $holding = '';
-	$pad_store = array('0' => '');
-	$search_forums = array();
-	
-	while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-	{
-		if (($row['forum_type'] == FORUM_CAT && ($row['left_id'] + 1 == $row['right_id'])) || $row['forum_type'] == FORUM_LINK || ($row['forum_password']))
-		{
-			continue;
-		}
-
-		if ($row['left_id'] < $right)
-		{
-			$padding .= '&nbsp; &nbsp;';
-			$pad_store[$row['parent_id']] = $padding;
-		}
-		else if ($row['left_id'] > $right + 1)
-		{
-			$padding = $pad_store[$row['parent_id']];
-		}
-
-		$right = $row['right_id'];
-
-		$selected = (empty($search_forums) || in_array($row['forum_id'], $search_forums)) ? ' selected="selected"' : '';
-
-		if ($row['left_id'] > $cat_right)
-		{
-			$holding = '';
-		}
-
-		if ($row['right_id'] - $row['left_id'] > 1)
-		{
-			$cat_right = max($cat_right, $row['right_id']);
-	
-			$holding .= '<option value="' . $row['forum_id'] . '"' . $selected . '>' . $padding . $row['forum_name'] . '</option>';
-		}
-		else
-		{
-			$s_forums .= $holding . '<option value="' . $row['forum_id'] . '"' . $selected . '>' . $padding . $row['forum_name'] . '</option>';
-			$holding = '';
-		}
-	}
-	$_CLASS['core_db']->free_result($result);
-}
-unset($pad_store);
-
-// Number of chars returned
-$s_characters = '<option value="-1">' . $_CLASS['core_user']->lang['ALL_AVAILABLE'] . '</option>';
-$s_characters .= '<option value="0">0</option>';
-$s_characters .= '<option value="25">25</option>';
-$s_characters .= '<option value="50">50</option>';
-
-for($i = 100; $i <= 1000 ; $i += 100)
-{
-	$selected = ($i == 200) ? ' selected="selected"' : '';
-	$s_characters .= '<option value="' . $i . '"' . $selected . '>' . $i . '</option>';
-}
-
-$_CLASS['core_template']->assign_array(array(
-	'S_SEARCH_ACTION'		=> generate_link('Forums&amp;file=search&amp;mode=results'),
-	'S_CHARACTER_OPTIONS'	=> $s_characters,
-	'S_FORUM_OPTIONS'		=> $s_forums,
-	'S_SELECT_SORT_DIR'		=> $s_sort_dir,
-	'S_SELECT_SORT_KEY'		=> $s_sort_key,
-	'S_SELECT_SORT_DAYS'	=> $s_limit_days)
-);
-
-$sql = 'SELECT search_id, search_time, search_array 
-	FROM ' . FORUMS_SEARCH_TABLE . '
-	ORDER BY search_time DESC';
-$result = $_CLASS['core_db']->query_limit($sql, 5);
-
-while ($row = $_CLASS['core_db']->fetch_row_assoc($result))
-{
-	$data = explode('#', $row['search_array']);
-	$split_words = htmlspecialchars(implode(' ', unserialize(array_shift($data))));
-
-	if (!$split_words)
-	{
-		continue;
-	}
-
-	$stopped_words = htmlspecialchars(implode(' ', unserialize(array_shift($data))));
-
-	$_CLASS['core_template']->assign_vars_array('recentsearch', array(
-		'KEYWORDS'	=> $split_words,
-		'TIME'		=> $_CLASS['core_user']->format_date($row['search_time']), 
-
-		'U_KEYWORDS'	=> generate_link('Forums&amp;file=search&amp;search_keywords=' . urlencode($split_words)))
-	);
-}
-$_CLASS['core_db']->free_result($result);
-
-unset($data, $split_words, $stopped_words);
-// Output the basic page
-
-page_header();
-
-make_jumpbox(generate_link('Forums&amp;file=viewforum'));
-
-$_CLASS['core_template']->display('modules/Forums/search_body.html');
- 
-?>
\ No newline at end of file

Modified: cms/trunk/modules/forums/viewforum.php
===================================================================
--- cms/trunk/modules/forums/viewforum.php	2006-09-12 14:55:25 UTC (rev 187)
+++ cms/trunk/modules/forums/viewforum.php	2006-09-21 06:41:32 UTC (rev 188)
@@ -129,10 +129,10 @@
 }
 
 // Are we a forum link, then redirect
-if ($forum_data['forum_link'])
+if ($forum_data['forum_type'] == FORUM_LINK && $forum_data['forum_link'])
 {
 	// Does it have click tracking enabled?
-	if ($forum_data['forum_flags'] & 1)
+	if ($forum_data['forum_flags'] & FORUM_FLAG_LINK_TRACK)
 	{
 		$sql = 'UPDATE ' . FORUMS_FORUMS_TABLE . '
 			SET forum_posts = forum_posts + 1 
@@ -167,6 +167,7 @@
 
 // Not postable forum or showing active topics?
 if (!($forum_data['forum_type'] == FORUM_POST || (($forum_data['forum_flags'] & 16) && $forum_data['forum_type'] == FORUM_CAT)))
+if (!($forum_data['forum_type'] == FORUM_POST || (($forum_data['forum_flags'] & FORUM_FLAG_ACTIVE_TOPICS) && $forum_data['forum_type'] == FORUM_CAT)))
 {
 	$_CLASS['core_template']->assign_array(array(
 		'S_IS_POSTABLE'			=> false,
@@ -282,7 +283,7 @@
 $post_alt = ($forum_data['forum_status'] == ITEM_LOCKED) ? $_CLASS['core_user']->lang['FORUM_LOCKED'] : $_CLASS['core_user']->lang['POST_NEW_TOPIC'];
 $pagination = generate_pagination("forums&amp;file=viewforum&amp;f=$forum_id&amp;$u_sort_param", $topics_count, $config['topics_per_page'], $start);
 
-$s_display_active = ($forum_data['forum_type'] == FORUM_CAT && ($forum_data['forum_flags'] & 16)) ? true : false;
+$s_display_active = ($forum_data['forum_type'] == FORUM_CAT && ($forum_data['forum_flags'] & FORUM_FLAG_ACTIVE_TOPICS)) ? true : false;
 
 $_CLASS['core_template']->assign_array(array(
 	'PAGINATION'		=> $pagination['formated'],



